{"items":[{"tags":["java","c++","performance","optimization","branch-prediction"],"comments":[{"owner":{"reputation":1295,"user_id":1300177,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/4996dd0400f07c6dd5776f5498c04aea?s=128&d=identicon&r=PG","display_name":"screwnut","link":"https://stackoverflow.com/users/1300177/screwnut"},"score":51,"creation_date":1525389149},{"owner":{"reputation":270,"user_id":5649936,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0603f8b9920243e03e06c3e15eb77a8a?s=128&d=identicon&r=PG&f=1","display_name":"Šimon Hrabec","link":"https://stackoverflow.com/users/5649936/%c5%a0imon-hrabec"},"score":25,"creation_date":1526042708},{"owner":{"reputation":7114,"user_id":58668,"user_type":"registered","accept_rate":39,"profile_image":"https://www.gravatar.com/avatar/553fdb376e001fa69adb6b8046fd6a14?s=128&d=identicon&r=PG","display_name":"Jonas K&#246;lker","link":"https://stackoverflow.com/users/58668/jonas-k%c3%b6lker"},"score":3,"creation_date":1601886376},{"owner":{"reputation":336,"user_id":11041430,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ba8e6b52b3f40b3c55d1730c199c0f19?s=128&d=identicon&r=PG&f=1","display_name":"D. Sikilai","link":"https://stackoverflow.com/users/11041430/d-sikilai"},"score":2,"creation_date":1606488099},{"owner":{"reputation":283,"user_id":14173388,"user_type":"registered","profile_image":"https://i.stack.imgur.com/n9sxz.jpg?s=128&g=1","display_name":"Ahmad","link":"https://stackoverflow.com/users/14173388/ahmad"},"score":3,"creation_date":1609198556},{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1610571754}],"answers":[{"comments":[{"owner":{"reputation":1161,"user_id":538458,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/737d082cd41a6c7caac7f98c3797d50c?s=128&d=identicon&r=PG","display_name":"Adam Freeman","link":"https://stackoverflow.com/users/538458/adam-freeman"},"score":128,"creation_date":1411498692},{"owner":{"reputation":2684,"user_id":3206624,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/95b1b5df80d9d891b48d668af975be84?s=128&d=identicon&r=PG&f=1","display_name":"Agrim Pathak","link":"https://stackoverflow.com/users/3206624/agrim-pathak"},"score":165,"creation_date":1414655518},{"owner":{"reputation":173787,"user_id":1011995,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Jca5Q.jpg?s=128&g=1","display_name":"Daniel Fischer","link":"https://stackoverflow.com/users/1011995/daniel-fischer"},"score":156,"creation_date":1414664052},{"owner":{"reputation":4977,"user_id":2047418,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/1d49bccfa9d2c633db6f854e67b88362?s=128&d=identicon&r=PG","display_name":"Filip Bartuzi","link":"https://stackoverflow.com/users/2047418/filip-bartuzi"},"score":81,"creation_date":1415540238},{"owner":{"reputation":173787,"user_id":1011995,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Jca5Q.jpg?s=128&g=1","display_name":"Daniel Fischer","link":"https://stackoverflow.com/users/1011995/daniel-fischer"},"score":77,"creation_date":1415540977},{"owner":{"reputation":15414,"user_id":1715673,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/dcd9836a94720caadd7dfc82d1df627d?s=128&d=identicon&r=PG","display_name":"Peter Wone","link":"https://stackoverflow.com/users/1715673/peter-wone"},"score":2,"creation_date":1430452976},{"owner":{"reputation":259,"user_id":7886227,"user_type":"registered","profile_image":"https://i.stack.imgur.com/hec3U.jpg?s=128&g=1","display_name":"Dr t","link":"https://stackoverflow.com/users/7886227/dr-t"},"score":3,"creation_date":1495734693},{"owner":{"reputation":1812,"user_id":4285898,"user_type":"registered","accept_rate":75,"profile_image":"https://lh3.googleusercontent.com/-2RjNyl00QDA/AAAAAAAAAAI/AAAAAAAAARQ/FrNVhUUIMLw/photo.jpg?sz=128","display_name":"आनंद","link":"https://stackoverflow.com/users/4285898/%e0%a4%86%e0%a4%a8%e0%a4%82%e0%a4%a6"},"score":2,"creation_date":1505485014},{"owner":{"reputation":511,"user_id":1054647,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/05df494d41b7d14a22d7bff3959d531a?s=128&d=identicon&r=PG","display_name":"knickum","link":"https://stackoverflow.com/users/1054647/knickum"},"score":3,"creation_date":1507930981},{"owner":{"reputation":432,"user_id":1494680,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/303668e5317cc07925197755ff3c10c4?s=128&d=identicon&r=PG","display_name":"Omer","link":"https://stackoverflow.com/users/1494680/omer"},"score":0,"creation_date":1593237458}],"owner":{"reputation":173787,"user_id":1011995,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Jca5Q.jpg?s=128&g=1","display_name":"Daniel Fischer","link":"https://stackoverflow.com/users/1011995/daniel-fischer"},"comment_count":10,"score":4264,"creation_date":1340805285,"body_markdown":"**Branch prediction.**\n\n  With a sorted array, the condition `data[c] &gt;= 128` is first `false` for a streak of values, then becomes `true` for all later values. That&#39;s easy to predict. With an unsorted array, you pay for the branching cost.","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":96,"user_id":13830841,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/a-/AOh14GiTKeJoO6XlvqYIKBwy8DomvzAr7NzTIFGCxDZw=k-s128","display_name":"Hanna Mcquaig","link":"https://stackoverflow.com/users/13830841/hanna-mcquaig"},"score":18,"creation_date":1593562286},{"owner":{"reputation":3177,"user_id":4068240,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1c35facdddfc74d23ee378790b905226?s=128&d=identicon&r=PG","display_name":"Clijsters","link":"https://stackoverflow.com/users/4068240/clijsters"},"score":88,"creation_date":1593597753},{"owner":{"reputation":783,"user_id":4416169,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/062b5273d4d63fcd079d7a65010c1817?s=128&d=identicon&r=PG&f=1","display_name":"Matias Chara","link":"https://stackoverflow.com/users/4416169/matias-chara"},"score":7,"creation_date":1594597968},{"owner":{"reputation":753,"user_id":493759,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c28651cc42b824155c6bc9a15a300fd8?s=128&d=identicon&r=PG","display_name":"Agoston Horvath","link":"https://stackoverflow.com/users/493759/agoston-horvath"},"score":2,"creation_date":1601973465},{"owner":{"reputation":4383,"user_id":774575,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/I2J58.png?s=128&g=1","display_name":"mins","link":"https://stackoverflow.com/users/774575/mins"},"score":12,"creation_date":1602857081},{"owner":{"reputation":81,"user_id":2755896,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4bb190997516356ce466d9bf6cc5172b?s=128&d=identicon&r=PG&f=1","display_name":"Max","link":"https://stackoverflow.com/users/2755896/max"},"score":0,"creation_date":1606433551},{"owner":{"reputation":67,"user_id":8736053,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/516a059907ce44673c7c18b92146d4a1?s=128&d=identicon&r=PG&f=1","display_name":"Mycotina","link":"https://stackoverflow.com/users/8736053/mycotina"},"score":1,"creation_date":1607419616},{"owner":{"reputation":1719,"user_id":10915534,"user_type":"registered","profile_image":"https://i.stack.imgur.com/IcLqB.jpg?s=128&g=1","display_name":"Ibnelaiq","link":"https://stackoverflow.com/users/10915534/ibnelaiq"},"score":1,"creation_date":1607497541},{"owner":{"reputation":1678,"user_id":899213,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/1cecebaf65cdd9a8351fdda654e5bdac?s=128&d=identicon&r=PG","display_name":"Raphael","link":"https://stackoverflow.com/users/899213/raphael"},"score":3,"creation_date":1609861882},{"owner":{"reputation":58492,"user_id":1322972,"user_type":"registered","profile_image":"https://i.stack.imgur.com/puZFr.png?s=128&g=1","display_name":"WhozCraig","link":"https://stackoverflow.com/users/1322972/whozcraig"},"score":1,"creation_date":1610071437},{"owner":{"reputation":333,"user_id":10220019,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f1b2e39d80ba5e709c2c81017833b54d?s=128&d=identicon&r=PG&f=1","display_name":"C. Binair","link":"https://stackoverflow.com/users/10220019/c-binair"},"score":0,"creation_date":1614788479},{"owner":{"reputation":145,"user_id":8132066,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e935e7c928e9eb139122eeceab4088ca?s=128&d=identicon&r=PG","display_name":"Tom","link":"https://stackoverflow.com/users/8132066/tom"},"score":1,"creation_date":1615387664}],"owner":{"reputation":433498,"user_id":922184,"user_type":"registered","profile_image":"https://i.stack.imgur.com/h7WDB.jpg?s=128&g=1","display_name":"Mysticial","link":"https://stackoverflow.com/users/922184/mysticial"},"comment_count":12,"score":32843,"creation_date":1340805402,"body_markdown":"**You are a victim of [branch prediction][1] fail.**\r\n\r\n---\r\n\r\n## What is Branch Prediction?\r\n\r\nConsider a railroad junction:\r\n\r\n[![Image showing a railroad junction][2]][3]\r\n&lt;sub&gt;[Image][3] by Mecanismo, via Wikimedia Commons. Used under the [CC-By-SA 3.0][cc-by-sa] license.&lt;/sub&gt;\r\n\r\nNow for the sake of argument, suppose this is back in the 1800s - before long distance or radio communication.\r\n\r\nYou are the operator of a junction and you hear a train coming. You have no idea which way it is supposed to go. You stop the train to ask the driver which direction they want. And then you set the switch appropriately.\r\n\r\n*Trains are heavy and have a lot of inertia. So they take forever to start up and slow down.*\r\n\r\nIs there a better way? You guess which direction the train will go!\r\n\r\n- If you guessed right, it continues on.\r\n- If you guessed wrong, the captain will stop, back up, and yell at you to flip the switch. Then it can restart down the other path.\r\n\r\n**If you guess right every time**, the train will never have to stop.  \r\n**If you guess wrong too often**, the train will spend a lot of time stopping, backing up, and restarting.\r\n\r\n---\r\n\r\n**Consider an if-statement:** At the processor level, it is a branch instruction:\r\n\r\n![Screenshot of compiled code containing an if statement][4]\r\n\r\nYou are a processor and you see a branch. You have no idea which way it will go. What do you do? You halt execution and wait until the previous instructions are complete. Then you continue down the correct path.\r\n\r\n*Modern processors are complicated and have long pipelines. So they take forever to &quot;warm up&quot; and &quot;slow down&quot;.*\r\n\r\nIs there a better way? You guess which direction the branch will go!\r\n\r\n- If you guessed right, you continue executing.\r\n- If you guessed wrong, you need to flush the pipeline and roll back to the branch. Then you can restart down the other path.\r\n\r\n**If you guess right every time**, the execution will never have to stop.  \r\n**If you guess wrong too often**, you spend a lot of time stalling, rolling back, and restarting.\r\n\r\n---\r\n\r\nThis is branch prediction. I admit it&#39;s not the best analogy since the train could just signal the direction with a flag. But in computers, the processor doesn&#39;t know which direction a branch will go until the last moment.\r\n\r\nSo how would you strategically guess to minimize the number of times that the train must back up and go down the other path? You look at the past history! If the train goes left 99% of the time, then you guess left. If it alternates, then you alternate your guesses. If it goes one way every three times, you guess the same...\r\n\r\n***In other words, you try to identify a pattern and follow it.*** This is more or less how branch predictors work.\r\n\r\nMost applications have well-behaved branches. So modern branch predictors will typically achieve &gt;90% hit rates. But when faced with unpredictable branches with no recognizable patterns, branch predictors are virtually useless.\r\n\r\nFurther reading: [&quot;Branch predictor&quot; article on Wikipedia][1].\r\n\r\n---\r\n\r\n## As hinted from above, the culprit is this if-statement:\r\n\r\n    if (data[c] &gt;= 128)\r\n        sum += data[c];\r\n\r\nNotice that the data is evenly distributed between 0 and 255. When the data is sorted, roughly the first half of the iterations will not enter the if-statement. After that, they will all enter the if-statement.\r\n\r\nThis is very friendly to the branch predictor since the branch consecutively goes the same direction many times. Even a simple saturating counter will correctly predict the branch except for the few iterations after it switches direction.\r\n\r\n**Quick visualization:**\r\n\r\n```none\r\nT = branch taken\r\nN = branch not taken\r\n\r\ndata[] = 0, 1, 2, 3, 4, ... 126, 127, 128, 129, 130, ... 250, 251, 252, ...\r\nbranch = N  N  N  N  N  ...   N    N    T    T    T  ...   T    T    T  ...\r\n\r\n       = NNNNNNNNNNNN ... NNNNNNNTTTTTTTTT ... TTTTTTTTTT  (easy to predict)\r\n```\r\nHowever, when the data is completely random, the branch predictor is rendered useless, because it can&#39;t predict random data. Thus there will probably be around 50% misprediction (no better than random guessing).\r\n\r\n```none\r\ndata[] = 226, 185, 125, 158, 198, 144, 217, 79, 202, 118,  14, 150, 177, 182, ...\r\nbranch =   T,   T,   N,   T,   T,   T,   T,  N,   T,   N,   N,   T,   T,   T  ...\r\n\r\n       = TTNTTTTNTNNTTT ...   (completely random - impossible to predict)\r\n```\r\n\r\n---\r\n\r\n**So what can be done?**\r\n\r\nIf the compiler isn&#39;t able to optimize the branch into a conditional move, you can try some hacks if you are willing to sacrifice readability for performance.\r\n\r\nReplace:\r\n\r\n    if (data[c] &gt;= 128)\r\n        sum += data[c];\r\n\r\nwith:\r\n\r\n    int t = (data[c] - 128) &gt;&gt; 31;\r\n    sum += ~t &amp; data[c];\r\n\r\nThis eliminates the branch and replaces it with some bitwise operations.\r\n\r\n&lt;sub&gt;(Note that this hack is not strictly equivalent to the original if-statement. But in this case, it&#39;s valid for all the input values of `data[]`.)&lt;/sub&gt;\r\n\r\n**Benchmarks: Core i7 920 @ 3.5 GHz**\r\n\r\nC++ - Visual Studio 2010 - x64 Release\r\n\r\n|Scenario|Time (seconds)|\r\n|---|---|\r\n|Branching - Random data|11.777|\r\n|Branching - Sorted data|2.352|\r\n|Branchless - Random data|2.564|\r\n|Branchless - Sorted data|2.587|\r\n\r\nJava - NetBeans 7.1.1 JDK 7 - x64\r\n\r\n|Scenario|Time (seconds)|\r\n|---|---|\r\n|Branching - Random data|10.93293813|\r\n|Branching - Sorted data|5.643797077|\r\n|Branchless - Random data|3.113581453|\r\n|Branchless - Sorted data|3.186068823|\r\n\r\nObservations:\r\n\r\n- **With the Branch:** There is a huge difference between the sorted and unsorted data.\r\n- **With the Hack:** There is no difference between sorted and unsorted data.\r\n- In the C++ case, the hack is actually a tad slower than with the branch when the data is sorted.\r\n\r\nA general rule of thumb is to avoid data-dependent branching in critical loops (such as in this example).\r\n\r\n---\r\n\r\n**Update:**\r\n\r\n- GCC 4.6.1 with `-O3` or `-ftree-vectorize` on x64 is able to generate a conditional move. So there is no difference between the sorted and unsorted data - both are fast.\r\n\r\n   (Or somewhat fast: for the already-sorted case, `cmov` can be slower especially if GCC puts it on the critical path instead of just `add`, especially on Intel before Broadwell where `cmov` has 2 cycle latency: https://stackoverflow.com/questions/28875325/gcc-optimization-flag-o3-makes-code-slower-than-o2)\r\n\r\n\r\n- VC++ 2010 is unable to generate conditional moves for this branch even under `/Ox`.\r\n\r\n- [Intel C++ Compiler][icc] (ICC) 11 does something miraculous. It [interchanges the two loops][6], thereby hoisting the unpredictable branch to the outer loop. So not only is it immune to the mispredictions, it is also twice as fast as whatever VC++ and GCC can generate! In other words, ICC took advantage of the test-loop to defeat the benchmark...\r\n\r\n- If you give the Intel compiler the branchless code, it just out-right vectorizes it... and is just as fast as with the branch (with the loop interchange).\r\n\r\nThis goes to show that even mature modern compilers can vary wildly in their ability to optimize code...\r\n\r\n  [1]: //en.wikipedia.org/wiki/Branch_predictor\r\n  [2]: //i.stack.imgur.com/muxnt.jpg\r\n  [3]: //commons.wikimedia.org/wiki/File:Entroncamento_do_Transpraia.JPG\r\n  [4]: //i.stack.imgur.com/pyfwC.png\r\n  [icc]: //en.wikipedia.org/wiki/Intel_C++_Compiler\r\n  [6]: //en.wikipedia.org/wiki/Loop_interchange\r\n  [cc-by-sa]: //creativecommons.org/licenses/by-sa/3.0/deed.en","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":376,"user_id":3924108,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7b7612263f0c62d716c6dee0fe7ecb76?s=128&d=identicon&r=PG","display_name":"fernal73","link":"https://stackoverflow.com/users/3924108/fernal73"},"score":0,"creation_date":1606968554},{"owner":{"reputation":376,"user_id":3924108,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7b7612263f0c62d716c6dee0fe7ecb76?s=128&d=identicon&r=PG","display_name":"fernal73","link":"https://stackoverflow.com/users/3924108/fernal73"},"score":0,"creation_date":1606973524}],"owner":{"reputation":41563,"user_id":866732,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG","display_name":"WiSaGaN","link":"https://stackoverflow.com/users/866732/wisagan"},"comment_count":2,"score":3455,"creation_date":1340849643,"body_markdown":"The reason why performance improves drastically when the data is sorted is that the branch prediction penalty is removed, as explained beautifully in [Mysticial&#39;s answer][1].\r\n\r\nNow, if we look at the code\r\n\r\n\tif (data[c] &gt;= 128)\r\n\t\tsum += data[c];\r\n\r\nwe can find that the meaning of this particular `if... else...` branch is to add something when a condition is satisfied. This type of branch can be easily transformed into a **conditional move** statement, which would be compiled into a conditional move instruction: `cmovl`, in an `x86` system. The branch and thus the potential branch prediction penalty is removed.\r\n\r\nIn `C`, thus `C++`, the statement, which would compile directly (without any optimization) into the conditional move instruction in `x86`, is the ternary operator `... ? ... : ...`. So we rewrite the above statement into an equivalent one:\r\n\r\n\tsum += data[c] &gt;=128 ? data[c] : 0;\r\n\r\nWhile maintaining readability, we can check the speedup factor.\r\n\r\nOn an Intel [Core i7][2]-2600K @ 3.4&amp;nbsp;GHz and Visual Studio 2010 Release Mode, the benchmark is:\r\n\r\n**x86**\r\n\r\n|Scenario|Time (seconds)|\r\n|---|---|\r\n|Branching - Random data|8.885|\r\n|Branching - Sorted data|1.528|\r\n|Branchless - Random data|3.716|\r\n|Branchless - Sorted data|3.71|\r\n\r\n**x64**\r\n\r\n|Scenario|Time (seconds)|\r\n|---|---|\r\n|Branching - Random data|11.302|\r\n|Branching - Sorted data|1.830|\r\n|Branchless - Random data|2.736|\r\n|Branchless - Sorted data|2.737|\r\n\r\nThe result is robust in multiple tests. We get a great speedup when the branch result is unpredictable, but we suffer a little bit when it is predictable. In fact, when using a conditional move, the performance is the same regardless of the data pattern.\r\n\r\nNow let&#39;s look more closely by investigating the `x86` assembly they generate. For simplicity, we use two functions `max1` and `max2`.\r\n\r\n`max1` uses the conditional branch `if... else ...`:\r\n```\r\nint max1(int a, int b) {\r\n\tif (a &gt; b)\r\n\t\treturn a;\r\n\telse\r\n\t\treturn b;\r\n}\r\n```\r\n\r\n`max2` uses the ternary operator `... ? ... : ...`:\r\n```\r\nint max2(int a, int b) {\r\n\treturn a &gt; b ? a : b;\r\n}\r\n```\r\n\r\nOn a x86-64 machine, `GCC -S` generates the assembly below.\r\n```\r\n:max1\r\n\tmovl    %edi, -4(%rbp)\r\n\tmovl    %esi, -8(%rbp)\r\n\tmovl    -4(%rbp), %eax\r\n\tcmpl    -8(%rbp), %eax\r\n\tjle     .L2\r\n\tmovl    -4(%rbp), %eax\r\n\tmovl    %eax, -12(%rbp)\r\n\tjmp     .L4\r\n.L2:\r\n\tmovl    -8(%rbp), %eax\r\n\tmovl    %eax, -12(%rbp)\r\n.L4:\r\n\tmovl    -12(%rbp), %eax\r\n\tleave\r\n\tret\r\n\r\n:max2\r\n\tmovl    %edi, -4(%rbp)\r\n\tmovl    %esi, -8(%rbp)\r\n\tmovl    -4(%rbp), %eax\r\n\tcmpl    %eax, -8(%rbp)\r\n\tcmovge  -8(%rbp), %eax\r\n\tleave\r\n\tret\r\n```\r\n\r\n`max2` uses much less code due to the usage of instruction `cmovge`. But the real gain is that `max2` does not involve branch jumps, `jmp`, which would have a significant performance penalty if the predicted result is not right.\r\n\r\nSo why does a conditional move perform better?\r\n\r\nIn a typical `x86` processor, the execution of an instruction is divided into several stages. Roughly, we have different hardware to deal with different stages. So we do not have to wait for one instruction to finish to start a new one. This is called **[pipelining][3]**.\r\n\r\nIn a branch case, the following instruction is determined by the preceding one, so we cannot do pipelining. We have to either wait or predict.\r\n\r\nIn a conditional move case, the execution conditional move instruction is divided into several stages, but the earlier stages like `Fetch` and `Decode` do not depend on the result of the previous instruction; only latter stages need the result. Thus, we wait a fraction of one instruction&#39;s execution time. This is why the conditional move version is slower than the branch when the prediction is easy.\r\n\r\nThe book *[Computer Systems: A Programmer&#39;s Perspective, second edition][4]* explains this in detail. You can check Section 3.6.6 for *Conditional Move Instructions*, entire Chapter 4 for *Processor Architecture*, and Section 5.11.2 for special treatment for *Branch Prediction and Misprediction Penalties*.\r\n\r\nSometimes, some modern compilers can optimize our code to assembly with better performance, sometimes some compilers can&#39;t (the code in question is using Visual Studio&#39;s native compiler). Knowing the performance difference between a branch and a conditional move when unpredictable can help us write code with better performance when the scenario gets so complex that the compiler can not optimize them automatically.\r\n\r\n [1]: //stackoverflow.com/questions/11227809/why-is-it-faster-to-process-a-sorted-array-than-an-unsorted-array/11227902#11227902\r\n [2]: //en.wikipedia.org/wiki/Intel_Core#Core_i7\r\n [3]: //en.wikipedia.org/wiki/Pipeline_(computing)\r\n [4]: //www.amazon.com/Computer-Systems-Programmers-Perspective-Edition/dp/0136108040/","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"owner":{"reputation":29321,"user_id":863980,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/ea08c9063ae1de86e8d576fb569d513a?s=128&d=identicon&r=PG","display_name":"vulcan raven","link":"https://stackoverflow.com/users/863980/vulcan-raven"},"comment_count":0,"score":2381,"creation_date":1341282330,"body_markdown":"If you are curious about even more optimizations that can be done to this code, consider this:\r\n\r\nStarting with the original loop:\r\n\r\n    for (unsigned i = 0; i &lt; 100000; ++i)\r\n    {\r\n        for (unsigned j = 0; j &lt; arraySize; ++j)\r\n        {\r\n            if (data[j] &gt;= 128)\r\n                sum += data[j];\r\n        }\r\n    }\r\n\r\nWith loop interchange, we can safely change this loop to:\r\n\r\n    for (unsigned j = 0; j &lt; arraySize; ++j)\r\n    {\r\n        for (unsigned i = 0; i &lt; 100000; ++i)\r\n        {\r\n            if (data[j] &gt;= 128)\r\n                sum += data[j];\r\n        }\r\n    }\r\n\r\nThen, you can see that the `if` conditional is constant throughout the execution of the `i` loop, so you can hoist the `if` out:\r\n\r\n    for (unsigned j = 0; j &lt; arraySize; ++j)\r\n    {\r\n        if (data[j] &gt;= 128)\r\n        {\r\n            for (unsigned i = 0; i &lt; 100000; ++i)\r\n            {\r\n                sum += data[j];\r\n            }\r\n        }\r\n    }\r\n\r\nThen, you see that the inner loop can be collapsed into one single expression, assuming the floating point model allows it (`/fp:fast` is thrown, for example)\r\n\r\n    for (unsigned j = 0; j &lt; arraySize; ++j)\r\n    {\r\n        if (data[j] &gt;= 128)\r\n        {\r\n            sum += data[j] * 100000;\r\n        }\r\n    }\r\n\r\nThat one is 100,000 times faster than before.\r\n","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":1130,"user_id":2383730,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/giP28.jpg?s=128&g=1","display_name":"TallBrian","link":"https://stackoverflow.com/users/2383730/tallbrian"},"score":84,"creation_date":1386561609},{"owner":{"reputation":214609,"user_id":134633,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dc6be45ddcfd038ba5e1e5fca319c7fa?s=128&d=identicon&r=PG","display_name":"caf","link":"https://stackoverflow.com/users/134633/caf"},"score":142,"creation_date":1386563365}],"owner":{"reputation":214609,"user_id":134633,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dc6be45ddcfd038ba5e1e5fca319c7fa?s=128&d=identicon&r=PG","display_name":"caf","link":"https://stackoverflow.com/users/134633/caf"},"comment_count":2,"score":1963,"creation_date":1350021213,"body_markdown":"No doubt some of us would be interested in ways of identifying code that is problematic for the CPU&#39;s branch-predictor. The Valgrind tool `cachegrind` has a branch-predictor simulator, enabled by using the `--branch-sim=yes` flag. Running it over the examples in this question, with the number of outer loops reduced to 10000 and compiled with `g++`, gives these results:\r\n\r\n**Sorted:**\r\n\r\n    ==32551== Branches:        656,645,130  (  656,609,208 cond +    35,922 ind)\r\n    ==32551== Mispredicts:         169,556  (      169,095 cond +       461 ind)\r\n    ==32551== Mispred rate:            0.0% (          0.0%     +       1.2%   )\r\n\r\n**Unsorted:**\r\n\r\n    ==32555== Branches:        655,996,082  (  655,960,160 cond +  35,922 ind)\r\n    ==32555== Mispredicts:     164,073,152  (  164,072,692 cond +     460 ind)\r\n    ==32555== Mispred rate:           25.0% (         25.0%     +     1.2%   )\r\n\r\nDrilling down into the line-by-line output produced by `cg_annotate` we see for the loop in question:\r\n\r\n**Sorted:**\r\n\r\n              Bc    Bcm Bi Bim\r\n          10,001      4  0   0      for (unsigned i = 0; i &lt; 10000; ++i)\r\n               .      .  .   .      {\r\n               .      .  .   .          // primary loop\r\n     327,690,000 10,016  0   0          for (unsigned c = 0; c &lt; arraySize; ++c)\r\n               .      .  .   .          {\r\n     327,680,000 10,006  0   0              if (data[c] &gt;= 128)\r\n               0      0  0   0                  sum += data[c];\r\n               .      .  .   .          }\r\n               .      .  .   .      }\r\n\r\n**Unsorted:**\r\n\r\n              Bc         Bcm Bi Bim\r\n          10,001           4  0   0      for (unsigned i = 0; i &lt; 10000; ++i)\r\n               .           .  .   .      {\r\n               .           .  .   .          // primary loop\r\n     327,690,000      10,038  0   0          for (unsigned c = 0; c &lt; arraySize; ++c)\r\n               .           .  .   .          {\r\n     327,680,000 164,050,007  0   0              if (data[c] &gt;= 128)\r\n               0           0  0   0                  sum += data[c];\r\n               .           .  .   .          }\r\n               .           .  .   .      }\r\n\r\nThis lets you easily identify the problematic line - in the unsorted version the `if (data[c] &gt;= 128)` line is causing 164,050,007 mispredicted conditional branches (`Bcm`) under cachegrind&#39;s branch-predictor model, whereas it&#39;s only causing 10,006 in the sorted version.\r\n\r\n----------\r\n\r\nAlternatively, on Linux you can use the performance counters subsystem to accomplish the same task, but with native performance using CPU counters.\r\n\r\n    perf stat ./sumtest_sorted\r\n\r\n**Sorted:**\r\n\r\n     Performance counter stats for &#39;./sumtest_sorted&#39;:\r\n\r\n      11808.095776 task-clock                #    0.998 CPUs utilized          \r\n             1,062 context-switches          #    0.090 K/sec                  \r\n                14 CPU-migrations            #    0.001 K/sec                  \r\n               337 page-faults               #    0.029 K/sec                  \r\n    26,487,882,764 cycles                    #    2.243 GHz                    \r\n    41,025,654,322 instructions              #    1.55  insns per cycle        \r\n     6,558,871,379 branches                  #  555.455 M/sec                  \r\n           567,204 branch-misses             #    0.01% of all branches        \r\n\r\n      11.827228330 seconds time elapsed\r\n\r\n**Unsorted:**\r\n\r\n     Performance counter stats for &#39;./sumtest_unsorted&#39;:\r\n\r\n      28877.954344 task-clock                #    0.998 CPUs utilized          \r\n             2,584 context-switches          #    0.089 K/sec                  \r\n                18 CPU-migrations            #    0.001 K/sec                  \r\n               335 page-faults               #    0.012 K/sec                  \r\n    65,076,127,595 cycles                    #    2.253 GHz                    \r\n    41,032,528,741 instructions              #    0.63  insns per cycle        \r\n     6,560,579,013 branches                  #  227.183 M/sec                  \r\n     1,646,394,749 branch-misses             #   25.10% of all branches        \r\n\r\n      28.935500947 seconds time elapsed\r\n\r\nIt can also do source code annotation with dissassembly.\r\n\r\n    perf record -e branch-misses ./sumtest_unsorted\r\n    perf annotate -d sumtest_unsorted\r\n&lt;div&gt;&lt;/div&gt;\r\n     Percent |      Source code &amp; Disassembly of sumtest_unsorted\r\n    ------------------------------------------------\r\n    ...\r\n             :                      sum += data[c];\r\n        0.00 :        400a1a:       mov    -0x14(%rbp),%eax\r\n       39.97 :        400a1d:       mov    %eax,%eax\r\n        5.31 :        400a1f:       mov    -0x20040(%rbp,%rax,4),%eax\r\n        4.60 :        400a26:       cltq   \r\n        0.00 :        400a28:       add    %rax,-0x30(%rbp)\r\n    ...\r\n\r\nSee [the performance tutorial][1] for more details.\r\n\r\n  [1]: https://perf.wiki.kernel.org/index.php/Tutorial\r\n","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":6895,"user_id":274579,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/745415fffcdea46caf03c90534a4c7fa?s=128&d=identicon&r=PG","display_name":"ysap","link":"https://stackoverflow.com/users/274579/ysap"},"score":8,"creation_date":1368820380},{"owner":{"reputation":4380,"user_id":1020149,"user_type":"registered","accept_rate":21,"profile_image":"https://www.gravatar.com/avatar/911f564e95671ac04ec1841524d76171?s=128&d=identicon&r=PG","display_name":"Shan","link":"https://stackoverflow.com/users/1020149/shan"},"score":1,"creation_date":1368834624},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":1,"creation_date":1377362072}],"owner":{"reputation":4380,"user_id":1020149,"user_type":"registered","accept_rate":21,"profile_image":"https://www.gravatar.com/avatar/911f564e95671ac04ec1841524d76171?s=128&d=identicon&r=PG","display_name":"Shan","link":"https://stackoverflow.com/users/1020149/shan"},"comment_count":3,"score":146,"creation_date":1356884206,"body_markdown":"I tried the same code with MATLAB 2011b with my MacBook Pro (Intel i7, 64 bit, 2.4 GHz) for the following MATLAB code:\r\n\r\n    % Processing time with Sorted data vs unsorted data\r\n    %==========================================================================\r\n    % Generate data\r\n    arraySize = 32768\r\n    sum = 0;\r\n    % Generate random integer data from range 0 to 255\r\n    data = randi(256, arraySize, 1);\r\n\r\n\r\n    %Sort the data\r\n    data1= sort(data); % data1= data  when no sorting done\r\n\r\n\r\n    %Start a stopwatch timer to measure the execution time\r\n    tic;\r\n\r\n    for i=1:100000\r\n\r\n        for j=1:arraySize\r\n\r\n            if data1(j)&gt;=128\r\n                sum=sum + data1(j);\r\n            end\r\n        end\r\n    end\r\n\r\n    toc;\r\n\r\n    ExeTimeWithSorting = toc - tic;\r\n\r\n\r\nThe results for the above MATLAB code are as follows:\r\n\r\n      a: Elapsed time (without sorting) = 3479.880861 seconds.\r\n      b: Elapsed time (with sorting ) = 2377.873098 seconds.\r\n\r\nThe results of the C code as in @GManNickG I get:\r\n\r\n      a: Elapsed time (without sorting) = 19.8761 sec.\r\n      b: Elapsed time (with sorting ) = 7.37778 sec.\r\n\r\nBased on this, it looks MATLAB is almost *175 times* slower than the C implementation without sorting and *350 times* slower with sorting. In other words, the effect (of branch prediction) is *1.46x* for MATLAB implementation and *2.7x* for the C implementation.\r\n","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":2249,"user_id":4037019,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/nveNe.jpg?s=128&g=1","display_name":"cst1992","link":"https://stackoverflow.com/users/4037019/cst1992"},"score":31,"creation_date":1459169931},{"owner":{"reputation":55254,"user_id":845092,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/50ccdbac5f0f9ff683e4b30a248189bf?s=128&d=identicon&r=PG","display_name":"Mooing Duck","link":"https://stackoverflow.com/users/845092/mooing-duck"},"score":32,"creation_date":1459189636},{"owner":{"reputation":66344,"user_id":166949,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/tIFie.png?s=128&g=1","display_name":"steveha","link":"https://stackoverflow.com/users/166949/steveha"},"score":29,"creation_date":1469048857},{"owner":{"reputation":55254,"user_id":845092,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/50ccdbac5f0f9ff683e4b30a248189bf?s=128&d=identicon&r=PG","display_name":"Mooing Duck","link":"https://stackoverflow.com/users/845092/mooing-duck"},"score":24,"creation_date":1469049018},{"owner":{"reputation":66344,"user_id":166949,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/tIFie.png?s=128&g=1","display_name":"steveha","link":"https://stackoverflow.com/users/166949/steveha"},"score":4,"creation_date":1469504955},{"owner":{"reputation":55254,"user_id":845092,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/50ccdbac5f0f9ff683e4b30a248189bf?s=128&d=identicon&r=PG","display_name":"Mooing Duck","link":"https://stackoverflow.com/users/845092/mooing-duck"},"score":8,"creation_date":1469507635},{"owner":{"reputation":97,"user_id":4509583,"user_type":"registered","profile_image":"https://i.stack.imgur.com/zda9x.jpg?s=128&g=1","display_name":"Warren K","link":"https://stackoverflow.com/users/4509583/warren-k"},"score":5,"creation_date":1482532327}],"owner":{"reputation":15760,"user_id":1012551,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/22df608584e3ef466f34afef94f134df?s=128&d=identicon&r=PG","display_name":"Saqlain","link":"https://stackoverflow.com/users/1012551/saqlain"},"comment_count":7,"score":1260,"creation_date":1360913056,"body_markdown":"As data is distributed between 0 and 255 when the array is sorted, around the first half of the iterations will not enter the `if`-statement (the `if` statement is shared below).\r\n\r\n    if (data[c] &gt;= 128)\r\n        sum += data[c];\r\n\r\nThe question is: What makes the above statement not execute in certain cases as in case of sorted data? Here comes the &quot;branch predictor&quot;. A branch predictor is a digital circuit that tries to guess which way a branch (e.g. an `if-then-else` structure) will go before this is known for sure. The purpose of the branch predictor is to improve the flow in the instruction pipeline. Branch predictors play a critical role in achieving high effective performance!\r\n\r\n**Let&#39;s do some bench marking to understand it better**\r\n\r\nThe performance of an `if`-statement depends on whether its condition has a predictable pattern. If the condition is always true or always false, the branch prediction logic in the processor will pick up the pattern. On the other hand, if the pattern is unpredictable, the `if`-statement will be much more expensive.\r\n\r\nLet’s measure the performance of this loop with different conditions:\r\n\r\n    for (int i = 0; i &lt; max; i++)\r\n        if (condition)\r\n            sum++;\r\n\r\nHere are the timings of the loop with different true-false patterns:\r\n\r\n    Condition                Pattern             Time (ms)\r\n    -------------------------------------------------------\r\n    (i &amp; 0&#215;80000000) == 0    T repeated          322\r\n\r\n    (i &amp; 0xffffffff) == 0    F repeated          276\r\n\r\n    (i &amp; 1) == 0             TF alternating      760\r\n\r\n    (i &amp; 3) == 0             TFFFTFFF…           513\r\n\r\n    (i &amp; 2) == 0             TTFFTTFF…           1675\r\n\r\n    (i &amp; 4) == 0             TTTTFFFFTTTTFFFF…   1275\r\n\r\n    (i &amp; 8) == 0             8T 8F 8T 8F …       752\r\n\r\n    (i &amp; 16) == 0            16T 16F 16T 16F …   490\r\n\r\nA “**bad**” true-false pattern can make an `if`-statement up to six times slower than a “**good**” pattern! Of course, which pattern is good and which is bad depends on the exact instructions generated by the compiler and on the specific processor.\r\n\r\nSo there is no doubt about the impact of branch prediction on performance!\r\n\r\n","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"owner":{"reputation":27352,"user_id":1031591,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/s3MiH.jpg?s=128&g=1","display_name":"atlaste","link":"https://stackoverflow.com/users/1031591/atlaste"},"comment_count":0,"score":1411,"creation_date":1366784788,"body_markdown":"I just read up on this question and its answers, and I feel an answer is missing.\r\n\r\nA common way to eliminate branch prediction that I&#39;ve found to work particularly good in managed languages is a table lookup instead of using a branch (although I haven&#39;t tested it in this case).\r\n\r\nThis approach works in general if:\r\n\r\n1. it&#39;s a small table and is likely to be cached in the processor, and\r\n2. you are running things in a quite tight loop and/or the processor can preload the data.\r\n\r\n**Background and why**\r\n\r\nFrom a processor perspective, your memory is slow. To compensate for the difference in speed, a couple of caches are built into your processor (L1/L2 cache). So imagine that you&#39;re doing your nice calculations and figure out that you need a piece of memory. The processor will get its &#39;load&#39; operation and loads the piece of memory into cache -- and then uses the cache to do the rest of the calculations. Because memory is relatively slow, this &#39;load&#39; will slow down your program.\r\n\r\nLike branch prediction, this was optimized in the Pentium processors: the processor predicts that it needs to load a piece of data and attempts to load that into the cache before the operation actually hits the cache. As we&#39;ve already seen, branch prediction sometimes goes horribly wrong -- in the worst case scenario you need to go back and actually wait for a memory load, which will take forever (**in other words: failing branch prediction is bad, a memory load after a branch prediction fail is just horrible!**).\r\n\r\nFortunately for us, if the memory access pattern is predictable, the processor will load it in its fast cache and all is well.\r\n\r\nThe first thing we need to know is what is *small*? While smaller is generally better, a rule of thumb is to stick to lookup tables that are &lt;= 4096 bytes in size. As an upper limit: if your lookup table is larger than 64K it&#39;s probably worth reconsidering.\r\n\r\n**Constructing a table**\r\n\r\nSo we&#39;ve figured out that we can create a small table. Next thing to do is get a lookup function in place. Lookup functions are usually small functions that use a couple of basic integer operations (and, or, xor, shift, add, remove and perhaps multiply). You want to have your input translated by the lookup function to some kind of &#39;unique key&#39; in your table, which then simply gives you the answer of all the work you wanted it to do.\r\n\r\nIn this case: &gt;= 128 means we can keep the value, &lt; 128 means we get rid of it. The easiest way to do that is by using an &#39;AND&#39;: if we keep it, we AND it with 7FFFFFFF; if we want to get rid of it, we AND it with 0. Notice also that 128 is a power of 2 -- so we can go ahead and make a table of 32768/128 integers and fill it with one zero and a lot of 7FFFFFFFF&#39;s.\r\n\r\n**Managed languages**\r\n\r\nYou might wonder why this works well in managed languages. After all, managed languages check the boundaries of the arrays with a branch to ensure you don&#39;t mess up...\r\n\r\nWell, not exactly... :-)\r\n\r\nThere has been quite some work on eliminating this branch for managed languages. For example:\r\n\r\n&lt;!-- language-all: c# --&gt;\r\n\r\n    for (int i = 0; i &lt; array.Length; ++i)\r\n    {\r\n       // Use array[i]\r\n    }\r\n\r\nIn this case, it&#39;s obvious to the compiler that the boundary condition will never be hit. At least the Microsoft JIT compiler (but I expect Java does similar things) will notice this and remove the check altogether. WOW, that means no branch. Similarly, it will deal with other obvious cases.\r\n\r\nIf you run into trouble with lookups in managed languages -- the key is to add a `&amp; 0x[something]FFF` to your lookup function to make the boundary check predictable -- and watch it going faster.\r\n\r\n**The result of this case**\r\n\r\n    // Generate data\r\n    int arraySize = 32768;\r\n    int[] data = new int[arraySize];\r\n\r\n    Random random = new Random(0);\r\n    for (int c = 0; c &lt; arraySize; ++c)\r\n    {\r\n        data[c] = random.Next(256);\r\n    }\r\n\r\n    /*To keep the spirit of the code intact, I&#39;ll make a separate lookup table\r\n    (I assume we cannot modify &#39;data&#39; or the number of loops)*/\r\n\r\n    int[] lookup = new int[256];\r\n\r\n    for (int c = 0; c &lt; 256; ++c)\r\n    {\r\n        lookup[c] = (c &gt;= 128) ? c : 0;\r\n    }\r\n\r\n    // Test\r\n    DateTime startTime = System.DateTime.Now;\r\n    long sum = 0;\r\n\r\n    for (int i = 0; i &lt; 100000; ++i)\r\n    {\r\n        // Primary loop\r\n        for (int j = 0; j &lt; arraySize; ++j)\r\n        {\r\n            /* Here you basically want to use simple operations - so no\r\n            random branches, but things like &amp;, |, *, -, +, etc. are fine. */\r\n            sum += lookup[data[j]];\r\n        }\r\n    }\r\n\r\n    DateTime endTime = System.DateTime.Now;\r\n    Console.WriteLine(endTime - startTime);\r\n    Console.WriteLine(&quot;sum = &quot; + sum);\r\n    Console.ReadLine();","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":27352,"user_id":1031591,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/s3MiH.jpg?s=128&g=1","display_name":"atlaste","link":"https://stackoverflow.com/users/1031591/atlaste"},"score":35,"creation_date":1375099524},{"owner":{"reputation":66344,"user_id":166949,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/tIFie.png?s=128&g=1","display_name":"steveha","link":"https://stackoverflow.com/users/166949/steveha"},"score":23,"creation_date":1375135333},{"owner":{"reputation":15572,"user_id":2187042,"user_type":"registered","accept_rate":53,"profile_image":"https://i.stack.imgur.com/otBg3.jpg?s=128&g=1","display_name":"Richard Tingle","link":"https://stackoverflow.com/users/2187042/richard-tingle"},"score":16,"creation_date":1393947504},{"owner":{"reputation":27352,"user_id":1031591,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/s3MiH.jpg?s=128&g=1","display_name":"atlaste","link":"https://stackoverflow.com/users/1031591/atlaste"},"score":8,"creation_date":1395132305},{"owner":{"reputation":27352,"user_id":1031591,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/s3MiH.jpg?s=128&g=1","display_name":"atlaste","link":"https://stackoverflow.com/users/1031591/atlaste"},"score":12,"creation_date":1395132731},{"owner":{"reputation":3097,"user_id":3070062,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f20c7574a287e2a9be02000157f65532?s=128&d=identicon&r=PG&f=1","display_name":"Falco","link":"https://stackoverflow.com/users/3070062/falco"},"score":1,"creation_date":1396451702},{"owner":{"reputation":32809,"user_id":116186,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/dc5f7c3937e6844cb776d2004b903578?s=128&d=identicon&r=PG","display_name":"Petter","link":"https://stackoverflow.com/users/116186/petter"},"score":1,"creation_date":1404485763},{"owner":{"reputation":2229,"user_id":1685098,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/285de66759f2353fcbe6121465e10d04?s=128&d=identicon&r=PG","display_name":"Logan Pickup","link":"https://stackoverflow.com/users/1685098/logan-pickup"},"score":1,"creation_date":1414443702},{"owner":{"reputation":66344,"user_id":166949,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/tIFie.png?s=128&g=1","display_name":"steveha","link":"https://stackoverflow.com/users/166949/steveha"},"score":1,"creation_date":1414451157},{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":1,"creation_date":1551357444},{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":1,"creation_date":1558962425}],"owner":{"reputation":66344,"user_id":166949,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/tIFie.png?s=128&g=1","display_name":"steveha","link":"https://stackoverflow.com/users/166949/steveha"},"comment_count":11,"score":1187,"creation_date":1374481770,"body_markdown":"One way to avoid branch prediction errors is to build a lookup table, and index it using the data.  Stefan de Bruijn discussed that in his answer.\r\n\r\nBut in this case, we know values are in the range [0, 255] and we only care about values &gt;= 128.  That means we can easily extract a single bit that will tell us whether we want a value or not: by shifting the data to the right 7 bits, we are left with a 0 bit or a 1 bit, and we only want to add the value when we have a 1 bit.  Let&#39;s call this bit the &quot;decision bit&quot;.\r\n\r\nBy using the 0/1 value of the decision bit as an index into an array, we can make code that will be equally fast whether the data is sorted or not sorted.  Our code will always add a value, but when the decision bit is 0, we will add the value somewhere we don&#39;t care about.  Here&#39;s the code:\r\n\r\n    // Test\r\n    clock_t start = clock();\r\n    long long a[] = {0, 0};\r\n    long long sum;\r\n\r\n    for (unsigned i = 0; i &lt; 100000; ++i)\r\n    {\r\n        // Primary loop\r\n        for (unsigned c = 0; c &lt; arraySize; ++c)\r\n        {\r\n            int j = (data[c] &gt;&gt; 7);\r\n            a[j] += data[c];\r\n        }\r\n    }\r\n\r\n    double elapsedTime = static_cast&lt;double&gt;(clock() - start) / CLOCKS_PER_SEC;\r\n    sum = a[1];\r\n\r\nThis code wastes half of the adds but never has a branch prediction failure.  It&#39;s tremendously faster on random data than the version with an actual if statement.\r\n\r\nBut in my testing, an explicit lookup table was slightly faster than this, probably because indexing into a lookup table was slightly faster than bit shifting.  This shows how my code sets up and uses the lookup table (unimaginatively called `lut` for &quot;LookUp Table&quot; in the code).  Here&#39;s the C++ code:\r\n\r\n    // Declare and then fill in the lookup table\r\n    int lut[256];\r\n    for (unsigned c = 0; c &lt; 256; ++c)\r\n        lut[c] = (c &gt;= 128) ? c : 0;\r\n\r\n    // Use the lookup table after it is built\r\n    for (unsigned i = 0; i &lt; 100000; ++i)\r\n    {\r\n        // Primary loop\r\n        for (unsigned c = 0; c &lt; arraySize; ++c)\r\n        {\r\n            sum += lut[data[c]];\r\n        }\r\n    }\r\n\r\nIn this case, the lookup table was only 256 bytes, so it fits nicely in a cache and all was fast.  This technique wouldn&#39;t work well if the data was 24-bit values and we only wanted half of them... the lookup table would be far too big to be practical.  On the other hand, we can combine the two techniques shown above: first shift the bits over, then index a lookup table.  For a 24-bit value that we only want the top half value, we could potentially shift the data right by 12 bits, and be left with a 12-bit value for a table index.  A 12-bit table index implies a table of 4096 values, which might be practical.\r\n\r\nThe technique of indexing into an array, instead of using an `if` statement, can be used for deciding which pointer to use.  I saw a library that implemented binary trees, and instead of having two named pointers (`pLeft` and `pRight` or whatever) had a length-2 array of pointers and used the &quot;decision bit&quot; technique to decide which one to follow.  For example, instead of:\r\n\r\n    if (x &lt; node-&gt;value)\r\n        node = node-&gt;pLeft;\r\n    else\r\n        node = node-&gt;pRight;\r\n\r\nthis library would do something like:\r\n\r\n    i = (x &lt; node-&gt;value);\r\n    node = node-&gt;link[i];\r\n\r\nHere&#39;s a link to this code: [Red Black Trees](https://web.archive.org/web/20190207151651/https://www.eternallyconfuzzled.com/tuts/datastructures/jsw_tut_rbtree.aspx), *Eternally Confuzzled*\r\n\r\n","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":322577,"user_id":85371,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/6d52c235ec6dd15f30bab444103e7af2?s=128&d=identicon&r=PG","display_name":"sehe","link":"https://stackoverflow.com/users/85371/sehe"},"score":27,"creation_date":1374683490},{"owner":{"reputation":48046,"user_id":1196549,"user_type":"registered","accept_rate":46,"profile_image":"https://www.gravatar.com/avatar/fa597bf0dc47449a25e1f7f5b57e3ef1?s=128&d=identicon&r=PG","display_name":"Yves Daoust","link":"https://stackoverflow.com/users/1196549/yves-daoust"},"score":14,"creation_date":1374698251}],"owner":{"reputation":48046,"user_id":1196549,"user_type":"registered","accept_rate":46,"profile_image":"https://www.gravatar.com/avatar/fa597bf0dc47449a25e1f7f5b57e3ef1?s=128&d=identicon&r=PG","display_name":"Yves Daoust","link":"https://stackoverflow.com/users/1196549/yves-daoust"},"comment_count":2,"score":1077,"creation_date":1374652659,"body_markdown":"In the sorted case, you can do better than relying on successful branch prediction or any branchless comparison trick: completely remove the branch.\r\n\r\nIndeed, the array is partitioned in a contiguous zone with `data &lt; 128` and another with `data &gt;= 128`. So you should find the partition point with a [dichotomic search][1] (using `Lg(arraySize) = 15` comparisons), then do a straight accumulation from that point.\r\n\r\nSomething like (unchecked)\r\n\r\n    int i= 0, j, k= arraySize;\r\n    while (i &lt; k)\r\n    {\r\n      j= (i + k) &gt;&gt; 1;\r\n      if (data[j] &gt;= 128)\r\n        k= j;\r\n      else\r\n        i= j;\r\n    }\r\n    sum= 0;\r\n    for (; i &lt; arraySize; i++)\r\n      sum+= data[i];\r\n\r\nor, slightly more obfuscated\r\n\r\n    int i, k, j= (i + k) &gt;&gt; 1;\r\n    for (i= 0, k= arraySize; i &lt; k; (data[j] &gt;= 128 ? k : i)= j)\r\n      j= (i + k) &gt;&gt; 1;\r\n    for (sum= 0; i &lt; arraySize; i++)\r\n      sum+= data[i];\r\n\r\nA yet faster approach, that gives an **approximate** solution for both sorted or unsorted is: `sum= 3137536;` (assuming a truly uniform distribution, 16384 samples with expected value 191.5) **:-)**\r\n\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Dichotomic_search","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":16488,"user_id":4767498,"user_type":"registered","accept_rate":87,"profile_image":"https://lh3.googleusercontent.com/-u6daZXYwzxs/AAAAAAAAAAI/AAAAAAAAABI/0xXoH0XUtkc/photo.jpg?sz=128","display_name":"M.kazem Akhgary","link":"https://stackoverflow.com/users/4767498/m-kazem-akhgary"},"score":1,"creation_date":1507733382},{"owner":{"reputation":1309,"user_id":6583956,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/rM8OA.jpg?s=128&g=1","display_name":"Sergey.quixoticaxis.Ivanov","link":"https://stackoverflow.com/users/6583956/sergey-quixoticaxis-ivanov"},"score":1,"creation_date":1509695112}],"owner":{"reputation":9494,"user_id":1627741,"user_type":"registered","accept_rate":53,"profile_image":"https://i.stack.imgur.com/YXvvz.jpg?s=128&g=1","display_name":"Harsh Sharma","link":"https://stackoverflow.com/users/1627741/harsh-sharma"},"comment_count":2,"score":879,"creation_date":1435937752,"body_markdown":"The above behavior is happening because of Branch prediction.\r\n\r\nTo understand branch prediction one must first understand **Instruction Pipeline**:\r\n\r\nAny instruction is broken into a sequence of steps so that different steps can be executed concurrently in parallel. This technique is known as instruction pipeline and this is used to increase throughput in modern processors. To understand this better please see this [example on Wikipedia][1].\r\n\r\nGenerally, modern processors have quite long pipelines, but for ease let&#39;s consider these 4 steps only.\r\n&lt;ol&gt;  \r\n  &lt;li&gt;IF -- Fetch the instruction from memory \r\n  &lt;li&gt;ID -- Decode the instruction\r\n  &lt;li&gt;EX -- Execute the instruction \r\n  &lt;li&gt;WB -- Write back to CPU register\r\n&lt;/ol&gt;\r\n ***4-stage pipeline in general for 2 instructions.***\r\n![4-stage pipeline in general][2]\r\n\r\nMoving back to the above question let&#39;s consider the following instructions:\r\n\r\n\t\t\t\t\t\t\tA) if (data[c] &gt;= 128)\r\n\t\t\t\t\t                /\\\r\n\t\t\t\t                   /  \\\r\n\t\t\t\t                  /    \\\r\n                            true /      \\ false\r\n\t\t\t                    /        \\\r\n                               /          \\\r\n                              /            \\\r\n                             /              \\\r\n                  B) sum += data[c];          C) for loop or print().\r\n\r\n\r\nWithout branch prediction, the following would occur:\r\n\r\nTo execute instruction B or instruction C the processor will have to wait till the instruction A doesn&#39;t reach till EX stage in the pipeline, as the decision to go to instruction B or instruction C depends on the result of instruction A. So the pipeline will look like this.\r\n\r\n***when if condition returns true:***\r\n![enter image description here][3]\r\n\r\n***When if condition returns false:***\r\n![enter image description here][4]\r\n\r\nAs a result of waiting for the result of instruction A, the total CPU cycles spent in the above case (without branch prediction; for both true and false) is 7.\r\n\r\n**So what is branch prediction?**\r\n\r\nBranch predictor will try to guess which way a branch (an if-then-else structure) will go before this is known for sure. It will not wait for the instruction A to reach the EX stage of the pipeline, but it will guess the decision and go to that instruction (B or C in case of our example).\r\n\r\n***In case of a correct guess, the pipeline looks something like this:***\r\n![enter image description here][5]\r\n\r\nIf it is later detected that the guess was wrong then the partially executed instructions are discarded and the pipeline starts over with the correct branch, incurring a delay. \r\nThe time that is wasted in case of a branch misprediction is equal to the number of stages in the pipeline from the fetch stage to the execute stage. Modern microprocessors tend to have quite long pipelines so that the misprediction delay is between 10 and 20 clock cycles. The longer the pipeline the greater the need for a good [branch predictor][6].\r\n\r\nIn the OP&#39;s code, the first time when the conditional, the branch predictor does not have any information to base up prediction, so the first time it will randomly choose the next instruction. Later in the for loop, it can base the prediction on the history. \r\nFor an array sorted in ascending order, there are three possibilities:\r\n&lt;ol&gt;\r\n&lt;li&gt; All the elements are less than 128\r\n&lt;li&gt; All the elements are greater than 128\r\n&lt;li&gt; Some starting new elements are less than 128 and later it become greater than 128\r\n&lt;/ol&gt;\r\n\r\nLet us assume that the predictor will always assume the true branch on the first run.\r\n\r\nSo in the first case, it will always take the true branch since historically all its predictions are correct.\r\nIn the 2nd case, initially it will predict wrong, but after a few iterations, it will predict correctly.\r\nIn the 3rd case, it will initially predict correctly till the elements are less than 128. After which it will fail for some time and the correct itself when it sees branch prediction failure in history. \r\n \r\nIn all these cases the failure will be too less in number and as a result, only a few times it will need to discard the partially executed instructions and start over with the correct branch, resulting in fewer CPU cycles. \r\n\r\nBut in case of a random unsorted array, the prediction will need to discard the partially executed instructions and start over with the correct branch most of the time and result in more CPU cycles compared to the sorted array.\r\n\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Pipeline_(computing)#Concept_and_motivation\r\n  [2]: http://i.stack.imgur.com/PqBBR.png\r\n  [3]: http://i.stack.imgur.com/0H4gP.png\r\n  [4]: http://i.stack.imgur.com/APpca.png\r\n  [5]: http://i.stack.imgur.com/ZYUbs.png\r\n  [6]: https://en.wikipedia.org/wiki/Branch_predictor","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"owner":{"reputation":13524,"user_id":1313233,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/hBeXC.png?s=128&g=1","display_name":"rkachach","link":"https://stackoverflow.com/users/1313233/rkachach"},"comment_count":0,"score":743,"creation_date":1443020267,"body_markdown":"In the same line (I think this was not highlighted by any answer) it&#39;s good to mention that sometimes (specially in software where the performance matters—like in the Linux kernel) you can find some if statements like the following:\r\n\r\n    if (likely( everything_is_ok ))\r\n    {\r\n        /* Do something */\r\n    }\r\n\r\nor similarly:\r\n\r\n    if (unlikely(very_improbable_condition))\r\n    {\r\n        /* Do something */    \r\n    }\r\n\r\nBoth `likely()` and `unlikely()` are in fact macros that are defined by using something like the GCC&#39;s `__builtin_expect` to help the compiler insert prediction code to favour the condition taking into account the information provided by the user. GCC supports other builtins that could change the behavior of the running program or emit low level instructions like clearing the cache, etc. See [this documentation][1] that goes through the available GCC&#39;s builtins.\r\n\r\nNormally this kind of optimizations are mainly found in hard-real time applications or embedded systems where execution time matters and it&#39;s critical. For example, if you are checking for some error condition that only happens 1/10000000 times, then why not inform the compiler about this? This way, by default, the branch prediction would assume that the condition is false.\r\n\r\n\r\n  [1]: https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"owner":{"reputation":8305,"user_id":4895229,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/cc00fb71bd8f252a7ec9fc4216f58c0b?s=128&d=identicon&r=PG&f=1","display_name":"Maciej","link":"https://stackoverflow.com/users/4895229/maciej"},"comment_count":0,"score":730,"creation_date":1444437042,"body_markdown":"Frequently used Boolean operations in C++ produce many branches in the compiled program. If these branches are inside loops and are hard to predict they can slow down execution significantly. Boolean variables are stored as 8-bit integers with the value `0` for `false` and `1` for `true`.\r\n\r\nBoolean variables are overdetermined in the sense that all operators that have Boolean variables as input check if the inputs have any other value than `0` or `1`, but operators that have Booleans as output can produce no other value than `0` or `1`. This makes operations with Boolean variables as input less efficient than necessary.\r\nConsider example:\r\n\r\n    bool a, b, c, d;\r\n    c = a &amp;&amp; b;\r\n    d = a || b;\r\nThis is typically implemented by the compiler in the following way:\r\n\r\n    bool a, b, c, d;\r\n    if (a != 0) {\r\n        if (b != 0) {\r\n            c = 1;\r\n        }\r\n        else {\r\n            goto CFALSE;\r\n        }\r\n    }\r\n    else {\r\n        CFALSE:\r\n        c = 0;\r\n    }\r\n    if (a == 0) {\r\n        if (b == 0) {\r\n            d = 0;\r\n        }\r\n        else {\r\n            goto DTRUE;\r\n        }\r\n    }\r\n    else {\r\n        DTRUE:\r\n        d = 1;\r\n    }\r\nThis code is far from optimal. The branches may take a long time in case of mispredictions. The Boolean operations can be made much more efficient if it is known with certainty that the operands have no other values than `0` and `1`. The reason why the compiler does not make such an assumption is that the variables might have other values if they are uninitialized or come from unknown sources. The above code can be optimized if `a` and `b` has been initialized to valid values or if they come from operators that produce Boolean output. The optimized code looks like this:\r\n\r\n    char a = 0, b = 1, c, d;\r\n    c = a &amp; b;\r\n    d = a | b;\r\n`char` is used instead of `bool` in order to make it possible to use the bitwise operators (`&amp;` and `|`) instead of the Boolean operators (`&amp;&amp;` and `||`). The bitwise operators are single instructions that take only one clock cycle. The OR operator (`|`) works even if `a` and `b` have other values than `0` or `1`. The AND operator (`&amp;`) and the EXCLUSIVE OR operator (`^`) may give inconsistent results if the operands have other values than `0` and `1`.\r\n\r\n`~` can not be used for NOT. Instead, you can make a Boolean NOT on a variable which is known to be `0` or `1` by XOR&#39;ing it with `1`:\r\n\r\n    bool a, b;\r\n    b = !a;\r\ncan be optimized to:\r\n\r\n    char a = 0, b;\r\n    b = a ^ 1;\r\n`a &amp;&amp; b` cannot be replaced with `a &amp; b` if `b` is an expression that should not be evaluated if `a` is `false` ( `&amp;&amp;` will not evaluate `b`, `&amp;` will). Likewise, `a || b` can not be replaced with `a | b` if `b` is an expression that should not be evaluated if `a` is `true`.\r\n\r\nUsing bitwise operators is more advantageous if the operands are variables than if the operands are comparisons:\r\n\r\n    bool a; double x, y, z;\r\n    a = x &gt; y &amp;&amp; z &lt; 5.0;\r\nis optimal in most cases (unless you expect the `&amp;&amp;` expression to generate many branch mispredictions).","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"owner":{"reputation":13487,"user_id":4013258,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1d423395e1033fa23d80a5561ab170fa?s=128&d=identicon&r=PG&f=1","display_name":"Surt","link":"https://stackoverflow.com/users/4013258/surt"},"comment_count":0,"score":773,"creation_date":1444597518,"body_markdown":"An official answer would be from\r\n\r\n 1. [Intel - Avoiding the Cost of Branch Misprediction][1]\r\n 2. [Intel - Branch and Loop Reorganization to Prevent Mispredicts][2]\r\n 3. [Scientific papers - branch prediction computer architecture][3]\r\n 4. Books: J.L. Hennessy, D.A. Patterson: Computer architecture: a quantitative approach\r\n 5. Articles in scientific publications: T.Y. Yeh, Y.N. Patt made a lot of these on branch predictions.\r\n\r\nYou can also see from this lovely [diagram][4] why the branch predictor gets confused.\r\n\r\n[![2-bit state diagram][5]][5]\r\n\r\nEach element in the original code is a random value\r\n\r\n    data[c] = std::rand() % 256;\r\n\r\nso the predictor will change sides as the `std::rand()` blow.\r\n\r\nOn the other hand, once it&#39;s sorted, the predictor will first move into a state of strongly not taken and when the values change to the high value the predictor will in three runs through change all the way from strongly not taken to strongly taken.\r\n\r\n  [1]: https://software.intel.com/en-us/articles/avoiding-the-cost-of-branch-misprediction\r\n  [2]: https://software.intel.com/en-us/articles/branch-and-loop-reorganization-to-prevent-mispredicts\r\n  [3]: https://scholar.google.com/scholar?q=branch%20prediction%20computer%20architecture&amp;hl=da&amp;as_sdt=0&amp;as_vis=1&amp;oi=scholart\r\n  [4]: https://en.wikipedia.org/wiki/Branch_predictor#/media/File:Branch_prediction_2bit_saturating_counter-dia.svg\r\n  [5]: https://i.stack.imgur.com/pBMV2.png\r\n** **\r\n\r\n\r\n\r\n\r\n\r\n","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":3,"creation_date":1521204439},{"owner":{"reputation":5176,"user_id":601567,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/354e6825881d0dbb29130bdd4c0e560e?s=128&d=identicon&r=PG","display_name":"ForeverLearning","link":"https://stackoverflow.com/users/601567/foreverlearning"},"score":2,"creation_date":1521214636}],"owner":{"reputation":5176,"user_id":601567,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/354e6825881d0dbb29130bdd4c0e560e?s=128&d=identicon&r=PG","display_name":"ForeverLearning","link":"https://stackoverflow.com/users/601567/foreverlearning"},"comment_count":2,"score":347,"creation_date":1484185828,"body_markdown":"This question has already been answered excellently many times over. Still I&#39;d like to draw the group&#39;s attention to yet another interesting analysis.\r\n\r\nRecently this example (modified very slightly) was also used as a way to demonstrate how a piece of code can be profiled within the program itself on Windows. Along the way, the author also shows how to use the results to determine where the code is spending most of its time in both the sorted &amp; unsorted case. Finally the piece also shows how to use a little known feature of the HAL (Hardware Abstraction Layer) to determine just how much branch misprediction is happening in the unsorted case.\r\n\r\nThe link is here:\r\n[**A Demonstration of Self-Profiling**](//www.geoffchappell.com/studies/windows/km/ntoskrnl/api/ex/profile/demo.htm)","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"owner":{"reputation":81528,"user_id":5423108,"user_type":"registered","profile_image":"https://i.stack.imgur.com/WtfBG.png?s=128&g=1","display_name":"Alireza","link":"https://stackoverflow.com/users/5423108/alireza"},"comment_count":0,"score":388,"creation_date":1497786043,"body_markdown":"That&#39;s for sure!...\n\n**Branch prediction** makes the logic run slower, because of the switching which happens in your code! It&#39;s like you are going a straight street or a street with a lot of turnings, for sure the straight one is going to be done quicker!...\n\nIf the array is sorted, your condition is false at the first step: `data[c] &gt;= 128`, then becomes a true value for the whole way to the end of the street. That&#39;s how you get to the end of the logic faster. On the other hand, using an unsorted array, you need a lot of turning and processing which make your code run slower for sure...\n\nLook at the image I created for you below. Which street is going to be finished faster?\n\n[![Branch Prediction][1]][1]\n\nSo programmatically, **branch prediction** causes the process to be slower...\n\nAlso at the end, it&#39;s good to know we have two kinds of branch predictions that each is going to affect your code differently:\n\n **1. Static**\n\n **2. Dynamic**\n\n[![Branch Prediction][2]][2]\n\n&gt; Static branch prediction is used by the microprocessor the first time\n&gt; a conditional branch is encountered, and dynamic branch prediction is\n&gt; used for succeeding executions of the conditional branch code.\n&gt;\n&gt; In order to effectively write your code to take advantage of these\n&gt; rules, when writing **if-else** or **switch** statements, check the most\n&gt; common cases first and work progressively down to the least common.\n&gt; Loops do not necessarily require any special ordering of code for\n&gt; static branch prediction, as only the condition of the loop iterator\n&gt; is normally used.\n\n  [1]: https://i.stack.imgur.com/cSmCa.jpg\n  [2]: https://i.stack.imgur.com/ZfhDu.jpg\n\n","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":234360,"user_id":224132,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/N4ivW.png?s=128&g=1","display_name":"Peter Cordes","link":"https://stackoverflow.com/users/224132/peter-cordes"},"score":0,"creation_date":1581307668}],"owner":{"reputation":11567,"user_id":6530695,"user_type":"registered","accept_rate":98,"profile_image":"https://www.gravatar.com/avatar/53a7a617c8e419f2562f0b00e6be10b1?s=128&d=identicon&r=PG&f=1","display_name":"Tony Tannous","link":"https://stackoverflow.com/users/6530695/tony-tannous"},"comment_count":1,"score":245,"creation_date":1501841232,"body_markdown":"**Branch-prediction gain!**\n\nIt is important to understand that branch misprediction doesn&#39;t slow down programs. The cost of a missed prediction is just as if branch prediction didn&#39;t exist and you waited for the evaluation of the expression to decide what code to run (further explanation in the next paragraph).\n\n    if (expression)\n    {\n        // Run 1\n    } else {\n        // Run 2\n    }\n\nWhenever there&#39;s an `if-else` \\ `switch` statement, the expression has to be evaluated to determine which block should be executed. In the assembly code generated by the compiler, conditional [branch][1] instructions are inserted.\n\nA branch instruction can cause a computer to begin executing a different instruction sequence and thus deviate from its default behavior of executing instructions in order (i.e. if the expression is false, the program skips the code of the `if` block) depending on some condition, which is the expression evaluation in our case.\n\nThat being said, the compiler tries to predict the outcome prior to it being actually evaluated. It will fetch instructions from the `if` block, and if the expression turns out to be true, then wonderful! We gained the time it took to evaluate it and made progress in the code; if not then we are running the wrong code, the pipeline is flushed, and the correct block is run.\n\n### Visualization:\n\nLet&#39;s say you need to pick route 1 or route 2. Waiting for your partner to check the map, you have stopped at ## and waited, or you could just pick route1 and if you were lucky (route 1 is the correct route), then great you didn&#39;t have to wait for your partner to check the map (you saved the time it would have taken him to check the map), otherwise you will just turn back.\n\nWhile flushing pipelines is super fast, nowadays taking this gamble is worth it. Predicting sorted data or a data that changes slowly is always easier and better than predicting fast changes.\n\n\n     O      Route 1  /-------------------------------\n    /|\\             /\n     |  ---------##/\n    / \\            \\\n                    \\\n            Route 2  \\--------------------------------\n\n  [1]: https://en.wikipedia.org/wiki/Branch_(computer_science)\n\n","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"owner":{"reputation":5458,"user_id":5068056,"user_type":"registered","profile_image":"https://i.stack.imgur.com/m53CE.jpg?s=128&g=1","display_name":"Farhad","link":"https://stackoverflow.com/users/5068056/farhad"},"comment_count":0,"score":173,"creation_date":1507024074,"body_markdown":"It&#39;s about branch prediction. What is it?\r\n\r\n * A branch predictor is one of the ancient performance improving techniques which still finds relevance into modern architectures. While the simple prediction techniques provide fast lookup and power efficiency they suffer from a high misprediction rate.\r\n\r\n * On the other hand, complex branch predictions –either neural based or variants of two-level branch prediction –provide better prediction accuracy, but they consume more power and complexity increases exponentially.\r\n\r\n * In addition to this, in complex prediction techniques the time taken to predict the branches is itself very high –ranging from 2 to 5 cycles –which is comparable to the execution time of actual branches.\r\n\r\n * Branch prediction is essentially an optimization (minimization) problem where the emphasis is on to achieve lowest possible miss rate, low power consumption, and low complexity with minimum resources.\r\n\r\nThere really are three different kinds of branches:\r\n\r\n**Forward conditional branches** - based on a run-time condition, the PC (program counter) is changed to point to an address forward in the instruction stream.\r\n\r\n**Backward conditional branches** - the PC is changed to point backward in the instruction stream. The branch is based on some condition, such as branching backwards to the beginning of a program loop when a test at the end of the loop states the loop should be executed again.\r\n\r\n**Unconditional branches** - this includes jumps, procedure calls and returns that have no specific condition. For example, an unconditional jump instruction might be coded in assembly language as simply &quot;jmp&quot;, and the instruction stream must immediately be directed to the target location pointed to by the jump instruction, whereas a conditional jump that might be coded as &quot;jmpne&quot; would redirect the instruction stream only if the result of a comparison of two values in a previous &quot;compare&quot; instructions shows the values to not be equal. (The segmented addressing scheme used by the x86 architecture adds extra complexity, since jumps can be either &quot;near&quot; (within a segment) or &quot;far&quot; (outside the segment). Each type has different effects on branch prediction algorithms.)\r\n\r\n**Static/dynamic Branch Prediction**: Static branch prediction is used by the microprocessor the first time a conditional branch is encountered, and dynamic branch prediction is used for succeeding executions of the conditional branch code.\r\n\r\nReferences:\r\n\r\n * *[Branch predictor](//en.wikipedia.org/wiki/Branch_predictor)*\r\n\r\n * *[A Demonstration of Self-Profiling](//www.geoffchappell.com/studies/windows/km/ntoskrnl/api/ex/profile/demo.htm)*\r\n\r\n * *[Branch Prediction Review](//courses.cs.washington.edu/courses/csep548/06au/lectures/branchPred.pdf)*\r\n\r\n * *[Branch Prediction](https://web.archive.org/web/20190601170841/https://web.njit.edu/~rlopes/Mod5.3.pdf) (Using wayback machine)*","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":934,"user_id":1734032,"user_type":"registered","profile_image":"https://i.stack.imgur.com/69zJo.jpg?s=128&g=1","display_name":"mckenzm","link":"https://stackoverflow.com/users/1734032/mckenzm"},"score":3,"creation_date":1564377256},{"owner":{"reputation":234360,"user_id":224132,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/N4ivW.png?s=128&g=1","display_name":"Peter Cordes","link":"https://stackoverflow.com/users/224132/peter-cordes"},"score":2,"creation_date":1581307399},{"owner":{"reputation":96,"user_id":13830841,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/a-/AOh14GiTKeJoO6XlvqYIKBwy8DomvzAr7NzTIFGCxDZw=k-s128","display_name":"Hanna Mcquaig","link":"https://stackoverflow.com/users/13830841/hanna-mcquaig"},"score":1,"creation_date":1593562749},{"owner":{"reputation":8237,"user_id":3378204,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/jrjpD.png?s=128&g=1","display_name":"Eugene","link":"https://stackoverflow.com/users/3378204/eugene"},"score":1,"creation_date":1593566091}],"owner":{"reputation":8237,"user_id":3378204,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/jrjpD.png?s=128&g=1","display_name":"Eugene","link":"https://stackoverflow.com/users/3378204/eugene"},"comment_count":4,"score":316,"creation_date":1509984916,"body_markdown":"As what has already been mentioned by others, what behind the mystery is [Branch Predictor][1]. \r\n\r\nI&#39;m not trying to add something but explaining the concept in another way. \r\nThere is a concise introduction on the wiki which contains text and diagram.\r\nI do like the explanation below which uses a diagram to elaborate the Branch Predictor intuitively.\r\n\r\n&gt; In computer architecture, a branch predictor is a\r\n&gt; digital circuit that tries to guess which way a branch (e.g. an\r\n&gt; if-then-else structure) will go before this is known for sure. The\r\n&gt; purpose of the branch predictor is to improve the flow in the\r\n&gt; instruction pipeline. Branch predictors play a critical role in\r\n&gt; achieving high effective performance in many modern pipelined\r\n&gt; microprocessor architectures such as x86.\r\n&gt; \r\n&gt; Two-way branching is usually implemented with a conditional jump\r\n&gt; instruction. A conditional jump can either be &quot;not taken&quot; and continue\r\n&gt; execution with the first branch of code which follows immediately\r\n&gt; after the conditional jump, or it can be &quot;taken&quot; and jump to a\r\n&gt; different place in program memory where the second branch of code is\r\n&gt; stored. It is not known for certain whether a conditional jump will be\r\n&gt; taken or not taken until the condition has been calculated and the\r\n&gt; conditional jump has passed the execution stage in the instruction\r\n&gt; pipeline (see fig. 1).\r\n\r\n\r\n\r\n [![figure 1][2]][2]\r\n\r\nBased on the described scenario, I have written an animation demo to show how instructions are executed in a pipeline in different situations.\r\n\r\n 1. Without the Branch Predictor. \r\n\r\n&gt;  Without branch prediction, the processor would have to wait until the\r\n&gt; conditional jump instruction has passed the execute stage before the\r\n&gt; next instruction can enter the fetch stage in the pipeline.\r\n\r\nThe example contains three instructions and the first one is a conditional jump instruction. The latter two instructions can go into the pipeline until the conditional jump instruction is executed. \r\n\r\n[![without branch predictor][3]][3]\r\n\r\nIt will take 9 clock cycles for 3 instructions to be completed.\r\n\r\n 2. Use Branch Predictor and don&#39;t take a conditional jump. Let&#39;s assume that the predict is **not** taking the conditional jump.\r\n\r\n[![enter image description here][4]][4]\r\n\r\nIt will take 7 clock cycles for 3 instructions to be completed.\r\n\r\n 3. Use Branch Predictor and take a conditional jump. Let&#39;s assume that the predict is **not** taking the conditional jump.\r\n\r\n[![enter image description here][5]][5]\r\n\r\nIt will take 9 clock cycles for 3 instructions to be completed.\r\n\r\n&gt; The time that is wasted in case of a branch misprediction is equal to\r\n&gt; the number of stages in the pipeline from the fetch stage to the\r\n&gt; execute stage. Modern microprocessors tend to have quite long\r\n&gt; pipelines so that the misprediction delay is between 10 and 20 clock\r\n&gt; cycles. As a result, making a pipeline longer increases the need for a\r\n&gt; more advanced branch predictor.\r\n\r\nAs you can see, it seems we don&#39;t have a reason not to use Branch Predictor.\r\n\r\nIt&#39;s quite a simple demo that clarifies the very basic part of Branch Predictor. If those gifs are annoying, please feel free to remove them from the answer and visitors can also get the live demo source code from [BranchPredictorDemo][6]\r\n\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Branch_predictor\r\n  [2]: https://i.stack.imgur.com/unxnb.png\r\n  [3]: https://i.stack.imgur.com/GMFQ6.gif\r\n  [4]: https://i.stack.imgur.com/Ms5p1.gif\r\n  [5]: https://i.stack.imgur.com/HIpG3.gif\r\n  [6]: https://github.com/Eugene-Mark/BranchPredictorDemo","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":1,"creation_date":1541507309},{"owner":{"reputation":44328,"user_id":536086,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/75d228bb162b779392a94d9364969208?s=128&d=identicon&r=PG","display_name":"Yochai Timmer","link":"https://stackoverflow.com/users/536086/yochai-timmer"},"score":0,"creation_date":1551270202},{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":2,"creation_date":1551356894},{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":0,"creation_date":1551357288}],"owner":{"reputation":44328,"user_id":536086,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/75d228bb162b779392a94d9364969208?s=128&d=identicon&r=PG","display_name":"Yochai Timmer","link":"https://stackoverflow.com/users/536086/yochai-timmer"},"comment_count":4,"score":177,"creation_date":1511447309,"body_markdown":"Besides the fact that the branch prediction may slow you down, a sorted array has another advantage:   \r\n\r\nYou can have a stop condition instead of just checking the value, this way you only loop over the relevant data, and ignore the rest.   \r\nThe branch prediction will miss only once.\r\n\r\n\r\n\r\n     // sort backwards (higher values first), may be in some other part of the code\r\n     std::sort(data, data + arraySize, std::greater&lt;int&gt;());\r\n\r\n     for (unsigned c = 0; c &lt; arraySize; ++c) {\r\n           if (data[c] &lt; 128) {\r\n                  break;\r\n           }\r\n           sum += data[c];               \r\n     }","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"owner":{"reputation":2158,"user_id":8459055,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ffdc4d783c65c0ab6ff327551fb953c4?s=128&d=identicon&r=PG&f=1","display_name":"omkaartg","link":"https://stackoverflow.com/users/8459055/omkaartg"},"comment_count":0,"score":156,"creation_date":1512667709,"body_markdown":"Sorted arrays are processed faster than an unsorted array, due to a phenomena called branch prediction.\r\n\r\nThe branch predictor is a digital circuit (in computer architecture) trying to predict which way a branch will go, improving the flow in the instruction pipeline. The circuit/computer predicts the next step and executes it.\r\n\r\nMaking a wrong prediction leads to going back to the previous step, and executing with another prediction. Assuming the prediction is correct, the code will continue to the next step. A wrong prediction results in repeating the same step, until a correct prediction occurs.\r\n\r\nThe answer to your question is very simple.\r\n\r\nIn an unsorted array, the computer makes multiple predictions, leading to an increased chance of errors.\r\nWhereas, in a sorted array, the computer makes fewer predictions, reducing the chance of errors.\r\nMaking more predictions requires more time.\r\n\r\nSorted Array: Straight Road\r\n```none\r\n____________________________________________________________________________________\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\r\n```\r\nUnsorted Array: Curved Road\r\n\r\n    ______   ________\r\n    |     |__|\r\n\r\n\r\nBranch prediction: Guessing/predicting which road is straight and following it without checking\r\n\r\n    ___________________________________________ Straight road\r\n     |_________________________________________|Longer road\r\n\r\nAlthough both the roads reach the same destination, the straight road is shorter, and the other is longer. If then you choose the other by mistake, there is no turning back, and so you will waste some extra time if you choose the longer road. This is similar to what happens in the computer, and I hope this helped you understand better.\r\n\r\n---\r\n\r\nAlso I want to cite [@Simon_Weaver](/u/16940) from the comments:\r\n&gt; It doesn’t make fewer predictions - it makes fewer incorrect predictions. It still has to predict for each time through the loop...","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":1,"creation_date":1526404014},{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":2,"creation_date":1526404102},{"owner":{"reputation":234360,"user_id":224132,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/N4ivW.png?s=128&g=1","display_name":"Peter Cordes","link":"https://stackoverflow.com/users/224132/peter-cordes"},"score":0,"creation_date":1582284859},{"owner":{"reputation":234360,"user_id":224132,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/N4ivW.png?s=128&g=1","display_name":"Peter Cordes","link":"https://stackoverflow.com/users/224132/peter-cordes"},"score":1,"creation_date":1582285008},{"owner":{"reputation":234360,"user_id":224132,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/N4ivW.png?s=128&g=1","display_name":"Peter Cordes","link":"https://stackoverflow.com/users/224132/peter-cordes"},"score":1,"creation_date":1582285220}],"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"comment_count":5,"score":206,"creation_date":1513948385,"body_markdown":"On ARM, there is no branch needed, because every instruction has a 4-bit condition field, which tests (at zero cost) any of [16 different different conditions](https://community.arm.com/developer/ip-products/processors/b/processors-ip-blog/posts/condition-codes-1-condition-flags-and-codes) that may arise in the Processor Status Register, and if the condition on an instruction is false, the instruction is skipped. This eliminates the need for short branches, and there would be no branch prediction hit for this algorithm. &lt;b&gt;Therefore, the sorted version of this algorithm would run slower than the unsorted version on ARM, because of the extra overhead of sorting.&lt;/b&gt;\r\n\r\nThe inner loop for this algorithm would look something like the following in ARM assembly language:\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\n    MOV R0, #0   // R0 = sum = 0\r\n    MOV R1, #0   // R1 = c = 0\r\n    ADR R2, data // R2 = addr of data array (put this instruction outside outer loop)\r\n    .inner_loop  // Inner loop branch label\r\n        LDRB R3, [R2, R1]   // R3 = data[c]\r\n        CMP R3, #128        // compare R3 to 128\r\n        ADDGE R0, R0, R3    // if R3 &gt;= 128, then sum += data[c] -- no branch needed!\r\n        ADD R1, R1, #1      // c++\r\n        CMP R1, #arraySize  // compare c to arraySize\r\n        BLT inner_loop      // Branch to inner_loop if c &lt; arraySize\r\n\r\n***But this is actually part of a bigger picture:***\r\n\r\n`CMP` opcodes always update the status bits in the Processor Status Register (PSR), because that is their purpose, but most other instructions do not touch the PSR unless you add an optional `S` suffix to the instruction, specifying that the PSR should be updated based on the result of the instruction. **Just like the 4-bit condition suffix, being able to execute instructions without affecting the PSR is a mechanism that reduces the need for branches on ARM, and also facilitates out of order dispatch at the hardware level**, because after performing some operation X that updates the status bits, subsequently (or in parallel) you can do a bunch of other work that explicitly should not affect (or be affected by) the status bits, then you can test the state of the status bits set earlier by X.\r\n\r\nThe condition testing field and the optional &quot;set status bit&quot; field can be combined, for example:\r\n\r\n* `ADD R1, R2, R3` performs `R1 = R2 + R3` without updating any status bits.\r\n* `ADDGE R1, R2, R3` performs the same operation only if a previous instruction that affected the status bits resulted in a Greater than or Equal condition.\r\n* `ADDS R1, R2, R3` performs the addition and then updates the `N`, `Z`, `C` and `V` flags in the Processor Status Register based on whether the result was Negative, Zero, Carried (for unsigned addition), or oVerflowed (for signed addition).\r\n* `ADDSGE R1, R2, R3` performs the addition only if the `GE` test is true, and then subsequently updates the status bits based on the result of the addition.\r\n\r\nMost processor architectures do not have this ability to specify whether or not the status bits should be updated for a given operation, which can necessitate writing additional code to save and later restore status bits, or may require additional branches, or may limit the processor&#39;s out of order execution efficiency: one of the side effects of most CPU instruction set architectures forcibly updating status bits after most instructions is that it is much harder to tease apart which instructions can be run in parallel without interfering with each other. Updating status bits has side effects, therefore has a linearizing effect on code. **ARM&#39;s ability to mix and match branch-free condition testing on any instruction with the option to either update or not update the status bits after any instruction is extremely powerful, for both assembly language programmers and compilers, and produces very efficient code.**\r\n\r\nWhen you don&#39;t have to branch, you can avoid the time cost of flushing the pipeline for what would otherwise be short branches, and you can avoid the design complexity of many forms of speculative evalution. The performance impact of the initial naive imlementations of the mitigations for many recently discovered processor vulnerabilities (Spectre etc.) shows you just how much the performance of modern processors depends upon complex speculative evaluation logic. With a short pipeline and the dramatically reduced need for branching, ARM just doesn&#39;t need to rely on speculative evaluation as much as CISC processors. (Of course high-end ARM implementations do include speculative evaluation, but it&#39;s a smaller part of the performance story.)\r\n\r\nIf you have ever wondered why ARM has been so phenomenally successful, the brilliant effectiveness and interplay of these two mechanisms (combined with another mechanism that lets you &quot;barrel shift&quot; left or right one of the two arguments of any arithmetic operator or offset memory access operator at zero additional cost) are a big part of the story, because they are some of the greatest sources of the ARM architecture&#39;s efficiency. The brilliance of the original designers of the ARM ISA back in 1983, Steve Furber and Roger (now Sophie) Wilson, cannot be overstated.","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":4,"creation_date":1551356309},{"owner":{"reputation":234360,"user_id":224132,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/N4ivW.png?s=128&g=1","display_name":"Peter Cordes","link":"https://stackoverflow.com/users/224132/peter-cordes"},"score":0,"creation_date":1576248293},{"owner":{"reputation":2036,"user_id":2297550,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/20092a7b6e8eebf36a9c28951bd2261f?s=128&d=identicon&r=PG","display_name":"user2297550","link":"https://stackoverflow.com/users/2297550/user2297550"},"score":1,"creation_date":1585896266}],"owner":{"reputation":2036,"user_id":2297550,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/20092a7b6e8eebf36a9c28951bd2261f?s=128&d=identicon&r=PG","display_name":"user2297550","link":"https://stackoverflow.com/users/2297550/user2297550"},"comment_count":3,"score":80,"creation_date":1544336297,"body_markdown":"The assumption by other answers that one needs to sort the data is not correct.\r\n\r\nThe following code does not sort the entire array, but only 200-element segments of it, and thereby runs the fastest.\r\n\r\nSorting only k-element sections completes the pre-processing in linear time, `O(n)`, rather than the `O(n.log(n))` time needed to sort the entire array.\r\n\r\n    #include &lt;algorithm&gt;\r\n    #include &lt;ctime&gt;\r\n    #include &lt;iostream&gt;\r\n    \r\n    int main() {\r\n        int data[32768]; const int l = sizeof data / sizeof data[0];\r\n    \r\n        for (unsigned c = 0; c &lt; l; ++c)\r\n            data[c] = std::rand() % 256;\r\n\r\n        // sort 200-element segments, not the whole array\r\n        for (unsigned c = 0; c + 200 &lt;= l; c += 200)\r\n            std::sort(&amp;data[c], &amp;data[c + 200]);\r\n    \r\n        clock_t start = clock();\r\n        long long sum = 0;\r\n    \r\n        for (unsigned i = 0; i &lt; 100000; ++i) {\r\n            for (unsigned c = 0; c &lt; sizeof data / sizeof(int); ++c) {\r\n                if (data[c] &gt;= 128)\r\n                    sum += data[c];\r\n            }\r\n        }\r\n    \r\n        std::cout &lt;&lt; static_cast&lt;double&gt;(clock() - start) / CLOCKS_PER_SEC &lt;&lt; std::endl;\r\n        std::cout &lt;&lt; &quot;sum = &quot; &lt;&lt; sum &lt;&lt; std::endl;\r\n    }\r\n\r\nThis also &quot;proves&quot; that it has nothing to do with any algorithmic issue such as sort order, and it is indeed branch prediction.","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"owner":{"reputation":43912,"user_id":2011147,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FGRgf.jpg?s=128&g=1","display_name":"Selcuk","link":"https://stackoverflow.com/users/2011147/selcuk"},"comment_count":0,"score":66,"creation_date":1571096080,"body_markdown":"*[Bjarne Stroustrup&#39;s Answer](//stackoverflow.blog/2019/10/11/c-creator-bjarne-stroustrup-answers-our-top-five-c-questions/) to this question:*\r\n\r\nThat sounds like an interview question. Is it true? How would you know? It is a bad idea to answer questions about efficiency without first doing some measurements, so it is important to know how to measure.\r\n\r\nSo, I tried with a vector of a million integers and got:\r\n```none\r\nAlready sorted    32995 milliseconds\r\nShuffled          125944 milliseconds\r\n\r\nAlready sorted    18610 milliseconds\r\nShuffled          133304 milliseconds\r\n\r\nAlready sorted    17942 milliseconds\r\nShuffled          107858 milliseconds\r\n```\r\n\r\nI ran that a few times to be sure. Yes, the phenomenon is real. My key code was:\r\n```c++\r\nvoid run(vector&lt;int&gt;&amp; v, const string&amp; label)\r\n{\r\n    auto t0 = system_clock::now();\r\n    sort(v.begin(), v.end());\r\n    auto t1 = system_clock::now();\r\n    cout &lt;&lt; label\r\n         &lt;&lt; duration_cast&lt;microseconds&gt;(t1 — t0).count()\r\n         &lt;&lt; &quot; milliseconds\\n&quot;;\r\n}\r\n\r\nvoid tst()\r\n{\r\n    vector&lt;int&gt; v(1&#39;000&#39;000);\r\n    iota(v.begin(), v.end(), 0);\r\n    run(v, &quot;already sorted &quot;);\r\n    std::shuffle(v.begin(), v.end(), std::mt19937{ std::random_device{}() });\r\n    run(v, &quot;shuffled    &quot;);\r\n}\r\n```\r\n\r\nAt least the phenomenon is real with this compiler, standard library, and optimizer settings. Different implementations can and do give different answers. In fact, someone did do a more systematic study (a quick web search will find it) and most implementations show that effect.\r\n\r\nOne reason is branch prediction: the key operation in the sort algorithm is `“if(v[i] &lt; pivot]) …”` or equivalent. For a sorted sequence that test is always true whereas, for a random sequence, the branch chosen varies randomly.\r\n\r\nAnother reason is that when the vector is already sorted, we never need to move elements to their correct position. The effect of these little details is the factor of five or six that we saw.\r\n\r\nQuicksort (and sorting in general) is a complex study that has attracted some of the greatest minds of computer science. A good sort function is a result of both choosing a good algorithm and paying attention to hardware performance in its implementation.\r\n\r\nIf you want to write efficient code, you need to know a bit about machine architecture.","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"comments":[{"owner":{"reputation":234360,"user_id":224132,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/N4ivW.png?s=128&g=1","display_name":"Peter Cordes","link":"https://stackoverflow.com/users/224132/peter-cordes"},"score":0,"creation_date":1576247362}],"owner":{"reputation":1136,"user_id":3821643,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/bc25ab7aa68cfa9d7b0ca53a15d5f40c?s=128&d=identicon&r=PG&f=1","display_name":"hatirlatici","link":"https://stackoverflow.com/users/3821643/hatirlatici"},"comment_count":1,"score":60,"creation_date":1571866540,"body_markdown":"This question is rooted in *branch prediction models* on CPUs. I&#39;d recommend reading this paper:\r\n\r\n[**Increasing the Instruction Fetch Rate via Multiple Branch Prediction and a Branch Address Cache**][1]\r\n\r\nWhen you have sorted elements, the [IR][2] can not be bothered to fetch all CPU instructions, again and again. It fetches them from the cache.\r\n\r\n  [1]: https://pdfs.semanticscholar.org/5634/4be375cfed0f79cb9d009ac838682e1bace3.pdf\r\n  [2]: https://en.wikipedia.org/wiki/Instruction_register\r\n\r\n\r\n","title":"Why is processing a sorted array faster than processing an unsorted array?"}],"owner":{"reputation":454572,"user_id":87234,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/FkjBe.png?s=128&g=1","display_name":"GManNickG","link":"https://stackoverflow.com/users/87234/gmannickg"},"comment_count":6,"is_answered":true,"answer_count":25,"score":25319,"creation_date":1340805096,"question_id":11227809,"body_markdown":"Here is a piece of C++ code that shows some very peculiar behavior. For some strange reason, sorting the data miraculously makes the code almost six times faster:\r\n```c++\r\n#include &lt;algorithm&gt;\r\n#include &lt;ctime&gt;\r\n#include &lt;iostream&gt;\r\n\r\nint main()\r\n{\r\n\t// Generate data\r\n\tconst unsigned arraySize = 32768;\r\n\tint data[arraySize];\r\n\r\n\tfor (unsigned c = 0; c &lt; arraySize; ++c)\r\n\t\tdata[c] = std::rand() % 256;\r\n\r\n\t// !!! With this, the next loop runs faster.\r\n\tstd::sort(data, data + arraySize);\r\n\r\n\t// Test\r\n\tclock_t start = clock();\r\n\tlong long sum = 0;\r\n\r\n\tfor (unsigned i = 0; i &lt; 100000; ++i)\r\n\t{\r\n\t\t// Primary loop\r\n\t\tfor (unsigned c = 0; c &lt; arraySize; ++c)\r\n\t\t{\r\n\t\t\tif (data[c] &gt;= 128)\r\n\t\t\t\tsum += data[c];\r\n\t\t}\r\n\t}\r\n\r\n\tdouble elapsedTime = static_cast&lt;double&gt;(clock() - start) / CLOCKS_PER_SEC;\r\n\r\n\tstd::cout &lt;&lt; elapsedTime &lt;&lt; std::endl;\r\n    std::cout &lt;&lt; &quot;sum = &quot; &lt;&lt; sum &lt;&lt; std::endl;\r\n}\r\n```\r\n\r\n- Without `std::sort(data, data + arraySize);`, the code runs in 11.54 seconds.\r\n- With the sorted data, the code runs in 1.93 seconds.\r\n\r\n---\r\n\r\nInitially, I thought this might be just a language or compiler anomaly, so I tried Java:\r\n```java\r\nimport java.util.Arrays;\r\nimport java.util.Random;\r\n\r\npublic class Main\r\n{\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\t// Generate data\r\n\t\tint arraySize = 32768;\r\n\t\tint data[] = new int[arraySize];\r\n\r\n\t\tRandom rnd = new Random(0);\r\n\t\tfor (int c = 0; c &lt; arraySize; ++c)\r\n\t\tdata[c] = rnd.nextInt() % 256;\r\n\r\n\t\t// !!! With this, the next loop runs faster\r\n\t\tArrays.sort(data);\r\n\r\n\t\t// Test\r\n\t\tlong start = System.nanoTime();\r\n\t\tlong sum = 0;\r\n\r\n\t\tfor (int i = 0; i &lt; 100000; ++i)\r\n\t\t{\r\n\t\t\t// Primary loop\r\n\t\t\tfor (int c = 0; c &lt; arraySize; ++c)\r\n\t\t\t{\r\n\t\t\t\tif (data[c] &gt;= 128)\r\n\t\t\t\t\tsum += data[c];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tSystem.out.println((System.nanoTime() - start) / 1000000000.0);\r\n\t\tSystem.out.println(&quot;sum = &quot; + sum);\r\n\t}\r\n}\r\n```\r\n\r\nWith a similar but less extreme result.\r\n\r\n---\r\n\r\nMy first thought was that sorting brings the data into the [cache](https://en.wikipedia.org/wiki/CPU_cache), but then I thought how silly that was because the array was just generated.\r\n\r\n- What is going on?\r\n- Why is processing a sorted array faster than processing an unsorted array?\r\n\r\nThe code is summing up some independent terms, so the order should not matter.","link":"https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array","title":"Why is processing a sorted array faster than processing an unsorted array?"},{"tags":["java","date","timezone"],"comments":[{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":26,"creation_date":1311754954},{"owner":{"reputation":18363,"user_id":36537,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/05e8bace9f460f632af6b699a80408e9?s=128&d=identicon&r=PG","display_name":"Phil H","link":"https://stackoverflow.com/users/36537/phil-h"},"score":86,"creation_date":1342082046},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":10,"creation_date":1413283155},{"owner":{"reputation":9167,"user_id":209139,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/083585eca61df2e31aa5768fa62872aa?s=128&d=identicon&r=PG","display_name":"TRiG","link":"https://stackoverflow.com/users/209139/trig"},"score":3,"creation_date":1435940627},{"owner":{"reputation":3565,"user_id":1303846,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/da3b47c80b3c9d6f9e37a88b2ca51e6a?s=128&d=identicon&r=PG","display_name":"Remember Monica","link":"https://stackoverflow.com/users/1303846/remember-monica"},"score":1,"creation_date":1600041468}],"answers":[{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"comment_count":0,"score":11294,"creation_date":1311755470,"body_markdown":"It&#39;s a time zone change on December 31st in Shanghai.\r\n\r\nSee [this page][1] for details of 1927 in Shanghai. Basically at midnight at the end of 1927, the clocks went back 5 minutes and 52 seconds. So &quot;1927-12-31 23:54:08&quot; actually happened twice, and it looks like Java is parsing it as the *later* possible instant for that local date/time - hence the difference.\r\n\r\nJust another episode in the often weird and wonderful world of time zones.\r\n\r\n**EDIT:** Stop press! History changes...\r\n\r\nThe original question would no longer demonstrate quite the same behaviour, if rebuilt with version 2013a of [TZDB][2]. In 2013a, the result would be 358 seconds, with a transition time of 23:54:03 instead of 23:54:08.\r\n\r\nI only noticed this because I&#39;m collecting questions like this in Noda Time, in the form of [unit tests][3]... The test has now been changed, but it just goes to show - not even historical data is safe.\r\n\r\n**EDIT:** History has changed again...\r\n\r\nIn TZDB 2014f, the time of the change has moved to 1900-12-31, and it&#39;s now a mere 343 second change (so the time between `t` and `t+1` is 344 seconds, if you see what I mean).\r\n\r\n**EDIT:** To answer a question around a transition at 1900... it looks like the Java timezone implementation treats *all* time zones as simply being in their standard time for any instant before the start of 1900 UTC:\r\n\r\n    import java.util.TimeZone;\r\n    \r\n    public class Test {\r\n        public static void main(String[] args) throws Exception {\r\n            long startOf1900Utc = -2208988800000L;\r\n            for (String id : TimeZone.getAvailableIDs()) {\r\n                TimeZone zone = TimeZone.getTimeZone(id);\r\n                if (zone.getRawOffset() != zone.getOffset(startOf1900Utc - 1)) {\r\n                    System.out.println(id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\nThe code above produces no output on my Windows machine. So any time zone which has any offset other than its standard one at the start of 1900 will count that as a transition. TZDB itself has some data going back earlier than that, and doesn&#39;t rely on any idea of a &quot;fixed&quot; standard time (which is what `getRawOffset` assumes to be a valid concept) so other libraries needn&#39;t introduce this artificial transition.\r\n\r\n\r\n  [1]: http://www.timeanddate.com/worldclock/clockchange.html?n=237&amp;year=1927\r\n  [2]: https://github.com/nodatime/nodatime/blob/master/src/NodaTime.Demo/StackOverflowExamples.cs#L68\r\n  [3]: https://github.com/nodatime/nodatime/blob/master/src/NodaTime.Demo/StackOverflowExamples.cs#L68\r\n","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"},{"comments":[{"owner":{"reputation":22874,"user_id":181106,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/9503d8699f2f4e733131d4e025990483?s=128&d=identicon&r=PG","display_name":"uckelman","link":"https://stackoverflow.com/users/181106/uckelman"},"score":0,"creation_date":1606517832}],"owner":{"reputation":324859,"user_id":16883,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/0382297f273df0a544b0c6c2734de096?s=128&d=identicon&r=PG","display_name":"Michael Borgwardt","link":"https://stackoverflow.com/users/16883/michael-borgwardt"},"comment_count":1,"score":1659,"creation_date":1311755931,"body_markdown":"You&#39;ve encountered a [local time discontinuity][1]:\r\n\r\n&gt; When local standard time was about to reach Sunday, 1. January 1928,\r\n&gt; 00:00:00 clocks were turned backward 0:05:52 hours to Saturday, 31.\r\n&gt; December 1927, 23:54:08 local standard time instead\r\n\r\nThis is not particularly strange and has happened pretty much everywhere at one time or another as timezones were switched or changed due to political or administrative actions.\r\n\r\n\r\n  [1]: http://timeanddate.com/worldclock/clockchange.html?n=237&amp;year=1927","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"},{"comments":[{"owner":{"reputation":1028,"user_id":5488931,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-m_iZb7s8hVY/AAAAAAAAAAI/AAAAAAAAAHE/d595uJKE6SQ/photo.jpg?sz=128","display_name":"Dag &#197;gren","link":"https://stackoverflow.com/users/5488931/dag-%c3%85gren"},"score":2,"creation_date":1604333489}],"owner":{"reputation":39649,"user_id":545127,"user_type":"registered","accept_rate":69,"profile_image":"https://i.stack.imgur.com/RJgJM.png?s=128&g=1","display_name":"Raedwald","link":"https://stackoverflow.com/users/545127/raedwald"},"comment_count":1,"score":696,"creation_date":1311853808,"body_markdown":"The moral of this strangeness is:\r\n\r\n- Use dates and times in UTC wherever possible.\r\n- If you can not display a date or time in UTC, always indicate the time-zone.\r\n- If you can not require an input date/time in UTC, require an explicitly indicated time-zone.","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"},{"owner":{"reputation":3827,"user_id":870838,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9449552c6a88853c2fbc39f51d9f8a1c?s=128&d=identicon&r=PG","display_name":"PatrickO","link":"https://stackoverflow.com/users/870838/patricko"},"comment_count":0,"score":381,"creation_date":1312044904,"body_markdown":"When incrementing time you should convert back to UTC and then add or subtract. Use the local time only for display.\r\n\r\nThis way you will be able to walk through any periods where hours or minutes happen twice.\r\n\r\nIf you converted to UTC, add each second, and convert to local time for display. You would go through 11:54:08 p.m. [LMT][1] - 11:59:59 p.m. LMT and then 11:54:08 p.m. [CST][2] - 11:59:59 p.m. CST.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Local_mean_time\r\n  [2]: http://en.wikipedia.org/wiki/Central_Time_Zone_%28North_America%29\r\n","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"},{"owner":{"reputation":3853,"user_id":1393004,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/67b967112075ba17b7836a7a533eb948?s=128&d=identicon&r=PG&f=1","display_name":"Rajshri","link":"https://stackoverflow.com/users/1393004/rajshri"},"comment_count":0,"score":321,"creation_date":1337146315,"body_markdown":"Instead of converting each date, you can use the following code: \r\n\r\n    long difference = (sDt4.getTime() - sDt3.getTime()) / 1000;\r\n    System.out.println(difference);\r\n\r\nAnd then see that the result is:\r\n\r\n    1\r\n\r\n ","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"},{"owner":{"reputation":283110,"user_id":53013,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/6d43da5df0e52fc31c55e6a227bb23f4?s=128&d=identicon&r=PG","display_name":"Daniel C. Sobral","link":"https://stackoverflow.com/users/53013/daniel-c-sobral"},"comment_count":0,"score":210,"creation_date":1388760187,"body_markdown":"As explained by others, there&#39;s a time discontinuity there. There are two possible timezone offsets for `1927-12-31 23:54:08` at `Asia/Shanghai`, but only one offset for `1927-12-31 23:54:07`. So, depending on which offset is used, there&#39;s either a one second difference or a 5 minutes and 53 seconds difference.\r\n\r\nThis slight shift of offsets, instead of the usual one-hour daylight savings (summer time) we are used to, obscures the problem a bit.\r\n\r\nNote that the 2013a update of the timezone database moved this discontinuity a few seconds earlier, but the effect would still be observable.\r\n\r\nThe new `java.time` package on Java 8 let use see this more clearly, and provide tools to handle it. Given:\r\n\r\n    DateTimeFormatterBuilder dtfb = new DateTimeFormatterBuilder();\r\n    dtfb.append(DateTimeFormatter.ISO_LOCAL_DATE);\r\n    dtfb.appendLiteral(&#39; &#39;);\r\n    dtfb.append(DateTimeFormatter.ISO_LOCAL_TIME);\r\n    DateTimeFormatter dtf = dtfb.toFormatter();\r\n    ZoneId shanghai = ZoneId.of(&quot;Asia/Shanghai&quot;);\r\n\r\n    String str3 = &quot;1927-12-31 23:54:07&quot;;  \r\n    String str4 = &quot;1927-12-31 23:54:08&quot;;  \r\n\r\n    ZonedDateTime zdt3 = LocalDateTime.parse(str3, dtf).atZone(shanghai);\r\n    ZonedDateTime zdt4 = LocalDateTime.parse(str4, dtf).atZone(shanghai);\r\n\r\n    Duration durationAtEarlierOffset = Duration.between(zdt3.withEarlierOffsetAtOverlap(), zdt4.withEarlierOffsetAtOverlap());\r\n\r\n    Duration durationAtLaterOffset = Duration.between(zdt3.withLaterOffsetAtOverlap(), zdt4.withLaterOffsetAtOverlap());\r\n\r\nThen `durationAtEarlierOffset` will be one second, while `durationAtLaterOffset` will be five minutes and 53 seconds.\r\n\r\nAlso, these two offsets are the same:\r\n\r\n    // Both have offsets +08:05:52\r\n    ZoneOffset zo3Earlier = zdt3.withEarlierOffsetAtOverlap().getOffset();\r\n    ZoneOffset zo3Later = zdt3.withLaterOffsetAtOverlap().getOffset();\r\n\r\nBut these two are different:\r\n\r\n    // +08:05:52\r\n    ZoneOffset zo4Earlier = zdt4.withEarlierOffsetAtOverlap().getOffset();\r\n\r\n    // +08:00\r\n    ZoneOffset zo4Later = zdt4.withLaterOffsetAtOverlap().getOffset();\r\n\r\nYou can see the same problem comparing `1927-12-31 23:59:59` with `1928-01-01 00:00:00`, though, in this case, it is the earlier offset that produces the longer divergence, and it is the earlier date that has two possible offsets.\r\n\r\nAnother way to approach this is to check whether there&#39;s a transition going on. We can do this like this:\r\n\r\n    // Null\r\n    ZoneOffsetTransition zot3 = shanghai.getRules().getTransition(ld3.toLocalDateTime);\r\n\r\n    // An overlap transition\r\n    ZoneOffsetTransition zot4 = shanghai.getRules().getTransition(ld3.toLocalDateTime);\r\n\r\nYou can check whether the transition is an overlap where there&#39;s more than one valid offset for that date/time or a gap where that date/time is not valid for that zone id - by using the `isOverlap()` and `isGap()` methods on `zot4`.\r\n\r\nI hope this helps people handle this sort of issue once Java 8 becomes widely available, or to those using Java 7 who adopt the JSR 310 backport.\r\n","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"},{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"comment_count":0,"score":237,"creation_date":1392677052,"body_markdown":"I&#39;m sorry to say, but the time discontinuity has moved a bit in\r\n\r\n[JDK 6][1] two years ago, and in [JDK 7][2] just recently in [update 25][3].\r\n\r\nLesson to learn: avoid non-UTC times at all costs, except maybe for display.\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Java_version_history#Java_SE_6_.28December_11.2C_2006.29\r\n  [2]: https://en.wikipedia.org/wiki/Java_version_history#Java_SE_7_.28July_28.2C_2011.29\r\n  [3]: https://en.wikipedia.org/wiki/Java_version_history#cite_note-131\r\n","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"},{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"comment_count":0,"score":175,"creation_date":1417017497,"body_markdown":"`IMHO` the pervasive, *implicit* localization in Java is its single largest design flaw. It may be intended for user interfaces, but frankly, who really uses Java for user interfaces today except for some IDEs where you can basically ignore localization because programmers aren&#39;t exactly the target audience for it. You can fix it (especially on Linux servers) by:\r\n\r\n * export `LC_ALL=C TZ=UTC`\r\n * set your system clock to UTC\r\n * never use localized implementations unless absolutely necessary (ie for display only)\r\n\r\nTo the [Java Community Process][1] members I recommend:\r\n\r\n * make localized methods, not the default, but require the user to explicitly request localization.\r\n * use `UTF-8/UTC` as the *FIXED* default instead because that&#39;s simply the default today. There is no reason to do something else, except if you want to produce threads like this.\r\n\r\nI mean, come on, aren&#39;t global static variables an anti-OO pattern? Nothing else is those pervasive defaults given by some rudimentary environment variables.......\r\n\r\n\r\n  [1]: https://www.jcp.org/","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"},{"owner":{"reputation":1339,"user_id":9194639,"user_type":"registered","profile_image":"https://i.stack.imgur.com/xcKsd.png?s=128&g=1","display_name":"new QOpenGLWidget","link":"https://stackoverflow.com/users/9194639/new-qopenglwidget"},"comment_count":0,"score":26,"creation_date":1549835255,"body_markdown":"As others said, it&#39;s a time change in 1927 in Shanghai. \r\n\r\nIt was `23:54:07` in Shanghai, in the local standard time, but then after 5 minutes and 52 seconds, it turned to the next day at `00:00:00`, and then local standard time changed back to `23:54:08`. So, that&#39;s why the difference between the two times is 343 seconds, not 1 second, as you would have expected.\r\n\r\nThe time can also mess up in other places like the US. The US has Daylight Saving Time. When the Daylight Saving Time starts the time goes forward 1 hour. But after a while, the Daylight Saving Time ends, and it goes backward 1 hour back to the standard time zone. So sometimes when comparing times in the US the difference is about `3600` seconds not 1 second.\r\n\r\nBut there is something different about these two-time changes. The latter changes continuously and the former was just a change. It didn&#39;t change back or change again by the same amount.\r\n\r\n**It&#39;s better to use UTC unless if needed to use non-UTC time like in display.**","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"},{"owner":{"reputation":76,"user_id":14286083,"user_type":"registered","profile_image":"https://i.stack.imgur.com/qfvEg.jpg?s=128&g=1","display_name":"Vlad","link":"https://stackoverflow.com/users/14286083/vlad"},"comment_count":0,"score":1,"creation_date":1608640069,"body_markdown":"To avoid that issue, when incrementing time you should convert back to UTC and then add or subtract.\r\n\r\nThis way you will be able to walk through any periods where hours or minutes happen twice.\r\n\r\nIf you converted to UTC, add each second, and convert to local time for display. You would go through 11:54:08 p.m. LMT - 11:59:59 p.m. LMT and then 11:54:08 p.m. CST - 11:59:59 p.m. CST.","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"}],"owner":{"reputation":175206,"user_id":342235,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/88e5a9eb011a73ab970ddc8cfb05ff85?s=128&d=identicon&r=PG","display_name":"Freewind","link":"https://stackoverflow.com/users/342235/freewind"},"comment_count":5,"is_answered":true,"answer_count":10,"score":7098,"creation_date":1311754558,"question_id":6841333,"body_markdown":"If I run the following program, which parses two date strings referencing times 1 second apart and compares them:\r\n\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\tSimpleDateFormat sf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);  \r\n\t\tString str3 = &quot;1927-12-31 23:54:07&quot;;  \r\n\t\tString str4 = &quot;1927-12-31 23:54:08&quot;;  \r\n\t\tDate sDt3 = sf.parse(str3);  \r\n\t\tDate sDt4 = sf.parse(str4);  \r\n\t\tlong ld3 = sDt3.getTime() /1000;  \r\n\t\tlong ld4 = sDt4.getTime() /1000;\r\n\t\tSystem.out.println(ld4-ld3);\r\n\t}\r\n\r\n**The output is:**\r\n\r\n    353\r\n\r\nWhy is `ld4-ld3`, not `1` (as I would expect from the one-second difference in the times), but `353`?\r\n\r\nIf I change the dates to times 1 second later:\r\n\r\n    String str3 = &quot;1927-12-31 23:54:08&quot;;  \r\n    String str4 = &quot;1927-12-31 23:54:09&quot;;  \r\n\r\nThen `ld4-ld3` will be `1`.\r\n\r\n----------\r\n\r\n**Java version:**\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n    java version &quot;1.6.0_22&quot;\r\n    Java(TM) SE Runtime Environment (build 1.6.0_22-b04)\r\n    Dynamic Code Evolution Client VM (build 0.2-b02-internal, 19.0-b04-internal, mixed mode)\r\n\r\n```java\r\nTimezone(`TimeZone.getDefault()`):\r\n\r\nsun.util.calendar.ZoneInfo[id=&quot;Asia/Shanghai&quot;,\r\noffset=28800000,dstSavings=0,\r\nuseDaylight=false,\r\ntransitions=19,\r\nlastRule=null]\r\n\r\nLocale(Locale.getDefault()): zh_CN\r\n```","link":"https://stackoverflow.com/questions/6841333/why-is-subtracting-these-two-times-in-1927-giving-a-strange-result","title":"Why Is Subtracting These Two Times (in 1927) Giving A Strange Result?"},{"tags":["java","methods","parameter-passing","pass-by-reference","pass-by-value"],"comments":[{"owner":{"reputation":316,"user_id":1570563,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/81e16b8ea6e8a122717edb93e97819b9?s=128&d=identicon&r=PG","display_name":"jlau","link":"https://stackoverflow.com/users/1570563/jlau"},"score":2,"creation_date":1596540905},{"owner":{"reputation":173,"user_id":11670196,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ad0ea391d628290be8b71786bfb2e217?s=128&d=identicon&r=PG&f=1","display_name":"Tobias","link":"https://stackoverflow.com/users/11670196/tobias"},"score":2,"creation_date":1603194290},{"owner":{"reputation":24630,"user_id":287316,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/583742a8405c2eec28d313bad6dec7f4?s=128&d=identicon&r=PG&f=1","display_name":"The Student","link":"https://stackoverflow.com/users/287316/the-student"},"score":5,"creation_date":1603220756},{"owner":{"reputation":12969,"user_id":365188,"user_type":"registered","accept_rate":94,"profile_image":"https://lh3.googleusercontent.com/-MBLY-SyRbzI/AAAAAAAAAAI/AAAAAAAAGUs/5C3q3oyuzx8/photo.jpg?sz=128","display_name":"Ozair Kafray","link":"https://stackoverflow.com/users/365188/ozair-kafray"},"score":1,"creation_date":1604991385},{"owner":{"reputation":805,"user_id":8932910,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b8ed75b474f7bc5dcf6dfb8c778d17a2?s=128&d=identicon&r=PG&f=1","display_name":"jack","link":"https://stackoverflow.com/users/8932910/jack"},"score":0,"creation_date":1609016813},{"owner":{"reputation":139,"user_id":9873819,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-h2ycFG_H3Rw/AAAAAAAAAAI/AAAAAAAADF8/YWHnb782vCM/photo.jpg?sz=128","display_name":"Natasha Kurian","link":"https://stackoverflow.com/users/9873819/natasha-kurian"},"score":0,"creation_date":1611136368},{"owner":{"reputation":635,"user_id":9868445,"user_type":"registered","profile_image":"https://i.stack.imgur.com/QBHGw.jpg?s=128&g=1","display_name":"aderchox","link":"https://stackoverflow.com/users/9868445/aderchox"},"score":0,"creation_date":1614493716}],"answers":[{"comments":[{"owner":{"reputation":72747,"user_id":3553087,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Q2cTS.gif?s=128&g=1","display_name":"Brian Goetz","link":"https://stackoverflow.com/users/3553087/brian-goetz"},"score":0,"creation_date":1604245977},{"owner":{"reputation":1619,"user_id":2485825,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/aa74d22ac430874ead67c4e170806910?s=128&d=identicon&r=PG","display_name":"georgiana_e","link":"https://stackoverflow.com/users/2485825/georgiana-e"},"score":0,"creation_date":1614670126}],"owner":{"reputation":50511,"user_id":1666,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/96dda17df0db1cc0c3762c505a7d1352?s=128&d=identicon&r=PG","display_name":"SCdF","link":"https://stackoverflow.com/users/1666/scdf"},"comment_count":2,"score":740,"creation_date":1220386761,"body_markdown":"Java is always pass by value, with no exceptions, **ever**.\r\n\r\nSo how is it that anyone can be at all confused by this, and believe that Java is pass by reference, or think they have an example of Java acting as pass by reference? The key point is that Java **never** provides direct access to the values of *objects themselves*, in *any* circumstances. The only access to objects is through a _reference_ to that object. Because Java objects are *always* accessed through a reference, rather than directly, it is common to talk about fields and variables *and method arguments* as being *objects*, when pedantically they are only *references to objects*. **The confusion stems from this (strictly speaking, incorrect) change in nomenclature.**\r\n\r\nSo, when calling a method\r\n\r\n* For primitive arguments (`int`, `long`, etc.), the pass by value is *the actual value* of the primitive (for example, 3).\r\n* For objects, the pass by value is the value of *the reference to the object*.\r\n\r\nSo if you have `doSomething(foo)` and `public void doSomething(Foo foo) { .. }` the two Foos have copied *references* that point to the same objects.\r\n\r\nNaturally, passing by value a reference to an object looks very much like (and is indistinguishable in practice from) passing an object by reference.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":77429,"user_id":1310,"user_type":"registered","accept_rate":98,"profile_image":"https://www.gravatar.com/avatar/9cb44812fc259d55c656dd8038ea5af3?s=128&d=identicon&r=PG","display_name":"ScArcher2","link":"https://stackoverflow.com/users/1310/scarcher2"},"comment_count":0,"score":351,"creation_date":1220386808,"body_markdown":"Java passes references by value.\r\n\r\nSo you can&#39;t change the reference that gets passed in.\r\n\r\n\r\n\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":64910,"user_id":4203,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/646c35309b1b074fba9cf2e6a482ac3b?s=128&d=identicon&r=PG","display_name":"Hank Gay","link":"https://stackoverflow.com/users/4203/hank-gay"},"comment_count":0,"score":186,"creation_date":1220386864,"body_markdown":"Basically, reassigning Object parameters doesn&#39;t affect the argument, e.g.,\r\n\r\n\r\n    private void foo(Object bar) {\r\n        bar = null;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        String baz = &quot;Hah!&quot;;\r\n        foo(baz);\r\n        System.out.println(baz);\r\n    }\r\n\r\nwill print out `&quot;Hah!&quot;` instead of `null`. The reason this works is because `bar` is a copy of the value of `baz`, which is just a reference to `&quot;Hah!&quot;`. If it were the actual reference itself, then `foo` would have redefined `baz` to `null`.\r\n\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":6293,"user_id":3305,"user_type":"registered","accept_rate":41,"profile_image":"https://www.gravatar.com/avatar/9f88abf7dbaa66d72efc2e3cda54c732?s=128&d=identicon&r=PG","display_name":"John Channing","link":"https://stackoverflow.com/users/3305/john-channing"},"comment_count":0,"score":191,"creation_date":1220387010,"body_markdown":"Java passes references to objects by value.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":117,"user_id":12383992,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6c0fc561f53edb1508f4c372b9068c38?s=128&d=identicon&r=PG&f=1","display_name":"dbrewster","link":"https://stackoverflow.com/users/12383992/dbrewster"},"score":1,"creation_date":1601402615},{"owner":{"reputation":2592,"user_id":1289801,"user_type":"registered","accept_rate":30,"profile_image":"https://www.gravatar.com/avatar/8a1c3093e5ea650e39c4a875f62a0bd4?s=128&d=identicon&r=PG","display_name":"TMOTTM","link":"https://stackoverflow.com/users/1289801/tmottm"},"score":0,"creation_date":1602873224},{"owner":{"reputation":1515,"user_id":3230708,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/3ba0a3fe017d7c55f7741bcb315f4824?s=128&d=identicon&r=PG&f=1","display_name":"user36800","link":"https://stackoverflow.com/users/3230708/user36800"},"score":11,"creation_date":1603824361},{"owner":{"reputation":509,"user_id":1889373,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/016f3df2c1ded9b52755a1832612b762?s=128&d=identicon&r=PG","display_name":"user21820","link":"https://stackoverflow.com/users/1889373/user21820"},"score":0,"creation_date":1608735823},{"owner":{"reputation":1515,"user_id":3230708,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/3ba0a3fe017d7c55f7741bcb315f4824?s=128&d=identicon&r=PG&f=1","display_name":"user36800","link":"https://stackoverflow.com/users/3230708/user36800"},"score":0,"creation_date":1609122550},{"owner":{"reputation":509,"user_id":1889373,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/016f3df2c1ded9b52755a1832612b762?s=128&d=identicon&r=PG","display_name":"user21820","link":"https://stackoverflow.com/users/1889373/user21820"},"score":0,"creation_date":1609134567},{"owner":{"reputation":509,"user_id":1889373,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/016f3df2c1ded9b52755a1832612b762?s=128&d=identicon&r=PG","display_name":"user21820","link":"https://stackoverflow.com/users/1889373/user21820"},"score":0,"creation_date":1609134688},{"owner":{"reputation":1515,"user_id":3230708,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/3ba0a3fe017d7c55f7741bcb315f4824?s=128&d=identicon&r=PG&f=1","display_name":"user36800","link":"https://stackoverflow.com/users/3230708/user36800"},"score":0,"creation_date":1609198361},{"owner":{"reputation":397,"user_id":7597142,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ba2aaf02dcba82b8983be8d3e9787b22?s=128&d=identicon&r=PG&f=1","display_name":"Prateek Pande","link":"https://stackoverflow.com/users/7597142/prateek-pande"},"score":0,"creation_date":1610544459},{"owner":{"reputation":1174,"user_id":7214292,"user_type":"registered","profile_image":"https://i.stack.imgur.com/pG5M6.png?s=128&g=1","display_name":"ghilesZ","link":"https://stackoverflow.com/users/7214292/ghilesz"},"score":5,"creation_date":1612295519},{"owner":{"reputation":761,"user_id":8251318,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/ff7844182651142d95d26253f7aada4c?s=128&d=identicon&r=PG&f=1","display_name":"Matthew","link":"https://stackoverflow.com/users/8251318/matthew"},"score":0,"creation_date":1612930297}],"owner":{"reputation":6578,"user_id":4192,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/3ef3ba1fb05d589d272b01e28ec7b285?s=128&d=identicon&r=PG","display_name":"erlando","link":"https://stackoverflow.com/users/4192/erlando"},"comment_count":11,"score":6211,"creation_date":1220387137,"body_markdown":"Java is always **pass-by-value**.  \r\nUnfortunately, we never handle an object at all, instead juggling object-handles called _references_ &lt;sub&gt;&lt;sup&gt;(which are passed by value of course)&lt;/sup&gt;&lt;/sub&gt;.  The chosen terminology and semantics easily confuse many beginners.\r\n\r\nIt goes like this:\r\n \r\n    public static void main(String[] args) {\r\n        Dog aDog = new Dog(&quot;Max&quot;);\r\n        Dog oldDog = aDog;\r\n\r\n        // we pass the object to foo\r\n        foo(aDog);\r\n        // aDog variable is still pointing to the &quot;Max&quot; dog when foo(...) returns\r\n        aDog.getName().equals(&quot;Max&quot;); // true\r\n        aDog.getName().equals(&quot;Fifi&quot;); // false\r\n        aDog == oldDog; // true\r\n    }\r\n\r\n    public static void foo(Dog d) {\r\n        d.getName().equals(&quot;Max&quot;); // true\r\n        // change d inside of foo() to point to a new Dog instance &quot;Fifi&quot;\r\n        d = new Dog(&quot;Fifi&quot;);\r\n        d.getName().equals(&quot;Fifi&quot;); // true\r\n    }\r\n\r\nIn the example above `aDog.getName()` will still return `&quot;Max&quot;`. The value `aDog` within `main` is not changed in the function `foo` with the `Dog` `&quot;Fifi&quot;` as the object reference is passed by value. If it were passed by reference, then the `aDog.getName()` in `main` would return `&quot;Fifi&quot;` after the call to `foo`.\r\n\r\nLikewise:\r\n\r\n    public static void main(String[] args) {\r\n        Dog aDog = new Dog(&quot;Max&quot;);\r\n        Dog oldDog = aDog;\r\n\r\n        foo(aDog);\r\n        // when foo(...) returns, the name of the dog has been changed to &quot;Fifi&quot;\r\n        aDog.getName().equals(&quot;Fifi&quot;); // true\r\n        // but it is still the same dog:\r\n        aDog == oldDog; // true\r\n    }\r\n\r\n    public static void foo(Dog d) {\r\n        d.getName().equals(&quot;Max&quot;); // true\r\n        // this changes the name of d to be &quot;Fifi&quot;\r\n        d.setName(&quot;Fifi&quot;);\r\n    }\r\n\r\nIn the above example, `Fifi` is the dog&#39;s name after call to `foo(aDog)` because the object&#39;s name was set inside of `foo(...)`. Any operations that `foo` performs on `d` are such that, for all practical purposes, they are performed on `aDog`, but it is **not** possible to change the value of the variable `aDog` itself.\r\n\r\n  [1]: http://ideone.com/oUEPbg","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":735,"user_id":1193657,"user_type":"registered","profile_image":"https://i.stack.imgur.com/qu2Es.png?s=128&g=1","display_name":"Talijanac","link":"https://stackoverflow.com/users/1193657/talijanac"},"score":0,"creation_date":1597742062},{"owner":{"reputation":4805,"user_id":4100,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f2ffcd63c3f62b86a905ebe89da2c69d?s=128&d=identicon&r=PG","display_name":"Paul de Vrieze","link":"https://stackoverflow.com/users/4100/paul-de-vrieze"},"score":0,"creation_date":1600190022},{"owner":{"reputation":735,"user_id":1193657,"user_type":"registered","profile_image":"https://i.stack.imgur.com/qu2Es.png?s=128&g=1","display_name":"Talijanac","link":"https://stackoverflow.com/users/1193657/talijanac"},"score":0,"creation_date":1600245636},{"owner":{"reputation":735,"user_id":1193657,"user_type":"registered","profile_image":"https://i.stack.imgur.com/qu2Es.png?s=128&g=1","display_name":"Talijanac","link":"https://stackoverflow.com/users/1193657/talijanac"},"score":0,"creation_date":1600245942}],"owner":{"reputation":4805,"user_id":4100,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f2ffcd63c3f62b86a905ebe89da2c69d?s=128&d=identicon&r=PG","display_name":"Paul de Vrieze","link":"https://stackoverflow.com/users/4100/paul-de-vrieze"},"comment_count":4,"score":27,"creation_date":1220388839,"body_markdown":"To make a long story short, [Java][1] objects have some very peculiar properties.\r\n\r\nIn general, Java has primitive types (`int`, `bool`, `char`, `double`, etc) that are passed directly by value. Then Java has objects (everything that derives from `java.lang.Object`). Objects are actually always handled through a reference (a reference being a pointer that you can&#39;t touch). That means that in effect, objects are passed by reference, as the references are normally not interesting. It does however mean that you cannot change which object is pointed to as the reference itself is passed by value.\r\n\r\nDoes this sound strange and confusing? Let&#39;s consider how C implements pass by reference and pass by value. In C, the default convention is pass by value. `void foo(int x)` passes an int by value. `void foo(int *x)` is a function that does not want an `int a`, but a pointer to an int: `foo(&amp;a)`. One would use this with the `&amp;` operator to pass a variable address.\r\n\r\nTake this to C++, and we have references. References are basically (in this context) syntactic sugar that hide the pointer part of the equation: `void foo(int &amp;x)` is called by `foo(a)`, where the compiler itself knows that it is a reference and the address of the non-reference `a` should be passed. In Java, all variables referring to objects are actually of reference type, in effect forcing call by reference for most intends and purposes without the fine grained control (and complexity) afforded by, for example, C++.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Java_%28programming_language%29\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":26648,"user_id":292,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/16db4bb794911afb2830e17e6c9d4702?s=128&d=identicon&r=PG","display_name":"shsteimer","link":"https://stackoverflow.com/users/292/shsteimer"},"comment_count":0,"score":43,"creation_date":1220470923,"body_markdown":"The distinction, or perhaps just the way I remember as I used to be under the same impression as the original poster is this: Java is always pass by value. All objects( in Java, anything except for primitives) in Java are references. These references are passed by value.\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":16799,"user_id":2644,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/a2d07b1a0a6ddcfed5c18ddfafd5a887?s=128&d=identicon&r=PG","display_name":"pek","link":"https://stackoverflow.com/users/2644/pek"},"comment_count":0,"score":41,"creation_date":1220472119,"body_markdown":"As many people mentioned it before, [Java is always pass-by-value][1]\r\n\r\nHere is another example that will help you understand the difference ([the classic swap example][2]):\r\n\r\n    public class Test {\r\n      public static void main(String[] args) {\r\n        Integer a = new Integer(2);\r\n        Integer b = new Integer(3);\r\n        System.out.println(&quot;Before: a = &quot; + a + &quot;, b = &quot; + b);\r\n        swap(a,b);\r\n        System.out.println(&quot;After: a = &quot; + a + &quot;, b = &quot; + b);\r\n      }\r\n    \r\n      public static swap(Integer iA, Integer iB) {\r\n        Integer tmp = iA;\r\n        iA = iB;\r\n        iB = tmp;\r\n      }\r\n    }\r\n\r\nPrints:  \r\n\r\n&gt; Before: a = 2, b = 3   \r\n&gt; After: a = 2, b = 3\r\n\r\n\r\nThis happens because iA and iB are new local reference variables that have the same value of the passed references (they point to a and b respectively). So, trying to change the references of iA or iB will only change in the local scope and not outside of this method.\r\n\r\n\r\n  [1]: http://academic.regis.edu/dbahr/GeneralPages/IntroToProgramming/JavaPassByValue.htm\r\n  [2]: http://www.javaranch.com/campfire/StoryPassBy.jsp","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":289,"user_id":3034,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/854ad6712f08a16e94d1abebcbee4683?s=128&d=identicon&r=PG","display_name":"SWD","link":"https://stackoverflow.com/users/3034/swd"},"comment_count":0,"score":34,"creation_date":1220885321,"body_markdown":"I always think of it as &quot;pass by copy&quot;. It is a copy of the value be it primitive or reference. If it is a primitive it is a copy of the bits that are the value and if it is an Object it is a copy of the reference.\r\n\r\n    public class PassByCopy{\r\n        public static void changeName(Dog d){\r\n            d.name = &quot;Fido&quot;;\r\n        }\r\n        public static void main(String[] args){\r\n            Dog d = new Dog(&quot;Maxx&quot;);\r\n            System.out.println(&quot;name= &quot;+ d.name);\r\n            changeName(d);\r\n            System.out.println(&quot;name= &quot;+ d.name);\r\n        }\r\n    }\r\n    class Dog{\r\n        public String name;\r\n        public Dog(String s){\r\n            this.name = s;\r\n        }\r\n    }\r\n\r\noutput of java PassByCopy:\r\n\r\n&gt;name= Maxx  \r\n&gt;name= Fido\r\n\r\nPrimitive wrapper classes and Strings are immutable so any example using those types will not work the same as other types/objects.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":17236,"user_id":46,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/U5kmD.jpg?s=128&g=1","display_name":"sven","link":"https://stackoverflow.com/users/46/sven"},"comment_count":0,"score":29,"creation_date":1220885688,"body_markdown":"I have created a thread devoted to these kind of questions for *any* programming languages [here][1].\r\n\r\n[Java is also mentioned][2]. Here is the short summary:\r\n\r\n  -  Java passes it parameters by value\r\n  - &quot;by value&quot; is the only way in java to pass a parameter to a method\r\n  - using methods from the object given as parameter will alter the\r\n    object as the references point to\r\n    the original objects. (if that\r\n    method itself alters some values)\r\n\r\n  [1]: https://stackoverflow.com/questions/2027/pass-by-reference-or-pass-by-value\r\n  [2]: https://stackoverflow.com/questions/2027/pass-by-reference-or-pass-by-value#2028","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":27829,"user_id":12541,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/21bd0a8539a209bf52587832fef3a763?s=128&d=identicon&r=PG","display_name":"Scott Stanchfield","link":"https://stackoverflow.com/users/12541/scott-stanchfield"},"comment_count":0,"score":3244,"creation_date":1221575820,"body_markdown":"I just noticed you referenced [my article][1].\r\n\r\nThe Java Spec says that everything in Java is pass-by-value. There is no such thing as &quot;pass-by-reference&quot; in Java.\r\n\r\nThe key to understanding this is that something like\r\n\r\n    Dog myDog;\r\n\r\nis _not_ a Dog; it&#39;s actually a _pointer_ to a Dog.\r\n\r\nWhat that means, is when you have\r\n\r\n    Dog myDog = new Dog(&quot;Rover&quot;);\r\n    foo(myDog);\r\n\r\nyou&#39;re essentially passing the _address_ of the created `Dog` object to the `foo` method.\r\n\r\n(I say essentially because Java pointers aren&#39;t direct addresses, but it&#39;s easiest to think of them that way)\r\n\r\nSuppose the `Dog` object resides at memory address 42. This means we pass 42 to the method.\r\n\r\nif the Method were defined as\r\n\r\n    public void foo(Dog someDog) {\r\n        someDog.setName(&quot;Max&quot;);     // AAA\r\n        someDog = new Dog(&quot;Fifi&quot;);  // BBB\r\n        someDog.setName(&quot;Rowlf&quot;);   // CCC\r\n    }\r\n\r\nlet&#39;s look at what&#39;s happening.\r\n\r\n   * the parameter `someDog` is set to the value 42\r\n   * at line &quot;AAA&quot;\r\n      * `someDog` is followed to the `Dog` it points to (the `Dog` object at address 42)\r\n      * that `Dog` (the one at address 42) is asked to change his name to Max\r\n   * at line &quot;BBB&quot;\r\n      * a new `Dog` is created. Let&#39;s say he&#39;s at address 74\r\n      * we assign the parameter `someDog` to 74 \r\n   * at line &quot;CCC&quot;\r\n      * someDog is followed to the `Dog` it points to (the `Dog` object at address 74)\r\n      * that `Dog` (the one at address 74) is asked to change his name to Rowlf\r\n   * then, we return\r\n\r\nNow let&#39;s think about what happens outside the method:\r\n\r\n*Did `myDog` change?*\r\n\r\nThere&#39;s the key.\r\n\r\nKeeping in mind that `myDog` is a *pointer*, and not an actual `Dog`, the answer is NO. `myDog` still has the value 42; it&#39;s still pointing to the original `Dog` (but note that because of line &quot;AAA&quot;, its name is now &quot;Max&quot; - still the same Dog; `myDog`&#39;s value has not changed.)\r\n\r\nIt&#39;s perfectly valid to *follow* an address and change what&#39;s at the end of it; that does not change the variable, however.\r\n\r\n\r\nJava works exactly like C. You can assign a pointer, pass the pointer to a method, follow the pointer in the method and change the data that was pointed to. However, you cannot change where that pointer points.\r\n\r\nIn C++, Ada, Pascal and other languages that support pass-by-reference, you can actually change the variable that was passed.\r\n\r\nIf Java had pass-by-reference semantics, the `foo` method we defined above would have changed where `myDog` was pointing when it assigned `someDog` on line BBB.\r\n\r\nThink of reference parameters as being aliases for the variable passed in. When that alias is assigned, so is the variable that was passed in.\r\n\r\n\r\n  [1]: http://javadude.com/articles/passbyvalue.htm","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":3303,"user_id":1505487,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/32a89e70bccdffd6f50c1ec96224ab2d?s=128&d=identicon&r=PG","display_name":"Solubris","link":"https://stackoverflow.com/users/1505487/solubris"},"score":0,"creation_date":1606345416},{"owner":{"reputation":42574,"user_id":8701,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/369fe4f874d2b26fd2441a0e5017f894?s=128&d=identicon&r=PG","display_name":"Eclipse","link":"https://stackoverflow.com/users/8701/eclipse"},"score":0,"creation_date":1606428196}],"owner":{"reputation":42574,"user_id":8701,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/369fe4f874d2b26fd2441a0e5017f894?s=128&d=identicon&r=PG","display_name":"Eclipse","link":"https://stackoverflow.com/users/8701/eclipse"},"comment_count":2,"score":203,"creation_date":1221673123,"body_markdown":"Just to show the contrast, compare the following [C++][1] and [Java][2] snippets:\r\n\r\nIn C++: **Note: Bad code - memory leaks!**  But it demonstrates the point.\r\n\r\n    void cppMethod(int val, int &amp;ref, Dog obj, Dog &amp;objRef, Dog *objPtr, Dog *&amp;objPtrRef)\r\n    {\r\n        val = 7; // Modifies the copy\r\n        ref = 7; // Modifies the original variable\r\n        obj.SetName(&quot;obj&quot;); // Modifies the copy of Dog passed\r\n        objRef.SetName(&quot;objRef&quot;); // Modifies the original Dog passed\r\n        objPtr-&gt;SetName(&quot;objPtr&quot;); // Modifies the original Dog pointed to \r\n                                   // by the copy of the pointer passed.\r\n        objPtr = new Dog(&quot;newObjPtr&quot;);  // Modifies the copy of the pointer, \r\n                                       // leaving the original object alone.\r\n        objPtrRef-&gt;SetName(&quot;objRefPtr&quot;); // Modifies the original Dog pointed to \r\n                                        // by the original pointer passed. \r\n        objPtrRef = new Dog(&quot;newObjPtrRef&quot;); // Modifies the original pointer passed\r\n    }\r\n\r\n    int main()\r\n    {\r\n        int a = 0;\r\n        int b = 0;\r\n        Dog d0 = Dog(&quot;d0&quot;);\r\n        Dog d1 = Dog(&quot;d1&quot;);\r\n        Dog *d2 = new Dog(&quot;d2&quot;);\r\n        Dog *d3 = new Dog(&quot;d3&quot;);\r\n        cppMethod(a, b, d0, d1, d2, d3);\r\n        // a is still set to 0\r\n        // b is now set to 7\r\n        // d0 still have name &quot;d0&quot;\r\n        // d1 now has name &quot;objRef&quot;\r\n        // d2 now has name &quot;objPtr&quot;\r\n        // d3 now has name &quot;newObjPtrRef&quot;\r\n    }\r\n\r\nIn Java, \r\n\r\n    public static void javaMethod(int val, Dog objPtr)\r\n    {\r\n       val = 7; // Modifies the copy\r\n       objPtr.SetName(&quot;objPtr&quot;) // Modifies the original Dog pointed to \r\n                                // by the copy of the pointer passed.\r\n       objPtr = new Dog(&quot;newObjPtr&quot;);  // Modifies the copy of the pointer, \r\n                                      // leaving the original object alone.\r\n    }\r\n\r\n    public static void main()\r\n    {\r\n        int a = 0;\r\n        Dog d0 = new Dog(&quot;d0&quot;);\r\n        javaMethod(a, d0);\r\n        // a is still set to 0\r\n        // d0 now has name &quot;objPtr&quot;\r\n    }\r\n\r\nJava only has the two types of passing: by value for built-in types, and by value of the pointer for object types.\r\n\r\n  [1]: https://en.wikipedia.org/wiki/C++\r\n  [2]: http://en.wikipedia.org/wiki/Java_%28programming_language%29\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":1077,"user_id":54236,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/da4564c0cd535285f53473571cf285d9?s=128&d=identicon&r=PG","display_name":"Harald Schilly","link":"https://stackoverflow.com/users/54236/harald-schilly"},"comment_count":0,"score":9,"creation_date":1231792442,"body_markdown":"It&#39;s a bit hard to understand, but Java always copies the value - the point is, normally the value is a reference. Therefore you end up with the same object without thinking about it...\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":39290,"user_id":7488,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/fd633bcdc4aad15ea62e836d61f0dd8f?s=128&d=identicon&r=PG","display_name":"JacquesB","link":"https://stackoverflow.com/users/7488/jacquesb"},"comment_count":0,"score":123,"creation_date":1231793425,"body_markdown":"The crux of the matter is that the word *reference* in the expression &quot;pass by reference&quot; means something completely different from the usual meaning of the word *reference* in Java. \r\n\r\nUsually in Java *reference* means a a *reference to an object*. But the technical terms *pass by reference/value* from programming language theory is talking about a *reference to the memory cell holding the variable*, which is something completely different.\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":13967,"user_id":73019,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/d8776ad72b62e964f65c8fcfc0859b4a?s=128&d=identicon&r=PG","display_name":"Jared Oberhaus","link":"https://stackoverflow.com/users/73019/jared-oberhaus"},"comment_count":0,"score":51,"creation_date":1236493732,"body_markdown":"You can never pass by reference in Java, and one of the ways that is obvious is when you want to return more than one value from a method call. Consider the following bit of code in C++:\r\n\r\n    void getValues(int&amp; arg1, int&amp; arg2) {\r\n        arg1 = 1;\r\n        arg2 = 2;\r\n    }\r\n    void caller() {\r\n        int x;\r\n        int y;\r\n        getValues(x, y);\r\n        cout &lt;&lt; &quot;Result: &quot; &lt;&lt; x &lt;&lt; &quot; &quot; &lt;&lt; y &lt;&lt; endl;\r\n    }\r\n\r\nSometimes you want to use the same pattern in Java, but you can&#39;t; at least not directly. Instead you could do something like this:\r\n\r\n    void getValues(int[] arg1, int[] arg2) {\r\n        arg1[0] = 1;\r\n        arg2[0] = 2;\r\n    }\r\n    void caller() {\r\n        int[] x = new int[1];\r\n        int[] y = new int[1];\r\n        getValues(x, y);\r\n        System.out.println(&quot;Result: &quot; + x[0] + &quot; &quot; + y[0]);\r\n    }\r\n\r\nAs was explained in previous answers, in Java you&#39;re passing a pointer to the array as a value into `getValues`. That is enough, because the method then modifies the array element, and by convention you&#39;re expecting element 0 to contain the return value. Obviously you can do this in other ways, such as structuring your code so this isn&#39;t necessary, or constructing a class that can contain the return value or allow it to be set. But the simple pattern available to you in C++ above is not available in Java.\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":4606,"user_id":48402,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/5c8f5e525d9fa687c10f3bc5ab4b42b5?s=128&d=identicon&r=PG","display_name":"kukudas","link":"https://stackoverflow.com/users/48402/kukudas"},"comment_count":0,"score":58,"creation_date":1238621600,"body_markdown":"As far as I know, Java only knows call by value. This means for primitive datatypes you will work with an copy and for objects you will work with an copy of the reference to the objects. However I think there are some pitfalls; for example, this will not work:\r\n\r\n    public static void swap(StringBuffer s1, StringBuffer s2) {\r\n        StringBuffer temp = s1;\r\n        s1 = s2;\r\n        s2 = temp;\r\n    }\r\n\r\n\r\n    public static void main(String[] args) {\r\n        StringBuffer s1 = new StringBuffer(&quot;Hello&quot;);\r\n        StringBuffer s2 = new StringBuffer(&quot;World&quot;);\r\n        swap(s1, s2);\r\n        System.out.println(s1);\r\n        System.out.println(s2);\r\n    }\r\n\r\nThis will populate Hello World and not World Hello because in the swap function you use copys which have no impact on the references in the main. But if your objects are not immutable you can change it for example:\r\n\r\n    public static void appendWorld(StringBuffer s1) {\r\n        s1.append(&quot; World&quot;);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        StringBuffer s = new StringBuffer(&quot;Hello&quot;);\r\n        appendWorld(s);\r\n        System.out.println(s);\r\n    }\r\n\r\nThis will populate Hello World on the command line. If you change StringBuffer into String it will produce just Hello because String is immutable. For example:\r\n\r\n    public static void appendWorld(String s){\r\n        s = s+&quot; World&quot;;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        String s = new String(&quot;Hello&quot;);\r\n        appendWorld(s);\r\n        System.out.println(s);\r\n    }\r\n\r\nHowever you could make a wrapper for String like this which would make it able to use it with Strings:\r\n\r\n    class StringWrapper {\r\n        public String value;\r\n\r\n        public StringWrapper(String value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n\r\n    public static void appendWorld(StringWrapper s){\r\n        s.value = s.value +&quot; World&quot;;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        StringWrapper s = new StringWrapper(&quot;Hello&quot;);\r\n        appendWorld(s);\r\n        System.out.println(s.value);\r\n    }\r\n\r\nedit: i believe this is also the reason to use StringBuffer when it comes to &quot;adding&quot; two Strings because you can modifie the original object which u can&#39;t with immutable objects like String is.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":39,"user_id":238938,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/e0a190604dc3dd2ee7b66bb95c20ef7f?s=128&d=identicon&r=PG","display_name":"Rusty Shackleford","link":"https://stackoverflow.com/users/238938/rusty-shackleford"},"comment_count":0,"score":28,"creation_date":1261858762,"body_markdown":"A few corrections to some posts.\r\n\r\nC does NOT support pass by reference. It is ALWAYS pass by value. C++ does support pass by reference, but is not the default and is quite dangerous.\r\n\r\nIt doesn&#39;t matter what the value is in Java: primitive or address(roughly) of object, it is ALWAYS passed by value.\r\n\r\nIf a Java object &quot;behaves&quot; like it is being passed by reference, that is a property of mutability and has absolutely nothing to do with passing mechanisms.\r\n\r\nI am not sure why this is so confusing, perhaps because so many Java &quot;programmers&quot; are not formally trained, and thus do not understand what is really going on in memory?","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":34715,"user_id":184730,"user_type":"registered","accept_rate":72,"profile_image":"https://www.gravatar.com/avatar/8ec7cdaaf6fd5ee313cb6228f08cd67c?s=128&d=identicon&r=PG","display_name":"fastcodejava","link":"https://stackoverflow.com/users/184730/fastcodejava"},"comment_count":0,"score":21,"creation_date":1261861511,"body_markdown":"Java copies the reference by value. So if you change it to something else (e.g, using `new`) the reference does not change outside the method. For native types, it is always pass by value.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":1977,"user_id":212665,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/FNE5j.jpg?s=128&g=1","display_name":"Vinay Lodha","link":"https://stackoverflow.com/users/212665/vinay-lodha"},"comment_count":0,"score":13,"creation_date":1281356518,"body_markdown":"Have a look at this code. This code will not throw `NullPointerException`... It will print &quot;Vinay&quot;\r\n\r\n    public class Main {\r\n    \tpublic static void main(String[] args) {\r\n    \t\tString temp = &quot;Vinay&quot;;\r\n    \t\tprint(temp);\r\n    \t\tSystem.err.println(temp);\r\n    \t}\r\n    \r\n    \tprivate static void print(String temp) {\r\n    \t\ttemp = null;\r\n    \t}\r\n    }\r\n\r\n\r\nIf Java is pass by reference then it should have thrown `NullPointerException` as reference is set to Null.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":333977,"user_id":2988,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG","display_name":"J&#246;rg W Mittag","link":"https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"},"comment_count":0,"score":156,"creation_date":1283897222,"body_markdown":"I can&#39;t believe that nobody mentioned Barbara Liskov yet. When she designed CLU in 1974, she ran into this same terminology problem, and she invented the term *call by sharing* (also known as *call by object-sharing* and *call by object*) for this specific case of &quot;call by value where the value is a reference&quot;.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":7,"creation_date":1465271943}],"owner":{"reputation":2497,"user_id":1951442,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/8cfe418ece3f950aa1f91f47712565e2?s=128&d=identicon&r=PG","display_name":"Swifty McSwifterton","link":"https://stackoverflow.com/users/1951442/swifty-mcswifterton"},"comment_count":1,"score":5,"creation_date":1308874397,"body_markdown":"In my opinion, &quot;pass by value&quot; is a terrible way to singularly describe two similar but different events.  I guess they should have asked me first.\r\n\r\nWith primitives we are passing the actual value of the primitive into the method (or constructor), be it the integer &quot;5&quot;, the character &quot;c&quot;, or what have you.  That actual value then becomes its own local primitive.  But with objects, all we are doing is giving the same object an additional reference (a local reference), so that we now have two references pointing to the same object.\r\n\r\nI hope this simple explanation helps.\r\n\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":15591,"user_id":807231,"user_type":"registered","accept_rate":38,"profile_image":"https://i.stack.imgur.com/rMoCe.jpg?s=128&g=1","display_name":"Marsellus Wallace","link":"https://stackoverflow.com/users/807231/marsellus-wallace"},"comment_count":0,"score":752,"creation_date":1313112139,"body_markdown":"**This will give you some insights of how Java really works to the point that in your next discussion about Java passing by reference or passing by value you&#39;ll just smile :-)**\r\n\r\nStep one please erase from your mind that word that starts with &#39;p&#39; &quot;_ _ _ _ _ _ _&quot;, especially if you come from other programming languages. Java and &#39;p&#39; cannot be written in the same book, forum, or even txt.\r\n\r\nStep two remember that when you pass an Object into a method you&#39;re passing the Object reference and not the Object itself.\r\n\r\n - *Student*: Master, does this mean that Java is pass-by-reference?\r\n - *Master*: Grasshopper, No.\r\n\t\r\nNow think of what an Object&#39;s reference/variable does/is:\r\n \r\n 1. **A variable holds the bits that tell the JVM how to get to the referenced Object in memory (Heap).**\r\n 2. When passing arguments to a method **you ARE NOT passing the reference variable, but a copy of the bits in the reference variable**. Something like this: 3bad086a. 3bad086a represents a way to get to the passed object.\r\n 3. So you&#39;re just passing 3bad086a that it&#39;s the value of the reference.\r\n 4. You&#39;re passing the value of the reference and not the reference itself (and not the object).\r\n 5. ***This value is actually COPIED and given to the method***. \r\n\r\nIn the following (please don&#39;t try to compile/execute this...):\r\n    \r\n    1. Person person;\r\n    2. person = new Person(&quot;Tom&quot;);\r\n    3. changeName(person);\r\n    4.\r\n    5. //I didn&#39;t use Person person below as an argument to be nice\r\n    6. static void changeName(Person anotherReferenceToTheSamePersonObject) {\r\n    7.     anotherReferenceToTheSamePersonObject.setName(&quot;Jerry&quot;);\r\n    8. }\r\n\r\nWhat happens?\r\n\r\n - The variable *person* is created in line #1 and it&#39;s null at the beginning.\r\n - A new Person Object is created in line #2, stored in memory, and the variable *person* is given the reference to the Person object. That is, its address. Let&#39;s say 3bad086a.\r\n - The variable *person* holding the address of the Object is passed to the function in line #3.\r\n - In line #4 you can listen to the sound of silence \r\n - Check the comment on line #5\r\n - A method local variable -*anotherReferenceToTheSamePersonObject*- is created and then comes the magic in line #6:\r\n     - The variable/reference *person* is copied bit-by-bit and passed to *anotherReferenceToTheSamePersonObject* inside the function.\r\n     - No new instances of Person are created.\r\n     - Both &quot;*person*&quot; and &quot;*anotherReferenceToTheSamePersonObject*&quot; hold the same value of 3bad086a.\r\n     - Don&#39;t try this but person==anotherReferenceToTheSamePersonObject would be true.\r\n     - Both variables have IDENTICAL COPIES of the reference and they both refer to the same Person Object, the SAME Object on the Heap and NOT A COPY.\r\n\r\nA picture is worth a thousand words:\r\n\r\n![Pass by Value][1]\r\n\r\n**Note that the anotherReferenceToTheSamePersonObject arrows is directed towards the Object and not towards the variable person!**\r\n\r\nIf you didn&#39;t get it then just trust me and remember that it&#39;s better to say that **Java is pass by value**. Well, **pass by reference value**. Oh well, even better is ***pass-by-copy-of-the-variable-value! ;)***\r\n\r\nNow feel free to hate me but note that given this **there is no difference between passing primitive data types and Objects** when talking about method arguments.\r\n\r\nYou always pass a copy of the bits of the value of the reference!\r\n\r\n - If it&#39;s a primitive data type these bits will contain the value of the primitive data type itself.\r\n - If it&#39;s an Object the bits will contain the value of the address that tells the JVM how to get to the Object.\r\n\r\n&gt;Java is pass-by-value because inside a method you can modify the referenced Object as much as you want but no matter how hard you try you&#39;ll never be able to modify the passed variable that will keep referencing (not p _ _ _ _ _ _ _) the same Object no matter what!\r\n\r\n------\r\n\r\n&gt;The changeName function above will never be able to modify the actual content (the bit values) of the passed reference. In other word changeName cannot make Person person refer to another Object.\r\n\r\n------\r\n\r\nOf course you can cut it short and just say that  **Java is pass-by-value!**\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/Ba3hJ.jpg","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":8023,"user_id":258289,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/713a219be380d04ee57211b51e9ba326?s=128&d=identicon&r=PG","display_name":"Luigi R. Viggiano","link":"https://stackoverflow.com/users/258289/luigi-r-viggiano"},"comment_count":0,"score":7,"creation_date":1334867121,"body_markdown":"Everything is passed by value. Primitives and Object references. But objects can be changed, if their interface allows it.\r\n\r\nWhen you pass an object to a method, you are passing a reference, and the object can be modified by the method implementation. \r\n\r\n    void bithday(Person p) {\r\n        p.age++;\r\n    }\r\n\r\nThe reference of the object itself, is passed by value: you can reassign the parameter, but the change is not reflected back:\r\n\r\n\r\n    void renameToJon(Person p) { \r\n        p = new Person(&quot;Jon&quot;); // this will not work\r\n    }\r\n\r\n    jack = new Person(&quot;Jack&quot;);\r\n    renameToJon(jack);\r\n    sysout(jack); // jack is unchanged\r\n\r\nAs matter of effect, &quot;p&quot; is reference (pointer to the object) and can&#39;t be changed. \r\n\r\nPrimitive types are passed by value. Object&#39;s reference can be considered a primitive type too. \r\n\r\nTo recap, everything is passed by value.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":3637,"user_id":1426433,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/yC94U.jpg?s=128&g=1","display_name":"Fernando Espinosa","link":"https://stackoverflow.com/users/1426433/fernando-espinosa"},"comment_count":0,"score":20,"creation_date":1343842286,"body_markdown":"It&#39;s really quite, quite simple:\r\n\r\nFor a variable of primitive type (eg. `int`, `boolean`, `char`, etc...), when you use its name for a method argument, you are passing the value contained in it (`5`, `true`, or `&#39;c&#39;`). This value gets &quot;copied&quot;, and the variable retains its value even after the method invocation.\r\n\r\nFor a variable of reference type (eg. `String`, `Object`, etc...), when you use its name for a method argument, you are passing the value contained in it (*the **reference value** that &quot;points&quot; to the object*). This ***reference value*** gets &quot;copied&quot;, and the variable retains its value even after the method invocation. ***The reference variable keeps &quot;pointing&quot; to the same object.***\r\n\r\nEither way, you&#39;re always passing stuff by value.\r\n\r\n---\r\n\r\nCompare this to say C++ where you can have a method to take an `int&amp;`, or in C# where you could have take a `ref int` (although, in this case, you also have to use the `ref` modifier when passing the variable&#39;s name to the method.)","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":3550,"user_id":692626,"user_type":"registered","accept_rate":14,"profile_image":"https://www.gravatar.com/avatar/f4f5cc38634d2867922b9c98d206480b?s=128&d=identicon&r=PG","display_name":"dan carter","link":"https://stackoverflow.com/users/692626/dan-carter"},"score":8,"creation_date":1607330886},{"owner":{"reputation":316,"user_id":8218402,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-ghJX1HKMzB4/AAAAAAAAAAI/AAAAAAAAAEw/VeOdnwZp4pQ/photo.jpg?sz=128","display_name":"Liam Bohl","link":"https://stackoverflow.com/users/8218402/liam-bohl"},"score":2,"creation_date":1611617371}],"owner":{"reputation":105922,"user_id":597657,"user_type":"registered","accept_rate":99,"profile_image":"https://i.stack.imgur.com/0h5ec.jpg?s=128&g=1","display_name":"Eng.Fouad","link":"https://stackoverflow.com/users/597657/eng-fouad"},"comment_count":2,"score":1913,"creation_date":1347646975,"body_markdown":"Java always passes arguments *by value*, NOT by reference.\r\n\r\n---\r\nLet me explain this through an [example][1]:\r\n&lt;!-- language: lang-java --&gt;\r\n\r\n    public class Main {\r\n\r\n         public static void main(String[] args) {\r\n              Foo f = new Foo(&quot;f&quot;);\r\n              changeReference(f); // It won&#39;t change the reference!\r\n              modifyReference(f); // It will modify the object that the reference variable &quot;f&quot; refers to!\r\n         }\r\n\r\n         public static void changeReference(Foo a) {\r\n              Foo b = new Foo(&quot;b&quot;);\r\n              a = b;\r\n         }\r\n\r\n         public static void modifyReference(Foo c) {\r\n              c.setAttribute(&quot;c&quot;);\r\n         }\r\n\r\n    }\r\n\r\nI will explain this in steps:\r\n\r\n1. Declaring a reference named `f` of type `Foo` and assign it a new object of type `Foo` with an attribute `&quot;f&quot;`.\r\n\r\n       Foo f = new Foo(&quot;f&quot;);\r\n\r\n    ![enter image description here][2]\r\n\r\n2. From the method side, a reference of type `Foo` with a name `a` is declared and it&#39;s initially assigned `null`.\r\n\r\n       public static void changeReference(Foo a)\r\n\r\n    ![enter image description here][3]\r\n\r\n3. As you call the method `changeReference`, the reference `a` will be assigned the object which is passed as an argument.\r\n\r\n       changeReference(f);\r\n\r\n    ![enter image description here][4]\r\n\r\n4. Declaring a reference named `b` of type `Foo` and assign it a new object of type `Foo` with an attribute `&quot;b&quot;`.\r\n\r\n       Foo b = new Foo(&quot;b&quot;);\r\n\r\n    ![enter image description here][5]\r\n\r\n5. `a = b` makes a new assignment to the reference `a`, **not** `f`, of the object whose attribute is `&quot;b&quot;`.\r\n\r\n    ![enter image description here][6]\r\n\r\n6. As you call `modifyReference(Foo c)` method, a reference `c` is created and assigned the object with attribute `&quot;f&quot;`.\r\n\r\n    ![enter image description here][7]\r\n\r\n\r\n7. `c.setAttribute(&quot;c&quot;);` will change the attribute of the object that reference `c` points to it, and it&#39;s the same object that reference `f` points to it.\r\n\r\n    ![enter image description here][8]\r\n\r\n\r\nI hope you understand now how passing objects as arguments works in Java :)\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/9404727/597657\r\n  [2]: http://i.stack.imgur.com/arXpP.png\r\n  [3]: http://i.stack.imgur.com/k2LBD.png\r\n  [4]: http://i.stack.imgur.com/1Ez74.png\r\n  [5]: http://i.stack.imgur.com/Krx4N.png\r\n  [6]: http://i.stack.imgur.com/rCluu.png\r\n  [7]: http://i.stack.imgur.com/PRZPg.png\r\n  [8]: http://i.stack.imgur.com/H9Qsf.png","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":503,"user_id":1733754,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2a8cfbcf88d6e1940bd57c39d0629b6d?s=128&d=identicon&r=PG","display_name":"唐龍豹","link":"https://stackoverflow.com/users/1733754/%e5%94%90%e9%be%8d%e8%b1%b9"},"comment_count":0,"score":56,"creation_date":1350010804,"body_markdown":"No, it&#39;s not pass by reference.\r\n\r\nJava is pass by value according to the Java Language Specification:\r\n\r\n&gt; When the method or constructor is invoked (&#167;15.12), **the values of the actual argument expressions initialize newly created parameter variables**, each of the declared type, before execution of the body of the method or constructor. The Identifier that appears in the DeclaratorId may be used as a simple name in the body of the method or constructor to refer to the [formal parameter][1]. \r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.4.1","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":1,"creation_date":1375437923},{"owner":{"reputation":2507,"user_id":1678760,"user_type":"registered","accept_rate":85,"profile_image":"https://i.stack.imgur.com/6TfNt.jpg?s=128&g=1","display_name":"fatma.ekici","link":"https://stackoverflow.com/users/1678760/fatma-ekici"},"score":0,"creation_date":1378731983},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1411605707}],"owner":{"reputation":2507,"user_id":1678760,"user_type":"registered","accept_rate":85,"profile_image":"https://i.stack.imgur.com/6TfNt.jpg?s=128&g=1","display_name":"fatma.ekici","link":"https://stackoverflow.com/users/1678760/fatma-ekici"},"comment_count":3,"score":18,"creation_date":1356982546,"body_markdown":"Java is pass by constant reference where a copy of the reference is passed which means that it is basically a pass by value. You might change the contents of the reference if the class is mutable but you cannot change the reference itself. In other words the address can not be changed since it is passed by value but the content that is pointed by the address can be changed. In case of immutable classes, the content of the reference cannot be changed either.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1505642987},{"owner":{"reputation":5498,"user_id":2128327,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fdb32ecba89326d1528dbf8673e68b20?s=128&d=identicon&r=PG","display_name":"Khaled.K","link":"https://stackoverflow.com/users/2128327/khaled-k"},"score":0,"creation_date":1505666506},{"owner":{"user_type":"does_not_exist","display_name":"user6091735"},"score":0,"creation_date":1511022397}],"owner":{"reputation":5498,"user_id":2128327,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fdb32ecba89326d1528dbf8673e68b20?s=128&d=identicon&r=PG","display_name":"Khaled.K","link":"https://stackoverflow.com/users/2128327/khaled-k"},"comment_count":3,"score":8,"creation_date":1370151044,"body_markdown":"Java is always pass-by-value, the parameters are copies of what the variables passed, all Objects are defined using a reference, and reference is a variable that stores a memory address of where the object is in memory.\r\n\r\nCheck the comments to understand what happens in execution; follow numbers as they show the flow of execution ..\r\n\r\n    class Example\r\n    {\r\n        public static void test (Cat ref)\r\n        {\r\n            // 3 - &lt;ref&gt; is a copy of the reference &lt;a&gt;\r\n            // both currently reference Grumpy\r\n            System.out.println(ref.getName());\r\n            \r\n            // 4 - now &lt;ref&gt; references a new &lt;Cat&gt; object named &quot;Nyan&quot;\r\n            ref = new Cat(&quot;Nyan&quot;);\r\n            \r\n            // 5 - this should print &quot;Nyan&quot;\r\n            System.out.println( ref.getName() );\r\n        }\r\n        \r\n        public static void main (String [] args)\r\n        {\r\n            // 1 - a is a &lt;Cat&gt; reference that references a Cat object in memory with name &quot;Grumpy&quot;\r\n            Cat a = new Cat(&quot;Grumpy&quot;);\r\n            \r\n            // 2 - call to function test which takes a &lt;Cat&gt; reference\r\n            test (a);\r\n            \r\n            // 6 - function call ends, and &lt;ref&gt; life-time ends\r\n            // &quot;Nyan&quot; object has no references and the Garbage\r\n            // Collector will remove it from memory when invoked\r\n            \r\n            // 7 - this should print &quot;Grumpy&quot;\r\n            System.out.println(a.getName());\r\n        }\r\n    }\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":5336,"user_id":1255825,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/c2e0b7aaa9705618953d6fd5ecd2f160?s=128&d=identicon&r=PG","display_name":"JasonG","link":"https://stackoverflow.com/users/1255825/jasong"},"comment_count":0,"score":9,"creation_date":1372180334,"body_markdown":"In an attempt to add even more to this, I thought I&#39;d include the SCJP Study Guide section on the topic. This is from the guide that is made to pass the Sun/Oracle test on the behaviour of Java so it&#39;s a good source to use for this discussion.\r\n\r\n&gt; Passing Variables into Methods (Objective 7.3)\r\n&gt;\r\n&gt; 7.3 Determine the effect upon object references and primitive values when they are passed into methods that perform assignments or other modifying operations on the parameters.\r\n\r\n&gt; Methods can be declared to take primitives and/or object references. You need to know how (or if) the caller&#39;s variable can be affected by the called method. The difference between object reference and primitive variables, when passed into methods, is huge and important. To understand this section, you&#39;ll need to be comfortable with the assignments section covered in the first part of this chapter.\r\n\r\n&gt; Passing Object Reference Variables\r\n\r\n&gt; When you pass an object variable into a method, you must keep in mind that you&#39;re passing the object reference, and not the actual object itself. Remember that a reference variable holds bits that represent (to the underlying VM) a way to get to a specific object in memory (on the heap). More importantly, you must remember that you aren&#39;t even passing the actual reference variable, but rather a copy of the reference variable. A copy of a variable means you get a copy of the bits in that variable, so when you pass a reference variable, you&#39;re passing a copy of the bits representing how to get to a specific object. In other words, both the caller and the called method will now have identical copies of the reference, and thus both will refer to the same exact (not a copy) object on the heap.\r\n\r\n&gt; For this example, we&#39;ll use the Dimension class from the java.awt package:\r\n\r\n\r\n    1. import java.awt.Dimension;\r\n    2. class ReferenceTest {\r\n    3.     public static void main (String [] args) {\r\n    4.         Dimension d = new Dimension(5,10);\r\n    5.         ReferenceTest rt = new ReferenceTest();\r\n    6.         System.out.println(&quot;Before modify() d.height = &quot; + d.height);\r\n    7.         rt.modify(d);\r\n    8.         System.out.println(&quot;After modify() d.height = &quot;\r\n    9.     }\r\n    10.\r\n    11.\r\n    12.\r\n    13.   }\r\n    14. }\r\n\r\n\r\n&gt; When we run this class, we can see that the modify() method was indeed able to modify the original (and only) Dimension object created on line 4.\r\n\r\n&lt;pre&gt;\r\nC:\\Java Projects\\Reference&gt;java ReferenceTest\r\nBefore modify() d.height = 10\r\ndim = 11\r\nAfter modify() d.height = 11\r\n&lt;/pre&gt;\r\n\r\n&gt; Notice when the Dimension object on line 4 is passed to the modify() method, any changes to the object that occur inside the method are being made to the object whose reference was passed. In the preceding example, reference variables d and dim both point to the same object.\r\n\r\n&gt; Does Java Use Pass-By-Value Semantics?\r\n\r\n&gt; If Java passes objects by passing the reference variable instead, does that mean Java uses pass-by-reference for objects? Not exactly, although you&#39;ll often hear and read that it does. Java is actually pass-by-value for all variables running within a single VM. Pass-by-value means pass-by-variable-value. And that means, pass-by-copy-of- the-variable! (There&#39;s that word copy again!)\r\n\r\n&gt; It makes no difference if you&#39;re passing primitive or reference variables, you are always passing a copy of the bits in the variable. So for a primitive variable, you&#39;re passing a copy of the bits representing the value. For example, if you pass an int variable with the value of 3, you&#39;re passing a copy of the bits representing 3. The called method then gets its own copy of the value, to do with it what it likes.\r\n\r\n&gt; And if you&#39;re passing an object reference variable, you&#39;re passing a copy of the bits representing the reference to an object. The called method then gets its own copy of the reference variable, to do with it what it likes. But because two identical reference variables refer to the exact same object, if the called method modifies the object (by invoking setter methods, for example), the caller will see that the object the caller&#39;s original variable refers to has also been changed. In the next section, we&#39;ll look at how the picture changes when we&#39;re talking about primitives.\r\n\r\n&gt; The bottom line on pass-by-value: the called method can&#39;t change the caller&#39;s variable, although for object reference variables, the called method can change the object the variable referred to. What&#39;s the difference between changing the variable and changing the object? For object references, it means the called method can&#39;t reassign the caller&#39;s original reference variable and make it refer to a different object, or null. For example, in the following code fragment,\r\n\r\n            void bar() {\r\n               Foo f = new Foo();\r\n               doStuff(f);\r\n            }\r\n            void doStuff(Foo g) {\r\n               g.setName(&quot;Boo&quot;);\r\n               g = new Foo();\r\n            }\r\n\r\n&gt; reassigning g does not reassign f! At the end of the bar() method, two Foo objects have been created, one referenced by the local variable f and one referenced by\r\nthe local (argument) variable g. Because the doStuff() method has a copy of the reference variable, it has a way to get to the original Foo object, for instance to call the setName() method. But, the doStuff() method does not have a way to get to the f reference variable. So doStuff() can change values within the object f refers to, but doStuff() can&#39;t change the actual contents (bit pattern) of f. In other words, doStuff() can change the state of the object that f refers to, but it can&#39;t make f refer to a different object!\r\n\r\n&gt; Passing Primitive Variables\r\n\r\n&gt; Let&#39;s look at what happens when a primitive variable is passed to a method:\r\n \r\n\r\n    class ReferenceTest {\r\n        public static void main (String [] args) {\r\n          int a = 1;\r\n          ReferenceTest rt = new ReferenceTest();\r\n          System.out.println(&quot;Before modify() a = &quot; + a);\r\n          rt.modify(a);\r\n          System.out.println(&quot;After modify() a = &quot; + a);\r\n        }\r\n        void modify(int number) {\r\n          number = number + 1;\r\n          System.out.println(&quot;number = &quot; + number);\r\n        }\r\n    }\r\n\r\n&gt; In this simple program, the variable a is passed to a method called modify(),\r\nwhich increments the variable by 1. The resulting output looks like this:\r\n\r\n      Before modify() a = 1\r\n      number = 2\r\n      After modify() a = 1\r\n\r\n&gt; Notice that a did not change after it was passed to the method. Remember, it was a copy of a that was passed to the method. When a primitive variable is passed to a method, it is passed by value, which means pass-by-copy-of-the-bits-in-the-variable.\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":211,"user_id":1912964,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/16f779b71407273a7684844925d322f7?s=128&d=identicon&r=PG","display_name":"Gaurav","link":"https://stackoverflow.com/users/1912964/gaurav"},"comment_count":0,"score":33,"creation_date":1373437887,"body_markdown":"Java has only pass by value. A very simple example to validate this.\r\n\r\n    public void test() {\r\n        MyClass obj = null;\r\n        init(obj);\r\n        //After calling init method, obj still points to null\r\n        //this is because obj is passed as value and not as reference.\r\n    }\r\n    private void init(MyClass objVar) {\r\n        objVar = new MyClass();\r\n    }\r\n\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":2651,"user_id":3613893,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/XUhbb.jpg?s=128&g=1","display_name":"Kachna","link":"https://stackoverflow.com/users/3613893/kachna"},"score":0,"creation_date":1456571187},{"owner":{"reputation":14558,"user_id":1833961,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/WzG31.png?s=128&g=1","display_name":"bvdb","link":"https://stackoverflow.com/users/1833961/bvdb"},"score":0,"creation_date":1456590494}],"owner":{"reputation":14558,"user_id":1833961,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/WzG31.png?s=128&g=1","display_name":"bvdb","link":"https://stackoverflow.com/users/1833961/bvdb"},"comment_count":2,"score":8,"creation_date":1376734191,"body_markdown":"Shortest answer :)\r\n\r\n - Java has pass-by-value (and pass-reference-by-value.) \r\n - **C# also has pass-by-reference**\r\n\r\nIn C# this is accomplished with the &quot;out&quot; and &quot;ref&quot; keywords. \r\n\r\nPass By Reference: The variable is passed in such a way that **a reassignment inside the method is reflected even outside the method.**\r\n\r\nHere follows **an example of passing-by-reference (C#)**.\r\nThis feature does not exist in java.\r\n\r\n    class Example\r\n    {\r\n        static void InitArray(out int[] arr)\r\n        {\r\n            arr = new int[5] { 1, 2, 3, 4, 5 };\r\n        }\r\n    \r\n        static void Main()\r\n        {\r\n            int[] someArray;\r\n            InitArray(out someArray);\r\n\r\n            // This is true !\r\n            boolean isTrue = (someArray[0] == 1);\r\n        }\r\n    }\r\n\r\nSee also: [MSDN library (C#): passing arrays by ref and out][1]\r\n\r\nSee also: [MSDN library (C#): passing by by value and by reference][2]\r\n\r\n\r\n  [1]: http://msdn.microsoft.com/en-us/library/szasx730.aspx &quot;MSDN library: passing arrays by ref and out&quot;\r\n  [2]: http://msdn.microsoft.com/en-us/library/0f66670z.aspx &quot;MSDN library: passing by reference&quot;","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":13466,"user_id":543572,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/cEl37.jpg?s=128&g=1","display_name":"James Drinkard","link":"https://stackoverflow.com/users/543572/james-drinkard"},"comment_count":0,"score":5,"creation_date":1378326161,"body_markdown":"The bottom line on pass-by-value: the called method can&#39;t change the caller&#39;s\r\nvariable, although for object reference variables, the called method can change the\r\nobject the variable referred to. What&#39;s the difference between changing the variable\r\nand changing the object? For object references, it means the called method can&#39;t\r\nreassign the caller&#39;s original reference variable and make it refer to a different object,\r\nor null. \r\n\r\nI took this code and explanation from a book on Java Certification and made some minor changes.  \r\nI think it&#39;s a\r\ngood illustration to the pass by value of an object.  In the code below, \r\nreassigning g does not reassign f! At the end of the bar() method, two Foo objects\r\nhave been created, one referenced by the local variable f and one referenced by\r\nthe local (argument) variable g. \r\n\r\nBecause the doStuff() method has a copy of the reference variable, it has a way to get \r\nto the original Foo object, for instance to call\r\nthe setName() method. But, the doStuff() method does not have a way to get to\r\nthe f reference variable. So doStuff() can change values within the object f refers\r\nto, but doStuff() can&#39;t change the actual contents (bit pattern) of f. In other\r\nwords, doStuff() can change the state of the object that f refers to, but it can&#39;t\r\nmake f refer to a different object!\r\n\r\n    package test.abc;\r\n    \r\n    public class TestObject {\r\n    \r\n    \t/**\r\n    \t * @param args\r\n    \t */\r\n    \tpublic static void main(String[] args) {\r\n    \t\tbar();\r\n    \t}\r\n    \t\r\n    \tstatic void bar() {\r\n    \t\tFoo f = new Foo();\r\n    \t\tSystem.out.println(&quot;Object reference for f: &quot; + f);\r\n    \t\tf.setName(&quot;James&quot;);\r\n    \t\tdoStuff(f);\r\n    \t\tSystem.out.println(f.getName());\r\n    \t\t//Can change the state of an object variable in f, but can&#39;t change the object reference for f.\r\n    \t\t//You still have 2 foo objects.\r\n    \t\tSystem.out.println(&quot;Object reference for f: &quot; + f);\r\n    \t\t}\r\n    \t\r\n    \tstatic void doStuff(Foo g) {\r\n    \t\t\tg.setName(&quot;Boo&quot;);\r\n    \t\t\tg = new Foo();\r\n    \t\t\tSystem.out.println(&quot;Object reference for g: &quot; + g);\r\n    \t\t}\r\n    }\r\n    \r\n    \r\n    package test.abc;\r\n    \r\n    public class Foo {\r\n    \tpublic String name = &quot;&quot;;\r\n    \r\n    \tpublic String getName() {\r\n    \t\treturn name;\r\n    \t}\r\n    \r\n    \tpublic void setName(String name) {\r\n    \t\tthis.name = name;\r\n    \t}\r\n    \r\n    }\r\n\r\n**Note that the object reference has not changed in the console output below:**\r\n\r\n**Console output:**\r\n\r\nObject reference for f: test.abc.Foo@62f72617\r\n\r\nObject reference for g: test.abc.Foo@4fe5e2c3\r\n\r\nBoo\r\nObject reference for f: test.abc.Foo@62f72617 ","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":156,"user_id":10095010,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c140fa45e66b53ac69c2663832990b77?s=128&d=identicon&r=PG&f=1","display_name":"Dude156","link":"https://stackoverflow.com/users/10095010/dude156"},"score":2,"creation_date":1599945752}],"owner":{"reputation":1480,"user_id":1917489,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/92dda5ac1578dacfd6240c893629d2e7?s=128&d=identicon&r=PG","display_name":"cutmancometh","link":"https://stackoverflow.com/users/1917489/cutmancometh"},"comment_count":1,"score":254,"creation_date":1378899270,"body_markdown":"I feel like arguing about &quot;pass-by-reference vs pass-by-value&quot; is not super-helpful.\r\n\r\nIf you say, &quot;Java is pass-by-whatever (reference/value)&quot;, in either case, you&#39;re not provide a complete answer. Here&#39;s some additional information that will hopefully aid in understanding what&#39;s happening in memory.\r\n\r\nCrash course on stack/heap before we get to the Java implementation:\r\nValues go on and off the stack in a nice orderly fashion, like a stack of plates at a cafeteria.\r\nMemory in the heap (also known as dynamic memory) is haphazard and disorganized. The JVM just finds space wherever it can, and frees it up as the variables that use it are no longer needed.\r\n\r\nOkay. First off, local primitives go on the stack. So this code:\r\n\r\n    int x = 3;\r\n    float y = 101.1f;\r\n    boolean amIAwesome = true;\r\n\r\nresults in this:\r\n\r\n![primitives on the stack][1]\r\n\r\n\r\nWhen you declare and instantiate an object. The actual object goes on the heap. What goes on the stack? The address of the object on the heap. C++ programmers would call this a pointer, but some Java developers are against the word &quot;pointer&quot;. Whatever. Just know that the address of the object goes on the stack.\r\n\r\nLike so:\r\n\r\n    int problems = 99;\r\n    String name = &quot;Jay-Z&quot;;\r\n\r\n![a b*7ch aint one!][2]\r\n\r\nAn array is an object, so it goes on the heap as well. And what about the objects in the array? They get their own heap space, and the address of each object goes inside the array.\r\n\r\n    JButton[] marxBros = new JButton[3];\r\n    marxBros[0] = new JButton(&quot;Groucho&quot;);\r\n    marxBros[1] = new JButton(&quot;Zeppo&quot;);\r\n    marxBros[2] = new JButton(&quot;Harpo&quot;);\r\n\r\n![marx brothers][3]\r\n\r\nSo, what gets passed in when you call a method? If you pass in an object, what you&#39;re actually passing in is the address of the object. Some might say the &quot;value&quot; of the address, and some say it&#39;s just a reference to the object. This is the genesis of the holy war between &quot;reference&quot; and &quot;value&quot; proponents. What you call it isn&#39;t as important as that you understand that what&#39;s getting passed in is the address to the object.\r\n\r\n    private static void shout(String name){\r\n        System.out.println(&quot;There goes &quot; + name + &quot;!&quot;);\r\n    }\r\n\r\n    public static void main(String[] args){\r\n        String hisName = &quot;John J. Jingleheimerschmitz&quot;;\r\n        String myName = hisName;\r\n        shout(myName);\r\n    }\r\n\r\nOne String gets created and space for it is allocated in the heap, and the address to the string is stored on the stack and given the identifier `hisName`, since the address of the second String is the same as the first, no new String is created and no new heap space is allocated, but a new identifier is created on the stack. Then we call `shout()`: a new stack frame is created and a new identifier, `name` is created and assigned the address of the already-existing String.\r\n\r\n![la da di da da da da][4]\r\n\r\nSo, value, reference? You say &quot;potato&quot;.\r\n\r\n  [1]: http://i.stack.imgur.com/7nGKU.png\r\n  [2]: http://i.stack.imgur.com/yTIYp.png\r\n  [3]: http://i.stack.imgur.com/v2b33.png\r\n  [4]: http://i.stack.imgur.com/q0prc.png","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":9006,"user_id":1931858,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f95ed4b484adea71cd0b6b157c6b5b94?s=128&d=identicon&r=PG","display_name":"user1931858","link":"https://stackoverflow.com/users/1931858/user1931858"},"comment_count":0,"score":8,"creation_date":1379901791,"body_markdown":"Java passes parameters by value, but for object variables, the values are essentially references to objects. Since arrays are objects the following [example code][1] shows the difference.\r\n\r\n    public static void dummyIncrease(int[] x, int y)\r\n    {\r\n        x[0]++;\r\n        y++;\r\n    }\r\n    public static void main(String[] args)\r\n    {\r\n        int[] arr = {3, 4, 5};\r\n        int b = 1;\r\n        dummyIncrease(arr, b);\r\n        // arr[0] is 4, but b is still 1\r\n    }\r\n\r\n    main()\r\n      arr +---+       +---+---+---+\r\n          | # | ----&gt; | 3 | 4 | 5 |\r\n          +---+       +---+---+---+\r\n      b   +---+             ^\r\n          | 1 |             | \r\n          +---+             |\r\n                            |\r\n    dummyIncrease()         |\r\n      x   +---+             |\r\n          | # | ------------+\r\n          +---+      \r\n      y   +---+ \r\n          | 1 | \r\n          +---+ \r\n\r\n\r\n  [1]: http://theoryapp.com/parameter-passing-in-java/","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":904,"user_id":1910406,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ca8d21b587e70c7a655a49c8870ff82c?s=128&d=identicon&r=PG","display_name":"Ganesh","link":"https://stackoverflow.com/users/1910406/ganesh"},"comment_count":0,"score":87,"creation_date":1381996470,"body_markdown":"**Java is always pass by value, not pass by reference** \n\nFirst of all, we need to understand what pass by value and pass by reference are. \n\n**Pass by value means that you are making a copy in memory of the actual parameter&#39;s value that is passed in. This is a copy of the contents of the actual parameter**.\n\n**Pass by reference (also called pass by address) means that a copy of the address of the actual parameter is stored**.\n\nSometimes Java can give the illusion of pass by reference. Let&#39;s see how it works by using the example below:\n\n\n    public class PassByValue {\n        public static void main(String[] args) {\n            Test t = new Test();\n            t.name = &quot;initialvalue&quot;;\n            new PassByValue().changeValue(t);\n            System.out.println(t.name);\n        }\n        \n        public void changeValue(Test f) {\n            f.name = &quot;changevalue&quot;;\n        }\n    }\n    \n    class Test {\n        String name;\n    }\n\nThe output of this program is: \n\n&gt;     changevalue\n\n\nLet&#39;s understand step by step:\n\n    Test t = new Test();\n\nAs we all know it will create an object in the heap and return the reference value back to t. For example, suppose the value of t is `0x100234` (we don&#39;t know the actual JVM internal value, this is just an example) .\n\n\n![first illustration][1]\n\n    new PassByValue().changeValue(t);\n\nWhen passing reference t to the function it will not directly pass the actual reference value of object test,  but it will create a copy of t and then pass it to the function. Since it is **passing by value**, it passes a copy of the variable rather than the actual reference of it. Since we said the value of t was `0x100234`, both t and f will have the same value and hence they will point to the same object.\n\n![second illustration][2]\n\nIf you change anything in the function using reference f it will modify the existing contents of the object. That is why we got the output `changevalue`,   which is updated in the function.\n\nTo understand this more clearly, consider the following example:\n\n    public class PassByValue {\n        public static void main(String[] args) {\n            Test t = new Test();\n            t.name = &quot;initialvalue&quot;;\n            new PassByValue().changeRefence(t);\n            System.out.println(t.name);\n        }\n        \n        public void changeRefence(Test f) {\n            f = null;\n        }\n    }\n    \n    class Test {\n        String name;\n    }\n\nWill this throw a `NullPointerException`? No, because it only passes a copy of the reference. \nIn the case of passing by reference, it could have thrown a `NullPointerException`, as seen below:\n\n![third illustration][3]\n\n\nHopefully this will help.\n\n  [1]: http://i.stack.imgur.com/AVrhI.png\n  [2]: http://i.stack.imgur.com/WwdPh.png\n  [3]: http://i.stack.imgur.com/jH6KP.png","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":107659,"user_id":179850,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/6b2c535fac79e482b71f15de561f55ca?s=128&d=identicon&r=PG","display_name":"Gray","link":"https://stackoverflow.com/users/179850/gray"},"score":0,"creation_date":1511901234}],"owner":{"reputation":390,"user_id":1907916,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/QmRij.jpg?s=128&g=1","display_name":"Bhushan","link":"https://stackoverflow.com/users/1907916/bhushan"},"comment_count":1,"score":2,"creation_date":1384407825,"body_markdown":"The Java programming language passes arguments only by value, that is,\r\nyou cannot change the argument value in the calling method from within\r\nthe called method.\r\n\r\n\r\n----------\r\n\r\n\r\nHowever, when an object instance is passed as an argument to a method,\r\nthe value of the argument is not the object itself but a reference to the\r\nobject. You can change the contents of the object in the called method but\r\nnot the object reference.\r\n\r\n\r\n----------\r\n\r\n\r\nTo many people, this looks like pass-by-reference, and behaviorally, it has\r\nmuch in common with pass-by-reference. However, there are two reasons\r\nthis is inaccurate.\r\n\r\n    \r\n\r\n - Firstly, the ability to change the thing passed into a\r\nmethod only applies to objects, not primitive values. \r\n\r\n - Second, the actual\r\nvalue associated with a variable of object type is the reference to the\r\nobject, and not the object itself. This is an important distinction in other\r\nways, and if clearly understood, is entirely supporting of the point that\r\nthe Java programming language passes arguments by value.\r\n\r\n----------\r\n\r\n\r\n    The following code example illustrates this point:\r\n    1 public class PassTest {\r\n    2\r\n    3   // Methods to change the current values\r\n    4   public static void changeInt(int value) {\r\n    5     value = 55;\r\n    6  }\r\n    7   public static void changeObjectRef(MyDate ref) {\r\n    8     ref = new MyDate(1, 1, 2000);\r\n    9  }\r\n    10   public static void changeObjectAttr(MyDate ref) {\r\n    11     ref.setDay(4);\r\n    12   }\r\n    13\r\n    14 public static void main(String args[]) {\r\n    15     MyDate date;\r\n    16     int val;\r\n    17\r\n    18     // Assign the int\r\n    19     val = 11;\r\n    20     // Try to change it\r\n    21     changeInt(val);\r\n    22     // What is the current value?\r\n    23     System.out.println(&quot;Int value is: &quot; + val);\r\n    24\r\n    25 // Assign the date\r\n    26     date = new MyDate(22, 7, 1964);\r\n    27     // Try to change it\r\n    28     changeObjectRef(date);\r\n    29     // What is the current value?\r\n    30 System.out.println(&quot;MyDate: &quot; + date);\r\n    31\r\n    32 // Now change the day attribute\r\n    33     // through the object reference\r\n    34     changeObjectAttr(date);\r\n    35     // What is the current value?\r\n    36 System.out.println(&quot;MyDate: &quot; + date);\r\n    37   }\r\n    38 }\r\n\r\n\r\n----------\r\n\r\n\r\n    This code outputs the following:\r\n    java PassTest\r\n    Int value is: 11\r\n    MyDate: 22-7-1964\r\n    MyDate: 4-7-1964\r\n    The MyDate object is not changed by the changeObjectRef method;\r\n    however, the changeObjectAttr method changes the day attribute of the\r\n    MyDate object.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":9424,"user_id":922581,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/WQKkm.jpg?s=128&g=1","display_name":"Srle","link":"https://stackoverflow.com/users/922581/srle"},"comment_count":0,"score":88,"creation_date":1385049852,"body_markdown":"In java everything is reference, so when you have something like:\r\n\t`Point pnt1 = new Point(0,0);` Java does following:\r\n\r\n1.\tCreates new Point object\r\n2.\tCreates new Point reference and initialize that reference to *point (refer to)* on previously created Point object.\r\n3.   From here, through Point object life, you will access to that object through pnt1\r\n     reference. So we can say that in Java you manipulate object through its reference.&lt;br&gt;\r\n \r\n\r\n![enter image description here][1]\r\n\r\n\r\n**Java doesn&#39;t pass method arguments by reference; it passes them by value.** I will use example from [this site][2]: \r\n\r\n    public static void tricky(Point arg1, Point arg2) {\r\n      arg1.x = 100;\r\n      arg1.y = 100;\r\n      Point temp = arg1;\r\n      arg1 = arg2;\r\n      arg2 = temp;\r\n    }\r\n    public static void main(String [] args) {\r\n      Point pnt1 = new Point(0,0);\r\n      Point pnt2 = new Point(0,0);\r\n      System.out.println(&quot;X1: &quot; + pnt1.x + &quot; Y1: &quot; +pnt1.y); \r\n      System.out.println(&quot;X2: &quot; + pnt2.x + &quot; Y2: &quot; +pnt2.y);\r\n      System.out.println(&quot; &quot;);\r\n      tricky(pnt1,pnt2);\r\n      System.out.println(&quot;X1: &quot; + pnt1.x + &quot; Y1:&quot; + pnt1.y); \r\n      System.out.println(&quot;X2: &quot; + pnt2.x + &quot; Y2: &quot; +pnt2.y);  \r\n    }\r\n\r\nFlow of the program:\r\n\r\n    Point pnt1 = new Point(0,0);\r\n    Point pnt2 = new Point(0,0);\r\n\r\nCreating two different Point object with two different reference associated.\r\n![enter image description here][3]\r\n\r\n\r\n    System.out.println(&quot;X1: &quot; + pnt1.x + &quot; Y1: &quot; +pnt1.y); \r\n    System.out.println(&quot;X2: &quot; + pnt2.x + &quot; Y2: &quot; +pnt2.y);\r\n    System.out.println(&quot; &quot;);\r\n\r\nAs expected output will be:\r\n\t\r\n\r\n    X1: 0     Y1: 0\r\n    X2: 0     Y2: 0\r\n\r\n**On this line &#39;pass-by-value&#39; goes into the play...** &lt;br&gt;\r\n\r\n    tricky(pnt1,pnt2);           public void tricky(Point arg1, Point arg2);\r\n\r\nReferences `pnt1` and `pnt2` are **passed by value** to the tricky method, which means that now yours references `pnt1` and `pnt2` have their `copies` named `arg1` and `arg2`.So `pnt1` and `arg1` *points* to the same object. (Same for the `pnt2` and `arg2`)\r\n![enter image description here][4]\r\n\r\n\r\nIn the `tricky` method:\r\n   \r\n\r\n     arg1.x = 100;\r\n     arg1.y = 100;\r\n![enter image description here][5]\r\n\r\n\r\nNext in the `tricky` method\r\n\r\n    Point temp = arg1;\r\n    arg1 = arg2;\r\n    arg2 = temp;\r\n\r\nHere, you first create new `temp` Point reference which will *point* on same place like `arg1` reference. Then you move reference `arg1` to *point* to the same place like `arg2` reference.\r\nFinally `arg2` will *point* to the same place like `temp`.\r\n\r\n![enter image description here][6]\r\n\r\n\r\nFrom here scope of `tricky` method is gone and you don&#39;t have access any more to the references: `arg1`, `arg2`, `temp`. **But important note is that everything you do with these references when they are &#39;in life&#39; will permanently affect object on which they are *point* to.** \r\n\r\nSo after executing method `tricky`, when you return to `main`, you have this situation:\r\n![enter image description here][7]\r\n\r\n\r\nSo now, completely execution of program will be:\r\n\r\n    X1: 0         Y1: 0\r\n    X2: 0         Y2: 0\r\n    X1: 100       Y1: 100\r\n    X2: 0         Y2: 0\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/jM54f.png\r\n  [2]: http://www.javaworld.com/javaqa/2000-05/03-qa-0526-pass.html\r\n  [3]: http://i.stack.imgur.com/5LIKC.png\r\n  [4]: http://i.stack.imgur.com/qd1GH.png\r\n  [5]: http://i.stack.imgur.com/o4WT0.png\r\n  [6]: http://i.stack.imgur.com/fX5Q3.png\r\n  [7]: http://i.stack.imgur.com/LRETe.png","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":57841,"user_id":2396539,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/nGigV.png?s=128&g=1","display_name":"Aniket Thakur","link":"https://stackoverflow.com/users/2396539/aniket-thakur"},"comment_count":0,"score":4,"creation_date":1386059205,"body_markdown":"**Java passes references to objects by value.**\r\n\r\nSo if any modification is done to the Object to which the reference argument points it will be reflected back on the original object.\r\n\r\nBut if the reference argument point to another Object still the original reference will point to original Object.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":2148,"user_id":216248,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/e897c9afcfcec3fef9ed461438ad3d38?s=128&d=identicon&r=PG","display_name":"karatedog","link":"https://stackoverflow.com/users/216248/karatedog"},"comment_count":0,"score":73,"creation_date":1386937393,"body_markdown":"A reference is always a value when represented, no matter what language you use.\r\n-----\r\n\r\nGetting an outside of the box view, let&#39;s look at Assembly or some low level memory management. At the CPU level a _reference_ to anything immediately becomes a _value_ if it gets written to memory or to one of the CPU registers. (That is why _pointer_ is a good definition. It is a value, which has a purpose at the same time).\r\n\r\nData in memory has a **Location** and at that location there is a value (byte,word, whatever). In Assembly we have a convenient solution to give a **Name** to certain **Location** (aka variable), but when compiling the code, the assembler simply replaces **Name** with the designated location just like your browser replaces domain names with IP addresses.\r\n\r\nDown to the core it is technically impossible to pass a reference to anything in any language without representing it (when it immediately becomes a value).\r\n\r\nLets say we have a variable Foo, its **Location** is at the 47th byte in memory and its **Value** is 5. We have another variable **Ref2Foo** which is at 223rd byte in memory, and its value will be 47. This Ref2Foo might be a technical variable, not explicitly created by the program. If you just look at 5 and 47 without any other information, you will see just two **Values**.\r\nIf you use them as references then to reach to `5` we have to travel:\r\n\r\n    (Name)[Location] -&gt; [Value at the Location]\r\n    ---------------------\r\n    (Ref2Foo)[223]  -&gt; 47\r\n    (Foo)[47]       -&gt; 5\r\n\r\nThis is how jump-tables work. \r\n\r\nIf we want to call a method/function/procedure with Foo&#39;s value, there are a few possible way to pass the variable to the method, depending on the **language** and its several method invocation modes:\r\n\r\n1. 5 gets copied to one of the CPU registers (ie. EAX).\r\n2. 5 gets PUSHd to the stack.\r\n3. 47 gets copied to one of the CPU registers\r\n4. 47 PUSHd to the stack.\r\n5. 223 gets copied to one of the CPU registers.\r\n6. 223 gets PUSHd to the stack.\r\n\r\nIn every cases above a value - a **copy** of an existing value - has been created, it is now upto the receiving method to handle it. When you write &quot;Foo&quot; inside the method, it is either read out from EAX, or automatically  **dereferenced**, or double dereferenced, the process depends on how the language works and/or what the type of Foo dictates. This is hidden from the developer until she circumvents the dereferencing process. So a _reference_ is a _value_ when represented, because a reference is a value that has to be processed (at language level).\r\n\r\nNow we have passed Foo to the method:\r\n\r\n- in case 1. and 2. if you change Foo (`Foo = 9`) it only affects local scope as you have a copy of the Value. From inside the method we cannot even determine where in memory the original Foo was located.\r\n- in case 3. and 4. if you use default language constructs and change Foo (`Foo = 11`), it could change Foo globally (depends on the language, ie. Java or like Pascal&#39;s `procedure findMin(x, y, z: integer; `**var m**`: integer);`). However if the language allows you to circumvent the dereference process, you can change `47`, say to `49`. At that point Foo seems to have been changed if you read it, because you have changed the **local pointer** to it. And if you were to modify this Foo inside the method (`Foo = 12`) you will probably FUBAR the execution of the program (aka. segfault) because you will write to a different memory than expected, you can even modify an area that is destined to hold executable program and writing to it will modify running code (Foo is now not at `47`). BUT Foo&#39;s value of `47` did not change globally, only the one inside the method, because `47` was also a copy to the method.\r\n- in case 5. and 6. if you modify `223` inside the method it creates the same mayhem as in 3. or 4. (a pointer, pointing to a now bad value, that is again used as a pointer) but this is still a local problem, as 223 was **copied**. However if you are able to dereference `Ref2Foo` (that is `223`), reach to and modify the pointed value `47`, say, to `49`, it will affect Foo **globally**, because in this case the methods got a copy of `223`  but the referenced `47` exists only once, and changing that to `49` will lead every `Ref2Foo` double-dereferencing to a wrong value.\r\n\r\nNitpicking on insignificant details, even languages that do pass-by-reference will pass values to functions, but those functions know that they have to use it for dereferencing purposes. This pass-the-reference-as-value is just hidden from the programmer because it is practically useless and the terminology is only _pass-by-reference_.\r\n\r\nStrict _pass-by-value_ is also useless, it would mean that a 100 Mbyte array should have to be copied every time we call a method with the array as argument, therefore Java cannot be stricly pass-by-value. Every language would pass a reference to this huge array (as a value) and either employs copy-on-write mechanism if that array can be changed locally inside the method or allows the method (as Java does) to modify the array globally (from the caller&#39;s view) and a few languages allows to modify the Value of the reference itself.\r\n\r\nSo in short and in Java&#39;s own terminology, Java is _pass-by-value_ where _value_ can be: either a **real value** or a **value** that is a representation of a **reference**. \r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":18222,"user_id":779111,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/808763efea1a993c937ac96e7e83032f?s=128&d=identicon&r=PG","display_name":"JAN","link":"https://stackoverflow.com/users/779111/jan"},"comment_count":0,"score":7,"creation_date":1390407794,"body_markdown":"Mr @Scott Stanchfield wrote an excellent answer. Here is the class that would you to verify\r\nexactly what he meant:\r\n\r\n    public class Dog {\r\n\r\n        String dog ;\r\n        static int x_static;\r\n        int y_not_static;\r\n\r\n        public String getName()\r\n        {\r\n            return this.dog;\r\n        }\r\n\r\n        public Dog(String dog)\r\n        {\r\n            this.dog = dog;\r\n        }\r\n\r\n        public void setName(String name)\r\n        {\r\n            this.dog = name;\r\n        }\r\n\r\n        public static void foo(Dog someDog)\r\n        {\r\n            x_static = 1;\r\n            // y_not_static = 2;  // not possible !!\r\n            someDog.setName(&quot;Max&quot;);     // AAA\r\n            someDog = new Dog(&quot;Fifi&quot;);  // BBB\r\n            someDog.setName(&quot;Rowlf&quot;);   // CCC\r\n        }\r\n\r\n        public static void main(String args[])\r\n        {\r\n            Dog myDog = new Dog(&quot;Rover&quot;);\r\n            foo(myDog);\r\n            System.out.println(myDog.getName());\r\n        }\r\n    }\r\n\r\nSo, we pass from main() a dog called `Rover`, then we assign a new address to the pointer that we passed, but at the end, the name of the dog is not `Rover`, and not `Fifi`, and certainly not `Rowlf`, but `Max`.\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":249530,"user_id":438154,"user_type":"registered","accept_rate":98,"profile_image":"https://www.gravatar.com/avatar/827d86026ddc062f449ccedece1c52da?s=128&d=identicon&r=PG&f=1","display_name":"Sotirios Delimanolis","link":"https://stackoverflow.com/users/438154/sotirios-delimanolis"},"comment_count":0,"score":50,"creation_date":1404370091,"body_markdown":"I thought I&#39;d contribute this answer to add more details from the Specifications.\r\n\r\nFirst, https://stackoverflow.com/questions/373419/whats-the-difference-between-passing-by-reference-vs-passing-by-value\r\n\r\n&gt; Passing by reference means the called functions&#39; parameter will be the\r\n&gt; same as the callers&#39; passed argument (not the value, but the identity\r\n&gt; - the variable itself). \r\n&gt; \r\n&gt; Pass by value means the called functions&#39; parameter will be a copy of\r\n&gt; the callers&#39; passed argument.\r\n\r\nOr from wikipedia, [on the subject of pass-by-reference][1]\r\n\r\n&gt; In call-by-reference evaluation (also referred to as\r\n&gt; pass-by-reference), a function receives an implicit reference to a\r\n&gt; variable used as argument, rather than a copy of its value. This\r\n&gt; typically means that the function can modify (i.e. assign to) the\r\n&gt; variable used as argument—something that will be seen by its caller.\r\n\r\nAnd [on the subject of pass-by-value][2]\r\n\r\n&gt; In call-by-value, the argument expression is evaluated, and the\r\n&gt; resulting value is bound to the corresponding variable in the function [...]. \r\n&gt; If the function or procedure is able to assign values to its\r\n&gt; parameters, only its local copy is assigned [...].\r\n\r\nSecond, we need to know what Java uses in its method invocations. The [Java Language Specification][3] states\r\n\r\n&gt; When the method or constructor is invoked (&#167;15.12), **the values of the\r\n&gt; actual argument expressions initialize newly created parameter\r\n&gt; variables**, each of the declared type, before execution of the body of\r\n&gt; the method or constructor.\r\n\r\nSo it assigns (or binds) the value of the argument to the corresponding parameter variable. \r\n\r\n**What is the value of the argument?**\r\n\r\nLet&#39;s consider reference types, the [Java Virtual Machine Specification][4] states\r\n\r\n&gt; There are three kinds of **reference types**: class types, array types,\r\n&gt; and interface types. **Their values are references to dynamically\r\n&gt; created class instances, arrays, or class instances or arrays that\r\n&gt; implement interfaces, respectively.**\r\n\r\nThe [Java Language Specification][5] also states\r\n\r\n&gt; **The reference values (often just references) are pointers to these objects**, and a special null reference, which refers to no object.\r\n\r\nThe value of an argument (of some reference type) is a pointer to an object. Note that a variable, an invocation of a method with a reference type return type, and an instance creation expression (`new ...`) all resolve to a reference type value.\r\n\r\nSo\r\n\r\n    public void method (String param) {}\r\n    ...\r\n    String var = new String(&quot;ref&quot;);\r\n    method(var);\r\n    method(var.toString());\r\n    method(new String(&quot;ref&quot;));\r\n\r\nall bind the value of a reference to a `String` instance to the method&#39;s newly created parameter, `param`. This is exactly what the definition of pass-by-value describes. As such, **Java is pass-by-value**.\r\n\r\n**The fact that you can follow the reference to invoke a method or access a field of the referenced object is completely irrelevant to the conversation.** The definition of pass-by-reference was\r\n\r\n&gt; This typically means that the function can modify (i.e. assign to) the\r\n&gt; variable used as argument—something that will be seen by its caller.\r\n\r\nIn Java, modifying the variable means reassigning it. In Java, if you reassigned the variable within the method, it would go unnoticed to the caller. **Modifying the object referenced by the variable is a different concept entirely.** \r\n\r\n\r\n----------\r\n\r\nPrimitive values are also defined in the Java Virtual Machine Specification, [here][6]. The value of the type is the corresponding integral or floating point value, encoded appropriately (8, 16, 32, 64, etc. bits).\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Call_by_reference#Call_by_reference\r\n  [2]: http://en.wikipedia.org/wiki/Call_by_value#Call_by_value\r\n  [3]: http://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.4.1\r\n  [4]: http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.4\r\n  [5]: http://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.3.1\r\n  [6]: http://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.3","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":163,"user_id":1893773,"user_type":"registered","accept_rate":43,"profile_image":"https://i.stack.imgur.com/xczD7.jpg?s=128&g=1","display_name":"Dustin Deus","link":"https://stackoverflow.com/users/1893773/dustin-deus"},"comment_count":0,"score":6,"creation_date":1405023559,"body_markdown":"**Understand it in 2 Steps:** \r\n\r\nYou can&#39;t change the reference to the object itself but you can work with this passed parameter as a reference to the object.\r\n\r\nIf you want to change the value behind the reference you will only declare a new variable on the stack with the same name &#39;d&#39;. Look at the references with the sign `@` and you will find out that the reference has been changed.\r\n\r\n    public static void foo(Dog d) {\r\n      d.Name = &quot;belly&quot;;\r\n      System.out.println(d); //Reference: Dog@1540e19d\r\n            \r\n      d = new Dog(&quot;wuffwuff&quot;);\r\n      System.out.println(d); //Dog@677327b6\r\n    }\r\n    public static void main(String[] args) throws Exception{\r\n      Dog lisa = new Dog(&quot;Lisa&quot;);\r\n      foo(lisa);\r\n      System.out.println(lisa.Name); //belly\r\n    }\r\n\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":39,"user_id":3961865,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4c8d0b9d0961f151b248afb35ee746e0?s=128&d=identicon&r=PG&f=1","display_name":"Michał Żbikowski","link":"https://stackoverflow.com/users/3961865/micha%c5%82-%c5%bbbikowski"},"comment_count":0,"score":20,"creation_date":1411604618,"body_markdown":"Throughout all the answers we see that Java pass-by-value or rather as @Gevorg \r\nwrote: &quot;pass-by-copy-of-the-variable-value&quot; and this is the idea that we should have in mind all the time. \r\n\r\nI am focusing on examples that helped me understand the idea and it is rather addendum to previous answers.\r\n\r\nFrom [1] In Java you always are passing arguments by copy; that is you&#39;re always creating a new instance of the value inside the function. But there are certain behaviors that can make you think you&#39;re passing by reference.\r\n\r\n- Passing by copy: When a variable is passed to a method/function, a copy is made (sometimes we hear that when you pass primitives, you&#39;re making copies).\r\n\r\n- Passing by reference: When a variable is passed to a method/function, the code in the method/function operates on the original variable (You&#39;re still passing by copy, but references to values inside the complex object are parts of both versions of the variable, both the original and the version inside the function. The complex objects themselves are being copied, but the internal references are being retained)\r\n\r\nExamples of Passing by copy/ by value\r\n--------------\r\n**Example from [ref 1]**\r\n \r\n    void incrementValue(int inFunction){\r\n      inFunction ++;\r\n      System.out.println(&quot;In function: &quot; + inFunction);\r\n    }\r\n\r\n    int original = 10;\r\n    System.out.print(&quot;Original before: &quot; + original);\r\n    incrementValue(original);\r\n    System.out.println(&quot;Original after: &quot; + original);\r\n\r\n    We see in the console:\r\n     &gt; Original before: 10\r\n     &gt; In Function: 11\r\n     &gt; Original after: 10 (NO CHANGE)\r\n\r\n         \r\n\r\n**Example from [ref 2]**\r\n\r\n&gt; shows nicely the mechanism\r\n[watch max 5 min](https://www.youtube.com/watch?v=W2ysz_6AyJE&amp;list=PL6C11012B1B464EC5#t=502)\r\n\r\n\r\n(Passing by reference) pass-by-copy-of-the-variable-value\r\n----\r\n**Example from [ref 1]**\r\n(remember that an array is an object)\r\n\r\n    void incrementValu(int[] inFuncion){\r\n      inFunction[0]++;\r\n      System.out.println(&quot;In Function: &quot; + inFunction[0]);\r\n    }\r\n\r\n    int[] arOriginal = {10, 20, 30};\r\n    System.out.println(&quot;Original before: &quot; + arOriginal[0]);\r\n    incrementValue(arOriginal[]);\r\n    System.out.println(&quot;Original before: &quot; + arOriginal[0]);\r\n\r\n    We see in the console:\r\n      &gt;Original before: 10\r\n      &gt;In Function: 11\r\n      &gt;Original before: 11 (CHANGE)\r\n\r\nThe complex objects themselves are being copied, but the internal references are being retained.\r\n\r\n \r\n\r\n**Example from[ref 3]**\r\n\r\n    package com.pritesh.programs;\r\n\r\n    class Rectangle {\r\n      int length;\r\n      int width;\r\n\r\n      Rectangle(int l, int b) {\r\n        length = l;\r\n        width = b;\r\n      }\r\n\r\n      void area(Rectangle r1) {\r\n        int areaOfRectangle = r1.length * r1.width;\r\n        System.out.println(&quot;Area of Rectangle : &quot; \r\n                                + areaOfRectangle);\r\n      }\r\n    }\r\n\r\n    class RectangleDemo {\r\n      public static void main(String args[]) {\r\n        Rectangle r1 = new Rectangle(10, 20);\r\n        r1.area(r1);\r\n      }\r\n    }\r\n\r\nThe area of the rectangle is 200 and the length=10 and width=20\r\n\r\n\r\n**Last thing** I would like to share was this moment of the lecture:\r\n**[Memory Allocation](https://www.youtube.com/watch?v=W8nNdNZ40EQ#t=1206)**\r\nwhich I found very helpful in understanding the Java passing by value or rather “pass-by-copy-of-the-variable-value” as @Gevorg has written.\r\n\r\n1. [REF 1 Lynda.com](http://www.lynda.com/Android-tutorials/Passing-arguments-reference-value/86005/94989-4.html)\r\n2. [REF 2 Professor Mehran Sahami](http://see.stanford.edu/see/courseinfo.aspx?coll=824a47e1-135f-4508-a5aa-866adcae1111)\r\n    * [watch max 5 min](https://www.youtube.com/watch?v=W2ysz_6AyJE&amp;list=PL6C11012B1B464EC5#t=502)\r\n    * [Memory Allocation](https://www.youtube.com/watch?v=W8nNdNZ40EQ#t=1206)\r\n3. [REF 3 c4learn](http://www.c4learn.com/)\r\n   * [passing-object-as-parameter-to-method](http://www.c4learn.com/java/java-passing-object-as-parameter-to-method/)","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":1473,"user_id":2997238,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b70a115c69ba348bcdbbb86656aedd1c?s=128&d=identicon&r=PG","display_name":"drew7721","link":"https://stackoverflow.com/users/2997238/drew7721"},"comment_count":0,"score":6,"creation_date":1412570069,"body_markdown":"There is a workaround in Java for the reference. Let me explain by this example:\r\n\r\n    public class Yo {\r\n    public static void foo(int x){\r\n        System.out.println(x); //out 2\r\n        x = x+2;\r\n        System.out.println(x); // out 4\r\n    }\r\n    public static void foo(int[] x){\r\n        System.out.println(x[0]); //1\r\n        x[0] = x[0]+2;\r\n        System.out.println(x[0]); //3\r\n    }\r\n    public static void main(String[] args) {\r\n        int t = 2;\r\n        foo(t);\r\n        System.out.println(t); // out 2 (t did not change in foo)\r\n        \r\n        int[] tab = new int[]{1};\r\n        foo(tab);\r\n        System.out.println(tab[0]); // out 3 (tab[0] did change in foo)\r\n    }}\r\n\r\nI hope this helps!","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":1127,"user_id":1684768,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3afd4bcec79eec82c803f3d9bd9bad9b?s=128&d=identicon&r=PG","display_name":"mrres1","link":"https://stackoverflow.com/users/1684768/mrres1"},"score":1,"creation_date":1422149421},{"owner":{"reputation":528,"user_id":2791256,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4dc44bdb58ae4af9f2257f10bd5be1de?s=128&d=identicon&r=PG&f=1","display_name":"MrBackend","link":"https://stackoverflow.com/users/2791256/mrbackend"},"score":2,"creation_date":1426773186}],"owner":{"reputation":75,"user_id":1695011,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f0f943c7f0c3f7066550f55c3e8d3ff6?s=128&d=identicon&r=PG","display_name":"Ramprasad","link":"https://stackoverflow.com/users/1695011/ramprasad"},"comment_count":2,"score":8,"creation_date":1419274099,"body_markdown":"**Simple program**\r\n\r\n\r\n    import java.io.*;\r\n    class Aclass\r\n    {\r\n\t    public int a;\r\n    }\r\n    public class test\r\n    {\r\n\t    public static void foo_obj(Aclass obj)\r\n\t    {\r\n\t\t    obj.a=5;\r\n\t    }\r\n\t    public static void foo_int(int a)\r\n\t    {\r\n\t\t    a=3;\r\n\t    }\r\n\t    public static void main(String args[])\r\n\t    {\r\n\t\t    //test passing an object\r\n\t\t    Aclass ob = new Aclass();\r\n\t\t    ob.a=0;\r\n\t\t    foo_obj(ob);\r\n\t\t    System.out.println(ob.a);//prints 5\r\n\t\t\r\n\t\t    //test passing an integer\r\n\t\t    int i=0;\r\n\t\t    foo_int(i);\r\n\t\t    System.out.println(i);//prints 0\r\n\t    }\r\n    }\r\n\r\nFrom a C/C++ programmer&#39;s point of view, java uses pass by value, so for primitive data types (int, char etc) changes in the function does not reflect in the calling function. But when you pass an object and in the function you change its data members or call member functions which can change the state of the object, the calling function will get the changes.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":424,"user_id":3380611,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/qTs5i.png?s=128&g=1","display_name":"Mox","link":"https://stackoverflow.com/users/3380611/mox"},"score":0,"creation_date":1484739511}],"owner":{"reputation":447,"user_id":1282030,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4e29605d797ea99b5e4ab2a460d4a14b?s=128&d=identicon&r=PG","display_name":"Jo&#227;o Oliveira","link":"https://stackoverflow.com/users/1282030/jo%c3%a3o-oliveira"},"comment_count":1,"score":5,"creation_date":1424976272,"body_markdown":"Java passes everything by value!!\r\n\r\n//create an object by passing in a name and age:\r\n\r\n    PersonClass variable1 = new PersonClass(&quot;Mary&quot;, 32);\r\n    \r\n    PersonClass variable2;\r\n\r\n//Both variable2 and variable1 now reference the same object\r\n\r\n    variable2 = variable1; \r\n\r\n\r\n    PersonClass variable3 = new PersonClass(&quot;Andre&quot;, 45);\r\n\r\n\r\n// variable1 now points to variable3\r\n\r\n    variable1 = variable3;\r\n\r\n//WHAT IS OUTPUT BY THIS?\r\n\r\n    System.out.println(variable2);\r\n    System.out.println(variable1);\r\n\r\n    Mary 32\r\n    Andre 45\r\n\r\nif you could understand this example we r done.\r\notherwise, please visit this webPage for detailed explanation:\r\n\r\n[webPage][1]\r\n\r\n\r\n  [1]: http://www.programmerinterview.com/index.php/java-questions/does-java-pass-by-reference-or-by-value/","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":6244,"user_id":112670,"user_type":"registered","accept_rate":62,"profile_image":"https://i.stack.imgur.com/zzLom.jpg?s=128&g=1","display_name":"Christian","link":"https://stackoverflow.com/users/112670/christian"},"comment_count":0,"score":25,"creation_date":1426714508,"body_markdown":"Java passes parameters by VALUE, and by value **ONLY**.\r\n\r\n**To cut long story short:**\r\n\r\n&gt; For those coming from C#: **THERE IS NO &quot;out&quot; parameter.**\r\n \r\n&gt; For those coming from PASCAL: **THERE IS NO &quot;var&quot; parameter**.\r\n\r\nIt means you can&#39;t change the reference from the object itself, but you can always change the object&#39;s properties.\r\n\r\nA workaround is to use `StringBuilder` parameter instead `String`. And you can always use arrays!","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":10060,"user_id":3250087,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/67b956d69ff2169289c6d1a2d7d36531?s=128&d=identicon&r=PG&f=1","display_name":"spiderman","link":"https://stackoverflow.com/users/3250087/spiderman"},"comment_count":0,"score":53,"creation_date":1431465847,"body_markdown":"Let me try to explain my understanding with the help of four examples. Java is pass-by-value, and not pass-by-reference\r\n\r\n/**\r\n\r\n  Pass By Value\r\n  \r\n  In Java, all parameters are passed by value, i.e. assigning a method argument is not visible to the caller.\r\n \r\n */\r\n\r\n**Example 1:**\r\n\r\n    public class PassByValueString {\r\n    \tpublic static void main(String[] args) {\r\n    \t\tnew PassByValueString().caller();\r\n    \t}\r\n    \r\n    \tpublic void caller() {\r\n    \t\tString value = &quot;Nikhil&quot;;\r\n    \t\tboolean valueflag = false;\r\n    \t\tString output = method(value, valueflag);\r\n    \t\t/*\r\n    \t\t * &#39;output&#39; is insignificant in this example. we are more interested in\r\n    \t\t * &#39;value&#39; and &#39;valueflag&#39;\r\n    \t\t */\r\n    \t\tSystem.out.println(&quot;output : &quot; + output);\r\n    \t\tSystem.out.println(&quot;value : &quot; + value);\r\n    \t\tSystem.out.println(&quot;valueflag : &quot; + valueflag);\r\n    \r\n    \t}\r\n    \r\n    \tpublic String method(String value, boolean valueflag) {\r\n    \t\tvalue = &quot;Anand&quot;;\r\n    \t\tvalueflag = true;\r\n    \t\treturn &quot;output&quot;;\r\n    \t}\r\n    }\r\n\r\n**Result**\r\n\r\n    output : output\r\n    value : Nikhil\r\n    valueflag : false\r\n\r\n**Example 2:**\r\n\r\n/**\r\n * \r\n * Pass By Value\r\n *\r\n */\r\n\r\n    public class PassByValueNewString {\r\n    \tpublic static void main(String[] args) {\r\n    \t\tnew PassByValueNewString().caller();\r\n    \t}\r\n    \r\n    \tpublic void caller() {\r\n    \t\tString value = new String(&quot;Nikhil&quot;);\r\n    \t\tboolean valueflag = false;\r\n    \t\tString output = method(value, valueflag);\r\n    \t\t/*\r\n    \t\t * &#39;output&#39; is insignificant in this example. we are more interested in\r\n    \t\t * &#39;value&#39; and &#39;valueflag&#39;\r\n    \t\t */\r\n    \t\tSystem.out.println(&quot;output : &quot; + output);\r\n    \t\tSystem.out.println(&quot;value : &quot; + value);\r\n    \t\tSystem.out.println(&quot;valueflag : &quot; + valueflag);\r\n    \r\n    \t}\r\n    \r\n    \tpublic String method(String value, boolean valueflag) {\r\n    \t\tvalue = &quot;Anand&quot;;\r\n    \t\tvalueflag = true;\r\n    \t\treturn &quot;output&quot;;\r\n    \t}\r\n    }\r\n\r\n**Result**\r\n\r\n    output : output\r\n    value : Nikhil\r\n    valueflag : false\r\n\r\n**Example 3:**\r\n\r\n/**\r\n  This &#39;Pass By Value has a feeling of &#39;Pass By Reference&#39;\r\n  \r\n  Some people say primitive types and &#39;String&#39; are &#39;pass by value&#39;\r\n  and objects are &#39;pass by reference&#39;.\r\n  \r\n  But from this example, we can understand that it is infact pass by value only,\r\n  keeping in mind that here we are passing the reference as the value.\r\n  ie: reference is passed by value.\r\n  That&#39;s why are able to change and still it holds true after the local scope.\r\n  But we cannot change the actual reference outside the original scope.\r\n  what that means is demonstrated by next example of PassByValueObjectCase2.\r\n\r\n */\r\n\r\n    public class PassByValueObjectCase1 {\r\n    \t\r\n    \tprivate class Student {\r\n    \t\tint id;\r\n    \t\tString name;\r\n    \t\tpublic Student() {\r\n    \t\t}\r\n    \t\tpublic Student(int id, String name) {\r\n    \t\t\tsuper();\r\n    \t\t\tthis.id = id;\r\n    \t\t\tthis.name = name;\r\n    \t\t}\r\n    \t\tpublic int getId() {\r\n    \t\t\treturn id;\r\n    \t\t}\r\n    \t\tpublic void setId(int id) {\r\n    \t\t\tthis.id = id;\r\n    \t\t}\r\n    \t\tpublic String getName() {\r\n    \t\t\treturn name;\r\n    \t\t}\r\n    \t\tpublic void setName(String name) {\r\n    \t\t\tthis.name = name;\r\n    \t\t}\r\n    \t\t@Override\r\n    \t\tpublic String toString() {\r\n    \t\t\treturn &quot;Student [id=&quot; + id + &quot;, name=&quot; + name + &quot;]&quot;;\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \tpublic static void main(String[] args) {\r\n    \t\tnew PassByValueObjectCase1().caller();\r\n    \t}\r\n    \r\n    \tpublic void caller() {\r\n    \t\tStudent student = new Student(10, &quot;Nikhil&quot;);\r\n    \t\tString output = method(student);\r\n    \t\t/*\r\n    \t\t * &#39;output&#39; is insignificant in this example. we are more interested in\r\n    \t\t * &#39;student&#39;\r\n    \t\t */\r\n    \t\tSystem.out.println(&quot;output : &quot; + output);\r\n    \t\tSystem.out.println(&quot;student : &quot; + student);\r\n    \t}\r\n    \r\n    \tpublic String method(Student student) {\r\n    \t\tstudent.setName(&quot;Anand&quot;);\r\n    \t\treturn &quot;output&quot;;\r\n    \t}\r\n    }\r\n\r\n**Result**\r\n\r\n    output : output\r\n    student : Student [id=10, name=Anand]\r\n\r\n**Example 4:**\r\n\r\n/**\r\n  \r\n  In addition to what was mentioned in Example3 (PassByValueObjectCase1.java),  we cannot change the actual reference outside the original scope.&quot;\r\n\r\nNote: I am not pasting the code for `private class Student`. The class definition for `Student` is same as Example3.\r\n  \r\n */\r\n\r\n    public class PassByValueObjectCase2 {\r\n    \t\r\n    \tpublic static void main(String[] args) {\r\n    \t\tnew PassByValueObjectCase2().caller();\r\n    \t}\r\n    \r\n    \tpublic void caller() {\r\n    \t\t// student has the actual reference to a Student object created\r\n    \t\t// can we change this actual reference outside the local scope? Let&#39;s see\r\n    \t\tStudent student = new Student(10, &quot;Nikhil&quot;);\r\n    \t\tString output = method(student);\r\n    \t\t/*\r\n    \t\t * &#39;output&#39; is insignificant in this example. we are more interested in\r\n    \t\t * &#39;student&#39;\r\n    \t\t */\r\n    \t\tSystem.out.println(&quot;output : &quot; + output);\r\n    \t\tSystem.out.println(&quot;student : &quot; + student); // Will it print Nikhil or Anand?\r\n    \t}\r\n    \r\n    \tpublic String method(Student student) {\r\n    \t\tstudent = new Student(20, &quot;Anand&quot;);\r\n    \t\treturn &quot;output&quot;;\r\n    \t}\r\n    \t\r\n    }\r\n\r\n**Result**\r\n\r\n    output : output\r\n    student : Student [id=10, name=Nikhil]\r\n\r\n\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":343,"user_id":4957499,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/n2458.jpg?s=128&g=1","display_name":"Placinta Alexandru","link":"https://stackoverflow.com/users/4957499/placinta-alexandru"},"comment_count":0,"score":17,"creation_date":1453379915,"body_markdown":"Java always uses **call by value**. That means the method gets copy of all parameter values.\r\n\r\n\r\nConsider next 3 situations:\r\n## 1) Trying to change primitive variable ##\r\n\r\n    public static void increment(int x) { x++; }\r\n\r\n    int a = 3;\r\n    increment(a);\r\n\r\nx will copy value of a and will increment x, a remains the same\r\n## 2) Trying to change primitive field of an object ##\r\n\r\n    public static void increment(Person p) { p.age++; }\r\n\r\n    Person pers = new Person(20); // age = 20\r\n    increment(pers);\r\n\r\np will copy reference value of pers and will increment age field, variables are referencing to the same object so age is changed\r\n## 3) Trying to change reference value of reference variables ##\r\n\r\n    public static void swap(Person p1, Person p2) {\r\n        Person temp = p1;\r\n        p1 = p2;\r\n        p2 = temp;\r\n    }\r\n\r\n    Person pers1 = new Person(10);\r\n    Person pers2 = new Person(20);\r\n    swap(pers1, pers2);\r\n\r\nafter calling swap p1, p2 copy reference values from pers1 and pers2, are swapping with values, so pers1 and pers2 remain the same\r\n\r\nSo. you can change only fields of objects in method passing copy of reference value to this object.\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":1744,"user_id":5903395,"user_type":"registered","profile_image":"https://i.stack.imgur.com/sIL9v.jpg?s=128&g=1","display_name":"Gee Bee","link":"https://stackoverflow.com/users/5903395/gee-bee"},"comment_count":0,"score":17,"creation_date":1458142169,"body_markdown":"So many long answers. Let me give a simple one:\r\n\r\n* Java always passes everything by value\r\n* that means also references are passed by value\r\n\r\nIn short, you can not modify value of any parameter passed, but you can call methods or change attributes of an object reference passed.\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":1122,"user_id":2164304,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/n6m6j.jpg?s=128&g=1","display_name":"OverCoder","link":"https://stackoverflow.com/users/2164304/overcoder"},"comment_count":0,"score":10,"creation_date":1461594748,"body_markdown":"I made this little diagram that shows how the data gets created and passed\r\n\r\n[![Diagram of how data is created and passed][1]][1]\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/77ppY.png\r\n\r\nNote: Primitive values are passed as a value, the first reference to to that value is the method&#39;s argument\r\n\r\nThat means:\r\n\r\n - You can change the value of `myObject` *inside* the function\r\n - But you can&#39;t change what `myObject` references to, inside the function, because `point` is not `myObject`\r\n - Remember, both `point` and `myObject` are **references**, different **references**, however, those references **point** at the same `new Point(0,0)`","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":2,"creation_date":1465272308},{"owner":{"reputation":346,"user_id":658018,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/81ea98333954e3e8d764a3fdb3353703?s=128&d=identicon&r=PG","display_name":"Cdaragorn","link":"https://stackoverflow.com/users/658018/cdaragorn"},"score":7,"creation_date":1472677500}],"owner":{"reputation":346,"user_id":658018,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/81ea98333954e3e8d764a3fdb3353703?s=128&d=identicon&r=PG","display_name":"Cdaragorn","link":"https://stackoverflow.com/users/658018/cdaragorn"},"comment_count":2,"score":8,"creation_date":1463063785,"body_markdown":"A lot of the confusion surrounding this issue comes from the fact that Java has attempted to redefine what &quot;Pass by value&quot; and &quot;Pass by reference&quot; mean. It&#39;s important to understand that these are [Industry Terms][1], and cannot be correctly understood outside of that context. They are meant to help you as you code and are valuable to understand, so let&#39;s first go over what they mean. \r\n\r\nA good description of both can be found [here][2].\r\n\r\n**Pass By Value** The value the function received is a copy of the object the caller is using. It is entirely unique to the function and anything you do to that object will only be seen within the function.\r\n\r\n**Pass By Reference** The value the function received is a reference to the object the caller is using. Anything the function does to the object that value refers to will be seen by the caller and it will be working with those changes from that point on.\r\n\r\nAs is clear from those definitions, the fact that the reference is passed by value is irrelevant. If we were to accept that definition, then these terms become meaningless and all languages everywhere are only Pass By Value.\r\n\r\nNo matter how you pass the reference in, it can only ever be passed by value. That isn&#39;t the point. The point is that you passed a reference to your own object to the function, not a copy of it. The fact that you can throw away the reference you received is irrelevant. Again, if we accepted that definition, these terms become meaningless and everyone is always passing by value.\r\n\r\nAnd no, C++&#39;s special &quot;pass by reference&quot; syntax is not the exclusive definition of pass by reference. It is purely a convenience syntax meant to make it so that you don&#39;t need to use pointer syntax after passing the pointer in. It is still passing a pointer, the compiler is just hiding that fact from you. It also still passes that pointer BY VALUE, the compiler is just hiding that from you.\r\n\r\nSo, with this understanding, we can look at Java and see that it actually has both. All Java primitive types are always pass by value because you receive a copy of the caller&#39;s object and cannot modify their copy. All Java reference types are always pass by reference because you receive a reference to the caller&#39;s object and can directly modify their object. \r\n\r\nThe fact that you cannot modify the caller&#39;s reference has nothing to do with pass by reference and is true in every language that supports pass by reference.\r\n\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Jargon\r\n  [2]: http://cplus.about.com/od/glossar1/g/passbyrefdefn.htm","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":8358,"user_id":2067492,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/54af3ad01b032767b05a7e98fede6d6e?s=128&d=identicon&r=PG","display_name":"matt","link":"https://stackoverflow.com/users/2067492/matt"},"score":0,"creation_date":1465978440},{"owner":{"reputation":447,"user_id":1195605,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1c0c6dd89063aab67029880f16afb019?s=128&d=identicon&r=PG","display_name":"Ravi Sanwal","link":"https://stackoverflow.com/users/1195605/ravi-sanwal"},"score":0,"creation_date":1466090219},{"owner":{"reputation":8358,"user_id":2067492,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/54af3ad01b032767b05a7e98fede6d6e?s=128&d=identicon&r=PG","display_name":"matt","link":"https://stackoverflow.com/users/2067492/matt"},"score":0,"creation_date":1466098885},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":1,"creation_date":1501688464}],"owner":{"reputation":447,"user_id":1195605,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1c0c6dd89063aab67029880f16afb019?s=128&d=identicon&r=PG","display_name":"Ravi Sanwal","link":"https://stackoverflow.com/users/1195605/ravi-sanwal"},"comment_count":4,"score":8,"creation_date":1465268477,"body_markdown":"There is a very simple way to understand this.\r\nLets&#39;s take C++ pass by reference.\r\n\r\n    #include &lt;iostream&gt;\r\n    using namespace std;\r\n    \r\n    class Foo {\r\n        private:\r\n            int x;\r\n        public:\r\n            Foo(int val) {x = val;}\r\n            void foo()\r\n            {\r\n                cout&lt;&lt;x&lt;&lt;endl;\r\n            }\r\n    };\r\n    \r\n    void bar(Foo&amp; ref)\r\n    {\r\n        ref.foo();\r\n        ref = *(new Foo(99));\r\n        ref.foo();\r\n    }\r\n    \r\n    int main()\r\n    {\r\n       Foo f = Foo(1);\r\n       f.foo();\r\n       bar(f);\r\n       f.foo();\r\n    \r\n       return 0;\r\n    }\r\nWhat is the outcome?\r\n&lt;pre&gt;\r\n1\r\n1\r\n99\r\n99\r\n&lt;/pre&gt;\r\nSo, after bar() assigned a new value to a &quot;reference&quot; passed in, it actually changed the one which was passed in from main itself, explaining the last f.foo() call from main printing 99.\r\n\r\nNow, lets see what java says.\r\n\r\n    public class Ref {\r\n    \r\n    \tprivate static class Foo {\r\n    \t\tprivate int x;\r\n    \r\n    \t\tprivate Foo(int x) {\r\n    \t\t\tthis.x = x;\r\n    \t\t}\r\n    \r\n    \t\tprivate void foo() {\r\n    \t\t\tSystem.out.println(x);\r\n    \t\t}\r\n    \t}\r\n    \r\n    \tprivate static void bar(Foo f) {\r\n    \t\tf.foo();\r\n    \t\tf = new Foo(99);\r\n    \t\tf.foo();\r\n    \t}\r\n    \r\n    \tpublic static void main(String[] args) {\r\n    \t\tFoo f = new Foo(1);\r\n    \t\tSystem.out.println(f.x);\r\n    \t\tbar(f);\r\n    \t\tSystem.out.println(f.x);\r\n    \t}\r\n    \r\n    }\r\n\r\nIt says:\r\n&lt;pre&gt;\r\n1\r\n1\r\n99\r\n1\r\n&lt;/pre&gt;\r\nVoil&#224;, the reference of Foo in main that was passed to bar, is still unchanged!\r\n\r\nThis example clearly shows that java is not the same as C++ when we say &quot;pass by reference&quot;. Essentially, java is passing &quot;references&quot; as &quot;values&quot; to functions, meaning java is pass by value.\r\n\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":2328,"user_id":1767316,"user_type":"registered","accept_rate":42,"profile_image":"https://www.gravatar.com/avatar/96c6ce7849238a742734b338dda77a98?s=128&d=identicon&r=PG","display_name":"user1767316","link":"https://stackoverflow.com/users/1767316/user1767316"},"comment_count":0,"score":47,"creation_date":1469348999,"body_markdown":"**In Java only references are passed and are passed by value:**\r\n\r\nJava arguments are **all passed by value** (the reference is copied when used by the method) :\r\n\r\nIn the case of primitive types, Java behaviour is simple: \r\nThe value is copied in another instance of the primitive type.\r\n\r\nIn case of Objects, this is the same: \r\nObject variables are pointers (buckets) holding only Object’s **address** that was created using the &quot;new&quot; keyword, and are copied like primitive types.\r\n\r\nThe behaviour can appear different from primitive types: Because the copied object-variable contains the same address (to the same Object).\r\nObject&#39;s **content/members** might still be modified within a method and later access outside, giving the illusion that the (containing) Object itself was passed by reference. \r\n\r\n&quot;String&quot; Objects appear to be a good **counter-example** to the urban legend saying that &quot;Objects are passed by reference&quot;:\r\n\r\nIn effect, using a method, you will never be able, to update the value of a String passed as argument:\r\n\r\nA String Object, holds characters by an array declared **final** that can&#39;t be modified.\r\nOnly the address of the Object might be replaced by another using &quot;new&quot;. \r\nUsing &quot;new&quot; to update the variable, will not let the Object be accessed from outside, since the variable was initially passed by value and copied.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":182,"user_id":5128145,"user_type":"registered","accept_rate":0,"profile_image":"https://graph.facebook.com/996648693713404/picture?type=large","display_name":"Vivek Kumar","link":"https://stackoverflow.com/users/5128145/vivek-kumar"},"comment_count":0,"score":6,"creation_date":1474912519,"body_markdown":"Java does manipulate objects by reference, and all object variables are references. However, Java doesn&#39;t pass method arguments by reference; it passes them by value.\n\nTake the&#160;badSwap()&#160;method for example:\n\n        public void badSwap(int var1, int\n     var2{ int temp = var1; var1 = var2; var2 =\n     temp; }\n\nWhen&#160;badSwap()&#160;returns, the variables passed as arguments will still hold their original values. The method will also fail if we change the arguments type from&#160;int&#160;to&#160;Object, since Java passes object references by value as well. Now, here is where it gets tricky:\n\n \n\n  \n\n \n\n    public void tricky(Point arg1, Point   arg2)\n    { arg1.x = 100; arg1.y = 100; Point temp = arg1; arg1 = arg2; arg2 = temp; }\n    public static void main(String [] args) { \n    \n     Point pnt1 = new Point(0,0); Point pnt2\n     = new Point(0,0); System.out.println(&quot;X:\n     &quot; + pnt1.x + &quot; Y: &quot; +pnt1.y);\n    \n         System.out.println(&quot;X: &quot; + pnt2.x + &quot; Y:\n     &quot; +pnt2.y); System.out.println(&quot; &quot;);\n    \n         tricky(pnt1,pnt2);\n     System.out.println(&quot;X: &quot; + pnt1.x + &quot; Y:&quot; + pnt1.y);\n    \n         System.out.println(&quot;X: &quot; + pnt2.x + &quot; Y: &quot; +pnt2.y); }\n\nIf we execute this&#160;main()&#160;method, we see the following output:\n\nX: 0 Y: 0 X: 0 Y: 0 X: 100 Y: 100 X: 0 Y: 0\n\nThe method successfully alters the value ofpnt1, even though it is passed by value; however, a swap of&#160;pnt1&#160;and&#160;pnt2&#160;fails! This is the major source of confusion. In themain()&#160;method,&#160;pnt1&#160;and&#160;pnt2&#160;are nothing more than object references. When you passpnt1&#160;and&#160;pnt2&#160;to the&#160;tricky()&#160;method, Java passes the references by value just like any other parameter. This means the references passed to the method are actually&#160;copies&#160;of the original references. Figure 1 below shows two references pointing to the same object after Java passes an object to a method.\n\nJava copies and passes the&#160;reference&#160;by value, not the object. Thus, method manipulation will alter the objects, since the references point to the original objects. But since the references are copies, swaps will fail. As Figure 2 illustrates, the method references swap, but not the original references. Unfortunately, after a method call, you are left with only the unswapped original references. For a swap to succeed outside of the method call, we need to swap the original references, not the copies.\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":0,"creation_date":1501687539}],"owner":{"reputation":5480,"user_id":5797598,"user_type":"registered","accept_rate":14,"profile_image":"https://www.gravatar.com/avatar/b446fe87f0452dd308732aa765933981?s=128&d=identicon&r=PG&f=1","display_name":"khakishoiab","link":"https://stackoverflow.com/users/5797598/khakishoiab"},"comment_count":1,"score":11,"creation_date":1475142824,"body_markdown":"A simple test to check whether a language supports pass-by-reference is simply writing a traditional swap.\r\nCan you write a traditional swap(a,b) method/function in Java?\r\n\r\nA traditional swap method or function takes two arguments and swaps them such that variables passed into the function are changed outside the function. Its basic structure looks like\r\n\r\n(Non-Java) Basic swap function structure\r\n\r\n    swap(Type arg1, Type arg2) {\r\n        Type temp = arg1;\r\n        arg1 = arg2;\r\n        arg2 = temp;\r\n    }\r\n\r\nIf you can write such a method/function in your language such that calling\r\n\r\n    Type var1 = ...;\r\n    Type var2 = ...;\r\n    swap(var1,var2);\r\nactually switches the values of the variables var1 and var2, the language supports pass-by-reference.\r\nBut **Java does not allow such a thing** as it supports passing the values only and not pointers or references.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":12865,"user_id":4990642,"user_type":"registered","accept_rate":53,"profile_image":"https://i.stack.imgur.com/xY0PD.jpg?s=128&g=1","display_name":"snr","link":"https://stackoverflow.com/users/4990642/snr"},"comment_count":0,"score":14,"creation_date":1479142308,"body_markdown":"The major cornerstone knowledge must be the quoted one,\r\n&gt; When an object reference is passed to a method, the reference itself\r\n&gt; is passed by use of *call-by-value*. However, since the value being\r\n&gt; passed refers to an object, the copy of that value will still refer to\r\n&gt; the same object referred to by its corresponding argument.\r\n\r\nJava: A Beginner&#39;s Guide, Sixth Edition, Herbert Schildt","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":29,"user_id":7051714,"user_type":"registered","accept_rate":80,"profile_image":"https://lh4.googleusercontent.com/-vZe0zTb8eFY/AAAAAAAAAAI/AAAAAAAAAQg/B1JSBnMmGI0/photo.jpg?sz=128","display_name":"Taleev Aalam","link":"https://stackoverflow.com/users/7051714/taleev-aalam"},"comment_count":0,"score":5,"creation_date":1479297521,"body_markdown":"It seems everything is call by value in java as i have tried to understand by the following program \n\n**Class-S**\n\n    class S{\n    String name=&quot;alam&quot;;\n    public void setName(String n){\n    this.name=n; \n    }}\n**Class-Sample**\n\n        public class Sample{\n        public static void main(String args[]){\n        S s=new S();\n        S t=new S();\n        System.out.println(s.name);\n        System.out.println(t.name);\n        t.setName(&quot;taleev&quot;);\n        System.out.println(t.name);\n        System.out.println(s.name);\n        s.setName(&quot;Harry&quot;);\n        System.out.println(t.name);\n        System.out.println(s.name);\n        }}\n\n**Output**\n\n&gt;  alam\n&gt;\n&gt; alam\n&gt;\n&gt; taleev\n&gt;\n&gt; alam\n&gt;\n&gt;taleev\n&gt;\n&gt;harry\n\n       \nAs we have define class S with instance variable name with value **taleev** so for\nall the objects that we initialize from it will have the name variable with value of **taleev** but if we change the name&#39;s value of any objects then it is changing the name of only that copy of the class(Object) not for every class so after that also when we do **System.out.println(s.name)** it is printing **taleev** only we can not change the name&#39;s value that we have defined originally, and the value that we are changing is the object&#39;s value not the instance variable value so once we have define instance variable we are unable to change it\n\nSo i think that is how it shows that java deals with **values** only not with the **references** \n\nThe memory allocation for the primitive variables can be understood by  [this][1]\n         \n\n\n  [1]: http://www.informit.com/articles/article.aspx?p=31755&amp;seqNum=8","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":2293,"user_id":4958222,"user_type":"registered","accept_rate":75,"profile_image":"https://lh5.googleusercontent.com/-v1CfGQDxAMc/AAAAAAAAAAI/AAAAAAAABcE/K0ROeGDUG2w/photo.jpg?sz=128","display_name":"Rahul Kumar","link":"https://stackoverflow.com/users/4958222/rahul-kumar"},"comment_count":0,"score":17,"creation_date":1483086780,"body_markdown":"Java, for sure, without a doubt, is &quot;pass by value&quot;. Also, since Java is (mostly) object-oriented and objects work with references, it&#39;s easy to get confused and think of it to be &quot;pass by reference&quot;\r\n\r\nPass by value means you pass the value to the method and if the method changes the passed value, the real entity doesn&#39;t change. Pass by reference, on the other hand, means a reference is passed to the method, and if the method changes it, the passed object also changes.\r\n\r\nIn Java, usually when we pass an object to a method, we basically pass the reference of the object as-a-value because that&#39;s how Java works; it works with references and addresses as far as Object in the heap goes.\r\n\r\nBut to test if it is really pass by value or pass by reference, you can use a primitive type and references:\r\n\r\n    @Test\r\n\tpublic void sampleTest(){\r\n\t\tint i = 5;\r\n\t\tincrementBy100(i);\r\n\t\tSystem.out.println(&quot;passed ==&gt; &quot;+ i);\r\n        Integer j = new Integer(5);\r\n        incrementBy100(j);\r\n\t\tSystem.out.println(&quot;passed ==&gt; &quot;+ j);\r\n\t}\r\n\t/**\r\n\t * @param i\r\n\t */\r\n\tprivate void incrementBy100(int i) {\r\n\t\ti += 100;\r\n\t\tSystem.out.println(&quot;incremented = &quot;+ i);\r\n\t}\r\n\r\nThe output is:\r\n\r\n    incremented = 105\r\n    passed ==&gt; 5\r\n    incremented = 105\r\n    passed ==&gt; 5\r\n\r\nSo in both cases, whatever happens inside the method doesn&#39;t change the real Object, because the value of that object was passed, and not a reference to the object itself.\r\n\r\nBut when you pass a custom object to a method, and the method and changes it, it will change the real object too, because even when you passed the object, you passed it&#39;s reference as a value to the method. Let&#39;s try another example:\r\n\r\n    @Test\r\n\tpublic void sampleTest2(){\r\n\t\tPerson person = new Person(24, &quot;John&quot;);\r\n\t\tSystem.out.println(person);\r\n\t\talterPerson(person);\r\n\t\tSystem.out.println(person);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param person\r\n\t */\r\n\tprivate void alterPerson(Person person) {\r\n\t\tperson.setAge(45);\r\n\t\tPerson altered = person;\r\n\t\taltered.setName(&quot;Tom&quot;);\r\n\t}\r\n\r\n\tprivate static class Person{\r\n\t\tprivate int age;\r\n\t\tprivate String name; \r\n\t\t\r\n\t\tpublic Person(int age, String name) {\r\n\t\t\tthis.age=age;\r\n\t\t\tthis.name =name;\r\n\t\t}\r\n\r\n\t\tpublic int getAge() {\r\n\t\t\treturn age;\r\n\t\t}\r\n\r\n\t\tpublic void setAge(int age) {\r\n\t\t\tthis.age = age;\r\n\t\t}\r\n\r\n\t\tpublic String getName() {\r\n\t\t\treturn name;\r\n\t\t}\r\n\r\n\t\tpublic void setName(String name) {\r\n\t\t\tthis.name = name;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic String toString() {\r\n\t\t\tStringBuilder builder = new StringBuilder();\r\n\t\t\tbuilder.append(&quot;Person [age=&quot;);\r\n\t\t\tbuilder.append(age);\r\n\t\t\tbuilder.append(&quot;, name=&quot;);\r\n\t\t\tbuilder.append(name);\r\n\t\t\tbuilder.append(&quot;]&quot;);\r\n\t\t\treturn builder.toString();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\nIn this case, the output is:\r\n\r\n    Person [age=24, name=John]\r\n    Person [age=45, name=Tom]\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":806,"user_id":1952852,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8dfa92044d56ff2a1fe5df317fd19790?s=128&d=identicon&r=PG","display_name":"Raja","link":"https://stackoverflow.com/users/1952852/raja"},"comment_count":0,"score":7,"creation_date":1485546707,"body_markdown":"I tried to simplify the examples above, keeping only the essense of the problem.\r\nLet me present this as a story that is easy to remember and apply correctly.\r\nThe story goes like this:\r\nYou have a pet dog, Jimmy, whose tail is 12 inches long.\r\nYou leave it with a vet for a few weeks while you are travelling abroad.\r\n\r\nThe vet doesn&#39;t like the long tail of Jimmy, so he wants to cut it by half.\r\nBut being a good vet, he knows that he has no right to mutilate other people&#39;s dogs.\r\nSo he first makes a clone of the dog (with the *new* key word) and cuts the tail of the clone.\r\nWhen the dog finally returns to you, it has the original 12 inch tail in tact. Happy ending !\r\n\r\nThe next time you travel, you take the dog, unwittingly, to a wicked vet. \r\nHe is also a hater of long tails, so he cuts it down to a miserable 2 inches. \r\nBut he does this to your dear Jimmy, not a clone of it.\r\nWhen you return, you are shocked to see Jimmy pathetically wagging a 2 inch stub.\r\n\r\nMoral of the story: When you pass on your pet, you are giving away whole and unfettered\r\ncustody of the pet to the vet. He is free to play any kind of havoc with it.\r\nPassing by *value*, by *reference*, by *pointer* are all just technical wrangling. \r\nUnless the vet clones it first, he ends up mutilating the original dog.\r\n\r\n    public class Doggie {\r\n\r\n        public static void main(String...args) {\r\n            System.out.println(&quot;At the owner&#39;s home:&quot;);\r\n            Dog d = new Dog(12);\r\n            d.wag();\r\n            goodVet(d);\r\n            System.out.println(&quot;With the owner again:)&quot;);\r\n            d.wag();\r\n            badVet(d);\r\n            System.out.println(&quot;With the owner again(:&quot;);\r\n            d.wag();\r\n        }\r\n        \r\n        public static void goodVet (Dog dog) {\r\n            System.out.println(&quot;At the good vet:&quot;);\r\n            dog.wag();\r\n            dog = new Dog(12); // create a clone\r\n            dog.cutTail(6);    // cut the clone&#39;s tail\r\n            dog.wag();\r\n        }\r\n        \r\n        public static void badVet (Dog dog) {\r\n            System.out.println(&quot;At the bad vet:&quot;);\r\n            dog.wag();\r\n            dog.cutTail(2);   // cut the original dog&#39;s tail\r\n            dog.wag();\r\n        }    \r\n    }\r\n    \r\n    class Dog {\r\n    \r\n        int tailLength;\r\n        \r\n        public Dog(int originalLength) {\r\n            this.tailLength = originalLength;\r\n        }\r\n        \r\n        public void cutTail (int newLength) {\r\n            this.tailLength = newLength;\r\n        }\r\n        \r\n        public void wag()  {\r\n            System.out.println(&quot;Wagging my &quot; +tailLength +&quot; inch tail&quot;);\r\n        }\r\n    }\r\n\r\n    Output:\r\n    At the owner&#39;s home:\r\n    Wagging my 12 inch tail\r\n    At the good vet:\r\n    Wagging my 12 inch tail\r\n    Wagging my 6 inch tail\r\n    With the owner again:)\r\n    Wagging my 12 inch tail\r\n    At the bad vet:\r\n    Wagging my 12 inch tail\r\n    Wagging my 2 inch tail\r\n    With the owner again(:\r\n    Wagging my 2 inch tail\r\n\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":11543,"user_id":4251431,"user_type":"registered","accept_rate":80,"profile_image":"https://lh4.googleusercontent.com/-ovA4SCP-_wg/AAAAAAAAAAI/AAAAAAAAC-M/gGQW1h2xxPE/photo.jpg?sz=128","display_name":"Basheer AL-MOMANI","link":"https://stackoverflow.com/users/4251431/basheer-al-momani"},"comment_count":0,"score":12,"creation_date":1490866146,"body_markdown":"Unlike some other languages, Java does not allow you to choose between pass-by-value and pass-by-reference.\r\n\r\nAll arguments are passed by value. \r\n\r\nA method call can pass two `types of values`to a method\r\n\r\n - copies of primitive values (e.g., values of type int and double)\r\n - copies of references to objects.\r\n\r\n`Objects themselves cannot be passed to methods`. When a method modifies a primitive-type parameter, changes to the parameter have no effect on the original argument value in the calling method.\r\n\r\nThis is also true for reference-type parameters. If you modify a reference-type parameter so that it refers to another object, only the parameter refers to the new object—the reference stored in the caller’s variable still refers to the original object.\r\n\r\nReferences: [Java™ How To Program (Early Objects), Tenth Edition][1] \r\n\r\n\r\n  [1]: https://www.safaribooksonline.com/library/view/javatm-how-to/9780133813036/ch07lev2sec11.html","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":161,"user_id":3664592,"user_type":"registered","profile_image":"https://i.stack.imgur.com/I2gv7.jpg?s=128&g=1","display_name":"Himanshu arora","link":"https://stackoverflow.com/users/3664592/himanshu-arora"},"comment_count":0,"score":75,"creation_date":1491630689,"body_markdown":"Java is a call by value\r\n\r\nHow it works\r\n\r\n* You always pass a copy of the bits of the value of the reference!\r\n\r\n* If it&#39;s a primitive data type these bits contain the value of the primitive data type itself, That&#39;s why if we change the value of header inside the method then it does not reflect the changes outside.\r\n\r\n* If it&#39;s an object data type like **Foo foo=new Foo()** then in this case copy of the address of the object passes like file shortcut  , suppose we have a text file **abc.txt** at **C:\\desktop** and suppose we make shortcut of the same file and put this inside **C:\\desktop\\abc-shortcut** so when you access the file from **C:\\desktop\\abc.txt** and write **&#39;Stack Overflow&#39;** and close the file and again you open the file from shortcut then you write **&#39; is the largest online community for programmers to learn&#39;** then total file change will be **&#39;Stack Overflow is the largest online community for programmers to learn&#39;** which means it doesn&#39;t matter from where you open the file , each time we were accessing the same file , here we can assume **Foo** as a file and suppose foo stored at **123hd7h**(original address like **C:\\desktop\\abc.txt** ) address and **234jdid**(copied address like **C:\\desktop\\abc-shortcut** which actually contains the original address of the file inside) ..\r\nSo for better understanding make shortcut file and feel.\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":1567,"user_id":4233180,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-FXCjt68DFoA/AAAAAAAAAAI/AAAAAAAAACs/hqpMFb_4--c/photo.jpg?sz=128","display_name":"Supriya","link":"https://stackoverflow.com/users/4233180/supriya"},"comment_count":0,"score":9,"creation_date":1504464768,"body_markdown":"Java is pass by value. \r\n\r\nThere are already great answers on this thread. Somehow, I was never clear on pass by value/reference with respect to primitive data types and with respect to objects. Therefore, I tested it out for my satisfaction and clarity with the following piece of code; might help somebody seeking similar clarity:\r\n\r\n    class Test    {\r\n\r\n\tpublic static void main (String[] args) throws java.lang.Exception\r\n\t{\r\n\t\t// Primitive type\r\n\t\tSystem.out.println(&quot;Primitve:&quot;);\r\n\t\tint a = 5;\r\n\t\tprimitiveFunc(a);\r\n\t\tSystem.out.println(&quot;Three: &quot; + a);    //5\r\n\t\t\r\n\t\t//Object\r\n\t\tSystem.out.println(&quot;Object:&quot;);\r\n\t\tDummyObject dummyObject = new DummyObject();\r\n\t\tSystem.out.println(&quot;One: &quot; + dummyObject.getObj());    //555\r\n\t\tobjectFunc(dummyObject);\r\n\t\tSystem.out.println(&quot;Four: &quot; + dummyObject.getObj());    //666 (555 if line in method uncommented.)\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate static void primitiveFunc(int b)\t{\r\n\t\tSystem.out.println(&quot;One: &quot; + b);    //5\r\n\t\tb = 10;\r\n\t\tSystem.out.println(&quot;Two:&quot; + b);    //10\r\n\t}\r\n\t\r\n\tprivate static void objectFunc(DummyObject b)\t{\r\n\t\tSystem.out.println(&quot;Two: &quot; + b.getObj());    //555\r\n\t\t//b = new DummyObject();\r\n\t\tb.setObj(666);\r\n\t\tSystem.out.println(&quot;Three:&quot; + b.getObj());    //666\r\n\t}\r\n\r\n    }\r\n\r\n    class DummyObject\t{\r\n\t    private int obj = 555;\r\n\t    public int getObj()\t{ return obj; }\r\n\t    public void setObj(int num)\t{ obj = num; }\r\n    }\r\n\r\nIf the line `b = new DummyObject()` is uncommented, the modifications made thereafter are made on a *new* object, a new instantiation. Hence, it is not reflected in the place where the method is called from. However, otherwise, the change is reflected as the modifications are only made on a &quot;reference&quot; of the object, i.e - b points to the same dummyObject. \r\n\r\nIllustrations in one of the answers in this thread (https://stackoverflow.com/a/12429953/4233180) can help gain a deeper understanding.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":630,"user_id":7178104,"user_type":"registered","profile_image":"https://i.stack.imgur.com/j1OAJ.jpg?s=128&g=1","display_name":"Raj S. Rusia","link":"https://stackoverflow.com/users/7178104/raj-s-rusia"},"comment_count":0,"score":23,"creation_date":1504707202,"body_markdown":"One of the biggest confusion in Java programming language is whether Java is **Pass by Value** or **Pass by Reference**.\r\n\r\nFirst of all, we should understand what is meant by pass by value or pass by reference.\r\n\r\n**Pass by Value:** The method parameter values are copied to another variable and then the copied object is passed, that’s why it’s called pass by value.\r\n\r\n**Pass by Reference:** An alias or reference to the actual parameter is passed to the method, that’s why it’s called pass by reference.\r\n\r\nLet’s say we have a class Balloon like below.\r\n\r\n\r\n\r\n    public class Balloon {\r\n    \r\n    \tprivate String color;\r\n    \r\n    \tpublic Balloon(){}\r\n    \t\r\n    \tpublic Balloon(String c){\r\n    \t\tthis.color=c;\r\n    \t}\r\n    \t\r\n    \tpublic String getColor() {\r\n    \t\treturn color;\r\n    \t}\r\n    \r\n    \tpublic void setColor(String color) {\r\n    \t\tthis.color = color;\r\n    \t}\r\n    }\r\n\r\nAnd we have a simple program with a generic method to swap two objects, the class looks like below.\r\n\r\n    public class Test {\r\n    \r\n    \tpublic static void main(String[] args) {\r\n    \r\n    \t\tBalloon red = new Balloon(&quot;Red&quot;); //memory reference 50\r\n    \t\tBalloon blue = new Balloon(&quot;Blue&quot;); //memory reference 100\r\n    \t\t\r\n    \t\tswap(red, blue);\r\n    \t\tSystem.out.println(&quot;red color=&quot;+red.getColor());\r\n    \t\tSystem.out.println(&quot;blue color=&quot;+blue.getColor());\r\n    \t\t\r\n    \t\tfoo(blue);\r\n    \t\tSystem.out.println(&quot;blue color=&quot;+blue.getColor());\r\n    \t\t\r\n    \t}\r\n    \r\n    \tprivate static void foo(Balloon balloon) { //baloon=100\r\n    \t\tballoon.setColor(&quot;Red&quot;); //baloon=100\r\n    \t\tballoon = new Balloon(&quot;Green&quot;); //baloon=200\r\n    \t\tballoon.setColor(&quot;Blue&quot;); //baloon = 200\r\n    \t}\r\n    \r\n    \t//Generic swap method\r\n    \tpublic static void swap(Object o1, Object o2){\r\n    \t\tObject temp = o1;\r\n    \t\to1=o2;\r\n    \t\to2=temp;\r\n    \t}\r\n    }\r\n\r\nWhen we execute the above program, we get following output.\r\n\r\n    red color=Red\r\n    blue color=Blue\r\n    blue color=Red\r\n\r\n\r\nIf you look at the first two lines of the output, it’s clear that swap method didn’t work. This is because Java is passed by value, this swap() method test can be used with any programming language to check whether it’s pass by value or pass by reference.\r\n\r\nLet’s analyze the program execution step by step.\r\n\r\n    Balloon red = new Balloon(&quot;Red&quot;);\r\n    Balloon blue = new Balloon(&quot;Blue&quot;);\r\n\r\nWhen we use the new operator to create an instance of a class, the instance is created and the variable contains the reference location of the memory where the object is saved. For our example, let’s assume that “red” is pointing to 50 and “blue” is pointing to 100 and these are the memory location of both Balloon objects.\r\n\r\nNow when we are calling swap() method, two new variables o1 and o2 are created pointing to 50 and 100 respectively.\r\n\r\nSo below code snippet explains what happened in the swap() method execution.\r\n\r\n    public static void swap(Object o1, Object o2){ //o1=50, o2=100\r\n    \tObject temp = o1; //temp=50, o1=50, o2=100\r\n    \to1=o2; //temp=50, o1=100, o2=100\r\n    \to2=temp; //temp=50, o1=100, o2=50\r\n    } //method terminated\r\n\r\nNotice that we are changing values of o1 and o2 but they are copies of “red” and “blue” reference locations, so actually, there is no change in the values of “red” and “blue” and hence the output.\r\n\r\nIf you have understood this far, you can easily understand the cause of confusion. Since the variables are just the reference to the objects, we get confused that we are passing the reference so Java is passed by reference. However, we are passing a copy of the reference and hence it’s pass by value. I hope it clears all the doubts now.\r\n\r\nNow let’s analyze **foo()** method execution.\r\n\r\n    private static void foo(Balloon balloon) { //baloon=100\r\n    \tballoon.setColor(&quot;Red&quot;); //baloon=100\r\n    \tballoon = new Balloon(&quot;Green&quot;); //baloon=200\r\n    \tballoon.setColor(&quot;Blue&quot;); //baloon = 200\r\n    }\r\n\r\nThe first line is the important one when we call a method the method is called on the Object at the reference location. At this point, the balloon is pointing to 100 and hence it’s color is changed to Red.\r\n\r\nIn the next line, balloon reference is changed to 200 and any further methods executed are happening on the object at memory location 200 and not having any effect on the object at memory location 100. This explains the third line of our program output printing blue color=Red.\r\n\r\nI hope above explanation clear all the doubts, just remember that variables are references or pointers and its copy is passed to the methods, so Java is always passed by value. It would be more clear when you will learn about Heap and Stack memory and where different objects and references are stored.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":15,"user_id":8808036,"user_type":"registered","profile_image":"https://i.stack.imgur.com/JDdA8.jpg?s=128&g=1","display_name":"NAGHMAAN MOHASEEN","link":"https://stackoverflow.com/users/8808036/naghmaan-mohaseen"},"comment_count":0,"score":16,"creation_date":1508656124,"body_markdown":"&lt;h3&gt;Java is strictly passed by value&lt;/h3&gt;\r\n\r\n\r\nWhen I say ***pass by value*** it means whenever caller has invoked the callee the arguments(ie: the data to be passed to the other function) **is copied** and placed in the formal parameters (callee&#39;s local variables for receiving the input). Java makes data communications from one function to other function only in a pass by value environment.\r\n\r\n\r\nAn important point would be to know that even C language is strictly passed by value only:  \r\n*ie:* Data is copied from caller to the callee and more ever the operation performed by the callee are on the same memory location and \r\nwhat we pass them is the address of that location that we obtain from (&amp;) operator and the identifier used in the formal parameters are declared to be a pointer variable (*) using which we can get inside the memory location for accessing the data in it.\r\n\r\nHence here the formal parameter is nothing but mere aliases for that location. And any modifications done on that location is visible where ever that scope of the variable (that identifies that location) is alive.\r\n\r\n\r\nIn Java, there is no concept of pointers (*ie:* there is nothing called a pointer variable), although we can think of reference variable as a pointer technically in java we call it as a handle. The reason why we call the pointer to an address as a handle in java is  because a pointer variable is capable of performing not just single dereferencing but multiple dereferencing \r\nfor example: `int *p;` in P means p points to an integer\r\nand `int **p;` in C means p is pointer to a pointer to an integer\r\nwe dont have this facility in Java, so its absolutely correct and technically legitimate to say it as an handle, also there are rules for pointer arithmetic in C. Which allows performing arithmetic operation on pointers with constraints on it. \r\n\r\nIn C we call such mechanism of passing address and receiving them with pointer variables as *pass by reference* since we are passing their addresses and receiving them as pointer variable in formal parameter but at the compiler level that address is copied into pointer variable (since data here is address even then its data ) hence we can be 100% sure that C is Strictly passed by value (as we are passing data only)\r\n\r\n(and if we pass the data directly in C we call that as pass by value.)\r\n\r\nIn java when we do the same we do it with the handles; since they are not called pointer variables like in (as discussed above) even though we are passing the references we cannot say its pass by reference since we are not collecting that with a pointer variable in Java.\r\n\r\nHence Java **strictly use pass by value mechanism** ","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":54199,"user_id":1697099,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/gerXo.png?s=128&g=1","display_name":"Premraj","link":"https://stackoverflow.com/users/1697099/premraj"},"comment_count":0,"score":10,"creation_date":1513419550,"body_markdown":"- **passed by reference :** caller and callee use same variable for parameter.  \r\n\r\n- **passed by value :** caller and callee have two independent variables with same value.  \r\n- Java uses pass by value \r\n - When passing primitive data, it copies the value of primitive data type.\r\n - When passing object, it copies the address of object and passes to callee method variable.\r\n \r\n\r\nExample using primitive data type: \r\n\r\n\r\n    public class PassByValuePrimitive {\r\n    \tpublic static void main(String[] args) {\r\n    \t\tint i=5;\r\n    \t\tSystem.out.println(i);  //prints 5\r\n    \t\tchange(i);\r\n    \t\tSystem.out.println(i);  //prints 5\r\n    \t}\r\n    \t\r\n    \t\r\n    \tprivate static void change(int i) {\r\n    \t\tSystem.out.println(i);  //prints 5\r\n    \t\ti=10;\r\n    \t\tSystem.out.println(i); //prints 10\r\n    \t\t\r\n    \t}\r\n    }\r\n\r\n\r\n\r\nExample using object:\r\n\r\n    public class PassByValueObject {\r\n    \tpublic static void main(String[] args) {\r\n    \t\tList&lt;String&gt; list = new ArrayList&lt;&gt;();\r\n    \t\tlist.add(&quot;prem&quot;);\r\n    \t\tlist.add(&quot;raj&quot;);\r\n    \t\tnew PassByValueObject().change(list);\r\n    \t\tSystem.out.println(list); // prints [prem, raj, ram]\r\n    \t\t\r\n    \t}\r\n    \t\r\n    \t\r\n    \tprivate  void change(List list) {\r\n    \t\tSystem.out.println(list.get(0)); // prem\r\n    \t\tlist.add(&quot;ram&quot;);\r\n    \t\tlist=null;\r\n    \t\tSystem.out.println(list.add(&quot;bheem&quot;)); //gets NullPointerException\r\n    \t}\r\n    }\r\n\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":2051,"user_id":1977836,"user_type":"registered","profile_image":"https://i.stack.imgur.com/34HNM.jpg?s=128&g=1","display_name":"Felypp Oliveira","link":"https://stackoverflow.com/users/1977836/felypp-oliveira"},"comment_count":0,"score":23,"creation_date":1517606636,"body_markdown":"This is the best way to answer the question imo...\r\n\r\nFirst, we must understand that, in Java, the *parameter passing behavior*...\r\n\r\n    public void foo(Object param)\r\n    {\r\n      // some code in foo...\r\n    }\r\n\r\n    public void bar()\r\n    {\r\n      Object obj = new Object();\r\n      \r\n      foo(obj);\r\n    }\r\n\r\nis exactly the same as...\r\n\r\n    public void bar()\r\n    {\r\n      Object obj = new Object();\r\n      \r\n      Object param = obj;\r\n\r\n      // some code in foo...\r\n    }\r\n\r\nnot considering stack locations, which aren&#39;t relevant in this discussion.\r\n\r\nSo, in fact, what we&#39;re looking for in Java is how *variable assignment* works. I found it in [the docs][1] :\r\n\r\n&gt; One of the most common operators that you&#39;ll encounter is the simple assignment operator &quot;=&quot; [...] &lt;b&gt;it assigns the value&lt;/b&gt; on its right to the operand on its left:\r\n&gt; \r\n&gt;  int cadence = 0;  \r\n&gt;  int speed = 0;  \r\n&gt;  int gear = 1;  \r\n&gt;  \r\n&gt; This operator can also be used on objects to assign &lt;b&gt;object references&lt;/b&gt; [...]\r\n\r\nIt&#39;s clear how this operator acts in two distinct ways: assign values and assign references. The last, when it&#39;s an object... the first, when it isn&#39;t an object, that is, when it&#39;s a primitive. But so, can we understand that Java&#39;s function params can be *pass-by-value* and *pass-by-reference*? \r\n\r\nThe truth is in the code. Let&#39;s try it:\r\n\r\n    public class AssignmentEvaluation\r\n    {\r\n      static public class MyInteger\r\n      {\r\n        public int value = 0;\r\n      }\r\n      \r\n      static public void main(String[] args)\r\n      {\r\n        System.out.println(&quot;Assignment operator evaluation using two MyInteger objects named height and width\\n&quot;);\r\n        \r\n        MyInteger height = new MyInteger();\r\n        MyInteger width  = new MyInteger();\r\n        \r\n        System.out.println(&quot;[1] Assign distinct integers to height and width values&quot;);\r\n        \r\n        height.value = 9;\r\n        width.value  = 1;\r\n        \r\n        System.out.println(&quot;-&gt;  height is &quot; + height.value + &quot; and width is &quot; + width.value + &quot;, we are different things! \\n&quot;);\r\n        \r\n        System.out.println(&quot;[2] Assign to height&#39;s value the width&#39;s value&quot;);\r\n        \r\n        height.value = width.value;\r\n        \r\n        System.out.println(&quot;-&gt;  height is &quot; + height.value + &quot; and width is &quot; + width.value + &quot;, are we the same thing now? \\n&quot;);\r\n        \r\n        System.out.println(&quot;[3] Assign to height&#39;s value an integer other than width&#39;s value&quot;);\r\n        \r\n        height.value = 9;\r\n        \r\n        System.out.println(&quot;-&gt;  height is &quot; + height.value + &quot; and width is &quot; + width.value + &quot;, we are different things yet! \\n&quot;);\r\n        \r\n        System.out.println(&quot;[4] Assign to height the width object&quot;);\r\n        \r\n        height = width;\r\n        \r\n        System.out.println(&quot;-&gt;  height is &quot; + height.value + &quot; and width is &quot; + width.value + &quot;, are we the same thing now? \\n&quot;);\r\n        \r\n        System.out.println(&quot;[5] Assign to height&#39;s value an integer other than width&#39;s value&quot;);\r\n        \r\n        height.value = 9;\r\n        \r\n        System.out.println(&quot;-&gt;  height is &quot; + height.value + &quot; and width is &quot; + width.value + &quot;, we are the same thing now! \\n&quot;);\r\n        \r\n        System.out.println(&quot;[6] Assign to height a new MyInteger and an integer other than width&#39;s value&quot;);\r\n        \r\n        height = new MyInteger();\r\n        height.value = 1;\r\n        \r\n        System.out.println(&quot;-&gt;  height is &quot; + height.value + &quot; and width is &quot; + width.value + &quot;, we are different things again! \\n&quot;);\r\n      }\r\n    }\r\n\r\nThis is the output of my run:\r\n\r\n&lt;pre&gt;\r\nAssignment operator evaluation using two MyInteger objects named height and width\r\n\r\n[1] Assign distinct integers to height and width values\r\n-&gt;  height is 9 and width is 1, we are different things! \r\n\r\n[2] Assign to height&#39;s value the width&#39;s value\r\n-&gt;  height is 1 and width is 1, are we the same thing now? \r\n\r\n[3] Assign to height&#39;s value an integer other than width&#39;s value\r\n-&gt;  height is 9 and width is 1, we are different things yet! \r\n\r\n[4] Assign to height the width object\r\n-&gt;  height is 1 and width is 1, are we the same thing now? \r\n\r\n[5] Assign to height&#39;s value an integer other than width&#39;s value\r\n-&gt;  height is 9 and width is 9, we are the same thing now! \r\n\r\n[6] Assign to height a new MyInteger and an integer other than width&#39;s value\r\n-&gt;  height is 1 and width is 9, we are different things again! \r\n&lt;/pre&gt;\r\n\r\nIn *[2]* we have distinct objects and assign one variable&#39;s value to the other. But after assigning a new value in *[3]* the objects had different values, which means that in *[2]* the assigned value was a copy of the primitive variable, usually called **pass-by-value**, otherwise, the values printed in *[3]* should be the same.\r\n\r\nIn *[4]* we still have distinct objects and assign one object to the other. And after assigning a new value in *[5]* the objects had the same values, which means that in *[4]* the assigned object was not a copy of the other, which should be called **pass-by-reference**. But, if we look carefully in *[6]*, we can&#39;t be so sure that no copy was done... ?????\r\n\r\nWe can&#39;t be so sure because in *[6]* the objects were the same, then we assigned a new object to one of them, and after, the objects had different values! How can they be distinct now if they were the same? They should be the same here too!  ?????\r\n\r\nWe&#39;ll need to remember [the docs][1] to understand what&#39;s going on:\r\n\r\n&gt; This operator can also be used on objects to assign &lt;b&gt;object references&lt;/b&gt;\r\n\r\nSo our two variables were storing references... our variables had the same reference after *[4]* and different references after *[6]*... if such a thing is possible, this means that assignment of objects is done by copy of the object&#39;s reference, otherwise, if it was not a copy of reference, the printed value of the variables in *[6]* should be the same. So objects (references), just like primitives, are copied to variables through assignment, what people usually call *pass-by-value*. That&#39;s the only *pass-by-* in Java.\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op1.html","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":3544,"user_id":3216970,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5ec661ea7a240654ec958f063478c964?s=128&d=identicon&r=PG&f=1","display_name":"mc01","link":"https://stackoverflow.com/users/3216970/mc01"},"comment_count":0,"score":10,"creation_date":1521242734,"body_markdown":"## PT 1: Of Realty Listings  \n\nThere is a blue, 120sq-ft &quot;Tiny House&quot; currently parked at 1234 Main St with a nicely manicured lawn &amp; flower bed out front. \n\nA Realtor with a local firm is hired and told to keep a listing for that house. \n\nLet&#39;s call that Realtor &quot;Bob.&quot; Hi Bob.\n\nBob keeps his Listing, which he calls `tinyHouseAt1234Main`, up to date with a webcam that allows him to note any changes to the actual house in real time. He also keeps a tally of how many people have asked about the listing. \nBob&#39;s integer `viewTally` for the house is at 42 today.\n   \nWhenever someone wants info about the blue Tiny House at 1234 Main St, they ask Bob. \n\nBob looks up his Listing `tinyHouseAt1234Main` and tells them all about it - the color, the nice lawn, the loft bed and the composting toilet, etc. Then he adds their inquiry to his `viewTally`. He doesn&#39;t tell them the real, physical address though, because Bob&#39;s firm specializes in Tiny Houses that could be moved at any time. The tally is now 43. \n\nAt another firm, Realtors might explicitly say their listing &quot;points&quot; to the house at 1234 Main St, denoting this with a little `*` next to it, because they mainly deal with houses that rarely ever move (though presumably there are reasons for doing so). Bob&#39;s firm doesn&#39;t bother doing this.\n\nNow, of course Bob doesn&#39;t physically go and put the *actual* house on a truck to show it to clients directly - that would be impractical and a ridiculous waste of resources. Passing a full copy of his tally sheet is one thing, but passing around the whole house all the time is costly and ridiculous.  \n\n(Aside: Bob&#39;s firm also doesn&#39;t 3D print new &amp; unique copies of a listed house every single time someone asks about it. That&#39;s what the upstart, similarly named web-based firm &amp; its spinoffs do - that&#39;s expensive and slower, and people often get the 2 firms confused, but they&#39;re quite popular anyway). \n\nAt some other, older firms closer to the Sea, a realtor like Bob might not even exist to manage the Listings. Clients might instead consult the Rolodex &quot;Annie&quot; (`&amp;` for short) for the direct address of the house. Instead of reading off the referenced house details from the listing like Bob does, clients instead get the house address from Annie (`&amp;`), and go directly to 1234 Main St, sometimes w/no idea what they might find there. \n\nOne day, Bob&#39;s firm begins offering a new automated service that needs the listing for a house the client is interested in. \n\nWell, the person with that info is Bob, so the client has Bob call up the service and send it a copy of the listing. \n\n`jobKillingAutomatedListingService(Listing tinyHouseAt1234Main, int viewTally)` Bob sends along ... \n\nThe service, on its end, calls this Listing `houseToLookAt`, but really what it receives is an exact copy of Bob&#39;s listing, with the exact same VALUEs in it, that refer to the house at 1234 Main St. \n\nThis new service also has its own internal tally of how many people have viewed the listing. The service accepts Bob&#39;s tally out of professional courtesy, but it doesn&#39;t really care and overwrites it entirely with its own local copy anyway. It&#39;s tally for today is 1, while Bob&#39;s is still 43. \n\nThe realty firms call this &quot;pass-by-value&quot; since Bob&#39;s passing the current value of his `viewTally` and his Listing `tinyHouseAt1234Main`. He&#39;s not actually passing along the entire physical house, because that&#39;s impractical. Nor is he passing the real physical address like Annie(`&amp;`) would do. \n\nBut he IS passing a copy of *the value OF* the reference he has to the house. Seems like a silly pedantic difference in some ways, but that&#39;s how his firm works ... \n..............\n\n## PT II: Where things get confusing and dangerous ... \n\nThe new automated service, not being all functional and math-oriented like some other trendy financial &amp; scientific firms, can have unforeseen side effects... \n \nOnce given a Listing object it allows clients to *actually* repaint the REAL house at 1234 Main St, using a remote drone robot fleet! It allows clients to control a robot bulldozer to ACTUALLY dig up the flower bed! This is madness!!! \n\nThe service also lets clients completely redirect `houseToLookAt` to some other house at another address, without involving Bob or his listing. All of a sudden they could be looking at 4321 Elm St. instead, which has no connection whatsoever to Bob&#39;s listing (thankfully they can&#39;t do anymore damage). \n\nBob watches all this on his realtime webcam.\nResigned to the drudgery of his sole job responsibility, he tells clients about the new ugly paint job &amp; sudden lack of curb appeal. His Listing *is* still for 1234 Main St., after all. The new service&#39;s `houseToLookAt` couldn&#39;t change that. Bob reports the details of his `tinyHouseAt1234Main` accurately and dutifully as always, until he gets fired or the house is destroyed entirely by The Nothing. \n\nReally the only thing the service CAN&#39;T do with its `houseToLookAt` copy of the Bob&#39;s original listing is change the address from 1234 Main St. to some other address, or to a void of nothingness, or to some random type of object like a Platypus. Bob&#39;s Listing still always points to 1234 Main St, for whatever it&#39;s still worth. He passes its current value around like always.\n\nThis bizarre side-effect of passing a listing to the new automated service is confusing for people who ask about how it works. Really, what&#39;s the difference between the ability to remotely control robots that alter the state of the house at 1234 Main, vs. *actually* physically going there and wreaking havoc because Annie gave you the address?? \n\nSeems like kind of a nitpicky semantic argument if what you generally care about is the *state* of the house in the listing being copied and passed around, right? \n\nI mean, if you were in the business of actually picking up houses and physically moving them to other addresses (not like mobile or Tiny Homes where that&#39;s sort of an expected function of the platform), or you were accessing, renaming, and shuffling entire neighborhoods like some sort of low-level God-playing madman, THEN maybe you&#39;d care more about passing around those specific address references instead of just copies of the the latest value of the house details ... ","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":467,"user_id":4109266,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/fA4Tx.jpg?s=128&g=1","display_name":"Michael","link":"https://stackoverflow.com/users/4109266/michael"},"comment_count":0,"score":35,"creation_date":1522799290,"body_markdown":"   Unlike some other languages, Java does not allow you to choose between pass-by-value and pass-by-reference—all arguments are passed by value. A method call can pass two types of values to a method—copies of primitive values (e.g., values of int and double) and copies of references to objects.\r\n\r\n   When a method modifies a primitive-type parameter, changes to the parameter have no effect on the original argument value in the calling method.\r\n\r\n   When it comes to objects, objects themselves cannot be passed to methods. So we pass the reference(address) of the object. We can manipulate the original object using this reference.\r\n\r\n   **How Java creates and stores objects:** When we create an object we store the object’s address in a reference variable. Let&#39;s analyze the following statement.\r\n\r\n    Account account1 = new Account();\r\n\r\n“Account account1” is the type and name of the reference variable, “=” is the assignment operator, “new” asks for the required amount of space from the system. The constructor to the right of keyword new which creates the object is called implicitly by the keyword new. Address of the created object(result of right value, which is an expression called &quot;class instance creation expression&quot;) is assigned to the left value (which is a reference variable with a name and a type specified) using the assign operator.\r\n\r\nAlthough an object’s reference is passed by value, a method can still interact with the referenced object by calling its public methods using the copy of the object’s reference. Since the reference stored in the parameter is a copy of the reference that was passed as an argument, the parameter in the called method and the argument in the calling method refer to the same object in memory.\r\n\r\nPassing references to arrays, instead of the array objects themselves, makes sense for performance reasons. Because everything in Java is passed by value, if array objects were passed,\r\na copy of each element would be passed. For large arrays, this would waste time and consume\r\nconsiderable storage for the copies of the elements.\r\n\r\n\r\nIn the image below you can see we have two reference variables(These are called pointers in C/C++, and I think that term makes it easier to understand this feature.) in the main method. Primitive and reference variables are kept in stack memory(left side in images below). array1 and array2 reference variables &quot;point&quot; (as C/C++ programmers call it) or reference to a and b arrays respectively, which are objects (values these reference variables hold are addresses of objects) in heap memory (right side in images below).\r\n\r\n[![Pass by value example 1][1]][1]\r\n\r\n\r\nIf we pass the value of array1 reference variable as an argument to the reverseArray method, a reference variable is created in the method and that reference variable starts pointing to the same array (a). \r\n\r\n    public class Test\r\n    {\r\n        public static void reverseArray(int[] array1)\r\n        {\r\n            // ...\r\n        }\r\n\r\n        public static void main(String[] args)\r\n        {\r\n            int[] array1 = { 1, 10, -7 };\r\n            int[] array2 = { 5, -190, 0 };\r\n        \r\n            reverseArray(array1);\r\n        }\r\n    }\r\n\r\n[![Pass by value example 2][2]][2]\r\n\r\nSo, if we say \r\n\r\n    array1[0] = 5;\r\n\r\nin reverseArray method, it will make a change in array a.\r\n\r\nWe have another reference variable in reverseArray method (array2) that points to an array c. If we were to say \r\n\r\n    array1 = array2;\r\n\r\nin reverseArray method, then the reference variable array1 in method reverseArray would stop pointing to array a and start pointing to array c (Dotted line in second image).\r\n\r\nIf we return value of reference variable array2 as the return value of method reverseArray and assign this value to reference variable array1 in main method, array1 in main will start pointing to array c.\r\n\r\nSo let&#39;s write all the things we have done at once now.\r\n\r\n    public class Test\r\n    {\r\n        public static int[] reverseArray(int[] array1)\r\n        {\r\n            int[] array2 = { -7, 0, -1 };\r\n            \r\n            array1[0] = 5; // array a becomes 5, 10, -7\r\n            \r\n            array1 = array2; /* array1 of reverseArray starts\r\n              pointing to c instead of a (not shown in image below) */\r\n            return array2;\r\n        }\r\n\r\n        public static void main(String[] args)\r\n        {\r\n            int[] array1 = { 1, 10, -7 };\r\n            int[] array2 = { 5, -190, 0 };\r\n        \r\n            array1 = reverseArray(array1); /* array1 of \r\n             main starts pointing to c instead of a */\r\n        }\r\n    }\r\n\r\n[![enter image description here][3]][3]\r\n\r\nAnd now that reverseArray method is over, its reference variables(array1 and array2) are gone. Which means we now only have the two reference variables in main method array1 and array2 which point to c and b arrays respectively. No reference variable is pointing to object (array) a. So it is eligible for garbage collection.\r\n\r\nYou could also assign value of array2 in main to array1. array1 would start pointing to b.\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/sF7QZ.png\r\n  [2]: https://i.stack.imgur.com/W1wgZ.png\r\n  [3]: https://i.stack.imgur.com/5hRyX.png","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":1375,"user_id":352035,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5e04ebdfaafc326122015749a5706191?s=128&d=identicon&r=PG","display_name":"AutomatedMike","link":"https://stackoverflow.com/users/352035/automatedmike"},"score":0,"creation_date":1556885886}],"owner":{"reputation":121,"user_id":5092157,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0670eae48c74ffa13c59cb95f84fe515?s=128&d=identicon&r=PG&f=1","display_name":"asok","link":"https://stackoverflow.com/users/5092157/asok"},"comment_count":1,"score":8,"creation_date":1526560906,"body_markdown":"Java is only passed by value. there is no pass by reference, for example, you can see the following example.\r\n\r\n\r\n\r\n\r\n\r\n    package com.asok.cop.example.task;\r\n    public class Example {\r\n    \tint data = 50;\r\n    \r\n    \tvoid change(int data) {\r\n    \t\tdata = data + 100;// changes will be in the local variable \r\n    \t\tSystem.out.println(&quot;after add &quot; + data);\r\n    \t\t}\r\n    \r\n    \tpublic static void main(String args[]) {\r\n    \t\tExample op = new Example();\r\n    \t\tSystem.out.println(&quot;before change &quot; + op.data);\r\n    \t\top.change(500);\r\n    \t\tSystem.out.println(&quot;after change &quot; + op.data);\r\n    \t}\r\n    }\r\n\r\nOutput:\r\n\r\n    before change 50\r\n    after add 600\r\n    after change 50\r\n\r\nas Michael says in the comments:\r\n\r\n&gt; objects are still passed by value even though operations on them behave like pass-by-reference. Consider `void changePerson(Person person){ person = new Person(); }` the callers reference to the person object will remain unchanged. Objects themselves are passed by value but their members can be affected by changes. To be true pass-by-reference, we would have to be able to reassign the argument to a new object and have the change be reflected in the caller.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":581,"user_id":423941,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/250ed5031701da04dac15ef00af2941c?s=128&d=identicon&r=PG","display_name":"Dennis","link":"https://stackoverflow.com/users/423941/dennis"},"score":0,"creation_date":1535231314},{"owner":{"reputation":3273,"user_id":1047418,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3deab5aa1be96fe145d3103251263523?s=128&d=identicon&r=PG","display_name":"Torben","link":"https://stackoverflow.com/users/1047418/torben"},"score":12,"creation_date":1538541621},{"owner":{"reputation":4872,"user_id":3307720,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/a9af81f6e3d88cba98772f0419f85214?s=128&d=identicon&r=PG&f=1","display_name":"nasch","link":"https://stackoverflow.com/users/3307720/nasch"},"score":1,"creation_date":1545936578},{"owner":{"reputation":1191,"user_id":1028560,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/0357781c153374f699360c669c31b4fa?s=128&d=identicon&r=PG","display_name":"Sanjeev","link":"https://stackoverflow.com/users/1028560/sanjeev"},"score":1,"creation_date":1548201716},{"owner":{"reputation":1513,"user_id":666583,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0183a50288bea023fd56b6ff59dd86c9?s=128&d=identicon&r=PG&f=1","display_name":"AndrewF","link":"https://stackoverflow.com/users/666583/andrewf"},"score":0,"creation_date":1577232047},{"owner":{"reputation":3303,"user_id":1505487,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/32a89e70bccdffd6f50c1ec96224ab2d?s=128&d=identicon&r=PG","display_name":"Solubris","link":"https://stackoverflow.com/users/1505487/solubris"},"score":1,"creation_date":1606346708},{"owner":{"reputation":34769,"user_id":86604,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/329af917389e6cf8e146c03012f5319a?s=128&d=identicon&r=PG","display_name":"Ingo","link":"https://stackoverflow.com/users/86604/ingo"},"score":0,"creation_date":1606819442}],"owner":{"reputation":46639,"user_id":5535245,"user_type":"registered","profile_image":"https://i.stack.imgur.com/YnjcO.jpg?s=128&g=1","display_name":"georgeawg","link":"https://stackoverflow.com/users/5535245/georgeawg"},"comment_count":7,"score":11,"creation_date":1532533246,"body_markdown":"##Java passes primitive types by value and class types by reference\r\n\r\nNow, people like to bicker endlessly about whether &quot;pass by reference&quot; is the correct way to describe what Java et al. actually do. The point is this:\r\n\r\n0. Passing an object does not copy the object.\r\n0. An object passed to a function can have its members modified by the function.\r\n0. A primitive value passed to a function cannot be modified by the function. A copy is made.\r\n\r\nIn my book that&#39;s called passing by reference.\r\n\r\n&amp;#8212; [Brian Bi](https://www.quora.com/profile/Brian-Bi) - [Which programming languages are pass by reference?](https://www.quora.com/Which-programming-languages-are-pass-by-reference#)","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":1191,"user_id":1028560,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/0357781c153374f699360c669c31b4fa?s=128&d=identicon&r=PG","display_name":"Sanjeev","link":"https://stackoverflow.com/users/1028560/sanjeev"},"comment_count":0,"score":81,"creation_date":1548452250,"body_markdown":"There are already great answers that cover this. I wanted to make a small contribution by sharing a **very simple example** (which will compile) contrasting the behaviors between Pass-by-reference in c++ and Pass-by-value in Java.\r\n\r\nA few points:\r\n\r\n 1. The term &quot;reference&quot; is a overloaded with two separate meanings. In Java it simply means a pointer, but in the context of &quot;Pass-by-reference&quot; it means a handle to the original variable which was passed in.\r\n 2. **Java is Pass-by-value**. Java is a descendent of C (among other languages). Before C, several (but not all) earlier languages like FORTRAN and COBOL supported PBR, but C did not. PBR allowed these other languages to make changes to the passed variables inside sub-routines. In order to accomplish the same thing (i.e. change the values of variables inside functions), C programmers passed pointers to variables into functions. Languages inspired by C, such as Java, borrowed this idea and continue to pass pointer to methods as C did, except that Java calls its pointers References. Again, this is a different use of the word &quot;Reference&quot; than in &quot;Pass-By-Reference&quot;.\r\n 3. **C++ allows Pass-by-reference** by declaring a reference parameter using the &quot;&amp;&quot; character (which happens to be the same character used to indicate &quot;the address of a variable&quot; in both C and C++). For example, if we pass in a pointer by reference, the parameter and the argument are not just pointing to the same object. Rather, they are the same variable. If one gets set to a different address or to null, so does the other.\r\n 4. In the C++ example below I&#39;m passing a **pointer** to a null terminated string **by reference**. And in the Java example below I&#39;m passing a Java reference to a String (again, the same as a pointer to a String) by value. Notice the output in the comments.\r\n\r\nC++ pass by reference example:\r\n\r\n    using namespace std;\r\n    #include &lt;iostream&gt;\r\n    \r\n    void change (char *&amp;str){   // the &#39;&amp;&#39; makes this a reference parameter\r\n        str = NULL;\r\n    }\r\n    \r\n    int main()\r\n    {\r\n        char *str = &quot;not Null&quot;;\r\n        change(str);\r\n        cout&lt;&lt;&quot;str is &quot; &lt;&lt; str;      // ==&gt;str is &lt;null&gt;\r\n    }\r\n\r\nJava pass &quot;a Java reference&quot; by value example\r\n\r\n    public class ValueDemo{\r\n        \r\n        public void change (String str){\r\n            str = null;\r\n        }\r\n    \r\n         public static void main(String []args){\r\n            ValueDemo vd = new ValueDemo();\r\n            String str = &quot;not null&quot;;\r\n            vd.change(str);\r\n            System.out.println(&quot;str is &quot; + str);    // ==&gt; str is not null!!\r\n                                                    // Note that if &quot;str&quot; was\r\n                                                    // passed-by-reference, it\r\n                                                    // WOULD BE NULL after the\r\n                                                    // call to change().\r\n         }\r\n    }\r\n\r\n\r\n**EDIT**\r\n\r\nSeveral people have written comments which seem to indicate that either they are not looking at my examples or they don&#39;t get the c++ example. Not sure where the disconnect is, but guessing the c++ example is not clear. I&#39;m posting the same example in pascal because I think pass-by-reference looks cleaner in pascal, but I could be wrong. I might just be confusing people more; I hope not.\r\n\r\nIn pascal, parameters passed-by-reference are called &quot;var parameters&quot;. In the procedure setToNil below, please note the keyword &#39;var&#39; which precedes the parameter &#39;ptr&#39;. When a pointer is passed to this procedure, it will be passed **by reference**. Note the behavior: when this procedure sets ptr to nil (that&#39;s pascal speak for NULL), it will set the argument to nil--you can&#39;t do that in Java.\r\n\r\n    program passByRefDemo;\r\n    type \r\n       iptr = ^integer;\r\n    var\r\n       ptr: iptr;\r\n       \r\n       procedure setToNil(var ptr : iptr);\r\n       begin\r\n           ptr := nil;\r\n       end;\r\n    \r\n    begin\r\n       new(ptr);\r\n       ptr^ := 10;\r\n       setToNil(ptr);\r\n       if (ptr = nil) then\r\n           writeln(&#39;ptr seems to be nil&#39;);     { ptr should be nil, so this line will run. }\r\n    end.\r\n\r\n **EDIT 2**\r\n\r\nSome excerpts from **&quot;THE Java Programming Language&quot;** by Ken Arnold, **James Gosling (the guy who invented Java)**, and David Holmes, chapter 2, section 2.6.5\r\n\r\n&gt; **All parameters to methods are passed &quot;by value&quot;**. In other words,\r\n&gt; values of parameter variables in a method are copies of the invoker\r\n&gt; specified as arguments.\r\n\r\nHe goes on to make the same point regarding objects . . . \r\n\r\n&gt; You should note that when the parameter is an object reference, it is\r\n&gt; the object reference-not the object itself-that is **passed &quot;by value&quot;**.\r\n\r\nAnd towards the end of the same section he makes a broader statement about java being only pass by value and never pass by reference.\r\n\r\n&gt; The Java programming language **does not pass objects by reference; it**\r\n&gt; **passes object references by value**. Because two copies of the same\r\n&gt; reference refer to the same actual object, changes made through one\r\n&gt; reference variable are visible through the other. There is exactly one\r\n&gt; parameter passing mode-**pass by value**-and that helps keep things\r\n&gt; simple.\r\n\r\nThis section of the book has a great explanation of parameter passing in Java and of the distinction between pass-by-reference and pass-by-value and it&#39;s by the creator of Java. I would encourage anyone to read it, especially if you&#39;re still not convinced.\r\n\r\nI think the difference between the two models is very subtle and unless you&#39;ve done programming where you actually used pass-by-reference, it&#39;s easy to miss where two models differ.\r\n\r\nI hope this settles the debate, but probably won&#39;t.\r\n\r\n**EDIT 3**\r\n\r\nI might be a little obsessed with this post. Probably because I feel that the makers of Java inadvertently spread misinformation. If instead of using the word &quot;reference&quot; for pointers they had used something else, say \r\ndingleberry, there would&#39;ve been no problem. You could say, &quot;Java passes dingleberries by value and not by reference&quot;, and nobody would be confused.\r\n\r\nThat&#39;s the reason only Java developers have issue with this. They look at the word &quot;reference&quot; and think they know exactly what that means, so they don&#39;t even bother to consider the opposing argument.\r\n\r\nAnyway, I noticed a comment in an older post, which made a balloon analogy which I really liked. So much so that I decided to glue together some clip-art to make a set of cartoons to illustrate the point.\r\n\r\n**Passing a reference by value**--Changes to the reference are not reflected in the caller&#39;s scope, but the changes to the object are. This is because the reference is copied, but the both the original and the copy refer to the same object.\r\n[![Passing Object references By Value][2]][2]\r\n\r\n**Pass by reference**--There is no copy of the reference. Single reference is shared by both the caller and the function being called. Any changes to the reference or the Object&#39;s data are reflected in the caller&#39;s scope.\r\n[![Pass by reference][3]][3]\r\n\r\n**EDIT 4**\r\n\r\nI have seen posts on this topic which describe the low level implementation of parameter passing in Java, which I think is great and very helpful because it makes an abstract idea concrete. However, to me the question is more about **the behavior described in the language specification** than about the technical implementation of the behavior. This is an exerpt from the [Java Language Specification, section 8.4.1][4] :\r\n\r\n&gt; When the method or constructor is invoked (&#167;15.12), **the values of the\r\n&gt; actual argument expressions initialize newly created parameter\r\n&gt; variables, each of the declared type, before execution of the body of\r\n&gt; the method or constructor.** The Identifier that appears in the\r\n&gt; DeclaratorId may be used as a simple name in the body of the method or\r\n&gt; constructor to refer to the formal parameter.\r\n\r\nWhich means, java creates a copy of the passed parameters before executing a method. Like most people who studied compilers in college, I used [&quot;The Dragon Book&quot;][5] which is **THE** compilers book. It has a good description of &quot;Call-by-value&quot; and &quot;Call-by-Reference&quot; in Chapter 1. The Call-by-value description matches up with Java Specs exactly.\r\n\r\nBack when I studied compilers-in the 90&#39;s, I used the first edition of the book from 1986 which pre-dated Java by about 9 or 10 years. However, I just ran across a copy of the [2nd Eddition][6] from 2007 **which actually mentions Java!** Section 1.6.6 labeled &quot;Parameter Passing Mechanisms&quot; describes parameter passing pretty nicely. Here is an excerpt under the heading &quot;Call-by-value&quot; which mentions Java:\r\n\r\n&gt; In call-by-value, the actual parameter is evaluated (if it is an\r\n&gt; expression) or copied (if it is a variable). The value is placed in\r\n&gt; the location belonging to the corresponding formal parameter of the\r\n&gt; called procedure. **This method is used in C and Java, and is a common\r\n&gt; option in C++ , as well as in most other languages.**\r\n\r\n\r\n  [1]: https://stackoverflow.com/users/208457/dhackner\r\n  [2]: https://i.stack.imgur.com/RvkqU.png\r\n  [3]: https://i.stack.imgur.com/SHXkC.png\r\n  [4]: https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.4.1\r\n  [5]: https://www.amazon.com/Compilers-Principles-Techniques-Alfred-Aho/dp/0201100886/ref=sr_1_fkmr0_2?keywords=Compilers%3A%20Principles%2C%20Techniques%2C%20and%20Tools%201st%20Edition&amp;qid=1567178930&amp;s=digital-text&amp;sr=8-2-fkmr0\r\n  [6]: https://www.amazon.com/Compilers-Principles-Techniques-Alfred-Aho-ebook/dp/B009TGD06W","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":2566,"user_id":959876,"user_type":"registered","profile_image":"https://i.stack.imgur.com/7fYC4.jpg?s=128&g=1","display_name":"moldovean","link":"https://stackoverflow.com/users/959876/moldovean"},"comment_count":0,"score":12,"creation_date":1556635845,"body_markdown":"Long story short: \r\n\r\n1. Non-primitives: Java passes the *Value of the Reference*.  \r\n2. Primitives: just value. \r\n\r\nThe End.\r\n\r\n(2) is too easy. Now if you want to think of what (1) implies, imagine you have a class Apple:\r\n    \r\n    class Apple {\r\n        private double weight;\r\n        public Apple(double weight) {\r\n            this.weight = weight;\r\n        }\r\n        // getters and setters ...\r\n        \r\n    }\r\n\r\n\r\nthen when you pass an instance of this class to the main method:\r\n\r\n    class Main {\r\n        public static void main(String[] args) {\r\n            Apple apple = new Apple(3.14);\r\n            transmogrify(apple);\r\n            System.out.println(apple.getWeight()+ &quot; the goose drank wine...&quot;;\r\n        \r\n        }\r\n\r\n        private static void transmogrify(Apple apple) {\r\n            // does something with apple ...\r\n            apple.setWeight(apple.getWeight()+0.55);\r\n        }\r\n    }\r\n\r\n\r\noh.. but you probably know that, you&#39;re interested in what happens when you do something like this:\r\n\r\n    class Main {\r\n        public static void main(String[] args) {\r\n            Apple apple = new Apple(3.14);\r\n            transmogrify(apple);\r\n            System.out.println(&quot;Who ate my: &quot;+apple.getWeight()); // will it still be 3.14? \r\n        \r\n        }\r\n\r\n        private static void transmogrify(Apple apple) {\r\n            // assign a new apple to the reference passed...\r\n            apple = new Apple(2.71);\r\n        }\r\n\r\n\r\n    }","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":109,"user_id":9892438,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-zClReelxPio/AAAAAAAAAAI/AAAAAAAAAA4/Odp25J4l0QI/photo.jpg?sz=128","display_name":"Amit Sharma","link":"https://stackoverflow.com/users/9892438/amit-sharma"},"comment_count":0,"score":4,"creation_date":1563340243,"body_markdown":"**Java passes parameters by value, There is no option of passing a reference in Java.**\r\n\r\nBut at the complier binding level layer, It uses reference internally not exposed to the user.\r\n\r\nIt is essential as it saves a lot of memory and improves speed.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":41,"user_id":3957354,"user_type":"registered","profile_image":"https://i.stack.imgur.com/D5qSC.jpg?s=128&g=1","display_name":"natwar kumar","link":"https://stackoverflow.com/users/3957354/natwar-kumar"},"comment_count":0,"score":4,"creation_date":1564199762,"body_markdown":"    public class Test {\r\n    \t\r\n    \tstatic class Dog {\r\n    \t\tString name;\r\n    \r\n    \t\t@Override\r\n    \t\tpublic int hashCode() {\r\n    \t\t\tfinal int prime = 31;\r\n    \t\t\tint result = 1;\r\n    \t\t\tresult = prime * result + ((name == null) ? 0 : name.hashCode());\r\n    \t\t\treturn result;\r\n    \t\t}\r\n    \r\n    \t\t@Override\r\n    \t\tpublic boolean equals(Object obj) {\r\n    \t\t\tif (this == obj)\r\n    \t\t\t\treturn true;\r\n    \t\t\tif (obj == null)\r\n    \t\t\t\treturn false;\r\n    \t\t\tif (getClass() != obj.getClass())\r\n    \t\t\t\treturn false;\r\n    \t\t\tDog other = (Dog) obj;\r\n    \t\t\tif (name == null) {\r\n    \t\t\t\tif (other.name != null)\r\n    \t\t\t\t\treturn false;\r\n    \t\t\t} else if (!name.equals(other.name))\r\n    \t\t\t\treturn false;\r\n    \t\t\treturn true;\r\n    \t\t}\r\n    \r\n    \t\tpublic String getName() {\r\n    \t\t\treturn name;\r\n    \t\t}\r\n    \r\n    \t\tpublic void setName(String nb) {\r\n    \t\t\tthis.name = nb;\r\n    \t\t}\r\n    \r\n    \t\tDog(String sd) {\r\n    \t\t\tthis.name = sd;\r\n    \t\t}\r\n    \t}\r\n        /**\r\n         * \r\n         * @param args\r\n         */\r\n    \tpublic static void main(String[] args) {\r\n    \t\tDog aDog = new Dog(&quot;Max&quot;);\r\n    \r\n    \t\t// we pass the object to foo\r\n    \t\tfoo(aDog);\r\n    \t\tDog oldDog = aDog;\r\n    \r\n    \t\tSystem.out.println(&quot; 1: &quot; + aDog.getName().equals(&quot;Max&quot;)); // false\r\n    \t\tSystem.out.println(&quot; 2 &quot; + aDog.getName().equals(&quot;huahua&quot;)); // false\r\n    \t\tSystem.out.println(&quot; 3 &quot; + aDog.getName().equals(&quot;moron&quot;)); // true\r\n    \t\tSystem.out.println(&quot; 4 &quot; + &quot; &quot; + (aDog == oldDog)); // true\r\n    \r\n    \t\t// part2\r\n    \t\tDog aDog1 = new Dog(&quot;Max&quot;);\r\n    \r\n    \t\tfoo(aDog1, 5);\r\n    \t\tDog oldDog1 = aDog;\r\n    \r\n    \t\tSystem.out.println(&quot; 5 : &quot; + aDog1.getName().equals(&quot;huahua&quot;)); // true\r\n    \t\tSystem.out.println(&quot; part2 : &quot; + (aDog1 == oldDog1)); // false\r\n    \r\n    \t\tDog oldDog2 = foo(aDog1, 5, 6);\r\n    \t\tSystem.out.println(&quot; 6 &quot; + (aDog1 == oldDog2)); // true\r\n    \t\tSystem.out.println(&quot; 7 &quot; + (aDog1 == oldDog)); // false\r\n    \t\tSystem.out.println(&quot; 8 &quot; + (aDog == oldDog2)); // false\r\n    \t}\r\n    \r\n    \t/**\r\n    \t * \r\n    \t * @param d\r\n    \t */\r\n    \tpublic static void foo(Dog d) {\r\n    \t\tSystem.out.println(d.getName().equals(&quot;Max&quot;)); // true\r\n    \r\n    \t\td.setName(&quot;moron&quot;);\r\n    \r\n    \t\td = new Dog(&quot;huahua&quot;);\r\n    \t\tSystem.out.println(&quot; -:-  &quot; + d.getName().equals(&quot;huahua&quot;)); // true\r\n    \t}\r\n    \r\n    \t/**\r\n    \t * \r\n    \t * @param d\r\n    \t * @param a\r\n    \t */\r\n    \tpublic static void foo(Dog d, int a) {\r\n    \t\td.getName().equals(&quot;Max&quot;); // true\r\n    \r\n    \t\td.setName(&quot;huahua&quot;);\r\n    \t}\r\n    \r\n    \t/**\r\n    \t * \r\n    \t * @param d\r\n    \t * @param a\r\n    \t * @param b\r\n    \t * @return\r\n    \t */\r\n    \tpublic static Dog foo(Dog d, int a, int b) {\r\n    \t\td.getName().equals(&quot;Max&quot;); // true\r\n    \t\td.setName(&quot;huahua&quot;);\r\n    \t\treturn d;\r\n    \t}\r\n    }\r\n\r\nThe sample code to demonstrate the impact of changes to the  object at different functions . ","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":173,"user_id":10240338,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7e77cb06acb8a5de721a167f98774a72?s=128&d=identicon&r=PG&f=1","display_name":"grindlewald","link":"https://stackoverflow.com/users/10240338/grindlewald"},"comment_count":0,"score":5,"creation_date":1566503229,"body_markdown":"First let&#39;s understand Memory allocation in Java:\r\nStack and Heap are part of Memory that JVM allocates for different purposes. The stack memory is pre-allocated to thread, when it is created, therefore, a thread cannot access the Stack of other thread. But Heap is available to all threads in a program.\r\n\r\nFor a thread, Stack stores all local data, metadata of program, primitive type data and object reference. And, Heap is responsible for storage of actual object.\r\n\r\n    Book book = new Book(&quot;Effective Java&quot;);\r\n\r\nIn the above example, the reference variable is &quot;book&quot; which is stored in stack. The instance created by new operator -&gt; new Book(&quot;Effective Java&quot;) is stored in Heap. The ref variable &quot;book&quot; has address of the object allocated in Heap. Let&#39;s say the address is 1001.\r\n\r\n[![enter image description here][1]][1]\r\n\r\nConsider passing a primitive data type i.e. int, float, double etc.\r\n\r\n    public class PrimitiveTypeExample { \r\n        public static void main(string[] args) {\r\n           int num = 10;\r\n           System.out.println(&quot;Value before calling method: &quot; + num);\r\n           printNum(num);\r\n           System.out.println(&quot;Value after calling method: &quot; + num);\r\n        }\r\n        public static void printNum(int num){\r\n           num = num + 10;\r\n           System.out.println(&quot;Value inside printNum method: &quot; + num);\r\n        }\r\n    }\r\n\r\nOutput is:\r\nValue before calling method: 10\r\nValue inside printNum method: 20\r\nValue after calling method: 10\r\n\r\nint num =10; -&gt; this allocates the memory for &quot;int&quot; in Stack of the running thread, because, it is a primitive type.  Now when printNum(..) is called, a private stack is created within the same thread. When &quot;num&quot; is passed to this method, a copy of &quot;num&quot; is created in the method stack frame.\r\nnum = num+10; -&gt; this adds 10 and modifies the the int variable within the method stack frame.\r\nTherefore, the original num outside the method stack frame remains unchanged.\r\n\r\nConsider, the example of passing the object of a custom class as an argument.\r\n\r\n[![enter image description here][2]][2]\r\n\r\nIn the above example, ref variable &quot;book&quot; resides in stack of thread executing the program, and the object of class Book is created in Heap space when program executes new Book(). This memory location in Heap is referred by &quot;book&quot;. When &quot;book&quot; is passed as method argument, a copy  of &quot;book&quot; is created in  private stack frame of method within the same stack of thread. Therefore, the copied reference variable points to the same object of class &quot;Book&quot; in the Heap.\r\n\r\n[![enter image description here][3]][3]\r\n\r\nThe reference variable within method stack frame sets a new value to same object. Therefore, it is reflected when original ref variable &quot;book&quot; gets its value.\r\nNote that in case of passing reference variable, if it is initialized again in called method, it then points to new memory location and any operation does not affect the previous object in the Heap.\r\n\r\nTherefore, when anything is passed as method argument, it is always the Stack entity - either primitive or reference variable. We never pass something that is stored in Heap. Hence, in Java, we always pass the value in the stack, and it is pass by value.\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/uw7tE.png\r\n  [2]: https://i.stack.imgur.com/J1XRW.png\r\n  [3]: https://i.stack.imgur.com/ggqd5.png","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":59,"user_id":11725130,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b514002eb9fd47984b587804983c3512?s=128&d=identicon&r=PG&f=1","display_name":"Rose","link":"https://stackoverflow.com/users/11725130/rose"},"comment_count":0,"score":3,"creation_date":1569053347,"body_markdown":"I think this simple explanation might help you understand as I wanted to understand this same thing when I was struggling through this.\r\n\r\nWhen you pass a primitive data to a function call it&#39;s content is being copied to the function&#39;s argument and when you pass an object it&#39;s reference is being copied to the function&#39;s argument. Speaking of object, you can&#39;t change the copied reference-*the argument variable is referencing to* in the calling function.\r\n\r\nConsider this simple example, String is an object in java and when you change the content of a string the reference variable will now point to some new reference as String objects are immutable in java.\r\n```java\r\nString name=&quot;Mehrose&quot;;  // name referencing to 100\r\n\r\nChangeContenet(String name){\r\n name=&quot;Michael&quot;; // refernce has changed to 1001\r\n\r\n} \r\nSystem.out.print(name);  //displays Mehrose\r\n```\r\nFairly simple because as I mentioned you are not allowed to change the copied reference in the calling function. But the problem is with the array when you pass an array of String/Object. Let us see.\r\n```java\r\nString names[]={&quot;Mehrose&quot;,&quot;Michael&quot;};\r\n\r\nchangeContent(String[] names){\r\n  names[0]=&quot;Rose&quot;;\r\n  names[1]=&quot;Janet&quot;\r\n\r\n}\r\n\r\nSystem.out.println(Arrays.toString(names)); //displays [Rose,Janet]\r\n```\r\nAs we said that we can&#39;t change the copied reference in the function call and we also have seen in the case of a single String object. The reason is names[] variable referencing to let&#39;s say 200 and names[0] referencing to 205 and so on. You see we didn&#39;t change the names[] reference it still points to the old same reference still after the function call but now names[0] and names[1] reference has been changed. We Still stand on our definition that we can&#39;t change the reference variable&#39;s reference so we didn&#39;t.\r\n\r\nThe same thing happens when you pass a Student object to a method and you are still able to change the Student name or other attributes, the point is we are not changing the actual Student object rather we are changing the contents of it\r\n\r\nYou can&#39;t do this\r\n```java\r\nStudent student1= new Student(&quot;Mehrose&quot;);\r\n\r\nchangeContent(Student Obj){\r\n obj= new Student(&quot;Michael&quot;) //invalid\r\n obj.setName(&quot;Michael&quot;)  //valid\r\n\r\n}\r\n```","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":1592,"user_id":7888956,"user_type":"registered","profile_image":"https://i.stack.imgur.com/vfzrr.png?s=128&g=1","display_name":"DeC","link":"https://stackoverflow.com/users/7888956/dec"},"comment_count":0,"score":7,"creation_date":1572924323,"body_markdown":"A: Java does manipulate objects by reference, and all object variables are references. However, Java doesn&#39;t pass method arguments by reference; it passes them by value.\r\n\r\nTake the badSwap() method for example:\r\n\r\n    public void badSwap(int var1, int var2)\r\n    {\r\n      int temp = var1;\r\n      var1 = var2;\r\n      var2 = temp;\r\n    }\r\n\r\nWhen badSwap() returns, the variables passed as arguments will still hold their original values. The method will also fail if we change the arguments type from int to Object, since Java passes object references by value as well. Now, here is where it gets tricky:\r\n\r\n    public void tricky(Point arg1, Point arg2)\r\n    {\r\n      arg1.x = 100;\r\n      arg1.y = 100;\r\n      Point temp = arg1;\r\n      arg1 = arg2;\r\n      arg2 = temp;\r\n    }\r\n    public static void main(String [] args)\r\n    {\r\n      Point pnt1 = new Point(0,0);\r\n      Point pnt2 = new Point(0,0);\r\n      System.out.println(&quot;X: &quot; + pnt1.x + &quot; Y: &quot; +pnt1.y); \r\n      System.out.println(&quot;X: &quot; + pnt2.x + &quot; Y: &quot; +pnt2.y);\r\n      System.out.println(&quot; &quot;);\r\n      tricky(pnt1,pnt2);\r\n      System.out.println(&quot;X: &quot; + pnt1.x + &quot; Y:&quot; + pnt1.y); \r\n      System.out.println(&quot;X: &quot; + pnt2.x + &quot; Y: &quot; +pnt2.y);  \r\n    }\r\n\r\nIf we execute this main() method, we see the following output:\r\n\r\n    X: 0 Y: 0\r\n    X: 0 Y: 0\r\n    X: 100 Y: 100\r\n    X: 0 Y: 0\r\n\r\nThe method successfully alters the value of pnt1, even though it is passed by value; however, a swap of pnt1 and pnt2 fails! This is the major source of confusion. In the main() method, pnt1 and pnt2 are nothing more than object references. When you pass pnt1 and pnt2 to the tricky() method, Java passes the references by value just like any other parameter. This means the references passed to the method are actually copies of the original references. Figure 1 below shows two references pointing to the same object after Java passes an object to a method.\r\n\r\n[![enter image description here][1]][1]  \r\nFigure 1. After being passed to a method, an object will have at least two references\r\n\r\nJava copies and passes the reference by value, not the object. Thus, method manipulation will alter the objects, since the references point to the original objects. But since the references are copies, swaps will fail.The method references swap, but not the original references. Unfortunately, after a method call, you are left with only the unswapped original references. For a swap to succeed outside of the method call, we need to swap the original references, not the copies.\r\n\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/wLEj7.png","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":1191,"user_id":1028560,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/0357781c153374f699360c669c31b4fa?s=128&d=identicon&r=PG","display_name":"Sanjeev","link":"https://stackoverflow.com/users/1028560/sanjeev"},"score":4,"creation_date":1582237478},{"owner":{"reputation":177,"user_id":5486740,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/4eb73c504cc814bbc4d8ad060a3e0e30?s=128&d=identicon&r=PG&f=1","display_name":"Mr.Robot","link":"https://stackoverflow.com/users/5486740/mr-robot"},"score":3,"creation_date":1585844885},{"owner":{"reputation":1191,"user_id":1028560,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/0357781c153374f699360c669c31b4fa?s=128&d=identicon&r=PG","display_name":"Sanjeev","link":"https://stackoverflow.com/users/1028560/sanjeev"},"score":0,"creation_date":1585851478},{"owner":{"reputation":1191,"user_id":1028560,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/0357781c153374f699360c669c31b4fa?s=128&d=identicon&r=PG","display_name":"Sanjeev","link":"https://stackoverflow.com/users/1028560/sanjeev"},"score":0,"creation_date":1585853392},{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":3,"creation_date":1586086851},{"owner":{"reputation":1572,"user_id":2545722,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/3b245d38494a4043d5f0d4fdc15b1c74?s=128&d=identicon&r=PG","display_name":"AFP_555","link":"https://stackoverflow.com/users/2545722/afp-555"},"score":0,"creation_date":1605615088}],"owner":{"reputation":177,"user_id":5486740,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/4eb73c504cc814bbc4d8ad060a3e0e30?s=128&d=identicon&r=PG&f=1","display_name":"Mr.Robot","link":"https://stackoverflow.com/users/5486740/mr-robot"},"comment_count":6,"score":12,"creation_date":1581283803,"body_markdown":"I see that all answers contain the same: pass by value. However, a recent Brian Goetz update on project Valhalla actually answers it differently:\r\n&gt; Indeed, it is a common “gotcha” question about whether Java objects are passed by value or by reference, and **the answer is “neither”: object references are passed by value.**\r\n\r\nYou can read more here: [State of Valhalla. Section 2: Language Model][1]\r\n\r\n\r\n  [1]: http://cr.openjdk.java.net/~briangoetz/valhalla/sov/02-object-model.html\r\n\r\n**Edit:** Brian Goetz is Java Language Architect, leading such projects as Project Valhalla and Project Amber.\r\n\r\n**Edit-2020-12-08**: Updated [State of Valhalla](https://github.com/openjdk/valhalla-docs/blob/main/site/design-notes/state-of-valhalla/02-object-model.md)","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":417,"user_id":2825515,"user_type":"registered","profile_image":"https://i.stack.imgur.com/O2wr6.jpg?s=128&g=1","display_name":"Saranga  kapilarathna","link":"https://stackoverflow.com/users/2825515/saranga-kapilarathna"},"comment_count":0,"score":1,"creation_date":1584074716,"body_markdown":"Please read  this.\r\n\r\nMany programming languages allow passing parameters by reference or by value. In Java, we can only pass parameters by value. This imposes some limits and also raises questions. For instance, if the parameter value is changed in the method, what happens to the value following method execution? You may also wonder how Java manages object values in the memory heap. This Java Challenger helps you resolve these and other common questions about object references in Java.\r\n\r\nFor the more:\r\n\r\nhttps://www.javaworld.com/article/3512039/does-java-pass-by-reference-or-pass-by-value.html","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":116,"user_id":8421291,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-8XVYso4qYxc/AAAAAAAAAAI/AAAAAAAAHIA/63UVRnCpc8M/photo.jpg?sz=128","display_name":"Abhishek Attri","link":"https://stackoverflow.com/users/8421291/abhishek-attri"},"score":0,"creation_date":1608631530}],"owner":{"reputation":8265,"user_id":511804,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/f80c32df1d3e07e85e4806dcaeb01d58?s=128&d=identicon&r=PG","display_name":"Alexandr","link":"https://stackoverflow.com/users/511804/alexandr"},"comment_count":1,"score":4,"creation_date":1602296852,"body_markdown":"I&#39;d say it in another way:\r\n\r\nIn java references are passed (but not objects) and these references are passed-by-value  (the reference itself is copied and you have 2 references as a result and you have no control under the 1st reference in the method). \r\n\r\nJust saying: pass-by-value might be not clear enough for beginners. For instance in Python the same situation but there are articles, which describe that they call it `pass-by-reference`, only cause references are used.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"comments":[{"owner":{"reputation":828,"user_id":8439576,"user_type":"registered","profile_image":"https://i.stack.imgur.com/0Jdn9.jpg?s=128&g=1","display_name":"Mohith7548","link":"https://stackoverflow.com/users/8439576/mohith7548"},"score":0,"creation_date":1604399215},{"owner":{"reputation":306,"user_id":5437033,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3ae8934ac0d0201fb7a2464c8756e521?s=128&d=identicon&r=PG&f=1","display_name":"Chrispher","link":"https://stackoverflow.com/users/5437033/chrispher"},"score":0,"creation_date":1605355076}],"owner":{"reputation":252,"user_id":6582191,"user_type":"registered","profile_image":"https://i.stack.imgur.com/AEh6p.jpg?s=128&g=1","display_name":"Duleepa Wickramasinghe","link":"https://stackoverflow.com/users/6582191/duleepa-wickramasinghe"},"comment_count":2,"score":7,"creation_date":1602990961,"body_markdown":"**Java always passes parameters by value.** \r\n&lt;br&gt;All object references in Java are passed by value. This means that a copy of the value will be passed to a method. But the trick is that passing a copy of the value also changes the real value of the object.\r\n\r\nPlease refer to the below example,\r\n\r\n    public class ObjectReferenceExample {\r\n    \r\n    \tpublic static void main(String... doYourBest) {\r\n        \t    Student student = new Student();\r\n        \t    transformIntoHomer(student);\r\n        \t    System.out.println(student.name);\r\n    \t}\r\n    \r\n    \tstatic void transformIntoDuleepa(Student student) {\r\n        \t    student.name = &quot;Duleepa&quot;;\r\n    \t}\r\n    }\r\n    class Student {\r\n    \tString name;\r\n    }\r\n\r\nIn this case, it will be Duleepa! \r\n&lt;br&gt;The reason is that Java object variables are simply references that point to real objects in the memory heap.\r\nTherefore, even though Java passes parameters to methods by value, if the variable points to an object reference, the real object will also be changed.","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":269,"user_id":11913248,"user_type":"registered","profile_image":"https://i.stack.imgur.com/4Bfq0.jpg?s=128&g=1","display_name":"Pallav Khare","link":"https://stackoverflow.com/users/11913248/pallav-khare"},"comment_count":0,"score":3,"creation_date":1605982662,"body_markdown":"Java is always pass by value, not pass by reference\r\n\r\nFirst of all, we need to understand what pass by value and pass by reference are.\r\n\r\nPass by value means that you are making a copy in memory of the actual parameter&#39;s value that is passed in. This is a copy of the contents of the actual parameter.\r\n\r\nPass by reference (also called pass by address) means that a copy of the address of the actual parameter is stored.\r\n\r\nSometimes Java can give the illusion of pass by reference. Let&#39;s see how it works by using the example below:\r\n\r\n    public class PassByValue {\r\n        public static void main(String[] args) {\r\n            Test t = new Test();\r\n            t.name = &quot;initialvalue&quot;;\r\n            new PassByValue().changeValue(t);\r\n            System.out.println(t.name);\r\n        }\r\n        \r\n        public void changeValue(Test f) {\r\n            f.name = &quot;changevalue&quot;;\r\n        }\r\n    }\r\n    \r\n    class Test {\r\n        String name;\r\n    }\r\n\r\nThe output of this program is:\r\n\r\nchangevalue\r\nLet&#39;s understand step by step:\r\n\r\nTest t = new Test();\r\nAs we all know it will create an object in the heap and return the reference value back to t. For example, suppose the value of t is 0x100234 (we don&#39;t know the actual JVM internal value, this is just an example) .\r\n\r\nfirst illustration\r\n\r\n    new PassByValue().changeValue(t);\r\n\r\nWhen passing reference t to the function it will not directly pass the actual reference value of object test, but it will create a copy of t and then pass it to the function. Since it is passing by value, it passes a copy of the variable rather than the actual reference of it. Since we said the value of t was 0x100234, both t and f will have the same value and hence they will point to the same object.\r\n\r\nsecond illustration\r\n\r\nIf you change anything in the function using reference f it will modify the existing contents of the object. That is why we got the output changevalue, which is updated in the function.\r\n\r\nTo understand this more clearly, consider the following example:\r\n\r\n    public class PassByValue {\r\n        public static void main(String[] args) {\r\n            Test t = new Test();\r\n            t.name = &quot;initialvalue&quot;;\r\n            new PassByValue().changeRefence(t);\r\n            System.out.println(t.name);\r\n        }\r\n        \r\n        public void changeRefence(Test f) {\r\n            f = null;\r\n        }\r\n    }\r\n    \r\n    class Test {\r\n        String name;\r\n    }\r\n\r\nWill this throw a NullPointerException? No, because it only passes a copy of the reference. In the case of passing by reference, it could have thrown a NullPointerException, as seen below:\r\n\r\nthird illustration\r\n\r\nHopefully this will help.\r\n","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":805,"user_id":8932910,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b8ed75b474f7bc5dcf6dfb8c778d17a2?s=128&d=identicon&r=PG&f=1","display_name":"jack","link":"https://stackoverflow.com/users/8932910/jack"},"comment_count":0,"score":8,"creation_date":1609015769,"body_markdown":"Not to repeat, but one point to those who might still be confused after reading many answers:\r\n\r\n- `pass by value` in Java is **NOT EQUAL** to `pass by value` in C++, though it sounds like that, which is probably why there&#39;s confusion\r\n\r\nBreaking it down:\r\n- `pass by value` in C++ means passing the value of the object (if object), literarily the copy of the object\r\n- `pass by value` in Java means passing the address value of the object (if object), not really the &quot;value&quot; (a copy) of the object like C++\r\n- By `pass by value` in Java, operating on an object (e.g. `myObj.setName(&quot;new&quot;)`) inside a function **has effects** on the object outside the function; by `pass by value` in C++, it has **NO** effects on the one outside.\r\n- However, by `pass by reference` in C++, operating on an object in a function **DOES** have effects on the one outside! Similar (_just similar, not the same_) to `pass by value` in Java, no?.. and people always repeat &quot;_there&#39;s no pass by reference in Java_&quot;, =&gt; **BOOM, confusion starts...**\r\n\r\nSo, friends, all is just about the **difference** of terminology definition (across languages), you just need to know how it works and that&#39;s it (_though sometimes a bit confusing how it&#39;s called I admit_)!","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":115,"user_id":5003351,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/88284011adae96891786274498272eb9?s=128&d=identicon&r=PG&f=1","display_name":"&#246;mer.bozkurt","link":"https://stackoverflow.com/users/5003351/%c3%b6mer-bozkurt"},"comment_count":0,"score":0,"creation_date":1615036933,"body_markdown":"If you want it to put into a single sentence to understand and remember easily, simplest answer:\r\n\r\nJava is always **pass the value with a new reference**\r\n\r\n(So you can modify the original object but can not access the original reference) ","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"owner":{"reputation":150,"user_id":4086871,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dae3f3096e52f06c5a4e3c18866a1610?s=128&d=identicon&r=PG&f=1","display_name":"charles","link":"https://stackoverflow.com/users/4086871/charles"},"comment_count":0,"score":1,"creation_date":1615170277,"body_markdown":"Here a more precise definition:\r\n\r\n - **Pass/call by value:** Formal parameter is like a local variable in\r\n   scope of function, it evaluates to actual parameter at the moment of\r\n   function call.\r\n - **Pass/call by reference:** Formal parameter is just a alias for the real\r\n   value, any change of it in the scope of function can have side\r\n   effects outside in any other part of code.\r\n\r\nSo in C/C++ you can create a function that swaps two values passed by reference:\r\n\r\n    void swap(int&amp; a, int&amp; b) \r\n    {\r\n        int&amp; tmp = a;\r\n        a = b;\r\n        b = tmp;\r\n    }\r\n\r\nYou can see it has a unique reference to a and b, so we do not have a copy, tmp just hold unique references.\r\n\r\nThe same function in java does not have side effects, the parameter passing is just like the code above without references.\r\n\r\nAlthough java work with pointers/references, the parameters are not unique pointers, in each attribution, they are copied instead just assigned like C/C++","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"}],"owner":{"reputation":4715,"user_id":4315,"user_type":"registered","display_name":"user4315","link":"https://stackoverflow.com/users/4315/user4315"},"comment_count":7,"is_answered":true,"answer_count":86,"score":6949,"creation_date":1220386469,"question_id":40480,"body_markdown":"I always thought Java uses **pass-by-reference**.\r\n\r\nHowever, I&#39;ve seen a couple of blog posts (for example, [this blog][1]) that claim that it isn&#39;t (the blog post says that Java uses **pass-by-value**).\r\n\r\nI don&#39;t think I understand the distinction they&#39;re making. \r\n\r\nWhat is the explanation?\r\n\r\n  [1]: http://javadude.com/articles/passbyvalue.htm\r\n","link":"https://stackoverflow.com/questions/40480/is-java-pass-by-reference-or-pass-by-value","title":"Is Java &quot;pass-by-reference&quot; or &quot;pass-by-value&quot;?"},{"tags":["java","string","io","stream","inputstream"],"comments":[{"owner":{"reputation":4283,"user_id":6304094,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ca5952420104811d556385f320dd6f09?s=128&d=identicon&r=PG&f=1","display_name":"Kevin Anderson","link":"https://stackoverflow.com/users/6304094/kevin-anderson"},"score":0,"creation_date":1602165739},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":0,"creation_date":1604051543}],"answers":[{"comments":[{"owner":{"reputation":562,"user_id":2077582,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7696f4e5f954935321518327f95306d1?s=128&d=identicon&r=PG","display_name":"RCB","link":"https://stackoverflow.com/users/2077582/rcb"},"score":0,"creation_date":1593703580}],"owner":{"reputation":28262,"user_id":21590,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/d21e4f986f5b05d89b0070b37e296a87?s=128&d=identicon&r=PG","display_name":"Harry Lime","link":"https://stackoverflow.com/users/21590/harry-lime"},"comment_count":1,"score":2654,"creation_date":1227286460,"body_markdown":"A nice way to do this is using [Apache commons][1] &lt;code&gt;[IOUtils][2]&lt;/code&gt; to copy the &lt;code&gt;InputStream&lt;/code&gt; into a &lt;code&gt;StringWriter&lt;/code&gt;... something like\r\n\r\n    StringWriter writer = new StringWriter();\r\n    IOUtils.copy(inputStream, writer, encoding);\r\n    String theString = writer.toString();\r\n\r\nor even\r\n\r\n    // NB: does not close inputStream, you&#39;ll have to use try-with-resources for that\r\n    String theString = IOUtils.toString(inputStream, encoding); \r\n\r\nAlternatively, you could use &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; if you don&#39;t want to mix your Streams and Writers\r\n\r\n\r\n  [1]: http://commons.apache.org/\r\n  [2]: https://commons.apache.org/proper/commons-io/javadocs/api-release/org/apache/commons/io/IOUtils.html","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":4805,"user_id":4100,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f2ffcd63c3f62b86a905ebe89da2c69d?s=128&d=identicon&r=PG","display_name":"Paul de Vrieze","link":"https://stackoverflow.com/users/4100/paul-de-vrieze"},"comment_count":0,"score":306,"creation_date":1227292451,"body_markdown":"Taking into account file one should first get a `java.io.Reader` instance. This can then be read and added to a `StringBuilder` (we don&#39;t need `StringBuffer` if we are not accessing it in multiple threads, and `StringBuilder` is faster). The trick here is that we work in blocks, and as such don&#39;t need other buffering streams. The block size is parameterized for run-time performance optimization.\r\n\r\n    public static String slurp(final InputStream is, final int bufferSize) {\r\n        final char[] buffer = new char[bufferSize];\r\n        final StringBuilder out = new StringBuilder();\r\n        try (Reader in = new InputStreamReader(is, &quot;UTF-8&quot;)) {\r\n            for (;;) {\r\n                int rsz = in.read(buffer, 0, buffer.length);\r\n                if (rsz &lt; 0)\r\n                    break;\r\n                out.append(buffer, 0, rsz);\r\n            }\r\n        }\r\n        catch (UnsupportedEncodingException ex) {\r\n            /* ... */\r\n        }\r\n        catch (IOException ex) {\r\n            /* ... */\r\n        }\r\n        return out.toString();\r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":1478,"user_id":3425489,"user_type":"registered","accept_rate":58,"profile_image":"https://i.stack.imgur.com/pvkCq.jpg?s=128&g=1","display_name":"Shantaram Tupe","link":"https://stackoverflow.com/users/3425489/shantaram-tupe"},"score":0,"creation_date":1614168393}],"owner":{"reputation":9899,"user_id":31892,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/22aa27d8821b495e095f79dd331ef3d4?s=128&d=identicon&r=PG","display_name":"Chinnery","link":"https://stackoverflow.com/users/31892/chinnery"},"comment_count":1,"score":864,"creation_date":1228767222,"body_markdown":"Apache Commons allows:\r\n\r\n    String myString = IOUtils.toString(myInputStream, &quot;UTF-8&quot;);\r\n\r\nOf course, you could choose other character encodings besides UTF-8.\r\n\r\nAlso see: ([documentation][1])\r\n\r\n  [1]: http://commons.apache.org/proper/commons-io/javadocs/api-2.4/org/apache/commons/io/IOUtils.html#toString%28java.io.InputStream,%20java.lang.String\r\n\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":1260,"user_id":57541,"user_type":"registered","profile_image":"https://i.stack.imgur.com/3ATwT.jpg?s=128&g=1","display_name":"Jon Moore","link":"https://stackoverflow.com/users/57541/jon-moore"},"comment_count":0,"score":70,"creation_date":1244668031,"body_markdown":"Use:\r\n\r\n    import java.io.BufferedInputStream;\r\n    import java.io.ByteArrayOutputStream;\r\n    import java.io.InputStream;\r\n    import java.io.IOException;\r\n\r\n    public static String readInputStreamAsString(InputStream in)\r\n        throws IOException {\r\n\r\n        BufferedInputStream bis = new BufferedInputStream(in);\r\n        ByteArrayOutputStream buf = new ByteArrayOutputStream();\r\n        int result = bis.read();\r\n        while(result != -1) {\r\n          byte b = (byte)result;\r\n          buf.write(b);\r\n          result = bis.read();\r\n        }\r\n        return buf.toString();\r\n    }\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":2025,"user_id":344029,"user_type":"registered","profile_image":"https://i.stack.imgur.com/ogaEc.png?s=128&g=1","display_name":"DJDaveMark","link":"https://stackoverflow.com/users/344029/djdavemark"},"comment_count":0,"score":22,"creation_date":1274187473,"body_markdown":"If you can&#39;t use Commons IO (FileUtils/IOUtils/CopyUtils), here&#39;s an example using a BufferedReader to read the file line by line:\r\n\r\n    public class StringFromFile {\r\n        public static void main(String[] args) /*throws UnsupportedEncodingException*/ {\r\n            InputStream is = StringFromFile.class.getResourceAsStream(&quot;file.txt&quot;);\r\n            BufferedReader br = new BufferedReader(new InputStreamReader(is/*, &quot;UTF-8&quot;*/));\r\n            final int CHARS_PER_PAGE = 5000; //counting spaces\r\n            StringBuilder builder = new StringBuilder(CHARS_PER_PAGE);\r\n            try {\r\n                for(String line=br.readLine(); line!=null; line=br.readLine()) {\r\n                    builder.append(line);\r\n                    builder.append(&#39;\\n&#39;);\r\n                }\r\n            } \r\n            catch (IOException ignore) { }\r\n\r\n            String text = builder.toString();\r\n            System.out.println(text);\r\n        }\r\n    }\r\n\r\nOr if you want raw speed I&#39;d propose a variation on what Paul de Vrieze suggested (which avoids using a StringWriter (which uses a StringBuffer internally):\r\n\r\n    public class StringFromFileFast {\r\n        public static void main(String[] args) /*throws UnsupportedEncodingException*/ {\r\n            InputStream is = StringFromFileFast.class.getResourceAsStream(&quot;file.txt&quot;);\r\n            InputStreamReader input = new InputStreamReader(is/*, &quot;UTF-8&quot;*/);\r\n            final int CHARS_PER_PAGE = 5000; //counting spaces\r\n            final char[] buffer = new char[CHARS_PER_PAGE];\r\n            StringBuilder output = new StringBuilder(CHARS_PER_PAGE);\r\n            try {\r\n                for(int read = input.read(buffer, 0, buffer.length);\r\n                        read != -1;\r\n                        read = input.read(buffer, 0, buffer.length)) {\r\n                    output.append(buffer, 0, read);\r\n                }\r\n            } catch (IOException ignore) { }\r\n\r\n            String text = output.toString();\r\n            System.out.println(text);\r\n        }\r\n    }\r\n\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":2531,"user_id":151614,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8befd100204a47f55d422e6d46ee039d?s=128&d=identicon&r=PG","display_name":"Sakuraba","link":"https://stackoverflow.com/users/151614/sakuraba"},"comment_count":0,"score":175,"creation_date":1279036584,"body_markdown":"If you are using Google-Collections/Guava you could do the following:\r\n\r\n    InputStream stream = ...\r\n    String content = CharStreams.toString(new InputStreamReader(stream, Charsets.UTF_8));\r\n    Closeables.closeQuietly(stream);\r\n\r\nNote that the second parameter (i.e. Charsets.UTF_8) for the `InputStreamReader` isn&#39;t necessary, but it is generally a good idea to specify the encoding if you know it (which you should!)","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":219,"user_id":4425158,"user_type":"registered","profile_image":"https://i.stack.imgur.com/dDD2R.jpg?s=128&g=1","display_name":"Oleg Markelov","link":"https://stackoverflow.com/users/4425158/oleg-markelov"},"score":0,"creation_date":1603087998},{"owner":{"reputation":29751,"user_id":43151,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a0886310289840857f4763f2559b740c?s=128&d=identicon&r=PG","display_name":"Pavel Repin","link":"https://stackoverflow.com/users/43151/pavel-repin"},"score":0,"creation_date":1604952302}],"owner":{"reputation":29751,"user_id":43151,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a0886310289840857f4763f2559b740c?s=128&d=identicon&r=PG","display_name":"Pavel Repin","link":"https://stackoverflow.com/users/43151/pavel-repin"},"comment_count":2,"score":2328,"creation_date":1301172025,"body_markdown":"Here&#39;s a way using only the standard Java library (note that the stream is not closed, your mileage may vary).\r\n\r\n    static String convertStreamToString(java.io.InputStream is) {\r\n        java.util.Scanner s = new java.util.Scanner(is).useDelimiter(&quot;\\\\A&quot;);\r\n        return s.hasNext() ? s.next() : &quot;&quot;;\r\n    }\r\n\r\nI learned this trick from [&quot;Stupid Scanner tricks&quot;][1] article. The reason it works is because [Scanner][2] iterates over tokens in the stream, and in this case we separate tokens using &quot;beginning of the input boundary&quot; (\\A), thus giving us only one token for the entire contents of the stream.\r\n\r\n**Note, if you need to be specific about the input stream&#39;s encoding, you can provide the second argument to `Scanner` constructor that indicates what character set to use (e.g. &quot;UTF-8&quot;).**\r\n\r\nHat tip goes also to [Jacob][3], who once pointed me to the said article.\r\n\r\n  [1]: https://community.oracle.com/blogs/pat/2004/10/23/stupid-scanner-tricks\r\n  [2]: http://download.oracle.com/javase/8/docs/api/java/util/Scanner.html\r\n  [3]: https://stackoverflow.com/users/68127/jacob-gabrielson\r\n  [4]: https://stackoverflow.com/users/101272/patrick\r\n\r\n\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":3865,"user_id":559185,"user_type":"registered","accept_rate":68,"profile_image":"https://i.stack.imgur.com/0L0Kw.png?s=128&g=1","display_name":"sampathpremarathna","link":"https://stackoverflow.com/users/559185/sampathpremarathna"},"comment_count":0,"score":257,"creation_date":1312446584,"body_markdown":"Use:\r\n\r\n    InputStream in = /* Your InputStream */;\r\n    StringBuilder sb = new StringBuilder();\r\n    BufferedReader br = new BufferedReader(new InputStreamReader(in));\r\n    String read;\r\n\r\n    while ((read=br.readLine()) != null) {\r\n        //System.out.println(read);\r\n        sb.append(read);\r\n    }\r\n\r\n    br.close();\r\n    return sb.toString();\r\n\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":1099,"user_id":370547,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/567206ae95ef2022a89b05a030c3b15b?s=128&d=identicon&r=PG","display_name":"Brett Holt","link":"https://stackoverflow.com/users/370547/brett-holt"},"comment_count":0,"score":35,"creation_date":1318440181,"body_markdown":"I ran some timing tests because time matters, always.&lt;br/&gt;\r\n\r\nI attempted to get the response into a String 3 different ways. (shown below)&lt;br/&gt;\r\nI left out try/catch blocks for the sake readability.&lt;br/&gt;\r\n\r\nTo give context, this is the preceding code for all 3 approaches:&lt;br/&gt;\r\n\r\n       String response;\r\n       String url = &quot;www.blah.com/path?key=value&quot;;\r\n       GetMethod method = new GetMethod(url);\r\n       int status = client.executeMethod(method);\r\n\r\n1)&lt;br/&gt;\r\n   \r\n\r\n     response = method.getResponseBodyAsString();\r\n\r\n2)&lt;br/&gt;\r\n\r\n    InputStream resp = method.getResponseBodyAsStream();\r\n    InputStreamReader is=new InputStreamReader(resp);\r\n    BufferedReader br=new BufferedReader(is);\r\n    String read = null;\r\n    StringBuffer sb = new StringBuffer();\r\n    while((read = br.readLine()) != null) {\r\n        sb.append(read);\r\n    }\r\n    response = sb.toString();\r\n\r\n3)&lt;br/&gt;\r\n\r\n    InputStream iStream  = method.getResponseBodyAsStream();\r\n    StringWriter writer = new StringWriter();\r\n    IOUtils.copy(iStream, writer, &quot;UTF-8&quot;);\r\n    response = writer.toString();\r\n\r\nSo, after running 500 tests on each approach with the same request/response data, here are the numbers. Once again, these are my findings and your findings may not be exactly the same, but I wrote this to give some indication to others of the efficiency differences of these approaches.\r\n\r\nRanks:&lt;br/&gt;\r\nApproach #1&lt;br/&gt;\r\nApproach #3 - 2.6% slower than #1&lt;br/&gt;\r\nApproach #2 - 4.3% slower than #1&lt;br/&gt;\r\n\r\nAny of these approaches is an appropriate solution for grabbing a response and creating a String from it.","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":15452,"user_id":828757,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/37ce082c85173317772af80b64345526?s=128&d=identicon&r=PG","display_name":"Jack","link":"https://stackoverflow.com/users/828757/jack"},"comment_count":0,"score":26,"creation_date":1331105530,"body_markdown":"If you were feeling adventurous, you could mix Scala and Java and end up with this:\r\n\r\n    scala.io.Source.fromInputStream(is).mkString(&quot;&quot;)\r\n\r\nMixing Java and Scala code and libraries has it&#39;s benefits.\r\n\r\nSee full description here: https://stackoverflow.com/q/5221524/828757","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":748,"user_id":458244,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/37b1a2f47e378dd6f511c21ea5ed506e?s=128&d=identicon&r=PG","display_name":"TKH","link":"https://stackoverflow.com/users/458244/tkh"},"comment_count":0,"score":27,"creation_date":1333137151,"body_markdown":"Here&#39;s more-or-less sampath&#39;s answer, cleaned up a bit and represented as a function:\r\n\r\n    String streamToString(InputStream in) throws IOException {\r\n      StringBuilder out = new StringBuilder();\r\n      BufferedReader br = new BufferedReader(new InputStreamReader(in));\r\n      for(String line = br.readLine(); line != null; line = br.readLine()) \r\n        out.append(line);\r\n      br.close();\r\n      return out.toString();\r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":9416,"user_id":348189,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/29b1970e8e3ec8cbd13bbc02a8d7a22c?s=128&d=identicon&r=PG","display_name":"TacB0sS","link":"https://stackoverflow.com/users/348189/tacb0ss"},"comment_count":0,"score":127,"creation_date":1336508651,"body_markdown":"This is the best pure Java solution that fits perfectly for Android and any other JVM.\r\n\r\nThis solution works amazingly well... it is simple, fast, and works on small and large streams just the same!! (see benchmark above.. **No. 8**)\r\n\r\n    public String readFullyAsString(InputStream inputStream, String encoding)\r\n            throws IOException {\r\n        return readFully(inputStream).toString(encoding);\r\n    }\r\n\r\n    public byte[] readFullyAsBytes(InputStream inputStream)\r\n            throws IOException {\r\n        return readFully(inputStream).toByteArray();\r\n    }\r\n\r\n    private ByteArrayOutputStream readFully(InputStream inputStream)\r\n            throws IOException {\r\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n        byte[] buffer = new byte[1024];\r\n        int length = 0;\r\n        while ((length = inputStream.read(buffer)) != -1) {\r\n            baos.write(buffer, 0, length);\r\n        }\r\n        return baos;\r\n    }\r\n\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":1174,"user_id":674856,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/959dcf1e004eb5e9e42b22346ce370c7?s=128&d=identicon&r=PG","display_name":"XXL","link":"https://stackoverflow.com/users/674856/xxl"},"score":1,"creation_date":1342782813},{"owner":{"reputation":32802,"user_id":48136,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f31c7fbcbb0766d0632d96fd7e74b649?s=128&d=identicon&r=PG","display_name":"Brice","link":"https://stackoverflow.com/users/48136/brice"},"score":3,"creation_date":1364998633},{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1546684644}],"owner":{"reputation":421,"user_id":772549,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/f6ec07c16857a31a20fbea3dfc4a3816?s=128&d=identicon&r=PG","display_name":"soBinary","link":"https://stackoverflow.com/users/772549/sobinary"},"comment_count":3,"score":-9,"creation_date":1342719219,"body_markdown":"Quick and easy:\r\n\r\n    String result = (String)new ObjectInputStream( inputStream ).readObject();","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":352,"user_id":1548325,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/75ac98dd52c8b393234b824f55dcdc49?s=128&d=identicon&r=PG","display_name":"Anand N","link":"https://stackoverflow.com/users/1548325/anand-n"},"comment_count":0,"score":5,"creation_date":1343125159,"body_markdown":"The below code worked for me. \r\n\r\n    URL url = MyClass.class.getResource(&quot;/&quot; + configFileName);\r\n    BufferedInputStream bi = (BufferedInputStream) url.getContent();\r\n\tbyte[] buffer = new byte[bi.available() ];\r\n\tint bytesRead = bi.read(buffer);\r\n\tString out = new String(buffer);\r\n\r\nPlease note, according to Java docs, the `available()` method might not work with `InputStream` but always works with `BufferedInputStream`.\r\nIn case you don&#39;t want to use `available()` method we can always use the below code\r\n\r\n    URL url = MyClass.class.getResource(&quot;/&quot; + configFileName);\r\n\tBufferedInputStream bi = (BufferedInputStream) url.getContent();\r\n\tFile f = new File(url.getPath());\r\n\tbyte[] buffer = new byte[ (int) f.length()];\r\n\tint bytesRead = bi.read(buffer);\r\n\tString out = new String(buffer);\r\n\r\nI am not sure if there will be any encoding issues. Please comment, if there will be any issues with the code.","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":159,"user_id":1794244,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/66304aaee3b9e8d537524ad0c626a47d?s=128&d=identicon&r=PG","display_name":"Matt Shannon","link":"https://stackoverflow.com/users/1794244/matt-shannon"},"comment_count":0,"score":15,"creation_date":1351859873,"body_markdown":"Here&#39;s how to do it using just the JDK using byte array buffers. This is actually how the commons-io `IOUtils.copy()` methods all work. You can replace `byte[]` with `char[]` if you&#39;re copying from a `Reader` instead of an `InputStream`.\r\n\r\n    import java.io.ByteArrayOutputStream;\r\n    import java.io.InputStream;\r\n\r\n    ...\r\n\r\n    InputStream is = ....\r\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(8192);\r\n    byte[] buffer = new byte[8192];\r\n    int count = 0;\r\n    try {\r\n      while ((count = is.read(buffer)) != -1) {\r\n        baos.write(buffer, 0, count);\r\n      }\r\n    }\r\n    finally {\r\n      try {\r\n        is.close();\r\n      }\r\n      catch (Exception ignore) {\r\n      }\r\n    }\r\n\r\n    String charset = &quot;UTF-8&quot;;\r\n    String inputStreamAsString = baos.toString(charset);\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":9261,"user_id":1506477,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a5d48d8856ee5051fbb431cd0cf12deb?s=128&d=identicon&r=PG","display_name":"Thamme Gowda","link":"https://stackoverflow.com/users/1506477/thamme-gowda"},"comment_count":0,"score":20,"creation_date":1353155945,"body_markdown":"Make sure to close the streams at end if you use Stream Readers\r\n    \r\n    private String readStream(InputStream iStream) throws IOException {\r\n        //build a Stream Reader, it can read char by char\r\n        InputStreamReader iStreamReader = new InputStreamReader(iStream);\r\n        //build a buffered Reader, so that i can read whole line at once\r\n        BufferedReader bReader = new BufferedReader(iStreamReader);\r\n        String line = null;\r\n        StringBuilder builder = new StringBuilder();\r\n        while((line = bReader.readLine()) != null) {  //Read till end\r\n            builder.append(line);\r\n            builder.append(&quot;\\n&quot;); // append new line to preserve lines\r\n        }\r\n        bReader.close();         //close all opened stuff\r\n        iStreamReader.close();\r\n        //iStream.close(); //EDIT: Let the creator of the stream close it!\r\n                           // some readers may auto close the inner stream\r\n        return builder.toString();\r\n    }\r\n\r\n----\r\nEDIT: On JDK 7+, you can use try-with-resources construct.\r\n\r\n    /**\r\n     * Reads the stream into a string\r\n     * @param iStream the input stream\r\n     * @return the string read from the stream\r\n     * @throws IOException when an IO error occurs\r\n     */\r\n    private String readStream(InputStream iStream) throws IOException {\r\n\r\n        //Buffered reader allows us to read line by line\r\n        try (BufferedReader bReader =\r\n                     new BufferedReader(new InputStreamReader(iStream))){\r\n            StringBuilder builder = new StringBuilder();\r\n            String line;\r\n            while((line = bReader.readLine()) != null) {  //Read till end\r\n                builder.append(line);\r\n                builder.append(&quot;\\n&quot;); // append new line to preserve lines\r\n            }\r\n            return builder.toString();\r\n        }\r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":261877,"user_id":24874,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/b85169daf0d165b94ea4fa70f409686c?s=128&d=identicon&r=PG","display_name":"Drew Noakes","link":"https://stackoverflow.com/users/24874/drew-noakes"},"comment_count":0,"score":66,"creation_date":1357011827,"body_markdown":"Here&#39;s the most elegant, pure-Java (no library) solution I came up with after some experimentation:\r\n\r\n    public static String fromStream(InputStream in) throws IOException\r\n    {\r\n        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\r\n        StringBuilder out = new StringBuilder();\r\n        String newLine = System.getProperty(&quot;line.separator&quot;);\r\n        String line;\r\n        while ((line = reader.readLine()) != null) {\r\n            out.append(line);\r\n            out.append(newLine);\r\n        }\r\n        return out.toString();\r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"user_type":"does_not_exist","display_name":"user246645"},"score":1,"creation_date":1383906449},{"owner":{"reputation":3314,"user_id":903998,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/pZCd4.jpg?s=128&g=1","display_name":"Victor","link":"https://stackoverflow.com/users/903998/victor"},"score":0,"creation_date":1383927584},{"owner":{"reputation":476,"user_id":281508,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/cef20083dd0ec9e28eb6345b534c9119?s=128&d=identicon&r=PG","display_name":"Vlad Lifliand","link":"https://stackoverflow.com/users/281508/vlad-lifliand"},"score":1,"creation_date":1407538065},{"owner":{"reputation":13800,"user_id":3554264,"user_type":"registered","accept_rate":62,"profile_image":"https://i.stack.imgur.com/TbLcc.jpg?s=128&g=1","display_name":"Christian Hujer","link":"https://stackoverflow.com/users/3554264/christian-hujer"},"score":1,"creation_date":1454277901},{"owner":{"reputation":1444,"user_id":1548776,"user_type":"registered","profile_image":"https://i.stack.imgur.com/zD3sy.jpg?s=128&g=1","display_name":"ᴠɪɴᴄᴇɴᴛ","link":"https://stackoverflow.com/users/1548776/%e1%b4%a0%c9%aa%c9%b4%e1%b4%84%e1%b4%87%c9%b4%e1%b4%9b"},"score":0,"creation_date":1552853251},{"owner":{"reputation":13800,"user_id":3554264,"user_type":"registered","accept_rate":62,"profile_image":"https://i.stack.imgur.com/TbLcc.jpg?s=128&g=1","display_name":"Christian Hujer","link":"https://stackoverflow.com/users/3554264/christian-hujer"},"score":0,"creation_date":1552982863}],"owner":{"reputation":3314,"user_id":903998,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/pZCd4.jpg?s=128&g=1","display_name":"Victor","link":"https://stackoverflow.com/users/903998/victor"},"comment_count":6,"score":5,"creation_date":1362860029,"body_markdown":"Well, you can program it for yourself... It&#39;s not complicated...\r\n\r\n    String Inputstream2String (InputStream is) throws IOException\r\n        {\r\n            final int PKG_SIZE = 1024;\r\n            byte[] data = new byte [PKG_SIZE];\r\n            StringBuilder buffer = new StringBuilder(PKG_SIZE * 10);\r\n            int size;\r\n\r\n            size = is.read(data, 0, data.length);\r\n            while (size &gt; 0)\r\n            {\r\n                String str = new String(data, 0, size);\r\n                buffer.append(str);\r\n                size = is.read(data, 0, data.length);\r\n            }\r\n            return buffer.toString();\r\n        }\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":2987,"user_id":821436,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/edcb51e9ac2b871608bb11cdb7bd3ddd?s=128&d=identicon&r=PG&f=1","display_name":"Martin Schr&#246;der","link":"https://stackoverflow.com/users/821436/martin-schr%c3%b6der"},"score":0,"creation_date":1368631412},{"owner":{"reputation":1,"user_id":2370932,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a30d1cf5f308365d64e8bae3e69f1ec9?s=128&d=identicon&r=PG","display_name":"FK386","link":"https://stackoverflow.com/users/2370932/fk386"},"score":0,"creation_date":1485533166},{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1546684719}],"owner":{"reputation":1,"user_id":2370932,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a30d1cf5f308365d64e8bae3e69f1ec9?s=128&d=identicon&r=PG","display_name":"FK386","link":"https://stackoverflow.com/users/2370932/fk386"},"comment_count":3,"score":-3,"creation_date":1368206715,"body_markdown":"      InputStream IS=new URL(&quot;http://www.petrol.si/api/gas_prices.json&quot;).openStream();   \r\n         \r\n      ByteArrayOutputStream BAOS=new ByteArrayOutputStream();\r\n      IOUtils.copy(IS, BAOS);\r\n      String d= new String(BAOS.toByteArray(),&quot;UTF-8&quot;);           \r\n        \r\n    System.out.println(d);","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":2294,"user_id":1851302,"user_type":"registered","accept_rate":62,"profile_image":"https://i.stack.imgur.com/IwbKa.jpg?s=128&g=1","display_name":"KNU","link":"https://stackoverflow.com/users/1851302/knu"},"score":0,"creation_date":1396870466},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1487895005}],"owner":{"reputation":69,"user_id":2435085,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1c82e330993bd5e8529ac6f13eaed032?s=128&d=identicon&r=PG","display_name":"Omkar Khot","link":"https://stackoverflow.com/users/2435085/omkar-khot"},"comment_count":2,"score":2,"creation_date":1369925544,"body_markdown":"    InputStreamReader i = new InputStreamReader(s);\r\n    BufferedReader str = new BufferedReader(i);\r\n    String msg = str.readLine();\r\n    System.out.println(msg);\r\n\r\n\r\nHere s is your `InputStream` object which will get convert into `String` ","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":1503,"user_id":428594,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0a6486ff56dcfe546eb23d7bba908aa2?s=128&d=identicon&r=PG","display_name":"voidmain","link":"https://stackoverflow.com/users/428594/voidmain"},"comment_count":0,"score":5,"creation_date":1386265987,"body_markdown":"JDK 7/8 answer that closes the stream and still throws an IOException:\r\n\r\n    StringBuilder build = new StringBuilder();\r\n    byte[] buf = new byte[1024];\r\n    int length;\r\n    try (InputStream is = getInputStream()) {\r\n      while ((length = is.read(buf)) != -1) {\r\n        build.append(new String(buf, 0, length));\r\n      }\r\n    }\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":11877,"user_id":1121249,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/LkDcL.png?s=128&g=1","display_name":"rkosegi","link":"https://stackoverflow.com/users/1121249/rkosegi"},"score":1,"creation_date":1538594037}],"owner":{"reputation":3935,"user_id":2217011,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/tqsPN.jpg?s=128&g=1","display_name":"Rys","link":"https://stackoverflow.com/users/2217011/rys"},"comment_count":1,"score":4,"creation_date":1389881025,"body_markdown":"You can use Apache Commons.\r\n\r\nIn the IOUtils you can find the toString method with three helpful implementations.\r\n\r\n    public static String toString(InputStream input) throws IOException {\r\n            return toString(input, Charset.defaultCharset());\r\n    }\r\n    \r\n    public static String toString(InputStream input) throws IOException {\r\n            return toString(input, Charset.defaultCharset());\r\n    }\r\n    \r\n    public static String toString(InputStream input, String encoding)\r\n                throws IOException {\r\n            return toString(input, Charsets.toCharset(encoding));\r\n    }\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":10069,"user_id":2470524,"user_type":"registered","accept_rate":34,"profile_image":"https://www.gravatar.com/avatar/30572a95a69e05b8c921c1ac6672cb63?s=128&d=identicon&r=PG","display_name":"Fred","link":"https://stackoverflow.com/users/2470524/fred"},"score":2,"creation_date":1392909874}],"owner":{"reputation":5519,"user_id":2534090,"user_type":"registered","accept_rate":34,"profile_image":"https://i.stack.imgur.com/DeBhf.png?s=128&g=1","display_name":"JavaTechnical","link":"https://stackoverflow.com/users/2534090/javatechnical"},"comment_count":1,"score":4,"creation_date":1391750231,"body_markdown":"Try these 4 statements..\r\n\r\nAs per the point recalled by Fred, it is not recommended to append a `String` with `+=` operator since every time a new `char` is appended to the existing `String` creating a new `String` object again and assigning its address to `st` while the old `st` object becomes garbage.\r\n\r\n    public String convertStreamToString(InputStream is)\r\n    {\r\n        int k;\r\n        StringBuffer sb=new StringBuffer();\r\n        while((k=fin.read()) != -1)\r\n        {\r\n            sb.append((char)k);\r\n        }\r\n        return sb.toString();\r\n    }\r\n\r\n----------\r\n**Not recommended, but this is also a way**\r\n\r\n    public String convertStreamToString(InputStream is) { \r\n        int k;\r\n        String st=&quot;&quot;;\r\n        while((k=is.read()) != -1)\r\n        {\r\n            st+=(char)k;\r\n        }\r\n        return st;\r\n    }\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":10069,"user_id":2470524,"user_type":"registered","accept_rate":34,"profile_image":"https://www.gravatar.com/avatar/30572a95a69e05b8c921c1ac6672cb63?s=128&d=identicon&r=PG","display_name":"Fred","link":"https://stackoverflow.com/users/2470524/fred"},"comment_count":0,"score":0,"creation_date":1392910139,"body_markdown":"This snippet was found in \\sdk\\samples\\android-19\\connectivity\\NetworkConnect\\NetworkConnectSample\\src\\main\\java\\com\\example\\android\\networkconnect\\MainActivity.java which is licensed under Apache License, Version 2.0 and written by Google.\r\n\r\n    /** Reads an InputStream and converts it to a String.\r\n     * @param stream InputStream containing HTML from targeted site.\r\n     * @param len Length of string that this method returns.\r\n     * @return String concatenated according to len parameter.\r\n     * @throws java.io.IOException\r\n     * @throws java.io.UnsupportedEncodingException\r\n     */\r\n    private String readIt(InputStream stream, int len) throws IOException, UnsupportedEncodingException {\r\n        Reader reader = null;\r\n        reader = new InputStreamReader(stream, &quot;UTF-8&quot;);\r\n        char[] buffer = new char[len];\r\n        reader.read(buffer);\r\n        return new String(buffer);\r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":5075,"user_id":1055284,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/e1kcy.jpg?s=128&g=1","display_name":"Ben Barkay","link":"https://stackoverflow.com/users/1055284/ben-barkay"},"comment_count":0,"score":5,"creation_date":1392917078,"body_markdown":"I have written a class that does just that, so I figured I&#39;d share it with everyone. Sometimes you don&#39;t want to add Apache Commons just for one thing, and want something dumber than Scanner that doesn&#39;t examine the content.\r\n\r\nUsage is as follows\r\n\r\n    // Read from InputStream\r\n    String data = new ReaderSink(inputStream, Charset.forName(&quot;UTF-8&quot;)).drain();\r\n\r\n    // Read from File\r\n    data = new ReaderSink(file, Charset.forName(&quot;UTF-8&quot;)).drain();\r\n\r\n    // Drain input stream to console\r\n    new ReaderSink(inputStream, Charset.forName(&quot;UTF-8&quot;)).drainTo(System.out);\r\n\r\nHere is the code for ReaderSink:\r\n\r\n    import java.io.*;\r\n    import java.nio.charset.Charset;\r\n\r\n    /**\r\n     * A simple sink class that drains a {@link Reader} to a {@link String} or\r\n     * to a {@link Writer}.\r\n     *\r\n     * @author Ben Barkay\r\n     * @version 2/20/2014\r\n     */\r\n    public class ReaderSink {\r\n        /**\r\n         * The default buffer size to use if no buffer size was specified.\r\n         */\r\n        public static final int DEFAULT_BUFFER_SIZE = 1024;\r\n    \r\n        /**\r\n         * The {@link Reader} that will be drained.\r\n         */\r\n        private final Reader in;\r\n    \r\n        /**\r\n         * Constructs a new {@code ReaderSink} for the specified file and charset.\r\n         * @param file      The file to read from.\r\n         * @param charset   The charset to use.\r\n         * @throws FileNotFoundException    If the file was not found on the filesystem.\r\n         */\r\n        public ReaderSink(File file, Charset charset) throws FileNotFoundException {\r\n            this(new FileInputStream(file), charset);\r\n        }\r\n    \r\n        /**\r\n         * Constructs a new {@code ReaderSink} for the specified {@link InputStream}.\r\n         * @param in        The {@link InputStream} to drain.\r\n         * @param charset   The charset to use.\r\n         */\r\n        public ReaderSink(InputStream in, Charset charset) {\r\n            this(new InputStreamReader(in, charset));\r\n        }\r\n    \r\n        /**\r\n         * Constructs a new {@code ReaderSink} for the specified {@link Reader}.\r\n         * @param in    The reader to drain.\r\n         */\r\n        public ReaderSink(Reader in) {\r\n            this.in = in;\r\n        }\r\n    \r\n        /**\r\n         * Drains the data from the underlying {@link Reader}, returning a {@link String} containing\r\n         * all of the read information. This method will use {@link #DEFAULT_BUFFER_SIZE} for\r\n         * its buffer size.\r\n         * @return  A {@link String} containing all of the information that was read.\r\n         */\r\n        public String drain() throws IOException {\r\n            return drain(DEFAULT_BUFFER_SIZE);\r\n        }\r\n    \r\n        /**\r\n         * Drains the data from the underlying {@link Reader}, returning a {@link String} containing\r\n         * all of the read information.\r\n         * @param bufferSize    The size of the buffer to use when reading.\r\n         * @return  A {@link String} containing all of the information that was read.\r\n         */\r\n        public String drain(int bufferSize) throws IOException {\r\n            StringWriter stringWriter = new StringWriter();\r\n            drainTo(stringWriter, bufferSize);\r\n            return stringWriter.toString();\r\n        }\r\n    \r\n        /**\r\n         * Drains the data from the underlying {@link Reader}, writing it to the\r\n         * specified {@link Writer}. This method will use {@link #DEFAULT_BUFFER_SIZE} for\r\n         * its buffer size.\r\n         * @param out   The {@link Writer} to write to.\r\n         */\r\n        public void drainTo(Writer out) throws IOException {\r\n            drainTo(out, DEFAULT_BUFFER_SIZE);\r\n        }\r\n    \r\n        /**\r\n         * Drains the data from the underlying {@link Reader}, writing it to the\r\n         * specified {@link Writer}.\r\n         * @param out           The {@link Writer} to write to.\r\n         * @param bufferSize    The size of the buffer to use when reader.\r\n         */\r\n        public void drainTo(Writer out, int bufferSize) throws IOException {\r\n            char[] buffer = new char[bufferSize];\r\n            int read;\r\n            while ((read = in.read(buffer)) &gt; -1) {\r\n                out.write(buffer, 0, read);\r\n            }\r\n        }\r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":2958,"user_id":978136,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/1a7f6fb72c89e9cef9b7eaf24688c2bd?s=128&d=identicon&r=PG&f=1","display_name":"laksys","link":"https://stackoverflow.com/users/978136/laksys"},"comment_count":0,"score":16,"creation_date":1397039872,"body_markdown":"Here is the complete method for converting `InputStream` into `String` without using any third party library. Use `StringBuilder` for single threaded environment otherwise use `StringBuffer`.  \r\n\r\n    public static String getString( InputStream is) throws IOException {\r\n        int ch;\r\n        StringBuilder sb = new StringBuilder();\r\n        while((ch = is.read()) != -1)\r\n            sb.append((char)ch);\r\n        return sb.toString();\r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":25692,"user_id":305973,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/cd49db0b676767ea4358b1047c4cddd2?s=128&d=identicon&r=PG","display_name":"robinst","link":"https://stackoverflow.com/users/305973/robinst"},"score":4,"creation_date":1407995511}],"owner":{"reputation":3695,"user_id":262379,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/b8bcd362d67c89dbb8dc7b0418109597?s=128&d=identicon&r=PG","display_name":"Dinis Cruz","link":"https://stackoverflow.com/users/262379/dinis-cruz"},"comment_count":1,"score":-1,"creation_date":1399917879,"body_markdown":"I had log4j available, so I was able to use the org.apache.log4j.lf5.util.StreamUtils.getBytes to get the bytes, which I was able to convert into a string using the String ctor\r\n\r\n    String result = new String(StreamUtils.getBytes(inputStream));","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":11423,"user_id":980442,"user_type":"registered","accept_rate":25,"profile_image":"https://i.stack.imgur.com/O6GeW.jpg?s=128&g=1","display_name":"Daniel De Le&#243;n","link":"https://stackoverflow.com/users/980442/daniel-de-le%c3%b3n"},"comment_count":0,"score":19,"creation_date":1402213590,"body_markdown":"This one is nice because:\r\n\r\n - It safely handles the Charset.\r\n - You control the read buffer size.\r\n - You can provision the length of the builder and it doesn&#39;t have to be an exact value.\r\n - Is free from library dependencies.\r\n - Is for Java 7 or higher.\r\n\r\n*How to do it?*\r\n\r\n    public static String convertStreamToString(InputStream is) throws IOException {\r\n       StringBuilder sb = new StringBuilder(2048); // Define a size if you have an idea of it.\r\n       char[] read = new char[128]; // Your buffer size.\r\n       try (InputStreamReader ir = new InputStreamReader(is, StandardCharsets.UTF_8)) {\r\n         for (int i; -1 != (i = ir.read(read)); sb.append(read, 0, i));\r\n       }\r\n       return sb.toString();\r\n    }\r\n\r\nFor JDK 9\r\n\r\n    public static String inputStreamString(InputStream inputStream) throws IOException {\r\n        try (inputStream) {\r\n            return new String(inputStream.readAllBytes(), StandardCharsets.UTF_8);\r\n        }\r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":3695,"user_id":3040627,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/9e7231733dbc07f40f96db5a587ee6ca?s=128&d=identicon&r=PG","display_name":"Simon Kuang","link":"https://stackoverflow.com/users/3040627/simon-kuang"},"comment_count":0,"score":41,"creation_date":1405619882,"body_markdown":"I&#39;d use some Java 8 tricks.\r\n\r\n    public static String streamToString(final InputStream inputStream) throws Exception {\r\n        // buffering optional\r\n        try\r\n        (\r\n            final BufferedReader br\r\n               = new BufferedReader(new InputStreamReader(inputStream))\r\n        ) {\r\n            // parallel optional\r\n            return br.lines().parallel().collect(Collectors.joining(&quot;\\n&quot;));\r\n        } catch (final IOException e) {\r\n            throw new RuntimeException(e);\r\n            // whatever.\r\n        }\r\n    }\r\n\r\nEssentially the same as some other answers except more succinct.","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":4898,"user_id":2420519,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/0d30c42d5ee2da9d89a8c146000a7dc6?s=128&d=identicon&r=PG","display_name":"Hai Zhang","link":"https://stackoverflow.com/users/2420519/hai-zhang"},"comment_count":0,"score":19,"creation_date":1407059276,"body_markdown":"This is an answer adapted from `org.apache.commons.io.IOUtils` [source code](http://grepcode.com/file/repo1.maven.org/maven2/commons-io/commons-io/2.4/org/apache/commons/io/IOUtils.java), for those who want to have the apache implementation but do not want the whole library.\r\n\r\n    private static final int BUFFER_SIZE = 4 * 1024;\r\n\r\n    public static String inputStreamToString(InputStream inputStream, String charsetName)\r\n            throws IOException {\r\n        StringBuilder builder = new StringBuilder();\r\n        InputStreamReader reader = new InputStreamReader(inputStream, charsetName);\r\n        char[] buffer = new char[BUFFER_SIZE];\r\n        int length;\r\n        while ((length = reader.read(buffer)) != -1) {\r\n            builder.append(buffer, 0, length);\r\n        }\r\n        return builder.toString();\r\n    }\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":4774,"user_id":3129572,"user_type":"registered","profile_image":"https://i.stack.imgur.com/YjXYb.jpg?s=128&g=1","display_name":"Vaishali Sutariya","link":"https://stackoverflow.com/users/3129572/vaishali-sutariya"},"comment_count":0,"score":4,"creation_date":1408969846,"body_markdown":"    InputStream is = Context.openFileInput(someFileName); // whatever format you have\r\n    \r\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\r\n\r\n    byte[] b = new byte[8192];\r\n    for (int bytesRead; (bytesRead = is.read(b)) != -1;) {\r\n        bos.write(b, 0, bytesRead);\r\n    }\r\n\r\n    String output = bos.toString(someEncoding);","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"comment_count":0,"score":1,"creation_date":1410423745,"body_markdown":"The following doesn&#39;t address the original question, but rather some of the responses.\r\n\r\nSeveral responses suggest loops of the form\r\n\r\n    String line = null;\r\n    while((line = reader.readLine()) != null) {\r\n      // ...\r\n    }\r\n\r\nor\r\n\r\n    for(String line = reader.readLine(); line != null; line = reader.readLine()) {\r\n        // ...\r\n    }\r\n\r\nThe first form pollutes the namespace of the enclosing scope by declaring a variable &quot;read&quot; in the enclosing scope that will not be used for anything outside the for loop. The second form duplicates the readline() call.\r\n\r\nHere is a much cleaner way of writing this sort of loop in Java. It turns out that the first clause in a for-loop doesn&#39;t require an actual initializer value. This keeps the scope of the variable &quot;line&quot; to within the body of the for loop. Much more elegant! I haven&#39;t seen anybody using this form anywhere (I randomly discovered it one day years ago), but I use it all the time.\r\n\r\n    for (String line; (line = reader.readLine()) != null; ) {\r\n        //...\r\n    }\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":7450,"user_id":159679,"user_type":"registered","accept_rate":64,"profile_image":"https://www.gravatar.com/avatar/450f7e984216da4c72cd521fcbaf8316?s=128&d=identicon&r=PG","display_name":"Alex","link":"https://stackoverflow.com/users/159679/alex"},"comment_count":0,"score":15,"creation_date":1423012344,"body_markdown":"Kotlin users simply do:\r\n\r\n    println(InputStreamReader(is).readText())\r\n\r\nwhereas \r\n\r\n    readText()\r\n\r\nis Kotlin standard library’s built-in extension method.","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":11023,"user_id":639687,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/367828dd86c0336d80700d4d4086cd33?s=128&d=identicon&r=PG","display_name":"czerny","link":"https://stackoverflow.com/users/639687/czerny"},"comment_count":0,"score":34,"creation_date":1424975992,"body_markdown":"Pure Java solution using [Stream][1]s, works since Java 8.\r\n\r\n&lt;!-- lang:java --&gt;\r\n\r\n    import java.io.BufferedReader;\r\n    import java.io.IOException;\r\n    import java.io.InputStream;\r\n    import java.io.InputStreamReader;\r\n    import java.util.stream.Collectors;\r\n\r\n    // ...\r\n    public static String inputStreamToString(InputStream is) throws IOException {\r\n        try (BufferedReader br = new BufferedReader(new InputStreamReader(is))) {\r\n            return br.lines().collect(Collectors.joining(System.lineSeparator()));\r\n        }\r\n    }\r\n\r\nAs mentioned by Christoffer Hammarstr&#246;m below [other answer][2] it is safer to explicitly specify the [Charset][3]. I.e. The InputStreamReader constructor can be changes as follows:\r\n\r\n&lt;!-- lang:java --&gt;\r\n\r\n    new InputStreamReader(is, Charset.forName(&quot;UTF-8&quot;))\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html\r\n  [2]: https://stackoverflow.com/a/309448/639687\r\n  [3]: https://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":20767,"user_id":603516,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/40895ef337d0a2eb7d538f5f8b3e6d58?s=128&d=identicon&r=PG","display_name":"Vadzim","link":"https://stackoverflow.com/users/603516/vadzim"},"comment_count":0,"score":4,"creation_date":1436448056,"body_markdown":"[Guava provides][1] much shorter efficient autoclosing solution in case when input stream comes from classpath resource (which seems to be popular task):\r\n\r\n    byte[] bytes = Resources.toByteArray(classLoader.getResource(path));\r\n\r\nor \r\n\r\n    String text = Resources.toString(classLoader.getResource(path), StandardCharsets.UTF_8);\r\n\r\nThere is also general concept of [ByteSource][2] and [CharSource][3] that gently take care of both opening and closing the stream.\r\n\r\nSo, for example, instead of explicitly opening a small file to read its contents:\r\n\r\n    String content = Files.asCharSource(new File(&quot;robots.txt&quot;), StandardCharsets.UTF_8).read();\r\n    byte[] data = Files.asByteSource(new File(&quot;favicon.ico&quot;)).read();\r\n\r\nor just\r\n\r\n    String content = Files.toString(new File(&quot;robots.txt&quot;), StandardCharsets.UTF_8);\r\n    byte[] data = Files.toByteArray(new File(&quot;favicon.ico&quot;));\r\n\r\n\r\n  [1]: https://code.google.com/p/guava-libraries/wiki/IOExplained\r\n  [2]: http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/io/ByteSource.html\r\n  [3]: http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/io/CharSource.html","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":571,"user_id":1684528,"user_type":"registered","accept_rate":45,"profile_image":"https://www.gravatar.com/avatar/08357a9fcfa46b6758697e0be9bcc2d8?s=128&d=identicon&r=PG","display_name":"Christian R&#228;del","link":"https://stackoverflow.com/users/1684528/christian-r%c3%a4del"},"comment_count":0,"score":8,"creation_date":1441192767,"body_markdown":"Here&#39;s my **Java 8** based solution, which uses the *new Stream API* to collect all lines from an ```InputStream```:\r\n\r\n    public static String toString(InputStream inputStream) {\r\n        BufferedReader reader = new BufferedReader(\r\n            new InputStreamReader(inputStream));\r\n        return reader.lines().collect(Collectors.joining(\r\n            System.getProperty(&quot;line.separator&quot;)));\r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":4328,"user_id":1108305,"user_type":"registered","accept_rate":47,"profile_image":"https://www.gravatar.com/avatar/4c16849c5f9444a685f62cdc2a15c3ac?s=128&d=identicon&r=PG","display_name":"M. Justin","link":"https://stackoverflow.com/users/1108305/m-justin"},"score":0,"creation_date":1605773156}],"owner":{"reputation":85457,"user_id":4856258,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/d9ea19ceff450eb6e272da697ced62dc?s=128&d=identicon&r=PG&f=1","display_name":"Tagir Valeev","link":"https://stackoverflow.com/users/4856258/tagir-valeev"},"comment_count":1,"score":112,"creation_date":1441194645,"body_markdown":"For completeness here is **Java 9** solution:\r\n\r\n    public static String toString(InputStream input) throws IOException {\r\n        return new String(input.readAllBytes(), StandardCharsets.UTF_8);\r\n    }\r\n\r\nThis uses the [`readAllBytes`](https://docs.oracle.com/javase/9/docs/api/java/io/InputStream.html#readAllBytes--) method which was added to Java 9.","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":0,"creation_date":1547645619},{"owner":{"reputation":4207,"user_id":8200485,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/ONjhQ.jpg?s=128&g=1","display_name":"HyperNeutrino","link":"https://stackoverflow.com/users/8200485/hyperneutrino"},"score":0,"creation_date":1547656232},{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":3,"creation_date":1547677242},{"owner":{"reputation":4207,"user_id":8200485,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/ONjhQ.jpg?s=128&g=1","display_name":"HyperNeutrino","link":"https://stackoverflow.com/users/8200485/hyperneutrino"},"score":0,"creation_date":1547740020},{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":1,"creation_date":1547764252},{"owner":{"reputation":2877,"user_id":4759176,"user_type":"registered","accept_rate":74,"profile_image":"https://i.stack.imgur.com/0U1e5.jpg?s=128&g=1","display_name":"parsecer","link":"https://stackoverflow.com/users/4759176/parsecer"},"score":0,"creation_date":1557790109},{"owner":{"reputation":4207,"user_id":8200485,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/ONjhQ.jpg?s=128&g=1","display_name":"HyperNeutrino","link":"https://stackoverflow.com/users/8200485/hyperneutrino"},"score":1,"creation_date":1557858027}],"owner":{"reputation":4207,"user_id":8200485,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/ONjhQ.jpg?s=128&g=1","display_name":"HyperNeutrino","link":"https://stackoverflow.com/users/8200485/hyperneutrino"},"comment_count":7,"score":-1,"creation_date":1447730582,"body_markdown":"Note: This probably isn&#39;t a good idea. This method uses recursion and thus will hit a `StackOverflowError` very quickly:\r\n\r\n    public String read (InputStream is) {\r\n        byte next = is.read();\r\n        return next == -1 ? &quot;&quot; : next + read(is); // Recursive part: reads next byte recursively\r\n    }\r\n\r\nPlease don&#39;t downvote this just because it&#39;s a bad choice to use; this was mostly creative :)","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":27189,"user_id":1129332,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/KcrPN.jpg?s=128&g=1","display_name":"Ilya Gazman","link":"https://stackoverflow.com/users/1129332/ilya-gazman"},"score":0,"creation_date":1522940222}],"owner":{"reputation":31448,"user_id":1063716,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/594dfa12a4f922652c182c46b6bc2de3?s=128&d=identicon&r=PG","display_name":"Steve Chambers","link":"https://stackoverflow.com/users/1063716/steve-chambers"},"comment_count":1,"score":5,"creation_date":1450955333,"body_markdown":"Based on the second part of [the accepted Apache Commons answer](https://stackoverflow.com/questions/309424/read-convert-an-inputstream-to-a-string?page=1&amp;tab=votes#309448) but with the small gap filled in for always closing the stream:\r\n\r\n        String theString;\r\n        try {\r\n            theString = IOUtils.toString(inputStream, encoding);\r\n        } finally {\r\n            IOUtils.closeQuietly(inputStream);\r\n        }\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":801,"user_id":4515400,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/JjvHb.png?s=128&g=1","display_name":"libnull-dev","link":"https://stackoverflow.com/users/4515400/libnull-dev"},"comment_count":0,"score":8,"creation_date":1453386518,"body_markdown":"In terms of ```reduce```, and ```concat``` it can be expressed in Java 8 as:\r\n\r\n    String fromFile = new BufferedReader(new   \r\n    InputStreamReader(inputStream)).lines().reduce(String::concat).get();\r\n\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":8724,"user_id":2428802,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4d58ba93ec223d23b2fd6216aa52c5a6?s=128&d=identicon&r=PG","display_name":"jmehrens","link":"https://stackoverflow.com/users/2428802/jmehrens"},"comment_count":0,"score":18,"creation_date":1453996521,"body_markdown":"Use the [java.io.InputStream.transferTo(OutputStream)][1] supported in Java 9 and the [ByteArrayOutputStream.toString(String)][2] which takes the charset name:\r\n\r\n    public static String gobble(InputStream in, String charsetName) throws IOException {\r\n        ByteArrayOutputStream bos = new ByteArrayOutputStream();\r\n        in.transferTo(bos);\r\n        return bos.toString(charsetName);\r\n    }\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/9/docs/api/java/io/InputStream.html#transferTo-java.io.OutputStream-\r\n  [2]: https://docs.oracle.com/javase/9/docs/api/java/io/ByteArrayOutputStream.html#toString-java.lang.String-","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":31448,"user_id":1063716,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/594dfa12a4f922652c182c46b6bc2de3?s=128&d=identicon&r=PG","display_name":"Steve Chambers","link":"https://stackoverflow.com/users/1063716/steve-chambers"},"score":0,"creation_date":1596280583},{"owner":{"reputation":1007,"user_id":4374150,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/ODuVG.jpg?s=128&g=1","display_name":"Paula Livingstone","link":"https://stackoverflow.com/users/4374150/paula-livingstone"},"score":1,"creation_date":1597869436},{"owner":{"reputation":237,"user_id":9925065,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7a6b5dc51d4ea45c3edee30003d142ee?s=128&d=identicon&r=PG&f=1","display_name":"Gigino","link":"https://stackoverflow.com/users/9925065/gigino"},"score":14,"creation_date":1598425177},{"owner":{"reputation":179,"user_id":2410470,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1f22c53e7cea40477dfda51af07da3b4?s=128&d=identicon&r=PG&f=1","display_name":"bbarke","link":"https://stackoverflow.com/users/2410470/bbarke"},"score":2,"creation_date":1602021882},{"owner":{"reputation":4328,"user_id":1108305,"user_type":"registered","accept_rate":47,"profile_image":"https://www.gravatar.com/avatar/4c16849c5f9444a685f62cdc2a15c3ac?s=128&d=identicon&r=PG","display_name":"M. Justin","link":"https://stackoverflow.com/users/1108305/m-justin"},"score":0,"creation_date":1605773006},{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":1,"creation_date":1614478208}],"owner":{"reputation":48686,"user_id":4318868,"user_type":"registered","profile_image":"https://i.stack.imgur.com/p6Tpv.jpg?s=128&g=1","display_name":"Slava Vedenin","link":"https://stackoverflow.com/users/4318868/slava-vedenin"},"comment_count":6,"score":2779,"creation_date":1455670728,"body_markdown":"Summarize other answers I found 11 main ways to do this (see below). And I wrote some performance tests (see results below):\r\n\r\n**Ways to convert an InputStream to a String:**\r\n\r\n1. Using `IOUtils.toString` (Apache Utils) \r\n\r\n        String result = IOUtils.toString(inputStream, StandardCharsets.UTF_8);\r\n\r\n2. Using `CharStreams` (Guava) \r\n\r\n        String result = CharStreams.toString(new InputStreamReader(\r\n              inputStream, Charsets.UTF_8));\r\n\r\n\r\n3. Using `Scanner` (JDK) \r\n\r\n        Scanner s = new Scanner(inputStream).useDelimiter(&quot;\\\\A&quot;);\r\n        String result = s.hasNext() ? s.next() : &quot;&quot;;\r\n\r\n4. Using **Stream API** (Java 8). **Warning**: This solution converts different line breaks (like `\\r\\n`) to `\\n`.\r\n   \r\n\r\n        String result = new BufferedReader(new InputStreamReader(inputStream))\r\n          .lines().collect(Collectors.joining(&quot;\\n&quot;));\r\n       \r\n5. Using **parallel Stream API** (Java 8). **Warning**: This solution converts different line breaks (like `\\r\\n`) to `\\n`.    \r\n\r\n        String result = new BufferedReader(new InputStreamReader(inputStream))\r\n           .lines().parallel().collect(Collectors.joining(&quot;\\n&quot;));\r\n\r\n6. Using `InputStreamReader` and `StringBuilder` (JDK) \r\n\r\n        int bufferSize = 1024;\r\n        char[] buffer = new char[bufferSize];\r\n        StringBuilder out = new StringBuilder();\r\n        Reader in = new InputStreamReader(stream, StandardCharsets.UTF_8);\r\n        for (int numRead; (numRead = in.read(buffer, 0, buffer.length)) &gt; 0; ) {\r\n            out.append(buffer, 0, numRead);\r\n        }\r\n        return out.toString();\r\n\r\n7. Using `StringWriter` and `IOUtils.copy` (Apache Commons)\r\n\r\n        StringWriter writer = new StringWriter();\r\n        IOUtils.copy(inputStream, writer, &quot;UTF-8&quot;);\r\n        return writer.toString();\r\n\r\n8. Using `ByteArrayOutputStream` and `inputStream.read` (JDK)  \r\n\r\n        ByteArrayOutputStream result = new ByteArrayOutputStream();\r\n        byte[] buffer = new byte[1024];\r\n        for (int length; (length = inputStream.read(buffer)) != -1; ) {\r\n            result.write(buffer, 0, length);\r\n        }\r\n        // StandardCharsets.UTF_8.name() &gt; JDK 7\r\n        return result.toString(&quot;UTF-8&quot;);\r\n\r\n9. Using `BufferedReader` (JDK). **Warning:** This solution converts different line breaks (like `\\n\\r`) to `line.separator` system property (for example, in Windows to &quot;\\r\\n&quot;).\r\n\r\n        String newLine = System.getProperty(&quot;line.separator&quot;);\r\n        BufferedReader reader = new BufferedReader(\r\n                new InputStreamReader(inputStream));\r\n        StringBuilder result = new StringBuilder();\r\n        for (String line; (line = reader.readLine()) != null; ) {\r\n            if (result.length() &gt; 0) {\r\n                result.append(newLine);\r\n            }\r\n            result.append(line);\r\n        }\r\n        return result.toString();\r\n\r\n10. Using `BufferedInputStream` and `ByteArrayOutputStream` (JDK) \r\n\r\n        BufferedInputStream bis = new BufferedInputStream(inputStream);\r\n        ByteArrayOutputStream buf = new ByteArrayOutputStream();\r\n        for (int result = bis.read(); result != -1; result = bis.read()) {\r\n            buf.write((byte) result);\r\n        }\r\n        // StandardCharsets.UTF_8.name() &gt; JDK 7\r\n        return buf.toString(&quot;UTF-8&quot;);\r\n\r\n11. Using `inputStream.read()` and `StringBuilder` (JDK). **Warning**: This solution has problems with Unicode, for example with Russian text (works correctly only with non-Unicode text)\r\n\r\n        StringBuilder sb = new StringBuilder();\r\n        for (int ch; (ch = inputStream.read()) != -1; ) {\r\n            sb.append((char) ch);\r\n        }\r\n        return sb.toString();\r\n\r\n**Warning**:\r\n\r\n 1. Solutions 4, 5 and 9 convert different line breaks to one.\r\n\r\n 2. Solution 11 can&#39;t work correctly with Unicode text\r\n\r\n**Performance tests**\r\n\r\nPerformance tests for small `String` (length = 175), url in [github][1] (mode = Average Time, system = Linux, score 1,343 is the best):\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n                  Benchmark                         Mode  Cnt   Score   Error  Units\r\n     8. ByteArrayOutputStream and read (JDK)        avgt   10   1,343 &#177; 0,028  us/op\r\n     6. InputStreamReader and StringBuilder (JDK)   avgt   10   6,980 &#177; 0,404  us/op\r\n    10. BufferedInputStream, ByteArrayOutputStream  avgt   10   7,437 &#177; 0,735  us/op\r\n    11. InputStream.read() and StringBuilder (JDK)  avgt   10   8,977 &#177; 0,328  us/op\r\n     7. StringWriter and IOUtils.copy (Apache)      avgt   10  10,613 &#177; 0,599  us/op\r\n     1. IOUtils.toString (Apache Utils)             avgt   10  10,605 &#177; 0,527  us/op\r\n     3. Scanner (JDK)                               avgt   10  12,083 &#177; 0,293  us/op\r\n     2. CharStreams (guava)                         avgt   10  12,999 &#177; 0,514  us/op\r\n     4. Stream Api (Java 8)                         avgt   10  15,811 &#177; 0,605  us/op\r\n     9. BufferedReader (JDK)                        avgt   10  16,038 &#177; 0,711  us/op\r\n     5. parallel Stream Api (Java 8)                avgt   10  21,544 &#177; 0,583  us/op\r\n\r\nPerformance tests for big `String` (length = 50100), url in [github][2] (mode = Average Time, system = Linux, score 200,715 is the best):\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n                   Benchmark                        Mode  Cnt   Score        Error  Units\r\n     8. ByteArrayOutputStream and read (JDK)        avgt   10   200,715 &#177;   18,103  us/op\r\n     1. IOUtils.toString (Apache Utils)             avgt   10   300,019 &#177;    8,751  us/op\r\n     6. InputStreamReader and StringBuilder (JDK)   avgt   10   347,616 &#177;  130,348  us/op\r\n     7. StringWriter and IOUtils.copy (Apache)      avgt   10   352,791 &#177;  105,337  us/op\r\n     2. CharStreams (guava)                         avgt   10   420,137 &#177;   59,877  us/op\r\n     9. BufferedReader (JDK)                        avgt   10   632,028 &#177;   17,002  us/op\r\n     5. parallel Stream Api (Java 8)                avgt   10   662,999 &#177;   46,199  us/op\r\n     4. Stream Api (Java 8)                         avgt   10   701,269 &#177;   82,296  us/op\r\n    10. BufferedInputStream, ByteArrayOutputStream  avgt   10   740,837 &#177;    5,613  us/op\r\n     3. Scanner (JDK)                               avgt   10   751,417 &#177;   62,026  us/op\r\n    11. InputStream.read() and StringBuilder (JDK)  avgt   10  2919,350 &#177; 1101,942  us/op\r\n\r\nGraphs (performance tests depending on Input Stream length in Windows 7 system)    \r\n[![enter image description here][3]][3]\r\n\r\nPerformance test (Average Time) depending on Input Stream length in Windows 7 system:\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n     length  182\t546\t    1092\t3276\t9828\t29484\t58968\r\n    \r\n     test8 \t0.38\t0.938\t1.868\t4.448\t13.412\t36.459\t72.708\r\n     test4 \t2.362\t3.609\t5.573\t12.769\t40.74\t81.415\t159.864\r\n     test5 \t3.881\t5.075\t6.904\t14.123\t50.258\t129.937\t166.162\r\n     test9 \t2.237\t3.493\t5.422\t11.977\t45.98\t89.336\t177.39\r\n     test6 \t1.261\t2.12\t4.38\t10.698\t31.821\t86.106\t186.636\r\n     test7 \t1.601\t2.391\t3.646\t8.367\t38.196\t110.221\t211.016\r\n     test1 \t1.529\t2.381\t3.527\t8.411\t40.551\t105.16\t212.573\r\n     test3 \t3.035\t3.934\t8.606\t20.858\t61.571\t118.744\t235.428\r\n     test2 \t3.136\t6.238\t10.508\t33.48\t43.532\t118.044\t239.481\r\n     test10 1.593\t4.736\t7.527\t20.557\t59.856\t162.907\t323.147\r\n     test11 3.913\t11.506\t23.26\t68.644\t207.591\t600.444\t1211.545\r\n\r\n  [1]: https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/5.0-other-examples/src/main/java/other_examples/ConvertInputStreamToStringBenchmark.java\r\n  [2]: https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/5.0-other-examples/src/main/java/other_examples/ConvertBigStringToInputStreamBenchmark.java\r\n  [3]: https://i.stack.imgur.com/AYYhz.png","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":184,"user_id":5735806,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b4118fdf1e5976ea0da508441c4cfb02?s=128&d=identicon&r=PG&f=1","display_name":"Jitender Chahar","link":"https://stackoverflow.com/users/5735806/jitender-chahar"},"comment_count":0,"score":0,"creation_date":1456766314,"body_markdown":"Method to convert inputStream to String\r\n\t\r\n\tpublic static String getStringFromInputStream(InputStream inputStream) {\r\n\r\n\t\tBufferedReader bufferedReader = null;\r\n\t\tStringBuilder stringBuilder = new StringBuilder();\r\n\t\tString line;\r\n\r\n\t\ttry {\r\n\t\t\tbufferedReader = new BufferedReader(new InputStreamReader(\r\n\t\t\t\t\tinputStream));\r\n\t\t\twhile ((line = bufferedReader.readLine()) != null) {\r\n\t\t\t\tstringBuilder.append(line);\r\n\t\t\t}\r\n\t\t} catch (IOException e) {\r\n\t\t\tlogger.error(e.getMessage());\r\n\t\t} finally {\r\n\t\t\tif (bufferedReader != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbufferedReader.close();\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\tlogger.error(e.getMessage());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn stringBuilder.toString();\r\n\t}","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":2295,"user_id":1586864,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/07995256aaaf615a1cb4bd0bd007ee24?s=128&d=identicon&r=PG","display_name":"Harsh","link":"https://stackoverflow.com/users/1586864/harsh"},"comment_count":0,"score":0,"creation_date":1457589710,"body_markdown":"    InputStream  inputStream = null;\r\n\tBufferedReader bufferedReader = null;\r\n    try {\r\n        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\r\n        String stringBuilder = new StringBuilder();\r\n        String content;\r\n        while((content = bufferedReader.readLine()) != null){\r\n        \tstringBuilder.append(content);\r\n        }\r\n        System.out.println(&quot;content of file::&quot; + stringBuilder.toString());\r\n    }\r\n    catch (IOException e) {\r\n    \t\t\te.printStackTrace();\r\n    \t\t}finally{\t\t\t\r\n    \t\t\tif(bufferedReader != null){\r\n    \t\t\t\ttry{\r\n                        bufferedReader.close();\r\n                    }catch(IoException ex){\r\n                       ex.printStackTrace();\r\n    \t\t\t}","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":0,"creation_date":1547645235}],"owner":{"reputation":663,"user_id":625114,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0b8f20d9c0c852472b8a82abdf9abeea?s=128&d=identicon&r=PG","display_name":"Ravi","link":"https://stackoverflow.com/users/625114/ravi"},"comment_count":1,"score":0,"creation_date":1464239269,"body_markdown":"Also you can get InputStream from a specified resource path:\r\n\r\n    public static InputStream getResourceAsStream(String path)\r\n    {\r\n        InputStream myiInputStream = ClassName.class.getResourceAsStream(path);\r\n        if (null == myiInputStream)\r\n        {\r\n            mylogger.info(&quot;Can&#39;t find path = &quot;, path);\r\n        }\r\n\r\n        return myiInputStream;\r\n    }\r\n\r\nTo get InputStream from a specific path:\r\n\r\n    public static URL getResource(String path)\r\n    {\r\n        URL myURL = ClassName.class.getResource(path);\r\n        if (null == myURL)\r\n        {\r\n            mylogger.info(&quot;Can&#39;t find resource path = &quot;, path);\r\n        }\r\n        return myURL;\r\n    }\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":10142,"user_id":285288,"user_type":"registered","accept_rate":64,"profile_image":"https://www.gravatar.com/avatar/321b2437e25c1885cb0edbde62bbf530?s=128&d=identicon&r=PG","display_name":"James","link":"https://stackoverflow.com/users/285288/james"},"comment_count":0,"score":17,"creation_date":1469825905,"body_markdown":"Another one, for all the Spring users:\r\n\r\n&lt;!-- language: java --&gt;\r\n\r\n    import java.nio.charset.StandardCharsets;\r\n    import org.springframework.util.FileCopyUtils;\r\n\r\n    public String convertStreamToString(InputStream is) throws IOException { \r\n        return new String(FileCopyUtils.copyToByteArray(is), StandardCharsets.UTF_8);\r\n    }\r\n\r\nThe utility methods in `org.springframework.util.StreamUtils` are similar to the ones in `FileCopyUtils`, but they leave the stream open when done.","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":3460,"user_id":2194364,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/00330b200be5730c3499104448dc25a0?s=128&d=identicon&r=PG","display_name":"Raghu K Nair","link":"https://stackoverflow.com/users/2194364/raghu-k-nair"},"comment_count":0,"score":10,"creation_date":1470773906,"body_markdown":"The easiest way in JDK is with the following code snipplets. \r\n\r\n    String convertToString(InputStream in){\r\n        String resource = new Scanner(in).useDelimiter(&quot;\\\\Z&quot;).next();\r\n        return resource;\r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":119,"user_id":550742,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2f3425a555dee011bae5d2327193f391?s=128&d=identicon&r=PG","display_name":"Hao Zheng","link":"https://stackoverflow.com/users/550742/hao-zheng"},"comment_count":0,"score":3,"creation_date":1483940573,"body_markdown":"    public String read(InputStream in) throws IOException {\r\n        try (BufferedReader buffer = new BufferedReader(new InputStreamReader(in))) {\r\n            return buffer.lines().collect(Collectors.joining(&quot;\\n&quot;));\r\n        }\r\n    }\r\n\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":14070,"user_id":378151,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/0e548cf2f32966f42bd0d1e07b4d8108?s=128&d=identicon&r=PG","display_name":"Snekse","link":"https://stackoverflow.com/users/378151/snekse"},"comment_count":0,"score":4,"creation_date":1485459623,"body_markdown":"[In Groovy][1]\r\n\r\n    inputStream.getText()\r\n\r\n\r\n  [1]: http://docs.groovy-lang.org/latest/html/groovy-jdk/java/io/InputStream.html#getText()","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":518,"user_id":6926281,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/6ea83507ac9a5f267de268122e3150ea?s=128&d=identicon&r=PG&f=1","display_name":"Halfacht","link":"https://stackoverflow.com/users/6926281/halfacht"},"comment_count":0,"score":4,"creation_date":1494416287,"body_markdown":"*Raghu K Nair* Was the only one using a scanner.\r\nThe code I use is a little different:\r\n\r\n    String convertToString(InputStream in){\r\n        Scanner scanner = new Scanner(in)\r\n        scanner.useDelimiter(&quot;\\\\A&quot;);\r\n\r\n        boolean hasInput = scanner.hasNext();\r\n        if (hasInput) {\r\n            return scanner.next();\r\n        } else {\r\n            return null;\r\n        }\r\n \r\n    }\r\n\r\n\r\n\t\r\nAbout Delimiters: https://stackoverflow.com/questions/28766377/how-do-i-use-a-delimiter-in-java-scanner\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":92649,"user_id":187141,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/f9e28dc83496320c87c55b3cf988ab60?s=128&d=identicon&r=PG","display_name":"yegor256","link":"https://stackoverflow.com/users/187141/yegor256"},"comment_count":0,"score":2,"creation_date":1502042910,"body_markdown":"You can use [Cactoos](http://www.cactoos.org):\r\n\r\n    String text = new TextOf(inputStream).asString();\r\n\r\nUTF-8 encoding is the default one. If you need another one:\r\n\r\n    String text = new TextOf(inputStream, &quot;UTF-16&quot;).asString();\r\n\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":9327,"user_id":2735286,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/87ddd81aa1b12c27aecdab22da387f5c?s=128&d=identicon&r=PG&f=1","display_name":"gil.fernandes","link":"https://stackoverflow.com/users/2735286/gil-fernandes"},"comment_count":0,"score":1,"creation_date":1508579173,"body_markdown":"This solution to this question is not the simplest, but since NIO streams and channels have not been mentioned, here goes a version which uses NIO channels and a ByteBuffer to convert a stream into a string.\r\n\r\n    public static String streamToStringChannel(InputStream in, String encoding, int bufSize) throws IOException {\r\n        ReadableByteChannel channel = Channels.newChannel(in);\r\n        ByteBuffer byteBuffer = ByteBuffer.allocate(bufSize);\r\n        ByteArrayOutputStream bout = new ByteArrayOutputStream();\r\n        WritableByteChannel outChannel = Channels.newChannel(bout);\r\n        while (channel.read(byteBuffer) &gt; 0 || byteBuffer.position() &gt; 0) {\r\n            byteBuffer.flip();  //make buffer ready for write\r\n            outChannel.write(byteBuffer);\r\n            byteBuffer.compact(); //make buffer ready for reading\r\n        }\r\n        channel.close();\r\n        outChannel.close();\r\n        return bout.toString(encoding);\r\n    }\r\n\r\nHere is an example how to use it:\r\n\r\n    try (InputStream in = new FileInputStream(&quot;/tmp/large_file.xml&quot;)) {\r\n        String x = streamToStringChannel(in, &quot;UTF-8&quot;, 1);\r\n        System.out.println(x);\r\n    }\r\n\r\nThe performance of this method should be good for large files.","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":99,"user_id":1788304,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9334afbe0d50b3e9996a07ee3dbe7e53?s=128&d=identicon&r=PG","display_name":"Dalibor","link":"https://stackoverflow.com/users/1788304/dalibor"},"score":0,"creation_date":1558044484},{"owner":{"reputation":27189,"user_id":1129332,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/KcrPN.jpg?s=128&g=1","display_name":"Ilya Gazman","link":"https://stackoverflow.com/users/1129332/ilya-gazman"},"score":0,"creation_date":1559052388},{"owner":{"reputation":99,"user_id":1788304,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9334afbe0d50b3e9996a07ee3dbe7e53?s=128&d=identicon&r=PG","display_name":"Dalibor","link":"https://stackoverflow.com/users/1788304/dalibor"},"score":0,"creation_date":1559167486},{"owner":{"reputation":27189,"user_id":1129332,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/KcrPN.jpg?s=128&g=1","display_name":"Ilya Gazman","link":"https://stackoverflow.com/users/1129332/ilya-gazman"},"score":0,"creation_date":1559174207},{"owner":{"reputation":4302,"user_id":201891,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/3798fee71522049317927bc8053c0599?s=128&d=identicon&r=PG","display_name":"DavidS","link":"https://stackoverflow.com/users/201891/davids"},"score":0,"creation_date":1573843681},{"owner":{"reputation":27189,"user_id":1129332,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/KcrPN.jpg?s=128&g=1","display_name":"Ilya Gazman","link":"https://stackoverflow.com/users/1129332/ilya-gazman"},"score":0,"creation_date":1573851578},{"owner":{"reputation":4302,"user_id":201891,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/3798fee71522049317927bc8053c0599?s=128&d=identicon&r=PG","display_name":"DavidS","link":"https://stackoverflow.com/users/201891/davids"},"score":0,"creation_date":1573854956},{"owner":{"reputation":4302,"user_id":201891,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/3798fee71522049317927bc8053c0599?s=128&d=identicon&r=PG","display_name":"DavidS","link":"https://stackoverflow.com/users/201891/davids"},"score":0,"creation_date":1574198796},{"owner":{"reputation":27189,"user_id":1129332,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/KcrPN.jpg?s=128&g=1","display_name":"Ilya Gazman","link":"https://stackoverflow.com/users/1129332/ilya-gazman"},"score":0,"creation_date":1574220994},{"owner":{"reputation":27189,"user_id":1129332,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/KcrPN.jpg?s=128&g=1","display_name":"Ilya Gazman","link":"https://stackoverflow.com/users/1129332/ilya-gazman"},"score":0,"creation_date":1574221108},{"owner":{"reputation":4302,"user_id":201891,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/3798fee71522049317927bc8053c0599?s=128&d=identicon&r=PG","display_name":"DavidS","link":"https://stackoverflow.com/users/201891/davids"},"score":0,"creation_date":1574272946},{"owner":{"reputation":27189,"user_id":1129332,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/KcrPN.jpg?s=128&g=1","display_name":"Ilya Gazman","link":"https://stackoverflow.com/users/1129332/ilya-gazman"},"score":0,"creation_date":1574284613},{"owner":{"reputation":4302,"user_id":201891,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/3798fee71522049317927bc8053c0599?s=128&d=identicon&r=PG","display_name":"DavidS","link":"https://stackoverflow.com/users/201891/davids"},"score":0,"creation_date":1574285560}],"owner":{"reputation":27189,"user_id":1129332,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/KcrPN.jpg?s=128&g=1","display_name":"Ilya Gazman","link":"https://stackoverflow.com/users/1129332/ilya-gazman"},"comment_count":13,"score":57,"creation_date":1518557408,"body_markdown":"I did a benchmark upon 14 distinct answers here (sorry for not providing credits but there are too many duplicates).\r\n\r\nThe result is very surprising. It turns out that Apache **IOUtils** is the slowest and `ByteArrayOutputStream` is the fastest solutions:\r\n\r\nSo first here is the best method:\r\n\r\n    public String inputStreamToString(InputStream inputStream) throws IOException {\r\n        try(ByteArrayOutputStream result = new ByteArrayOutputStream()) {\r\n            byte[] buffer = new byte[1024];\r\n            int length;\r\n            while ((length = inputStream.read(buffer)) != -1) {\r\n                result.write(buffer, 0, length);\r\n            }\r\n\r\n            return result.toString(UTF_8);\r\n        }\r\n    }\r\n\r\nBenchmark results, of 20 MB random bytes in 20 cycles\r\n----------------------------------------------------\r\nTime in milliseconds\r\n\r\n - ByteArrayOutputStreamTest: 194\r\n - NioStream: 198\r\n - Java9ISTransferTo: 201\r\n - Java9ISReadAllBytes: 205\r\n - BufferedInputStreamVsByteArrayOutputStream: 314\r\n - ApacheStringWriter2: 574\r\n - GuavaCharStreams: 589\r\n - ScannerReaderNoNextTest: 614\r\n - ScannerReader: 633\r\n - ApacheStringWriter: 1544\r\n - StreamApi: Error\r\n - ParallelStreamApi: Error\r\n - BufferReaderTest: Error\r\n - InputStreamAndStringBuilder: Error\r\n\r\nBenchmark source code\r\n---------------------\r\n\r\n    import com.google.common.io.CharStreams;\r\n    import org.apache.commons.io.IOUtils;\r\n\r\n    import java.io.*;\r\n    import java.nio.ByteBuffer;\r\n    import java.nio.channels.Channels;\r\n    import java.nio.channels.ReadableByteChannel;\r\n    import java.nio.channels.WritableByteChannel;\r\n    import java.util.Arrays;\r\n    import java.util.List;\r\n    import java.util.Random;\r\n    import java.util.stream.Collectors;\r\n\r\n    /**\r\n     * Created by Ilya Gazman on 2/13/18.\r\n     */\r\n    public class InputStreamToString {\r\n\r\n\r\n        private static final String UTF_8 = &quot;UTF-8&quot;;\r\n\r\n        public static void main(String... args) {\r\n            log(&quot;App started&quot;);\r\n            byte[] bytes = new byte[1024 * 1024];\r\n            new Random().nextBytes(bytes);\r\n            log(&quot;Stream is ready\\n&quot;);\r\n\r\n            try {\r\n                test(bytes);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        private static void test(byte[] bytes) throws IOException {\r\n            List&lt;Stringify&gt; tests = Arrays.asList(\r\n                    new ApacheStringWriter(),\r\n                    new ApacheStringWriter2(),\r\n                    new NioStream(),\r\n                    new ScannerReader(),\r\n                    new ScannerReaderNoNextTest(),\r\n                    new GuavaCharStreams(),\r\n                    new StreamApi(),\r\n                    new ParallelStreamApi(),\r\n                    new ByteArrayOutputStreamTest(),\r\n                    new BufferReaderTest(),\r\n                    new BufferedInputStreamVsByteArrayOutputStream(),\r\n                    new InputStreamAndStringBuilder(),\r\n                    new Java9ISTransferTo(),\r\n                    new Java9ISReadAllBytes()\r\n            );\r\n\r\n            String solution = new String(bytes, &quot;UTF-8&quot;);\r\n\r\n            for (Stringify test : tests) {\r\n                try (ByteArrayInputStream inputStream = new ByteArrayInputStream(bytes)) {\r\n                    String s = test.inputStreamToString(inputStream);\r\n                    if (!s.equals(solution)) {\r\n                        log(test.name() + &quot;: Error&quot;);\r\n                        continue;\r\n                    }\r\n                }\r\n                long startTime = System.currentTimeMillis();\r\n                for (int i = 0; i &lt; 20; i++) {\r\n                    try (ByteArrayInputStream inputStream = new ByteArrayInputStream(bytes)) {\r\n                        test.inputStreamToString(inputStream);\r\n                    }\r\n                }\r\n                log(test.name() + &quot;: &quot; + (System.currentTimeMillis() - startTime));\r\n            }\r\n        }\r\n\r\n        private static void log(String message) {\r\n            System.out.println(message);\r\n        }\r\n\r\n        interface Stringify {\r\n            String inputStreamToString(InputStream inputStream) throws IOException;\r\n\r\n            default String name() {\r\n                return this.getClass().getSimpleName();\r\n            }\r\n        }\r\n\r\n        static class ApacheStringWriter implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream inputStream) throws IOException {\r\n                StringWriter writer = new StringWriter();\r\n                IOUtils.copy(inputStream, writer, UTF_8);\r\n                return writer.toString();\r\n            }\r\n        }\r\n\r\n        static class ApacheStringWriter2 implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream inputStream) throws IOException {\r\n                return IOUtils.toString(inputStream, UTF_8);\r\n            }\r\n        }\r\n\r\n        static class NioStream implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream in) throws IOException {\r\n                ReadableByteChannel channel = Channels.newChannel(in);\r\n                ByteBuffer byteBuffer = ByteBuffer.allocate(1024 * 16);\r\n                ByteArrayOutputStream bout = new ByteArrayOutputStream();\r\n                WritableByteChannel outChannel = Channels.newChannel(bout);\r\n                while (channel.read(byteBuffer) &gt; 0 || byteBuffer.position() &gt; 0) {\r\n                    byteBuffer.flip();  //make buffer ready for write\r\n                    outChannel.write(byteBuffer);\r\n                    byteBuffer.compact(); //make buffer ready for reading\r\n                }\r\n                channel.close();\r\n                outChannel.close();\r\n                return bout.toString(UTF_8);\r\n            }\r\n        }\r\n\r\n        static class ScannerReader implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream is) throws IOException {\r\n                java.util.Scanner s = new java.util.Scanner(is).useDelimiter(&quot;\\\\A&quot;);\r\n                return s.hasNext() ? s.next() : &quot;&quot;;\r\n            }\r\n        }\r\n\r\n        static class ScannerReaderNoNextTest implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream is) throws IOException {\r\n                java.util.Scanner s = new java.util.Scanner(is).useDelimiter(&quot;\\\\A&quot;);\r\n                return s.next();\r\n            }\r\n        }\r\n\r\n        static class GuavaCharStreams implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream is) throws IOException {\r\n                return CharStreams.toString(new InputStreamReader(\r\n                        is, UTF_8));\r\n            }\r\n        }\r\n\r\n        static class StreamApi implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream inputStream) throws IOException {\r\n                return new BufferedReader(new InputStreamReader(inputStream))\r\n                        .lines().collect(Collectors.joining(&quot;\\n&quot;));\r\n            }\r\n        }\r\n\r\n        static class ParallelStreamApi implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream inputStream) throws IOException {\r\n                return new BufferedReader(new InputStreamReader(inputStream)).lines()\r\n                        .parallel().collect(Collectors.joining(&quot;\\n&quot;));\r\n            }\r\n        }\r\n\r\n        static class ByteArrayOutputStreamTest implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream inputStream) throws IOException {\r\n                try(ByteArrayOutputStream result = new ByteArrayOutputStream()) {\r\n                    byte[] buffer = new byte[1024];\r\n                    int length;\r\n                    while ((length = inputStream.read(buffer)) != -1) {\r\n                        result.write(buffer, 0, length);\r\n                    }\r\n\r\n                    return result.toString(UTF_8);\r\n                }\r\n            }\r\n        }\r\n\r\n        static class BufferReaderTest implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream inputStream) throws IOException {\r\n                String newLine = System.getProperty(&quot;line.separator&quot;);\r\n                BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));\r\n                StringBuilder result = new StringBuilder(UTF_8);\r\n                String line;\r\n                boolean flag = false;\r\n                while ((line = reader.readLine()) != null) {\r\n                    result.append(flag ? newLine : &quot;&quot;).append(line);\r\n                    flag = true;\r\n                }\r\n                return result.toString();\r\n            }\r\n        }\r\n\r\n        static class BufferedInputStreamVsByteArrayOutputStream implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream inputStream) throws IOException {\r\n                BufferedInputStream bis = new BufferedInputStream(inputStream);\r\n                ByteArrayOutputStream buf = new ByteArrayOutputStream();\r\n                int result = bis.read();\r\n                while (result != -1) {\r\n                    buf.write((byte) result);\r\n                    result = bis.read();\r\n                }\r\n\r\n                return buf.toString(UTF_8);\r\n            }\r\n        }\r\n\r\n        static class InputStreamAndStringBuilder implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream inputStream) throws IOException {\r\n                int ch;\r\n                StringBuilder sb = new StringBuilder(UTF_8);\r\n                while ((ch = inputStream.read()) != -1)\r\n                    sb.append((char) ch);\r\n                return sb.toString();\r\n            }\r\n        }\r\n\r\n        static class Java9ISTransferTo implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream inputStream) throws IOException {\r\n                ByteArrayOutputStream bos = new ByteArrayOutputStream();\r\n                inputStream.transferTo(bos);\r\n                return bos.toString(UTF_8);\r\n            }\r\n        }\r\n\r\n        static class Java9ISReadAllBytes implements Stringify {\r\n\r\n            @Override\r\n            public String inputStreamToString(InputStream inputStream) throws IOException {\r\n                return new String(inputStream.readAllBytes(), UTF_8);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":2301,"user_id":2764007,"user_type":"registered","profile_image":"https://i.stack.imgur.com/0HjMV.jpg?s=128&g=1","display_name":"drakeet","link":"https://stackoverflow.com/users/2764007/drakeet"},"comment_count":0,"score":3,"creation_date":1523105603,"body_markdown":"With Okio:\r\n\r\n    String result = Okio.buffer(Okio.source(inputStream)).readUtf8();","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":125,"user_id":8558398,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dd31eb4d403f5b9f85bd13c8c136891a?s=128&d=identicon&r=PG&f=1","display_name":"13hola","link":"https://stackoverflow.com/users/8558398/13hola"},"comment_count":0,"score":2,"creation_date":1530189951,"body_markdown":"I have created this code, and it works. There are no required external plug-ins.\r\n\r\nThere is a converter `String` to `Stream` and `Stream` to `String`:\r\n\r\n    import java.io.ByteArrayInputStream;\r\n    import java.io.InputStream;\r\n\r\n    public class STRINGTOSTREAM {\r\n\r\n        public static void main(String[] args)\r\n        {\r\n            String text = &quot;Hello Bhola..!\\nMy Name Is Kishan &quot;;\r\n\r\n            InputStream strm = new ByteArrayInputStream(text.getBytes());    // Convert String to Stream\r\n\r\n            String data = streamTostring(strm);\r\n\r\n            System.out.println(data);\r\n        }\r\n\r\n        static String streamTostring(InputStream stream)\r\n        {\r\n            String data = &quot;&quot;;\r\n\r\n            try\r\n            {\r\n                StringBuilder stringbuld = new StringBuilder();\r\n                int i;\r\n                while ((i=stream.read())!=-1)\r\n                {\r\n                    stringbuld.append((char)i);\r\n                }\r\n                data = stringbuld.toString();\r\n            }\r\n            catch(Exception e)\r\n            {\r\n                data = &quot;No data Streamed.&quot;;\r\n            }\r\n            return data;\r\n        }\r\n\r\n","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":5918,"user_id":2599133,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/ac535b1006ecd310ccecd34e92f5ccb7?s=128&d=identicon&r=PG","display_name":"Hans Brende","link":"https://stackoverflow.com/users/2599133/hans-brende"},"comment_count":0,"score":2,"creation_date":1541632897,"body_markdown":"# ISO-8859-1\r\nHere is a **very** performant way to do this if you know your input stream&#39;s encoding is ISO-8859-1 or ASCII. It (1) avoids the unnecessary synchronization present in `StringWriter`&#39;s internal `StringBuffer`, (2) avoids the overhead of `InputStreamReader`, and (3) minimizes the number of times `StringBuilder`&#39;s internal `char` array must be copied.\r\n\r\n    public static String iso_8859_1(InputStream is) throws IOException {\r\n        StringBuilder chars = new StringBuilder(Math.max(is.available(), 4096));\r\n        byte[] buffer = new byte[4096];\r\n        int n;\r\n        while ((n = is.read(buffer)) != -1) {\r\n            for (int i = 0; i &lt; n; i++) {\r\n                chars.append((char)(buffer[i] &amp; 0xFF));\r\n            }\r\n        }\r\n        return chars.toString();\r\n    }\r\n\r\n# UTF-8\r\nThe same general strategy may be used for a stream encoded with UTF-8: \r\n\r\n    public static String utf8(InputStream is) throws IOException {\r\n        StringBuilder chars = new StringBuilder(Math.max(is.available(), 4096));\r\n        byte[] buffer = new byte[4096];\r\n        int n;\r\n        int state = 0;\r\n        while ((n = is.read(buffer)) != -1) {\r\n            for (int i = 0; i &lt; n; i++) {\r\n                if ((state = nextStateUtf8(state, buffer[i])) &gt;= 0) {\r\n                    chars.appendCodePoint(state);\r\n                } else if (state == -1) { //error\r\n                    state = 0;\r\n                    chars.append(&#39;\\uFFFD&#39;); //replacement char\r\n                }\r\n            }\r\n        }\r\n        return chars.toString();\r\n    }\r\n\r\nwhere the `nextStateUtf8()` function is defined as follows:\r\n\r\n    /**\r\n     * Returns the next UTF-8 state given the next byte of input and the current state.\r\n     * If the input byte is the last byte in a valid UTF-8 byte sequence,\r\n     * the returned state will be the corresponding unicode character (in the range of 0 through 0x10FFFF).\r\n     * Otherwise, a negative integer is returned. A state of -1 is returned whenever an\r\n     * invalid UTF-8 byte sequence is detected.\r\n     */\r\n    static int nextStateUtf8(int currentState, byte nextByte) {\r\n        switch (currentState &amp; 0xF0000000) {\r\n            case 0:\r\n                if ((nextByte &amp; 0x80) == 0) { //0 trailing bytes (ASCII)\r\n                    return nextByte;\r\n                } else if ((nextByte &amp; 0xE0) == 0xC0) { //1 trailing byte\r\n                    if (nextByte == (byte) 0xC0 || nextByte == (byte) 0xC1) { //0xCO &amp; 0xC1 are overlong\r\n                        return -1;\r\n                    } else {\r\n                        return nextByte &amp; 0xC000001F;\r\n                    }\r\n                } else if ((nextByte &amp; 0xF0) == 0xE0) { //2 trailing bytes\r\n                    if (nextByte == (byte) 0xE0) { //possibly overlong\r\n                        return nextByte &amp; 0xA000000F;\r\n                    } else if (nextByte == (byte) 0xED) { //possibly surrogate\r\n                        return nextByte &amp; 0xB000000F;\r\n                    } else {\r\n                        return nextByte &amp; 0x9000000F;\r\n                    }\r\n                } else if ((nextByte &amp; 0xFC) == 0xF0) { //3 trailing bytes\r\n                    if (nextByte == (byte) 0xF0) { //possibly overlong\r\n                        return nextByte &amp; 0x80000007;\r\n                    } else {\r\n                        return nextByte &amp; 0xE0000007;\r\n                    }\r\n                } else if (nextByte == (byte) 0xF4) { //3 trailing bytes, possibly undefined\r\n                    return nextByte &amp; 0xD0000007;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            case 0xE0000000: //3rd-to-last continuation byte\r\n                return (nextByte &amp; 0xC0) == 0x80 ? currentState &lt;&lt; 6 | nextByte &amp; 0x9000003F : -1;\r\n            case 0x80000000: //3rd-to-last continuation byte, check overlong\r\n                return (nextByte &amp; 0xE0) == 0xA0 || (nextByte &amp; 0xF0) == 0x90 ? currentState &lt;&lt; 6 | nextByte &amp; 0x9000003F : -1;\r\n            case 0xD0000000: //3rd-to-last continuation byte, check undefined\r\n                return (nextByte &amp; 0xF0) == 0x80 ? currentState &lt;&lt; 6 | nextByte &amp; 0x9000003F : -1;\r\n            case 0x90000000: //2nd-to-last continuation byte\r\n                return (nextByte &amp; 0xC0) == 0x80 ? currentState &lt;&lt; 6 | nextByte &amp; 0xC000003F : -1;\r\n            case 0xA0000000: //2nd-to-last continuation byte, check overlong\r\n                return (nextByte &amp; 0xE0) == 0xA0 ? currentState &lt;&lt; 6 | nextByte &amp; 0xC000003F : -1;\r\n            case 0xB0000000: //2nd-to-last continuation byte, check surrogate\r\n                return (nextByte &amp; 0xE0) == 0x80 ? currentState &lt;&lt; 6 | nextByte &amp; 0xC000003F : -1;\r\n            case 0xC0000000: //last continuation byte\r\n                return (nextByte &amp; 0xC0) == 0x80 ? currentState &lt;&lt; 6 | nextByte &amp; 0x3F : -1;\r\n            default:\r\n                return -1;\r\n        }\r\n    }\r\n\r\n# Auto-Detect Encoding\r\nIf your input stream was encoded using either ASCII or ISO-8859-1 or UTF-8, but you&#39;re not sure which, we can use a similar method to the last, but with an additional encoding-detection component to *auto-detect* the encoding before returning the string.\r\n\r\n\r\n    public static String autoDetect(InputStream is) throws IOException {\r\n        StringBuilder chars = new StringBuilder(Math.max(is.available(), 4096));\r\n        byte[] buffer = new byte[4096];\r\n        int n;\r\n        int state = 0;\r\n        boolean ascii = true;\r\n        while ((n = is.read(buffer)) != -1) {\r\n            for (int i = 0; i &lt; n; i++) {\r\n                if ((state = nextStateUtf8(state, buffer[i])) &gt; 0x7F)\r\n                    ascii = false;\r\n                chars.append((char)(buffer[i] &amp; 0xFF));\r\n            }\r\n        }\r\n\r\n        if (ascii || state &lt; 0) { //probably not UTF-8\r\n            return chars.toString();\r\n        }\r\n        //probably UTF-8\r\n        int pos = 0;\r\n        char[] charBuf = new char[2];\r\n        for (int i = 0, len = chars.length(); i &lt; len; i++) {\r\n            if ((state = nextStateUtf8(state, (byte)chars.charAt(i))) &gt;= 0) {\r\n                boolean hi = Character.toChars(state, charBuf, 0) == 2;\r\n                chars.setCharAt(pos++, charBuf[0]);\r\n                if (hi) {\r\n                    chars.setCharAt(pos++, charBuf[1]);\r\n                }\r\n            }\r\n        }\r\n        return chars.substring(0, pos);\r\n    }\r\n\r\n\r\n\r\nIf your input stream has an encoding that is neither ISO-8859-1 nor ASCII nor UTF-8, then I defer to the other answers already present.","title":"How do I read / convert an InputStream into a String in Java?"},{"comments":[{"owner":{"reputation":608,"user_id":6944068,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/af770f19fffb8ff2e81681f4141c11ea?s=128&d=identicon&r=PG","display_name":"toolforger","link":"https://stackoverflow.com/users/6944068/toolforger"},"score":0,"creation_date":1579681786}],"owner":{"reputation":1062,"user_id":7484853,"user_type":"registered","profile_image":"https://i.stack.imgur.com/OGdX0.jpg?s=128&g=1","display_name":"Hasee Amarathunga","link":"https://stackoverflow.com/users/7484853/hasee-amarathunga"},"comment_count":1,"score":0,"creation_date":1553762976,"body_markdown":"I suggest the **StringWriter** class for that problem.\r\n\r\n    StringWriter wt= new StringWriter();\r\n    IOUtils.copy(inputStream, wt, encoding);\r\n    String st= wt.toString();","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"user_type":"does_not_exist","display_name":"user12402945"},"comment_count":0,"score":2,"creation_date":1574254164,"body_markdown":"This Code is for New Java Learners: \r\n\r\n\r\n         private String textDataFromFile;\r\n\r\n    public String getFromFile(InputStream myInputStream) throws FileNotFoundException, IOException {\r\n   \r\n          BufferedReader bufferReader = new BufferedReader (new InputStreamReader(myInputStream));\r\n      \r\n           StringBuilder stringBuilder = new StringBuilder();\r\n        \r\n      String eachStringLine;\r\n      \r\n        while((eachStringLine=bufferReader.readLine()) != null){          \r\n            stringBuilder.append(eachStringLine).append(&quot;\\n&quot;);\r\n        }\r\n        \r\n       textDataFromFile = stringBuilder.toString(); \r\n      \r\n       \r\n                     \r\n      return textDataFromFile;\r\n      \r\n    }","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":11023,"user_id":639687,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/367828dd86c0336d80700d4d4086cd33?s=128&d=identicon&r=PG","display_name":"czerny","link":"https://stackoverflow.com/users/639687/czerny"},"comment_count":0,"score":14,"creation_date":1586045027,"body_markdown":"```\r\nString inputStreamToString(InputStream inputStream, Charset charset) throws IOException {\r\n    try (\r\n            final StringWriter writer = new StringWriter();\r\n            final InputStreamReader reader = new InputStreamReader(inputStream, charset)\r\n        ) {\r\n        reader.transferTo(writer);\r\n        return writer.toString();\r\n    }\r\n}\r\n```\r\n\r\n* pure Java standard library solution - no libs\r\n* since Java 10 - [Reader#transferTo(java.io.Writer)][1]\r\n* loopless solution\r\n* no new line character handling\r\n\r\n[1]: https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/io/Reader.html#transferTo(java.io.Writer)","title":"How do I read / convert an InputStream into a String in Java?"},{"owner":{"reputation":629,"user_id":11199879,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a0a9c56c2190957960c9463c03486df8?s=128&d=identicon&r=PG&f=1","display_name":"Kaplan","link":"https://stackoverflow.com/users/11199879/kaplan"},"comment_count":0,"score":1,"creation_date":1607781039,"body_markdown":"*if You need to convert the string to a specific character set* **w/o external libraries** *then:*\r\n\r\n    public String convertStreamToString(InputStream is) throws IOException {\r\n      try (ByteArrayOutputStream baos = new ByteArrayOutputStream();) {\r\n        is.transferTo(baos);\r\n        return baos.toString(StandardCharsets.UTF_8);\r\n      }\r\n    }\r\n","title":"How do I read / convert an InputStream into a String in Java?"}],"owner":{"reputation":43555,"user_id":16616,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/PNeie.png?s=128&g=1","display_name":"Johnny Maelstrom","link":"https://stackoverflow.com/users/16616/johnny-maelstrom"},"comment_count":2,"is_answered":true,"answer_count":60,"score":4271,"creation_date":1227286060,"question_id":309424,"body_markdown":"If you have a `java.io.InputStream` object, how should you process that object and produce a `String`?\r\n\r\n---\r\n\r\nSuppose I have an `InputStream` that contains text data, and I want to convert it to a `String`, so for example I can write that to a log file.\r\n\r\nWhat is the easiest way to take the `InputStream` and convert it to a `String`?\r\n\r\n    public String convertStreamToString(InputStream is) {\r\n        // ???\r\n    }\r\n\r\n","link":"https://stackoverflow.com/questions/309424/how-do-i-read-convert-an-inputstream-into-a-string-in-java","title":"How do I read / convert an InputStream into a String in Java?"},{"tags":["java","nullpointerexception","null"],"comments":[{"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"score":131,"creation_date":1280740640},{"owner":{"reputation":1634,"user_id":1342121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/77514447b0277a930a8f46776a3da885?s=128&d=identicon&r=PG","display_name":"ianpojman","link":"https://stackoverflow.com/users/1342121/ianpojman"},"score":77,"creation_date":1339184414},{"owner":{"reputation":774,"user_id":1490962,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/kICqY.jpg?s=128&g=1","display_name":"Bhushankumar Lilapara","link":"https://stackoverflow.com/users/1490962/bhushankumar-lilapara"},"score":0,"creation_date":1369908930},{"owner":{"reputation":5871,"user_id":1870054,"user_type":"registered","accept_rate":72,"profile_image":"https://i.stack.imgur.com/QJydN.jpg?s=128&g=1","display_name":"wener","link":"https://stackoverflow.com/users/1870054/wener"},"score":0,"creation_date":1381342881},{"owner":{"reputation":7959,"user_id":1183884,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/540298d74d0fab2a8a3c0fa26aca24c3?s=128&d=identicon&r=PG","display_name":"BlueCacti","link":"https://stackoverflow.com/users/1183884/bluecacti"},"score":0,"creation_date":1407915432},{"owner":{"reputation":1276,"user_id":1856235,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b0c6380e97350fd48c09f2debc906ddf?s=128&d=identicon&r=PG","display_name":"Andrii Polunin","link":"https://stackoverflow.com/users/1856235/andrii-polunin"},"score":1,"creation_date":1459775150},{"owner":{"reputation":177,"user_id":2208556,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/5804da6dfc5a885f987dca203b514106?s=128&d=identicon&r=PG","display_name":"Robert R Evans","link":"https://stackoverflow.com/users/2208556/robert-r-evans"},"score":2,"creation_date":1466701361},{"owner":{"reputation":151,"user_id":2787149,"user_type":"registered","accept_rate":20,"profile_image":"https://www.gravatar.com/avatar/ba50d872bad0cacbaa0ec75cc3351539?s=128&d=identicon&r=PG","display_name":"Abhishek kapoor","link":"https://stackoverflow.com/users/2787149/abhishek-kapoor"},"score":1,"creation_date":1488258825}],"answers":[{"comments":[{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":17,"creation_date":1256979737},{"owner":{"reputation":3076,"user_id":204840,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/ea10c056f09285737ff0daf8a62e176f?s=128&d=identicon&r=PG","display_name":"cthulhu","link":"https://stackoverflow.com/users/204840/cthulhu"},"score":1,"creation_date":1295355181},{"owner":{"reputation":5620,"user_id":2047962,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/646f5fd223be663d5e27df09b0f1b0ef?s=128&d=identicon&r=PG","display_name":"RustyTheBoyRobot","link":"https://stackoverflow.com/users/2047962/rustytheboyrobot"},"score":3,"creation_date":1366132330}],"owner":{"reputation":1618,"user_id":32168,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/71678040a694af81b503b6e55209f6a6?s=128&d=identicon&r=PG","display_name":"Jim Nelson","link":"https://stackoverflow.com/users/32168/jim-nelson"},"comment_count":3,"score":78,"creation_date":1226047824,"body_markdown":"Rather than Null Object Pattern -- which has its uses -- you might consider situations where the null object is a bug.\r\n\r\nWhen the exception is thrown, examine the stack trace and work through the bug.","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":8196,"user_id":3779853,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/1cbdb458aafbdc1095f165a616444917?s=128&d=identicon&r=PG&f=1","display_name":"phil294","link":"https://stackoverflow.com/users/3779853/phil294"},"score":3,"creation_date":1488070481}],"owner":{"reputation":12046,"user_id":12719,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7035cec2436e927067addeeb5266bd36?s=128&d=identicon&r=PG","display_name":"pgras","link":"https://stackoverflow.com/users/12719/pgras"},"comment_count":1,"score":100,"creation_date":1226048126,"body_markdown":"- If you consider an object should not be null (or it is a bug) use an assert.\r\n- If your method doesn&#39;t accept null params say it in the javadoc and use an assert.\r\n\r\nYou have to check for object != null only if you want to handle the case where the object may be null...\r\n\r\nThere is a proposal to add new annotations in Java7 to help with null / notnull params:\r\n[http://tech.puredanger.com/java7/#jsr308][1]\r\n\r\n\r\n  [1]: http://tech.puredanger.com/java7/#jsr308","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":5705,"user_id":1296660,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2d70e7bf08fe2e1e0d29edc68bf60651?s=128&d=identicon&r=PG","display_name":"Supericy","link":"https://stackoverflow.com/users/1296660/supericy"},"score":2,"creation_date":1371153718},{"owner":{"reputation":9193,"user_id":881272,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/f4daab0a92c07d1ec95556c4ab5f0159?s=128&d=identicon&r=PG","display_name":"Angelo Fuchs","link":"https://stackoverflow.com/users/881272/angelo-fuchs"},"score":4,"creation_date":1375169190}],"owner":{"reputation":461832,"user_id":34509,"user_type":"registered","accept_rate":62,"profile_image":"https://i.stack.imgur.com/7FnYg.jpg?s=128&g=1","display_name":"Johannes Schaub - litb","link":"https://stackoverflow.com/users/34509/johannes-schaub-litb"},"comment_count":2,"score":77,"creation_date":1226048651,"body_markdown":"Sometimes, you have methods that operate on its parameters that define a symmetric operation:\r\n\r\n    a.f(b); &lt;-&gt; b.f(a);\r\n\r\nIf you know b can never be null, you can just swap it. It is most useful for equals:\r\nInstead of `foo.equals(&quot;bar&quot;);` better do `&quot;bar&quot;.equals(foo);`.\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":5510,"user_id":184456,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/e14ef2fea2bc08372df32cf3fe036365?s=128&d=identicon&r=PG","display_name":"monojohnny","link":"https://stackoverflow.com/users/184456/monojohnny"},"score":5,"creation_date":1263477456},{"owner":{"reputation":544,"user_id":2403791,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1b3c49a61a98f8311bf713b22cae10c3?s=128&d=identicon&r=PG","display_name":"Kurapika","link":"https://stackoverflow.com/users/2403791/kurapika"},"score":0,"creation_date":1512835411},{"owner":{"reputation":5510,"user_id":184456,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/e14ef2fea2bc08372df32cf3fe036365?s=128&d=identicon&r=PG","display_name":"monojohnny","link":"https://stackoverflow.com/users/184456/monojohnny"},"score":0,"creation_date":1515249925}],"owner":{"reputation":16719,"user_id":27657,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/7b718f1f997edffed8e17f7875dea15f?s=128&d=identicon&r=PG","display_name":"javamonkey79","link":"https://stackoverflow.com/users/27657/javamonkey79"},"comment_count":3,"score":129,"creation_date":1226049019,"body_markdown":"Depending on what kind of objects you are checking you may be able to use some of the classes in the apache commons such as: [apache commons lang][1] and [apache commons collections][2]\r\n\r\nExample: \r\n\r\n    String foo;\r\n    ...\r\n    if( StringUtils.isBlank( foo ) ) {\r\n       ///do something\r\n    }\r\nor (depending on what you need to check):\r\n\r\n    String foo;\r\n    ...\r\n    if( StringUtils.isEmpty( foo ) ) {\r\n       ///do something\r\n    }\r\n\r\nThe StringUtils class is only one of many; there are quite a few good classes in the commons that do null safe manipulation.\r\n\r\n\r\n  [1]: http://commons.apache.org/lang/\r\n  [2]: http://commons.apache.org/collections/\r\n\r\n\r\n\r\n\r\n\r\nHere follows an example of how you can use null vallidation in JAVA when you include apache library(commons-lang-2.4.jar)\r\n\r\n    public DOCUMENT read(String xml, ValidationEventHandler validationEventHandler) {\r\n\t\tValidate.notNull(validationEventHandler,&quot;ValidationHandler not Injected&quot;);\r\n\t\treturn read(new StringReader(xml), true, validationEventHandler);\r\n\t}\r\n\r\nAnd if you are using Spring, Spring also has the same functionality in its package, see library(spring-2.4.6.jar) \r\n\r\nExample on how to use this static classf from spring(org.springframework.util.Assert)\r\n\r\n    Assert.notNull(validationEventHandler,&quot;ValidationHandler not Injected&quot;);\r\n\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":13134,"user_id":341291,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/LmEnh.jpg?s=128&g=1","display_name":"Axel","link":"https://stackoverflow.com/users/341291/axel"},"score":96,"creation_date":1312908433},{"owner":{"reputation":1534,"user_id":28683,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/a0c8f93b24e49cb948b9a0da84a05ddf?s=128&d=identicon&r=PG&f=1","display_name":"myplacedk","link":"https://stackoverflow.com/users/28683/myplacedk"},"score":23,"creation_date":1313411219},{"owner":{"reputation":13134,"user_id":341291,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/LmEnh.jpg?s=128&g=1","display_name":"Axel","link":"https://stackoverflow.com/users/341291/axel"},"score":7,"creation_date":1314012014},{"owner":{"reputation":1127,"user_id":200802,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/871836155872409e8d2b2a79e4c828d4?s=128&d=identicon&r=PG","display_name":"charstar","link":"https://stackoverflow.com/users/200802/charstar"},"score":3,"creation_date":1322906042},{"owner":{"reputation":3773,"user_id":197101,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/bfb58616b94d2dd92e9652697e8c5f65?s=128&d=identicon&r=PG","display_name":"Visionary Software Solutions","link":"https://stackoverflow.com/users/197101/visionary-software-solutions"},"score":2,"creation_date":1347042203},{"owner":{"reputation":17601,"user_id":298029,"user_type":"registered","profile_image":"https://i.stack.imgur.com/lcPr5.png?s=128&g=1","display_name":"fgb","link":"https://stackoverflow.com/users/298029/fgb"},"score":8,"creation_date":1365381575},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":9,"creation_date":1366500901},{"owner":{"reputation":76229,"user_id":330057,"user_type":"registered","accept_rate":77,"profile_image":"https://i.stack.imgur.com/i6yM6.png?s=128&g=1","display_name":"corsiKa","link":"https://stackoverflow.com/users/330057/corsika"},"score":2,"creation_date":1371165407},{"owner":{"reputation":2768,"user_id":1733377,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/S3e4a.jpg?s=128&g=1","display_name":"Michael Plautz","link":"https://stackoverflow.com/users/1733377/michael-plautz"},"score":1,"creation_date":1431482489},{"owner":{"reputation":9688,"user_id":201722,"user_type":"registered","accept_rate":95,"profile_image":"https://i.stack.imgur.com/z5MSO.jpg?s=128&g=1","display_name":"luis.espinal","link":"https://stackoverflow.com/users/201722/luis-espinal"},"score":7,"creation_date":1471022939},{"owner":{"reputation":9688,"user_id":201722,"user_type":"registered","accept_rate":95,"profile_image":"https://i.stack.imgur.com/z5MSO.jpg?s=128&g=1","display_name":"luis.espinal","link":"https://stackoverflow.com/users/201722/luis-espinal"},"score":7,"creation_date":1471023227},{"owner":{"reputation":35045,"user_id":2891664,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/9df9d7af70d46f8db2ecd4392bb76087?s=128&d=identicon&r=PG&f=1","display_name":"Radiodef","link":"https://stackoverflow.com/users/2891664/radiodef"},"score":2,"creation_date":1494193887}],"owner":{"reputation":1534,"user_id":28683,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/a0c8f93b24e49cb948b9a0da84a05ddf?s=128&d=identicon&r=PG&f=1","display_name":"myplacedk","link":"https://stackoverflow.com/users/28683/myplacedk"},"comment_count":12,"score":331,"creation_date":1226050020,"body_markdown":"## If null-values are not allowed ##\r\nIf your method is called externally, start with something like this:\r\n\r\n    public void method(Object object) {\r\n      if (object == null) {\r\n        throw new IllegalArgumentException(&quot;...&quot;);\r\n      }\r\n\r\nThen, in the rest of that method, you&#39;ll know that `object` is not null.\r\n\r\nIf it is an internal method (not part of an API), just document that it cannot be null, and that&#39;s it.\r\n\r\nExample:\r\n\r\n    public String getFirst3Chars(String text) {\r\n      return text.subString(0, 3);\r\n    }\r\n\r\nHowever, if your method just passes the value on, and the next method passes it on etc. it could get problematic. In that case you may want to check the argument as above.\r\n\r\n## If null is allowed ##\r\nThis really depends. If find that I often do something like this:\r\n\r\n    if (object == null) {\r\n      // something\r\n    } else {\r\n      // something else\r\n    }\r\n\r\nSo I branch, and do two completely different things. There is no ugly code snippet, because I really need to do two different things depending on the data. For example, should I work on the input, or should I calculate a good default value?\r\n\r\n----------\r\n\r\nIt&#39;s actually rare for me to use the idiom &quot;`if (object != null &amp;&amp; ...`&quot;.\r\n\r\nIt may be easier to give you examples, if you show examples of where you typically use the idiom.","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":37988,"user_id":6610,"user_type":"registered","accept_rate":72,"profile_image":"https://www.gravatar.com/avatar/635c3ea0c7b8c37ef45744b6e66dd263?s=128&d=identicon&r=PG","display_name":"xtofl","link":"https://stackoverflow.com/users/6610/xtofl"},"comment_count":0,"score":37,"creation_date":1226050037,"body_markdown":"\r\nAsking that question points out that you may be interested in error handling strategies.  How and where to handle errors is a pervasive architectural question.  There are several ways to do this.\r\n\r\nMy favorite: allow the Exceptions to ripple through - catch them at the &#39;main loop&#39; or in some other function with the appropriate responsibilities.  Checking for error conditions and handling them appropriately can be seen as a specialized responsibility.\r\n\r\nSure do have a look at Aspect Oriented Programming, too - they have neat ways to insert `if( o == null ) handleNull()` into your bytecode.","title":"Avoiding NullPointerException in Java"},{"owner":{"user_type":"does_not_exist","display_name":"Stuart Axon"},"comment_count":0,"score":6,"creation_date":1226054627,"body_markdown":"Wherever you pass an array or a Vector, initialise these to empty ones, instead of null.  - This way you can avoid lots of checking for null and all is good :)\r\n\r\n\r\n    public class NonNullThing {\r\n    \r\n       Vector vectorField = new Vector();\r\n    \r\n       int[] arrayField = new int[0];\r\n    \r\n       public NonNullThing() {\r\n    \r\n          // etc\r\n    \r\n       }\r\n    \r\n    }\r\n\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":27299,"user_id":8026,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/60929e8e0445f0070e501f5ded8ad348?s=128&d=identicon&r=PG","display_name":"MetroidFan2002","link":"https://stackoverflow.com/users/8026/metroidfan2002"},"score":641,"creation_date":1226082982},{"owner":{"reputation":5999,"user_id":14204,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/8ed0735822eb58410f2ef73bdbc7f264?s=128&d=identicon&r=PG","display_name":"Laplie Anderson","link":"https://stackoverflow.com/users/14204/laplie-anderson"},"score":268,"creation_date":1226627597},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":6,"creation_date":1243338183},{"owner":{"reputation":15340,"user_id":48553,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/9f841250f16164ae270f1ce286171165?s=128&d=identicon&r=PG","display_name":"Steven Evers","link":"https://stackoverflow.com/users/48553/steven-evers"},"score":94,"creation_date":1248323211},{"owner":{"reputation":9503,"user_id":37740,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/f4ee2ca01556290d92524f734c6299d4?s=128&d=identicon&r=PG","display_name":"DragonBorn","link":"https://stackoverflow.com/users/37740/dragonborn"},"score":15,"creation_date":1259590866},{"owner":{"reputation":4866,"user_id":74098,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/7e45e2094327506ac564ba1ce114cd00?s=128&d=identicon&r=PG","display_name":"Cshah","link":"https://stackoverflow.com/users/74098/cshah"},"score":12,"creation_date":1265900215},{"owner":{"reputation":8429,"user_id":219394,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/be6af8c75baccb49c9f0e6158c505973?s=128&d=identicon&r=PG","display_name":"Kevin Brock","link":"https://stackoverflow.com/users/219394/kevin-brock"},"score":62,"creation_date":1267791942},{"owner":{"reputation":11106,"user_id":10522,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/8396048b39279996e7ee6c1acdac2bf7?s=128&d=identicon&r=PG","display_name":"Berlin Brown","link":"https://stackoverflow.com/users/10522/berlin-brown"},"score":2,"creation_date":1300138382},{"owner":{"reputation":714,"user_id":151909,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/5e46ac54d86d3f19fb3543503df3a230?s=128&d=identicon&r=PG","display_name":"gshauger","link":"https://stackoverflow.com/users/151909/gshauger"},"score":37,"creation_date":1304483612},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":6,"creation_date":1315173096},{"owner":{"reputation":27299,"user_id":8026,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/60929e8e0445f0070e501f5ded8ad348?s=128&d=identicon&r=PG","display_name":"MetroidFan2002","link":"https://stackoverflow.com/users/8026/metroidfan2002"},"score":9,"creation_date":1315176959},{"owner":{"reputation":13693,"user_id":80701,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/d9391c16473dad5e699e1ca91b874663?s=128&d=identicon&r=PG","display_name":"monksy","link":"https://stackoverflow.com/users/80701/monksy"},"score":4,"creation_date":1316444169},{"owner":{"reputation":45503,"user_id":177883,"user_type":"registered","accept_rate":96,"profile_image":"https://www.gravatar.com/avatar/1e1f4dbb6e64ed8de79766168a3db197?s=128&d=identicon&r=PG","display_name":"DarthVader","link":"https://stackoverflow.com/users/177883/darthvader"},"score":18,"creation_date":1317775492},{"owner":{"reputation":1688,"user_id":445367,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6aa3490c6f4f76acd5d706b9bc0ff54a?s=128&d=identicon&r=PG","display_name":"Eelco","link":"https://stackoverflow.com/users/445367/eelco"},"score":12,"creation_date":1328677734},{"owner":{"reputation":1171,"user_id":818060,"user_type":"registered","profile_image":"https://i.stack.imgur.com/53YxL.jpg?s=128&g=1","display_name":"Sal","link":"https://stackoverflow.com/users/818060/sal"},"score":0,"creation_date":1346014095},{"owner":{"reputation":2953,"user_id":241750,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/a265b98dbc06ea425be8f643c9270533?s=128&d=identicon&r=PG","display_name":"Sebastian","link":"https://stackoverflow.com/users/241750/sebastian"},"score":0,"creation_date":1347656258},{"owner":{"reputation":1634,"user_id":1342121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/77514447b0277a930a8f46776a3da885?s=128&d=identicon&r=PG","display_name":"ianpojman","link":"https://stackoverflow.com/users/1342121/ianpojman"},"score":2,"creation_date":1350530936},{"owner":{"reputation":3744,"user_id":726047,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/ea297b7821fd8047fc91a696c791a28b?s=128&d=identicon&r=PG","display_name":"Matthew Kirkley","link":"https://stackoverflow.com/users/726047/matthew-kirkley"},"score":11,"creation_date":1356006313},{"owner":{"reputation":867,"user_id":452944,"user_type":"registered","accept_rate":42,"profile_image":"https://i.stack.imgur.com/s8Euo.jpg?s=128&g=1","display_name":"FidEliO","link":"https://stackoverflow.com/users/452944/fidelio"},"score":0,"creation_date":1356348262},{"owner":{"reputation":15289,"user_id":444668,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/7ffced6cbed40a750c8ef8a365872fd7?s=128&d=identicon&r=PG","display_name":"Jonathan","link":"https://stackoverflow.com/users/444668/jonathan"},"score":1,"creation_date":1357861244},{"owner":{"reputation":3012,"user_id":704335,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/GwNjA.png?s=128&g=1","display_name":"Timmos","link":"https://stackoverflow.com/users/704335/timmos"},"score":6,"creation_date":1358439849},{"owner":{"reputation":5772,"user_id":1427758,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/wkL75.jpg?s=128&g=1","display_name":"Anders Lind&#233;n","link":"https://stackoverflow.com/users/1427758/anders-lind%c3%a9n"},"score":2,"creation_date":1358803699},{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"score":5,"creation_date":1362618270},{"owner":{"reputation":1064,"user_id":378606,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/goEf1.jpg?s=128&g=1","display_name":"Ryan Bennetts","link":"https://stackoverflow.com/users/378606/ryan-bennetts"},"score":7,"creation_date":1366716793},{"owner":{"reputation":2811,"user_id":173074,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/328bcf45b24e219e3ea9f4c57017b9b1?s=128&d=identicon&r=PG","display_name":"Ricky Clarkson","link":"https://stackoverflow.com/users/173074/ricky-clarkson"},"score":2,"creation_date":1371578448},{"owner":{"reputation":889,"user_id":8735,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a904fdd6d7dbee2b0c86b5f4b27b1dbd?s=128&d=identicon&r=PG","display_name":"Travis Wilson","link":"https://stackoverflow.com/users/8735/travis-wilson"},"score":2,"creation_date":1393443393},{"owner":{"reputation":27299,"user_id":8026,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/60929e8e0445f0070e501f5ded8ad348?s=128&d=identicon&r=PG","display_name":"MetroidFan2002","link":"https://stackoverflow.com/users/8026/metroidfan2002"},"score":1,"creation_date":1393521708},{"owner":{"reputation":27299,"user_id":8026,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/60929e8e0445f0070e501f5ded8ad348?s=128&d=identicon&r=PG","display_name":"MetroidFan2002","link":"https://stackoverflow.com/users/8026/metroidfan2002"},"score":1,"creation_date":1393521839},{"owner":{"reputation":744,"user_id":1476154,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/d878b45af06f96aa81304df6c694e6af?s=128&d=identicon&r=PG","display_name":"grinch","link":"https://stackoverflow.com/users/1476154/grinch"},"score":3,"creation_date":1393593806},{"owner":{"reputation":889,"user_id":8735,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a904fdd6d7dbee2b0c86b5f4b27b1dbd?s=128&d=identicon&r=PG","display_name":"Travis Wilson","link":"https://stackoverflow.com/users/8735/travis-wilson"},"score":0,"creation_date":1393608978},{"owner":{"reputation":43377,"user_id":1477667,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/trgKM.jpg?s=128&g=1","display_name":"dfeuer","link":"https://stackoverflow.com/users/1477667/dfeuer"},"score":3,"creation_date":1396228309},{"owner":{"reputation":632,"user_id":1011979,"user_type":"registered","profile_image":"https://i.stack.imgur.com/w5ptB.jpg?s=128&g=1","display_name":"UFL1138","link":"https://stackoverflow.com/users/1011979/ufl1138"},"score":0,"creation_date":1400170553},{"owner":{"reputation":27299,"user_id":8026,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/60929e8e0445f0070e501f5ded8ad348?s=128&d=identicon&r=PG","display_name":"MetroidFan2002","link":"https://stackoverflow.com/users/8026/metroidfan2002"},"score":5,"creation_date":1403323588},{"owner":{"reputation":30506,"user_id":116509,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/GsYqn.jpg?s=128&g=1","display_name":"artbristol","link":"https://stackoverflow.com/users/116509/artbristol"},"score":0,"creation_date":1406644307},{"owner":{"reputation":359,"user_id":1264657,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/98adc4bbbc6c1180272e58c42d9f4956?s=128&d=identicon&r=PG","display_name":"Dilruk","link":"https://stackoverflow.com/users/1264657/dilruk"},"score":2,"creation_date":1406832679},{"owner":{"reputation":997,"user_id":202630,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/0f96121fd8f9dd5c98f38a33c3dc7114?s=128&d=identicon&r=PG","display_name":"Kemal Erdogan","link":"https://stackoverflow.com/users/202630/kemal-erdogan"},"score":1,"creation_date":1410876370},{"owner":{"reputation":416,"user_id":1367414,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ff8fb2b91d470633184505d5e1f15366?s=128&d=identicon&r=PG","display_name":"Xunnamius","link":"https://stackoverflow.com/users/1367414/xunnamius"},"score":0,"creation_date":1415068263},{"owner":{"reputation":23294,"user_id":3705127,"user_type":"registered","accept_rate":52,"profile_image":"https://www.gravatar.com/avatar/b03aedaddfa4dc1c2b331f318a724ec7?s=128&d=identicon&r=PG&f=1","display_name":"sprinter","link":"https://stackoverflow.com/users/3705127/sprinter"},"score":5,"creation_date":1419391715},{"owner":{"reputation":1404,"user_id":1997707,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/86a28f715dee63c5aec328fc2374b4bd?s=128&d=identicon&r=PG","display_name":"John Mercier","link":"https://stackoverflow.com/users/1997707/john-mercier"},"score":1,"creation_date":1424800722},{"owner":{"reputation":8749,"user_id":1953590,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/b7f981d575a65b685a5ead903fcbfbf6?s=128&d=identicon&r=PG&f=1","display_name":"Kevin Krumwiede","link":"https://stackoverflow.com/users/1953590/kevin-krumwiede"},"score":4,"creation_date":1425926907},{"owner":{"reputation":5651,"user_id":2950618,"user_type":"registered","accept_rate":43,"profile_image":"https://i.stack.imgur.com/4EUKo.jpg?s=128&g=1","display_name":"Josh","link":"https://stackoverflow.com/users/2950618/josh"},"score":1,"creation_date":1437126804},{"owner":{"reputation":344,"user_id":1548580,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5a8125420b52efb09255cd8ddcb0eb9f?s=128&d=identicon&r=PG","display_name":"Demonblack","link":"https://stackoverflow.com/users/1548580/demonblack"},"score":0,"creation_date":1473871663},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":1,"creation_date":1479899672},{"owner":{"reputation":395,"user_id":5649397,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-wUyZ0To9Eeg/AAAAAAAAAAI/AAAAAAAACOw/L0taSLzpRPk/photo.jpg?sz=128","display_name":"Pascal Schneider","link":"https://stackoverflow.com/users/5649397/pascal-schneider"},"score":1,"creation_date":1488207646},{"owner":{"reputation":2186,"user_id":4669984,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6e14021aae7f6d223e60ac4bd035440f?s=128&d=identicon&r=PG","display_name":"Tarun Maganti","link":"https://stackoverflow.com/users/4669984/tarun-maganti"},"score":0,"creation_date":1491903809},{"owner":{"reputation":499,"user_id":2146861,"user_type":"registered","profile_image":"https://i.stack.imgur.com/n0OZi.png?s=128&g=1","display_name":"Osmar","link":"https://stackoverflow.com/users/2146861/osmar"},"score":2,"creation_date":1514387838},{"owner":{"reputation":933,"user_id":2315306,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/7669fc69a2d2b76324952a5858be06e5?s=128&d=identicon&r=PG","display_name":"Singed","link":"https://stackoverflow.com/users/2315306/singed"},"score":2,"creation_date":1516653856},{"owner":{"reputation":808,"user_id":7417104,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/0118a89d1f7d3ce5ae8b308fbd99d10e?s=128&d=identicon&r=PG&f=1","display_name":"JFreeman","link":"https://stackoverflow.com/users/7417104/jfreeman"},"score":0,"creation_date":1516867472},{"owner":{"reputation":3683,"user_id":203476,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/838b591b09fc19aae77b84c63ddbe633?s=128&d=identicon&r=PG","display_name":"Rasmus Kaj","link":"https://stackoverflow.com/users/203476/rasmus-kaj"},"score":1,"creation_date":1518096794},{"owner":{"reputation":8069,"user_id":11892,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/7e11e5f17f34e61ead04b0e78aa68e2a?s=128&d=identicon&r=PG","display_name":"bltxd","link":"https://stackoverflow.com/users/11892/bltxd"},"score":1,"creation_date":1519392070},{"owner":{"reputation":344,"user_id":1548580,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5a8125420b52efb09255cd8ddcb0eb9f?s=128&d=identicon&r=PG","display_name":"Demonblack","link":"https://stackoverflow.com/users/1548580/demonblack"},"score":0,"creation_date":1566818133},{"owner":{"reputation":4680,"user_id":4619958,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/cVA9W.png?s=128&g=1","display_name":"ch271828n","link":"https://stackoverflow.com/users/4619958/ch271828n"},"score":0,"creation_date":1583145188},{"owner":{"reputation":11400,"user_id":1540818,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/oZ1EX.jpg?s=128&g=1","display_name":"Joffrey","link":"https://stackoverflow.com/users/1540818/joffrey"},"score":0,"creation_date":1583250561},{"owner":{"reputation":705,"user_id":1346501,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/4dd33cc129cd1ee5806028665edd1255?s=128&d=identicon&r=PG","display_name":"Vanja D.","link":"https://stackoverflow.com/users/1346501/vanja-d"},"score":1,"creation_date":1601995745},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":0,"creation_date":1609007067}],"owner":{"reputation":573319,"user_id":18393,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/2f364c2e36b52bc80296cbf23da8b231?s=128&d=identicon&r=PG","display_name":"cletus","link":"https://stackoverflow.com/users/18393/cletus"},"comment_count":55,"score":2716,"creation_date":1226059600,"body_markdown":"This to me sounds like a reasonably common problem that junior to intermediate developers tend to face at some point: they either don&#39;t know or don&#39;t trust the contracts they are participating in and defensively overcheck for nulls.  Additionally, when writing their own code, they tend to rely on returning nulls to indicate something thus requiring the caller to check for nulls.\r\n\r\nTo put this another way, there are two instances where null checking comes up:\r\n\r\n 1. Where null is a valid response in terms of the contract; and\r\n\r\n 2. Where it isn&#39;t a valid response.\r\n\r\n(2) is easy.  Either use `assert` statements (assertions) or allow failure (for example,  [NullPointerException](http://docs.oracle.com/javase/6/docs/api/index.html?java/lang/NullPointerException.html)).  Assertions are a highly-underused Java feature that was added in 1.4.  The syntax is:\r\n\r\n    assert &lt;condition&gt;\r\n\r\nor\r\n\r\n    assert &lt;condition&gt; : &lt;object&gt;\r\n\r\nwhere `&lt;condition&gt;` is a boolean expression and `&lt;object&gt;` is an object whose `toString()` method&#39;s output will be included in the error.\r\n\r\nAn `assert` statement throws an `Error` (`AssertionError`) if the condition is not true.  By default, Java ignores assertions.  You can enable assertions by passing the option `-ea` to the JVM.  You can enable and disable assertions for individual classes and packages.  This means that you can validate code with the assertions while developing and testing, and disable them in a production environment, although my testing has shown next to no performance impact from assertions.\r\n\r\nNot using assertions in this case is OK because the code will just fail, which is what will happen if you use assertions.  The only difference is that with assertions it might happen sooner, in a more-meaningful way and possibly with extra information, which may help you to figure out why it happened if you weren&#39;t expecting it.\r\n\r\n(1) is a little harder.  If you have no control over the code you&#39;re calling then you&#39;re stuck.  If null is a valid response, you have to check for it.\r\n\r\nIf it&#39;s code that you do control, however (and this is often the case), then it&#39;s a different story.  Avoid using nulls as a response.  With methods that return collections, it&#39;s easy: return empty collections (or arrays) instead of nulls pretty much all the time.\r\n\r\nWith non-collections it might be harder.  Consider this as an example: if you have these interfaces:\r\n\r\n    public interface Action {\r\n      void doSomething();\r\n    }\r\n    \r\n    public interface Parser {\r\n      Action findAction(String userInput);\r\n    }\r\n\r\nwhere Parser takes raw user input and finds something to do, perhaps if you&#39;re implementing a command line interface for something.  Now you might make the contract that it returns null if there&#39;s no appropriate action.  That leads the null checking you&#39;re talking about.\r\n\r\nAn alternative solution is to never return null and instead use the [Null Object pattern][1]:\r\n\r\n    public class MyParser implements Parser {\r\n      private static Action DO_NOTHING = new Action() {\r\n        public void doSomething() { /* do nothing */ }\r\n      };\r\n    \r\n      public Action findAction(String userInput) {\r\n        // ...\r\n        if ( /* we can&#39;t find any actions */ ) {\r\n          return DO_NOTHING;\r\n        }\r\n      }\r\n    }\r\n\r\nCompare:\r\n\r\n    Parser parser = ParserFactory.getParser();\r\n    if (parser == null) {\r\n      // now what?\r\n      // this would be an example of where null isn&#39;t (or shouldn&#39;t be) a valid response\r\n    }\r\n    Action action = parser.findAction(someInput);\r\n    if (action == null) {\r\n      // do nothing\r\n    } else {\r\n      action.doSomething();\r\n    }\r\n\r\nto\r\n\r\n    ParserFactory.getParser().findAction(someInput).doSomething();\r\n\r\nwhich is a much better design because it leads to more concise code.\r\n\r\nThat said, perhaps it is entirely appropriate for the findAction() method to throw an Exception with a meaningful error message -- especially in this case where you are relying on user input.  It would be much better for the findAction method to throw an Exception than for the calling method to blow up with a simple NullPointerException with no explanation.\r\n\r\n    try {\r\n        ParserFactory.getParser().findAction(someInput).doSomething();\r\n    } catch(ActionNotFoundException anfe) {\r\n        userConsole.err(anfe.getMessage());\r\n    }\r\n\r\nOr if you think the try/catch mechanism is too ugly, rather than Do Nothing your default action should provide feedback to the user.\r\n\r\n    public Action findAction(final String userInput) {\r\n        /* Code to return requested Action if found */\r\n        return new Action() {\r\n            public void doSomething() {\r\n                userConsole.err(&quot;Action not found: &quot; + userInput);\r\n            }\r\n        }\r\n    }\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Null_Object_pattern","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":3245,"user_id":181551,"user_type":"registered","accept_rate":41,"profile_image":"https://www.gravatar.com/avatar/5bdec1e17ffb5c23f339bf527434a067?s=128&d=identicon&r=PG","display_name":"Alex Worden","link":"https://stackoverflow.com/users/181551/alex-worden"},"score":42,"creation_date":1306174456},{"owner":{"reputation":2283,"user_id":707372,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/f8bd30bbbd029804a5dfe8aa210dba15?s=128&d=identicon&r=PG","display_name":"Stef","link":"https://stackoverflow.com/users/707372/stef"},"score":20,"creation_date":1316740838},{"owner":{"reputation":4547,"user_id":335227,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/9686693c6b9ac45105929e9fadf60cc5?s=128&d=identicon&r=PG","display_name":"Erin Drummond","link":"https://stackoverflow.com/users/335227/erin-drummond"},"score":9,"creation_date":1380569824},{"owner":{"reputation":10277,"user_id":1022330,"user_type":"registered","accept_rate":51,"profile_image":"https://i.stack.imgur.com/sfSrX.png?s=128&g=1","display_name":"Oliver Watkins","link":"https://stackoverflow.com/users/1022330/oliver-watkins"},"score":6,"creation_date":1399880942},{"owner":{"reputation":4160,"user_id":528617,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/4hEuv.png?s=128&g=1","display_name":"Arnab Datta","link":"https://stackoverflow.com/users/528617/arnab-datta"},"score":0,"creation_date":1448528235}],"owner":{"reputation":8816,"user_id":35915,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/db138ec73265ba36523518cb94544da5?s=128&d=identicon&r=PG","display_name":"echox","link":"https://stackoverflow.com/users/35915/echox"},"comment_count":5,"score":197,"creation_date":1226233498,"body_markdown":"Only for this situation -\r\n\r\nNot checking if a variable is null before invoking an equals method (a string compare example below):\r\n\r\n    if ( foo.equals(&quot;bar&quot;) ) {\r\n     // ...\r\n    }\r\n\r\nwill result in a `NullPointerException` if `foo` doesn&#39;t exist.\r\n\r\nYou can avoid that if you compare your `String`s like this:\r\n\r\n    if ( &quot;bar&quot;.equals(foo) ) {\r\n     // ...\r\n    }","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":182757,"user_id":20654,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/94066dfa49c2feb14706cb081848fda7?s=128&d=identicon&r=PG","display_name":"OscarRyz","link":"https://stackoverflow.com/users/20654/oscarryz"},"comment_count":0,"score":22,"creation_date":1226614084,"body_markdown":"I&#39;ve tried the `NullObjectPattern` but for me is not always the best way to go. There are sometimes when a &quot;no action&quot; is not appropiate.\r\n\r\n\r\n`NullPointerException` is a *Runtime exception* that means it&#39;s developers fault and with enough experience it tells you exactly where is the error.\r\n\r\nNow to the answer:\r\n\r\nTry to make all your attributes and its accessors as private as possible or avoid to  expose them to the clients at all. You can have the argument values in the constructor of course, but by reducing the scope you don&#39;t let the client class pass an invalid value. If you need to modify the values, you can always create a new `object`.  You check the values in the constructor only **once** and in the rest of the methods you can be almost sure that the values are not null.\r\n\r\n\r\nOf course, experience is the better way to understand and apply this suggestion.\r\n\r\nByte!\r\n\r\n ","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":1438,"user_id":27241,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/711b8e982c036b7ba32e521245b5921f?s=128&d=identicon&r=PG","display_name":"mysomic","link":"https://stackoverflow.com/users/27241/mysomic"},"score":71,"creation_date":1242689180},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":16,"creation_date":1243338977},{"owner":{"reputation":10537,"user_id":454470,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9980ffbd4749bf379df1a38e16f42f17?s=128&d=identicon&r=PG","display_name":"Steven Benitez","link":"https://stackoverflow.com/users/454470/steven-benitez"},"score":6,"creation_date":1297630552},{"owner":{"reputation":3245,"user_id":181551,"user_type":"registered","accept_rate":41,"profile_image":"https://www.gravatar.com/avatar/5bdec1e17ffb5c23f339bf527434a067?s=128&d=identicon&r=PG","display_name":"Alex Worden","link":"https://stackoverflow.com/users/181551/alex-worden"},"score":35,"creation_date":1335208270},{"owner":{"reputation":6616,"user_id":886749,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/d8206b3ff36c7985108359f97562a9a4?s=128&d=identicon&r=PG","display_name":"Cory Kendall","link":"https://stackoverflow.com/users/886749/cory-kendall"},"score":6,"creation_date":1353565563},{"owner":{"reputation":607,"user_id":153339,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a30f8217f504fd0aba5aaa0ba7afb817?s=128&d=identicon&r=PG","display_name":"Matt","link":"https://stackoverflow.com/users/153339/matt"},"score":2,"creation_date":1407902981},{"owner":{"reputation":694,"user_id":2375159,"user_type":"registered","accept_rate":55,"profile_image":"https://www.gravatar.com/avatar/5909970eca6cbf5c556a80490140361a?s=128&d=identicon&r=PG&f=1","display_name":"gorefest","link":"https://stackoverflow.com/users/2375159/gorefest"},"score":0,"creation_date":1540839703},{"owner":{"reputation":602,"user_id":6122976,"user_type":"registered","profile_image":"https://i.stack.imgur.com/7Mc2a.jpg?s=128&g=1","display_name":"wilmol","link":"https://stackoverflow.com/users/6122976/wilmol"},"score":0,"creation_date":1563761706}],"owner":{"reputation":7432,"user_id":1356709,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/7cb1b8575a9a8c332a51b345550a3c6b?s=128&d=identicon&r=PG","display_name":"user2427","link":"https://stackoverflow.com/users/1356709/user2427"},"comment_count":8,"score":79,"creation_date":1230558607,"body_markdown":"The Google collections framework offers a good and elegant way to achieve the null check.\r\n\r\nThere is a method in a library class like this:\r\n\r\n    static &lt;T&gt; T checkNotNull(T e) {\r\n       if (e == null) {\r\n          throw new NullPointerException();\r\n       }\r\n       return e;\r\n    }\r\n\r\nAnd the usage is (with `import static`):\r\n\r\n    ...\r\n    void foo(int a, Person p) {\r\n       if (checkNotNull(p).getAge() &gt; a) {\r\n          ...\r\n       }\r\n       else {\r\n          ...\r\n       }\r\n    }\r\n    ...\r\n\r\nOr in your example:\r\n\r\n    checkNotNull(someobject).doCalc();\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":21,"creation_date":1243338843},{"owner":{"reputation":10412,"user_id":1996,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/5fcecc0c487aacd484a51351f2a8d595?s=128&d=identicon&r=PG","display_name":"Boris Terzic","link":"https://stackoverflow.com/users/1996/boris-terzic"},"score":5,"creation_date":1251572194},{"owner":{"reputation":19374,"user_id":13140,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/f0720ad6a8c5589e573d15e9a75438d4?s=128&d=identicon&r=PG","display_name":"Ogre Psalm33","link":"https://stackoverflow.com/users/13140/ogre-psalm33"},"score":2,"creation_date":1291986031},{"owner":{"reputation":10397,"user_id":346741,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/a6d0a3771b08d19c92ca8c8edb262fb0?s=128&d=identicon&r=PG","display_name":"Rob","link":"https://stackoverflow.com/users/346741/rob"},"score":10,"creation_date":1337169118},{"owner":{"reputation":20209,"user_id":446921,"user_type":"registered","accept_rate":98,"profile_image":"https://www.gravatar.com/avatar/db9ae27234bc59746a27fd63accabd12?s=128&d=identicon&r=PG","display_name":"Muhd","link":"https://stackoverflow.com/users/446921/muhd"},"score":8,"creation_date":1360968803},{"owner":{"reputation":23294,"user_id":3705127,"user_type":"registered","accept_rate":52,"profile_image":"https://www.gravatar.com/avatar/b03aedaddfa4dc1c2b331f318a724ec7?s=128&d=identicon&r=PG&f=1","display_name":"sprinter","link":"https://stackoverflow.com/users/3705127/sprinter"},"score":3,"creation_date":1419391793},{"owner":{"reputation":1192,"user_id":5394981,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fc5b4002ea2221d26b83f57a432d6005?s=128&d=identicon&r=PG&f=1","display_name":"Victor","link":"https://stackoverflow.com/users/5394981/victor"},"score":9,"creation_date":1443733040},{"owner":{"reputation":14558,"user_id":1833961,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/WzG31.png?s=128&g=1","display_name":"bvdb","link":"https://stackoverflow.com/users/1833961/bvdb"},"score":4,"creation_date":1461420745},{"owner":{"reputation":1731,"user_id":2683399,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/9fb725b3ff34efdbbf8a020a3ed30877?s=128&d=identicon&r=PG&f=1","display_name":"IceArdor","link":"https://stackoverflow.com/users/2683399/iceardor"},"score":4,"creation_date":1494578014}],"owner":{"reputation":247550,"user_id":3474,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/ffbf4e85b8ffbae4e9039b9c0cf07bc8?s=128&d=identicon&r=PG","display_name":"erickson","link":"https://stackoverflow.com/users/3474/erickson"},"comment_count":9,"score":243,"creation_date":1232168915,"body_markdown":"Wow, I almost hate to add another answer when we have 57 different ways to recommend the `NullObject pattern`, but I think that some people interested in this question may like to know that there is a proposal on the table for Java 7 to add [&quot;null-safe handling&quot;][1]&amp;mdash;a streamlined syntax for if-not-equal-null logic.\r\n\r\nThe example given by Alex Miller looks like this:\r\n\r\n    public String getPostcode(Person person) {  \r\n      return person?.getAddress()?.getPostcode();  \r\n    }  \r\n\r\nThe `?.` means only de-reference the left identifier if it is not null, otherwise evaluate the remainder of the expression as `null`. Some people, like Java Posse member Dick Wall and the [voters at Devoxx][2] really love this proposal, but there is opposition too, on the grounds that it will actually encourage more use of `null` as a sentinel value.\r\n\r\n---\r\n\r\n*Update:* An [official proposal][3] for a null-safe operator in Java 7 has been submitted under [Project Coin.][4] The syntax is a little different than the example above, but it&#39;s the same notion.\r\n\r\n---\r\n\r\n*Update:* The null-safe operator proposal didn&#39;t make it into Project Coin. So, you won&#39;t be seeing this syntax in Java 7.\r\n\r\n  [1]: http://tech.puredanger.com/java7/#null\r\n  [2]: http://blog.joda.org/2008/12/jdk-7-language-changes-devoxx-votes_3751.html\r\n  [3]: http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/000047.html\r\n  [4]: http://openjdk.java.net/projects/coin/","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":472,"user_id":2583402,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/aa7cdd11f37d46816f9d546652d4deb8?s=128&d=identicon&r=PG","display_name":"mtsahakis","link":"https://stackoverflow.com/users/2583402/mtsahakis"},"score":4,"creation_date":1537212543}],"owner":{"reputation":324859,"user_id":16883,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/0382297f273df0a544b0c6c2734de096?s=128&d=identicon&r=PG","display_name":"Michael Borgwardt","link":"https://stackoverflow.com/users/16883/michael-borgwardt"},"comment_count":1,"score":52,"creation_date":1248900758,"body_markdown":"Ultimately, the only way to completely solve this problem is by using a different programming language:\r\n\r\n - In Objective-C, you can do the equivalent of invoking a method on `nil`, and absolutely nothing will happen. This makes most null checks unnecessary, but it can make errors much harder to diagnose.\r\n - In [Nice][1], a Java-derived language, there are two versions of all types: a potentially-null version and a not-null version. You can only invoke methods on not-null types. Potentially-null types can be converted to not-null types through explicit checking for null. This makes it much easier to know where null checks are necessary and where they aren&#39;t.\r\n\r\n  [1]: http://nice.sourceforge.net/safety.html#id2487946\r\n\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":1691,"user_id":59441,"user_type":"registered","accept_rate":33,"profile_image":"https://www.gravatar.com/avatar/2f8365a8819284083d016a849f6fad95?s=128&d=identicon&r=PG","display_name":"Ben Hardy","link":"https://stackoverflow.com/users/59441/ben-hardy"},"score":22,"creation_date":1305916263},{"owner":{"reputation":19024,"user_id":90874,"user_type":"registered","accept_rate":52,"profile_image":"https://www.gravatar.com/avatar/ca9ad8740c96cb9cc002423ab38ee930?s=128&d=identicon&r=PG","display_name":"thSoft","link":"https://stackoverflow.com/users/90874/thsoft"},"score":0,"creation_date":1315774751},{"owner":{"reputation":13924,"user_id":315677,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/s1vD0.png?s=128&g=1","display_name":"Pierre Henry","link":"https://stackoverflow.com/users/315677/pierre-henry"},"score":10,"creation_date":1366901953},{"owner":{"reputation":19024,"user_id":90874,"user_type":"registered","accept_rate":52,"profile_image":"https://www.gravatar.com/avatar/ca9ad8740c96cb9cc002423ab38ee930?s=128&d=identicon&r=PG","display_name":"thSoft","link":"https://stackoverflow.com/users/90874/thsoft"},"score":1,"creation_date":1366903685},{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":3,"creation_date":1383538557},{"owner":{"reputation":27964,"user_id":706317,"user_type":"registered","accept_rate":70,"profile_image":"https://i.stack.imgur.com/1mafF.jpg?s=128&g=1","display_name":"ZhekaKozlov","link":"https://stackoverflow.com/users/706317/zhekakozlov"},"score":0,"creation_date":1386652072},{"owner":{"reputation":27563,"user_id":180719,"user_type":"registered","accept_rate":88,"profile_image":"https://i.stack.imgur.com/AWsdT.png?s=128&g=1","display_name":"Olivier Gr&#233;goire","link":"https://stackoverflow.com/users/180719/olivier-gr%c3%a9goire"},"score":0,"creation_date":1456850880}],"owner":{"reputation":19024,"user_id":90874,"user_type":"registered","accept_rate":52,"profile_image":"https://www.gravatar.com/avatar/ca9ad8740c96cb9cc002423ab38ee930?s=128&d=identicon&r=PG","display_name":"thSoft","link":"https://stackoverflow.com/users/90874/thsoft"},"comment_count":7,"score":201,"creation_date":1263476706,"body_markdown":"If undefined values are not permitted:\r\n--------------------------------------\r\n\r\nYou might configure your IDE to warn you about potential null dereferencing. E.g. in Eclipse, see *Preferences &gt; Java &gt; Compiler &gt; Errors/Warnings/Null analysis*.\r\n\r\nIf undefined values are permitted:\r\n----------------------------------\r\n\r\n*If you want to define a new API where undefined values make sense*, use the [Option Pattern][8] (may be familiar from functional languages). It has the following advantages:\r\n\r\n- It is stated explicitly in the API whether an input or output exists or not.\r\n- The compiler forces you to handle the &quot;undefined&quot; case.\r\n- [Option is a monad][9], so there is no need for verbose null checking, just use map/foreach/getOrElse or a similar combinator to safely use the value [(example)][10].\r\n\r\nJava 8 has a built-in [`Optional`][1] class (recommended); for earlier versions, there are library alternatives, for example [Guava][2]&#39;s [`Optional`][3] or [FunctionalJava][4]&#39;s [`Option`][5]. But like many functional-style patterns, using Option in Java (even 8) results in quite some boilerplate, which you can reduce using a less verbose JVM language, e.g. Scala or Xtend.\r\n\r\n*If you have to deal with an API which might return nulls*, you can&#39;t do much in Java. Xtend and Groovy have the [Elvis operator][7] `?:` and the [null-safe dereference operator][6] `?.`, but note that this returns null in case of a null reference, so it just &quot;defers&quot; the proper handling of null.\r\n\r\n  [1]: http://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\r\n  [2]: http://code.google.com/p/guava-libraries/wiki/UsingAndAvoidingNullExplained\r\n  [3]: https://google.github.io/guava/releases/19.0/api/docs/com/google/common/base/Optional.html\r\n  [4]: http://code.google.com/p/functionaljava\r\n  [5]: http://www.functionaljava.org/javadoc/4.4/functionaljava/fj/data/Option.html\r\n  [6]: https://www.eclipse.org/xtend/documentation.html#nullSafeFeatureCalls\r\n  [7]: https://www.eclipse.org/xtend/documentation.html#operators\r\n  [8]: http://www.codecommit.com/blog/scala/the-option-pattern\r\n  [9]: http://james-iry.blogspot.com/2007/08/martians-vs-monads-null-considered.html\r\n  [10]: http://blog.tackley.net/2010/09/option-in-scala-vs-null-in-java.html","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":439,"user_id":271075,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/80b5b63be59f6536705e4df9d1241221?s=128&d=identicon&r=PG","display_name":"Jacek S","link":"https://stackoverflow.com/users/271075/jacek-s"},"score":125,"creation_date":1273336438},{"owner":{"reputation":73321,"user_id":56285,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/0u454.jpg?s=128&g=1","display_name":"Jonik","link":"https://stackoverflow.com/users/56285/jonik"},"score":33,"creation_date":1309476835},{"owner":{"reputation":4452,"user_id":851578,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/57e336ff44dbfab100d50f95f39e3f10?s=128&d=identicon&r=PG","display_name":"Java Ka Baby","link":"https://stackoverflow.com/users/851578/java-ka-baby"},"score":21,"creation_date":1315474792},{"owner":{"reputation":26139,"user_id":319931,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/KPUcH.png?s=128&g=1","display_name":"Mechanical snail","link":"https://stackoverflow.com/users/319931/mechanical-snail"},"score":1,"creation_date":1345186935},{"owner":{"reputation":14446,"user_id":939023,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/cc1c360a02934b88beef98cb3bbd9086?s=128&d=identicon&r=PG","display_name":"Shivan Dragon","link":"https://stackoverflow.com/users/939023/shivan-dragon"},"score":10,"creation_date":1345364665},{"owner":{"reputation":6663,"user_id":254343,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/YEat6.png?s=128&g=1","display_name":"amn","link":"https://stackoverflow.com/users/254343/amn"},"score":67,"creation_date":1363772963},{"owner":{"reputation":36577,"user_id":671543,"user_type":"registered","accept_rate":55,"profile_image":"https://www.gravatar.com/avatar/2145962377da9419f2446cd565f614ee?s=128&d=identicon&r=PG","display_name":"njzk2","link":"https://stackoverflow.com/users/671543/njzk2"},"score":0,"creation_date":1393856775},{"owner":{"reputation":43194,"user_id":106261,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/c6e6d6c8ca22de9d91745bce5b8e0399?s=128&d=identicon&r=PG","display_name":"NimChimpsky","link":"https://stackoverflow.com/users/106261/nimchimpsky"},"score":0,"creation_date":1400157162},{"owner":{"reputation":2032,"user_id":1723372,"user_type":"registered","profile_image":"https://i.stack.imgur.com/ExGxf.jpg?s=128&g=1","display_name":"shaktiman_droid","link":"https://stackoverflow.com/users/1723372/shaktiman-droid"},"score":1,"creation_date":1411753327},{"owner":{"reputation":53469,"user_id":2864740,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/e7a05a144f218bde07b659bc98e1ca7d?s=128&d=identicon&r=PG&f=1","display_name":"user2864740","link":"https://stackoverflow.com/users/2864740/user2864740"},"score":2,"creation_date":1423065906},{"owner":{"reputation":4211,"user_id":1026453,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/63c564d87d2cb4b19ecab12094534b9b?s=128&d=identicon&r=PG","display_name":"DuncanKinnear","link":"https://stackoverflow.com/users/1026453/duncankinnear"},"score":0,"creation_date":1434667895},{"owner":{"reputation":7063,"user_id":4611488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/RJRZa.png?s=128&g=1","display_name":"Stephan Herrmann","link":"https://stackoverflow.com/users/4611488/stephan-herrmann"},"score":1,"creation_date":1438111503},{"owner":{"reputation":2238,"user_id":446106,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f85c140d1efdc501c26c0e911c6bd5d0?s=128&d=identicon&r=PG","display_name":"mwfearnley","link":"https://stackoverflow.com/users/446106/mwfearnley"},"score":0,"creation_date":1497364114},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":0,"creation_date":1523984383},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":0,"creation_date":1523984542},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":0,"creation_date":1523984661}],"owner":{"reputation":4546,"user_id":4206,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/cd40128e044f39d7063b5cfdeace80f6?s=128&d=identicon&r=PG","display_name":"Luca Molteni","link":"https://stackoverflow.com/users/4206/luca-molteni"},"comment_count":16,"score":663,"creation_date":1267785079,"body_markdown":"If you use (or planning to use) a Java IDE like [JetBrains IntelliJ IDEA][1], [Eclipse][2] or [Netbeans][3] or a tool like findbugs then you can use annotations to solve this problem.\r\n\r\nBasically, you&#39;ve got `@Nullable` and `@NotNull`.\r\n\r\nYou can use in method and parameters, like this:\r\n\r\n    @NotNull public static String helloWorld() {\r\n        return &quot;Hello World&quot;;\r\n    }\r\n\r\nor\r\n\r\n    @Nullable public static String helloWorld() {\r\n        return &quot;Hello World&quot;;\r\n    }\r\n\r\nThe second example won&#39;t compile (in IntelliJ IDEA).\r\n\r\nWhen you use the first `helloWorld()` function in another piece of code:\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        String result = helloWorld();\r\n        if(result != null) {\r\n            System.out.println(result);\r\n        }\r\n    }\r\n\r\nNow the IntelliJ IDEA compiler will tell you that the check is useless, since the `helloWorld()` function won&#39;t return `null`, ever.\r\n\r\nUsing parameter\r\n\r\n    void someMethod(@NotNull someParameter) { }\r\n\r\nif you write something like:\r\n\r\n    someMethod(null);\r\n\r\nThis won&#39;t compile.\r\n\r\nLast example using `@Nullable`\r\n\r\n    @Nullable iWantToDestroyEverything() { return null; }\r\n\r\nDoing this\r\n\r\n    iWantToDestroyEverything().something();\r\n\r\nAnd you can be sure that this won&#39;t happen. :)\r\n\r\nIt&#39;s a nice way to let the compiler check something more than it usually does and to enforce your contracts to be stronger. Unfortunately, it&#39;s not supported by all the compilers.\r\n\r\nIn IntelliJ IDEA 10.5 and on, they added support for any other `@Nullable` `@NotNull` implementations.\r\n\r\nSee blog post *[More flexible and configurable @Nullable/@NotNull annotations][4]*.\r\n\r\n\r\n  [1]: https://www.jetbrains.com/idea/\r\n  [2]: https://www.eclipse.org/\r\n  [3]: https://netbeans.org/\r\n  [4]: https://blog.jetbrains.com/idea/2011/03/more-flexible-and-configurable-nullublenotnull-annotations/","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":1,"user_id":346135,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/bb0aa8cbff961444b8a2455e0968574d?s=128&d=identicon&r=PG","display_name":"daniel","link":"https://stackoverflow.com/users/346135/daniel"},"comment_count":0,"score":0,"creation_date":1274361407,"body_markdown":"For utility classes, you can check that parameters are not null.\r\n\r\nIn all other cases, you may not have to. Use encapsulation as much as possible, thus reducing the places you feel tempted to check for null.\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":11992,"user_id":17713,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/w0PfJ.jpg?s=128&g=1","display_name":"Matthias Meid","link":"https://stackoverflow.com/users/17713/matthias-meid"},"score":2,"creation_date":1282024442},{"owner":{"reputation":20807,"user_id":65977,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/e689265ee24e0874ae8a90827c4783e7?s=128&d=identicon&r=PG","display_name":"MatrixFrog","link":"https://stackoverflow.com/users/65977/matrixfrog"},"score":9,"creation_date":1308701102},{"owner":{"reputation":20116,"user_id":1173112,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/rtcjY.jpg?s=128&g=1","display_name":"Koray Tugay","link":"https://stackoverflow.com/users/1173112/koray-tugay"},"score":2,"creation_date":1450215897},{"owner":{"reputation":81,"user_id":11055122,"user_type":"registered","profile_image":"https://i.stack.imgur.com/7yf0z.png?s=128&g=1","display_name":"Skaldebane","link":"https://stackoverflow.com/users/11055122/skaldebane"},"score":0,"creation_date":1592865680}],"owner":{"reputation":34715,"user_id":184730,"user_type":"registered","accept_rate":72,"profile_image":"https://www.gravatar.com/avatar/8ec7cdaaf6fd5ee313cb6228f08cd67c?s=128&d=identicon&r=PG","display_name":"fastcodejava","link":"https://stackoverflow.com/users/184730/fastcodejava"},"comment_count":4,"score":37,"creation_date":1282017585,"body_markdown":"In addition to using `assert` you can use the following:\r\n\r\n    if (someobject == null) {\r\n        // Handle null here then move on.\r\n    }\r\n\r\nThis is slightly better than:\r\n\r\n    if (someobject != null) {\r\n        .....\r\n        .....\r\n        \r\n\r\n\r\n        .....\r\n    }\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":14251,"user_id":241824,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/71aaa3b1e0f75ff4a25b2496de51458d?s=128&d=identicon&r=PG","display_name":"Sawyer","link":"https://stackoverflow.com/users/241824/sawyer"},"score":2,"creation_date":1313559726},{"owner":{"reputation":3707,"user_id":106350,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/b5c3d52c556ac42cfeb22d5557768f7d?s=128&d=identicon&r=PG","display_name":"ivant","link":"https://stackoverflow.com/users/106350/ivant"},"score":1,"creation_date":1429171471}],"owner":{"reputation":31,"user_id":474659,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/df1e7cbb9d915b3a2576eb36d2888784?s=128&d=identicon&r=PG","display_name":"tltester","link":"https://stackoverflow.com/users/474659/tltester"},"comment_count":2,"score":11,"creation_date":1286982884,"body_markdown":"    public static &lt;T&gt; T ifNull(T toCheck, T ifNull) {\r\n        if (toCheck == null) {\r\n               return ifNull;\r\n        }\r\n        return toCheck;\r\n    }\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":26139,"user_id":319931,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/KPUcH.png?s=128&g=1","display_name":"Mechanical snail","link":"https://stackoverflow.com/users/319931/mechanical-snail"},"score":5,"creation_date":1345187108}],"owner":{"reputation":195,"user_id":10324,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c30a5161c695d10539f65b2f30284b7e?s=128&d=identicon&r=PG","display_name":"LarryN","link":"https://stackoverflow.com/users/10324/larryn"},"comment_count":1,"score":-4,"creation_date":1297898075,"body_markdown":"Another suggestion is to program defensively - where your classes/functions provide default values that are known and safe, and where null is reserved for true errors/exceptions.\r\n\r\nFor example, instead of functions that return Strings returning null when there is a problem (say converting a number to a string), have them return an empty String (&quot;&quot;). You still have to test the return value before proceeding, but there would be no special cases for exceptions. An additional benefit of this style of programming is that your program will be able to differentiate and respond accordingly between normal operations and exceptions.","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":389,"user_id":250816,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/a6866ad544abac305f4139a7d1cb656d?s=128&d=identicon&r=PG","display_name":"Leen Toelen","link":"https://stackoverflow.com/users/250816/leen-toelen"},"comment_count":0,"score":8,"creation_date":1299794454,"body_markdown":"You can use [FindBugs][1]. They also have an [Eclipse][2] plugin) that helps you find duplicate null checks (among other things), but keep in mind that sometimes you should opt for defensive programming. There is also [Contracts for Java][3] which may be helpful.\r\n\r\n  [1]: http://findbugs.sourceforge.net\r\n  [2]: http://en.wikipedia.org/wiki/Eclipse_%28software%29\r\n  [3]: http://code.google.com/p/cofoja/\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":1827,"user_id":957595,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/00d09ab277282a1b54b2e325ced6f774?s=128&d=identicon&r=PG","display_name":"Paul Jackson","link":"https://stackoverflow.com/users/957595/paul-jackson"},"score":3,"creation_date":1321247217}],"owner":{"reputation":413,"user_id":634475,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d958ce12cc98489835c87324ba164e30?s=128&d=identicon&r=PG","display_name":"Oleg","link":"https://stackoverflow.com/users/634475/oleg"},"comment_count":1,"score":38,"creation_date":1300192945,"body_markdown":"Common &quot;problem&quot; in Java indeed.\r\n\r\nFirst, my thoughts on this:\r\n\r\nI consider that it is bad to &quot;eat&quot; something when NULL was passed where NULL isn&#39;t a valid value. If you&#39;re not exiting the method with some sort of error then it means nothing went wrong in your method which is not true. Then you probably return null in this case, and in the receiving method you again check for null, and it never ends, and you end up with &quot;if != null&quot;, etc..\r\n\r\nSo, IMHO, null must be a critical error which prevents further execution (that is, where null is not a valid value).\r\n\r\nThe way I solve this problem is this:\r\n\r\nFirst, I follow this convention:\r\n\r\n1. All public methods / API always check its arguments for null\r\n2. All private methods do not check for null since they are controlled methods (just let die with nullpointer exception in case it wasn&#39;t handled above)\r\n3. The only other methods which do not check for null are utility methods. They are public, but if you call them for some reason, you know what parameters you pass. This is like trying to boil water in the kettle without providing water...\r\n\r\nAnd finally, in the code, the first line of the public method goes like this:\r\n\r\n    ValidationUtils.getNullValidator().addParam(plans, &quot;plans&quot;).addParam(persons, &quot;persons&quot;).validate();\r\n\r\nNote that addParam() returns self, so that you can add more parameters to check.\r\n\r\nMethod `validate()` will throw checked `ValidationException` if any of the parameters is null (checked or unchecked is more a design/taste issue, but my `ValidationException` is checked).\r\n\r\n    void validate() throws ValidationException;\r\n\r\nThe message will contain the following text if, for example, &quot;plans&quot; is null:\r\n\r\n&quot;**Illegal argument value null is encountered for parameter [plans]**&quot;\r\n\r\nAs you can see, the second value in the addParam() method (string) is needed for the user message, because you cannot easily detect passed-in variable name, even with reflection (not subject of this post anyway...).\r\n\r\nAnd yes, we know that beyond this line we will no longer encounter a null value so we just safely invoke methods on those objects.\r\n\r\nThis way, the code is clean, easy maintainable and readable.\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":1634,"user_id":1342121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/77514447b0277a930a8f46776a3da885?s=128&d=identicon&r=PG","display_name":"ianpojman","link":"https://stackoverflow.com/users/1342121/ianpojman"},"score":2,"creation_date":1350531331}],"owner":{"reputation":3245,"user_id":181551,"user_type":"registered","accept_rate":41,"profile_image":"https://www.gravatar.com/avatar/5bdec1e17ffb5c23f339bf527434a067?s=128&d=identicon&r=PG","display_name":"Alex Worden","link":"https://stackoverflow.com/users/181551/alex-worden"},"comment_count":1,"score":93,"creation_date":1306174694,"body_markdown":"I&#39;m a fan of &quot;fail fast&quot; code. Ask yourself - are you doing something useful in the case where the parameter is null? If you don&#39;t have a clear answer for what your code should do in that case... I.e. it should never be null in the first place, then ignore it and allow a NullPointerException to be thrown. The calling code will make just as much sense of an NPE as it would an IllegalArgumentException, but it&#39;ll be easier for the developer to debug and understand what went wrong if an NPE is thrown rather than your code attempting to execute some other unexpected contingency logic - which ultimately results in the application failing anyway. ","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":500,"user_id":1661531,"user_type":"registered","accept_rate":25,"profile_image":"https://i.stack.imgur.com/cUvKN.jpg?s=128&g=1","display_name":"ivan.aguirre","link":"https://stackoverflow.com/users/1661531/ivan-aguirre"},"score":0,"creation_date":1373662779},{"owner":{"reputation":81,"user_id":11055122,"user_type":"registered","profile_image":"https://i.stack.imgur.com/7yf0z.png?s=128&g=1","display_name":"Skaldebane","link":"https://stackoverflow.com/users/11055122/skaldebane"},"score":0,"creation_date":1593035383}],"owner":{"reputation":1,"user_id":904825,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/b723f01eb372a7097cb87f6b6c20c42c?s=128&d=identicon&r=PG","display_name":"Mr Palo","link":"https://stackoverflow.com/users/904825/mr-palo"},"comment_count":2,"score":23,"creation_date":1313951623,"body_markdown":"I like articles from Nat Pryce. Here are the links:\r\n\r\n - [Avoiding Nulls with Polymorphic Dispatch][1]\r\n - [Avoiding Nulls with &quot;Tell, Don&#39;t Ask&quot; Style][2]\r\n\r\nIn the articles there is also a link to a Git repository for a Java Maybe Type which I find interesting, but I don&#39;t think it alone could decrease the\r\nchecking code bloat. After doing some research on the Internet, I think **!= null** code bloat could be decreased mainly by careful design.\r\n\r\n[1]: http://www.natpryce.com/articles/000778.html\r\n[2]: http://www.natpryce.com/articles/000777.html\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":3022,"user_id":69471,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/02e56b30e8b319fd2e29b13a778a3f7f?s=128&d=identicon&r=PG","display_name":"TMN","link":"https://stackoverflow.com/users/69471/tmn"},"score":8,"creation_date":1321992447},{"owner":{"reputation":9974,"user_id":571271,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/c7df323c25e9009c7c71691fac4f67f1?s=128&d=identicon&r=PG","display_name":"jeha","link":"https://stackoverflow.com/users/571271/jeha"},"score":0,"creation_date":1321992854},{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"score":25,"creation_date":1362619637},{"owner":{"reputation":1731,"user_id":2683399,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/9fb725b3ff34efdbbf8a020a3ed30877?s=128&d=identicon&r=PG&f=1","display_name":"IceArdor","link":"https://stackoverflow.com/users/2683399/iceardor"},"score":0,"creation_date":1494577708}],"owner":{"reputation":9974,"user_id":571271,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/c7df323c25e9009c7c71691fac4f67f1?s=128&d=identicon&r=PG","display_name":"jeha","link":"https://stackoverflow.com/users/571271/jeha"},"comment_count":4,"score":6,"creation_date":1319187757,"body_markdown":"One more alternative:\r\n\r\nThe following simple function helps to hide the null-check (I don&#39;t know why, but I haven&#39;t found it as part of the same *common* library):\r\n\r\n    public static &lt;T&gt; boolean isNull(T argument) {\r\n        return (argument == null);\r\n    }\r\n\r\nYou could now write\r\n\r\n    if (!isNull(someobject)) {\r\n        someobject.doCalc();\r\n    }\r\n\r\nwhich is IMO a better way of expressing `!= null`.\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":26139,"user_id":319931,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/KPUcH.png?s=128&g=1","display_name":"Mechanical snail","link":"https://stackoverflow.com/users/319931/mechanical-snail"},"score":0,"creation_date":1345186858},{"owner":{"reputation":30506,"user_id":116509,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/GsYqn.jpg?s=128&g=1","display_name":"artbristol","link":"https://stackoverflow.com/users/116509/artbristol"},"score":6,"creation_date":1379148297},{"owner":{"reputation":12380,"user_id":234954,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/f4aba9ddb6b8a1cb84962cd54a53ee98?s=128&d=identicon&r=PG","display_name":"jmoreno","link":"https://stackoverflow.com/users/234954/jmoreno"},"score":0,"creation_date":1384755501},{"owner":{"reputation":2216,"user_id":1272233,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/07cc66e13f0eb3901c15c9580aa1a78b?s=128&d=identicon&r=PG","display_name":"Doval","link":"https://stackoverflow.com/users/1272233/doval"},"score":23,"creation_date":1384963045},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":0,"creation_date":1396346178},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":2,"creation_date":1396350375},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":0,"creation_date":1396351058},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":1,"creation_date":1396351970},{"owner":{"reputation":78117,"user_id":319403,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/e92a9af9e53cc8e5af575c4b18b34c21?s=128&d=identicon&r=PG","display_name":"cHao","link":"https://stackoverflow.com/users/319403/chao"},"score":3,"creation_date":1415390135},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":0,"creation_date":1419357024},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":0,"creation_date":1423135945},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":1,"creation_date":1423242217},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":0,"creation_date":1468925567},{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":0,"creation_date":1470955287},{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":0,"creation_date":1470955505},{"owner":{"reputation":1971,"user_id":734860,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/eb3a1b815b40406a661df2e7d07c1289?s=128&d=identicon&r=PG","display_name":"entonio","link":"https://stackoverflow.com/users/734860/entonio"},"score":0,"creation_date":1501529954},{"owner":{"reputation":277,"user_id":3738598,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/74d65c951630e6b34bc567af525b4347?s=128&d=identicon&r=PG&f=1","display_name":"Boo","link":"https://stackoverflow.com/users/3738598/boo"},"score":1,"creation_date":1503014086},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":0,"creation_date":1503260318}],"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"comment_count":18,"score":75,"creation_date":1321880298,"body_markdown":"Null is not a &#39;problem&#39;. It is an integral part of a [complete][1] modeling tool set. Software aims to model the complexity of the world and null bears its burden. **Null indicates &#39;No data&#39; or &#39;Unknown&#39;** in Java and the like. So it is appropriate to use nulls for these purposes. I don&#39;t prefer the &#39;Null object&#39; pattern; I think it rise the &#39;[who will guard\r\nthe guardians][2]&#39; problem. &lt;br/&gt;\r\nIf you ask me what is the name of my girlfriend I&#39;ll tell you that I have no girlfriend. In the Java language I&#39;ll return null. \r\nAn alternative would be to throw meaningful exception to indicate some problem that can&#39;t be (or don&#39;t want to be) solved right there and delegate it somewhere higher in the stack to retry or report data access error to the user.  \r\n\r\n1. **For an &#39;unknown question&#39; give &#39;unknown answer&#39;.** (Be null-safe where this is correct from business point of view) Checking arguments for null once inside a method before usage relieves multiple callers from checking them before a call.\r\n\r\n        public Photo getPhotoOfThePerson(Person person) {\r\n            if (person == null)\r\n                return null;\r\n            // Grabbing some resources or intensive calculation\r\n            // using person object anyhow.\r\n        }\r\n\r\n    Previous leads to normal logic flow to get no photo of a non-existent girlfriend from my photo library.\r\n\r\n        getPhotoOfThePerson(me.getGirlfriend())\r\n\r\n    And it fits with new coming Java API (looking forward)\r\n\r\n        getPhotoByName(me.getGirlfriend()?.getName())\r\n\r\n    While it is rather &#39;normal business flow&#39; not to find photo stored into the DB for some person, I used to use pairs like below for some other cases\r\n\r\n        public static MyEnum parseMyEnum(String value); // throws IllegalArgumentException\r\n        public static MyEnum parseMyEnumOrNull(String value);\r\n\r\n    And don&#39;t loathe to type `&lt;alt&gt; + &lt;shift&gt; + &lt;j&gt;` (generate javadoc in Eclipse) and write three additional words for you public API. This will be more than enough for all but those who don&#39;t read documentation.\r\n\r\n        /**\r\n         * @return photo or null\r\n         */\r\n\r\n    or\r\n\r\n        /**\r\n         * @return photo, never null\r\n         */\r\n\r\n2. **This is rather theoretical case and in most cases you should prefer java null safe API (in case it will be released in another 10 years), but `NullPointerException` is subclass of an `Exception`.** Thus it is a form of `Throwable` that indicates conditions that a reasonable application might want to catch ([javadoc][3])! To use the first most advantage of exceptions and separate error-handling code from &#39;regular&#39; code ([according to creators of Java][4]) it is appropriate, as for me, to catch `NullPointerException`.\r\n\r\n        public Photo getGirlfriendPhoto() {\r\n            try {\r\n                return appContext.getPhotoDataSource().getPhotoByName(me.getGirlfriend().getName());\r\n            } catch (NullPointerException e) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n   Questions could arise:\r\n\r\n   Q. What if `getPhotoDataSource()` returns null?  \r\n   A. It is up to business logic. If I fail to find a photo album I&#39;ll show you no photos. What if appContext is not initialized? This method&#39;s business logic puts up with this. If the same logic should be more strict then throwing an exception it is part of the business logic and explicit check for null should be used (case 3). The **new Java Null-safe API fits better here to specify selectively what implies and what does not imply to be initialized** to be fail-fast in case of programmer errors.\r\n\r\n   Q. Redundant code could be executed and unnecessary resources could be grabbed.  \r\n   A. It could take place if `getPhotoByName()` would try to open a database connection, create `PreparedStatement` and use the person name as an SQL parameter at last. The approach *for an unknown question gives an unknown answer* (case 1) works here. Before grabbing resources the method should check parameters and return &#39;unknown&#39; result if needed.\r\n\r\n   Q. This approach has a performance penalty due to the try closure opening.  \r\n   A. Software should be easy to understand and modify firstly. Only after this, one could think about performance, and only if needed! and where needed! ([source][5]), and many others).\r\n\r\n    PS. This approach will be as reasonable to use as the *separate error-handling code from &quot;regular&quot; code* principle is reasonable to use in some place. Consider the next example:\r\n\r\n        public SomeValue calculateSomeValueUsingSophisticatedLogic(Predicate predicate) {\r\n            try {\r\n                Result1 result1 = performSomeCalculation(predicate);\r\n                Result2 result2 = performSomeOtherCalculation(result1.getSomeProperty());\r\n                Result3 result3 = performThirdCalculation(result2.getSomeProperty());\r\n                Result4 result4 = performLastCalculation(result3.getSomeProperty());\r\n                return result4.getSomeProperty();\r\n            } catch (NullPointerException e) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        public SomeValue calculateSomeValueUsingSophisticatedLogic(Predicate predicate) {\r\n            SomeValue result = null;\r\n            if (predicate != null) {\r\n                Result1 result1 = performSomeCalculation(predicate);\r\n                if (result1 != null &amp;&amp; result1.getSomeProperty() != null) {\r\n                    Result2 result2 = performSomeOtherCalculation(result1.getSomeProperty());\r\n                    if (result2 != null &amp;&amp; result2.getSomeProperty() != null) {\r\n                        Result3 result3 = performThirdCalculation(result2.getSomeProperty());\r\n                        if (result3 != null &amp;&amp; result3.getSomeProperty() != null) {\r\n                            Result4 result4 = performLastCalculation(result3.getSomeProperty());\r\n                            if (result4 != null) {\r\n                                result = result4.getSomeProperty();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n    PPS. For those fast to downvote (and not so fast to read documentation) I would like to say that I&#39;ve never caught a null-pointer exception (NPE) in my life. But this possibility was **intentionally designed** by the Java creators because NPE is a subclass of `Exception`. We have a precedent in Java history when `ThreadDeath` is an `Error` not because it is actually an application error, but solely because it was not intended to be caught! How much NPE fits to be an `Error` than `ThreadDeath`! But it is not.\r\n\r\n3. **Check for &#39;No data&#39; only if business logic implies it.**\r\n\r\n        public void updatePersonPhoneNumber(Long personId, String phoneNumber) {\r\n            if (personId == null)\r\n                return;\r\n            DataSource dataSource = appContext.getStuffDataSource();\r\n            Person person = dataSource.getPersonById(personId);\r\n            if (person != null) {\r\n                person.setPhoneNumber(phoneNumber);\r\n                dataSource.updatePerson(person);\r\n            } else {\r\n                Person = new Person(personId);\r\n                person.setPhoneNumber(phoneNumber);\r\n                dataSource.insertPerson(person);\r\n            }\r\n        }\r\n\r\n    and\r\n\r\n        public void updatePersonPhoneNumber(Long personId, String phoneNumber) {\r\n            if (personId == null)\r\n                return;\r\n            DataSource dataSource = appContext.getStuffDataSource();\r\n            Person person = dataSource.getPersonById(personId);\r\n            if (person == null)\r\n                throw new SomeReasonableUserException(&quot;What are you thinking about ???&quot;);\r\n            person.setPhoneNumber(phoneNumber);\r\n            dataSource.updatePerson(person);\r\n        }\r\n\r\n    If appContext or dataSource is not initialized unhandled runtime NullPointerException will kill current thread and will be processed by [Thread.defaultUncaughtExceptionHandler][6] (for you to define and use your favorite logger or other notification mechanizm). If not set, [ThreadGroup#uncaughtException][7] will print stacktrace to system err. One should monitor application error log and open Jira issue for each unhandled exception which in fact is application error. Programmer should fix bug somewhere in initialization stuff.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Functional_completeness\r\n  [2]: http://en.wikipedia.org/wiki/Who_will_guard_the_guards%3F\r\n  [3]: http://javasourcecode.org/html/open-source/jdk/jdk-6u23/java/lang/Exception.html\r\n  [4]: http://docs.oracle.com/javase/tutorial/essential/exceptions/advantages.html\r\n  [5]: http://www.amazon.co.uk/Code-Complete-Practical-Handbook-Construction/dp/0735619670/ref=dp_ob_title_bk\r\n  [6]: https://docs.oracle.com/javase/7/docs/api/java/lang/Thread.UncaughtExceptionHandler.html\r\n  [7]: https://docs.oracle.com/javase/7/docs/api/java/lang/ThreadGroup.html#uncaughtException(java.lang.Thread,%20java.lang.Throwable)\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":2094,"user_id":396216,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/AdeT5.jpg?s=128&g=1","display_name":"Murat Derya &#214;zen","link":"https://stackoverflow.com/users/396216/murat-derya-%c3%96zen"},"score":0,"creation_date":1407445508}],"owner":{"reputation":2094,"user_id":396216,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/AdeT5.jpg?s=128&g=1","display_name":"Murat Derya &#214;zen","link":"https://stackoverflow.com/users/396216/murat-derya-%c3%96zen"},"comment_count":1,"score":31,"creation_date":1332533799,"body_markdown":"Guava, a very useful core library by Google, has a nice and useful API to avoid nulls. I find [UsingAndAvoidingNullExplained][1] very helpful.\r\n\r\nAs explained in the wiki:\r\n\r\n&gt; `Optional&lt;T&gt;` is a way of replacing a nullable T reference with a\r\n&gt; non-null value. An Optional may either contain a non-null T reference\r\n&gt; (in which case we say the reference is &quot;present&quot;), or it may contain\r\n&gt; nothing (in which case we say the reference is &quot;absent&quot;). It is never\r\n&gt; said to &quot;contain null.&quot;\r\n\r\nUsage:\r\n\r\n    Optional&lt;Integer&gt; possible = Optional.of(5);\r\n    possible.isPresent(); // returns true\r\n    possible.get(); // returns 5\r\n\r\n  [1]: http://code.google.com/p/guava-libraries/wiki/UsingAndAvoidingNullExplained","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":2251,"user_id":1088846,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/64ff39469254187be546f135eac7bd01?s=128&d=identicon&r=PG","display_name":"Jochen","link":"https://stackoverflow.com/users/1088846/jochen"},"comment_count":0,"score":3,"creation_date":1332534703,"body_markdown":"You can also use the Checker Framework (with JDK 7 and beyond) to statically check for null values. This might solve a lot of problems, but requires running an extra tool that currently only works with OpenJDK AFAIK. https://checkerframework.org/","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"score":1,"creation_date":1362619145},{"owner":{"reputation":30506,"user_id":116509,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/GsYqn.jpg?s=128&g=1","display_name":"artbristol","link":"https://stackoverflow.com/users/116509/artbristol"},"score":3,"creation_date":1379178534},{"owner":{"reputation":456,"user_id":1022180,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/49dac162b7ba592f490a8c7d52713a4e?s=128&d=identicon&r=PG","display_name":"Alex Vaz","link":"https://stackoverflow.com/users/1022180/alex-vaz"},"score":0,"creation_date":1379997845},{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":0,"creation_date":1383590216},{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":0,"creation_date":1383590327},{"owner":{"reputation":997,"user_id":202630,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/0f96121fd8f9dd5c98f38a33c3dc7114?s=128&d=identicon&r=PG","display_name":"Kemal Erdogan","link":"https://stackoverflow.com/users/202630/kemal-erdogan"},"score":0,"creation_date":1410879108},{"owner":{"reputation":456,"user_id":1022180,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/49dac162b7ba592f490a8c7d52713a4e?s=128&d=identicon&r=PG","display_name":"Alex Vaz","link":"https://stackoverflow.com/users/1022180/alex-vaz"},"score":0,"creation_date":1425595541},{"owner":{"reputation":17468,"user_id":389099,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/ee5f1a84fca3c5ab8d6609c8ed3a879e?s=128&d=identicon&r=PG","display_name":"guido","link":"https://stackoverflow.com/users/389099/guido"},"score":0,"creation_date":1430154023},{"owner":{"reputation":456,"user_id":1022180,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/49dac162b7ba592f490a8c7d52713a4e?s=128&d=identicon&r=PG","display_name":"Alex Vaz","link":"https://stackoverflow.com/users/1022180/alex-vaz"},"score":0,"creation_date":1430241513}],"owner":{"reputation":456,"user_id":1022180,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/49dac162b7ba592f490a8c7d52713a4e?s=128&d=identicon&r=PG","display_name":"Alex Vaz","link":"https://stackoverflow.com/users/1022180/alex-vaz"},"comment_count":9,"score":2,"creation_date":1342215976,"body_markdown":"OK, I now this has been technically answered a million times but I have to say this because this is an un-ending discussion with Java programmers.\r\n\r\nSorry but I disagree will almost all of above. The reason we have to be testing for null in Java is because must Java programmers don’t know how to handle memory. \r\n\r\nI say this because I have a long experience programming in C++ and we don’t do this. In other words, you don’t need to. And note that, in Java, if you hit a dangling pointer you get a normal exception; in C++ this exception normally is not caught and terminates the program.\r\n\r\nDon’t want to do this? Then follow some simple rules ala C/C++.\r\n\r\nDon’t instantiate things so easily, _think_ that every &quot;new&quot; can get you in lots of trouble and FOLLOW these simple rules.\r\n\r\nA class shall access memory in only 3 ways -&gt;\r\n\r\n1.  It can &quot;HAVE&quot; class members, and they will follow these rules:\r\n\r\n 1. ALL &quot;HAS&quot; members are created &quot;new&quot; in the constructor.\r\n 2. You will close /de allocate in destructor or equivalent close()\r\n    function in Java for that same class and in NO other.\r\n\r\nThis means that you need to have in mind (just like Java does) who is the owner or parent of each resource and respect that ownership.  An object is only deleted by the class who created it. Also -&gt;\r\n\r\n2. Some members will be &quot;USED&quot; but not own or &quot;HAVE&quot;. This are &quot;OWN&quot; in another class and passed as arguments to the constructor. Since these are owned by another class, we will NEVER delete or close this, only the parent can.\r\n\r\n3. A method in a class can also  instantiate local objects for internal use which will NEVER pass out side of the class, or they should have been normal &quot;has&quot; objects.\r\n\r\nFinally for all this to work, you need to have a disciplined design with classes in hierarchy form and making no cycles.\r\n\r\nUnder this design, AND following the above rules, there is no way that a child class in a hierarchy design will ever access a pointer which was destroyed, because that means that a parent was destroyed before a child, which the hierarchical acyclic design will not allow it.\r\n\r\nFinally, also remember when starting your system you should build from top to bottom of the hierarchy and destroy bottom to top. You will never have a null pointer anywhere, or someone is violating the rules.","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"score":9,"creation_date":1362619284},{"owner":{"reputation":108964,"user_id":1441122,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XM5u8.jpg?s=128&g=1","display_name":"Stuart Marks","link":"https://stackoverflow.com/users/1441122/stuart-marks"},"score":1,"creation_date":1362633783},{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"score":0,"creation_date":1362640038},{"owner":{"reputation":108964,"user_id":1441122,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XM5u8.jpg?s=128&g=1","display_name":"Stuart Marks","link":"https://stackoverflow.com/users/1441122/stuart-marks"},"score":0,"creation_date":1362811431},{"owner":{"reputation":6969,"user_id":61938,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/vhWr1.jpg?s=128&g=1","display_name":"Rob Grant","link":"https://stackoverflow.com/users/61938/rob-grant"},"score":7,"creation_date":1380195206},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":0,"creation_date":1406138107},{"owner":{"reputation":1163,"user_id":234391,"user_type":"registered","accept_rate":57,"profile_image":"https://i.stack.imgur.com/BaIJ4.jpg?s=128&g=1","display_name":"Cornel Masson","link":"https://stackoverflow.com/users/234391/cornel-masson"},"score":0,"creation_date":1412867111}],"owner":{"reputation":108964,"user_id":1441122,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XM5u8.jpg?s=128&g=1","display_name":"Stuart Marks","link":"https://stackoverflow.com/users/1441122/stuart-marks"},"comment_count":7,"score":71,"creation_date":1344582480,"body_markdown":"Java 7 has a new `java.util.Objects` utility class on which there is a `requireNonNull()` method. All this does is throw a `NullPointerException` if its argument is null, but it cleans up the code a bit. Example:\r\n\r\n    Objects.requireNonNull(someObject);\r\n    someObject.doCalc();\r\n\r\n---\r\nThe method is most useful for [checking][1] just before an assignment in a constructor, where each use of it can save three lines of code:\r\n\r\n    Parent(Child child) {\r\n       if (child == null) {\r\n          throw new NullPointerException(&quot;child&quot;);\r\n       }\r\n       this.child = child;\r\n    }\r\n\r\nbecomes\r\n\r\n    Parent(Child child) {\r\n       this.child = Objects.requireNonNull(child, &quot;child&quot;);\r\n    }\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/3322638/is-it-okay-to-throw-nullpointerexception-programatically","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":1846,"user_id":1391568,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9035a5fc689e10936835cb3d7b1dd283?s=128&d=identicon&r=PG","display_name":"drzymala","link":"https://stackoverflow.com/users/1391568/drzymala"},"comment_count":0,"score":1,"creation_date":1347461641,"body_markdown":"I prefer this\r\n\r\n    public void simpleFunc(SomeObject someObject){\r\n        someObject = someObject != null ? someObject : new SomeObject(null);\r\n        someObject.doSomething();\r\n    }\r\n\r\nOf course in my example SomeObject handles gracefully a null parameter. For example logging such event and doing nothing more.","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":1634,"user_id":1342121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/77514447b0277a930a8f46776a3da885?s=128&d=identicon&r=PG","display_name":"ianpojman","link":"https://stackoverflow.com/users/1342121/ianpojman"},"score":0,"creation_date":1351719077},{"owner":{"reputation":1201,"user_id":1244676,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f28485dbe44f7f91a73cf9ee0499d3f4?s=128&d=identicon&r=PG&f=1","display_name":"ChrisBlom","link":"https://stackoverflow.com/users/1244676/chrisblom"},"score":0,"creation_date":1374922122},{"owner":{"reputation":57795,"user_id":24396,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/160d6580f280b5e9e5a1188b32c4ef2d?s=128&d=identicon&r=PG","display_name":"Steve Kuo","link":"https://stackoverflow.com/users/24396/steve-kuo"},"score":7,"creation_date":1387263749},{"owner":{"reputation":1634,"user_id":1342121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/77514447b0277a930a8f46776a3da885?s=128&d=identicon&r=PG","display_name":"ianpojman","link":"https://stackoverflow.com/users/1342121/ianpojman"},"score":1,"creation_date":1422301550},{"owner":{"reputation":544,"user_id":2403791,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1b3c49a61a98f8311bf713b22cae10c3?s=128&d=identicon&r=PG","display_name":"Kurapika","link":"https://stackoverflow.com/users/2403791/kurapika"},"score":0,"creation_date":1512849361},{"owner":{"reputation":1634,"user_id":1342121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/77514447b0277a930a8f46776a3da885?s=128&d=identicon&r=PG","display_name":"ianpojman","link":"https://stackoverflow.com/users/1342121/ianpojman"},"score":0,"creation_date":1513110520}],"owner":{"reputation":1634,"user_id":1342121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/77514447b0277a930a8f46776a3da885?s=128&d=identicon&r=PG","display_name":"ianpojman","link":"https://stackoverflow.com/users/1342121/ianpojman"},"comment_count":6,"score":35,"creation_date":1350531756,"body_markdown":"Just don&#39;t ever use null. Don&#39;t allow it.\r\n\r\nIn my classes, most fields and local variables have non-null default values, and I add contract statements (always-on asserts) everywhere in the code to make sure this is being enforced (since it&#39;s more succinct, and more expressive than letting it come up as an NPE and then having to resolve the line number, etc.).\r\n\r\nOnce I adopted this practice, I noticed that the problems seemed to fix themselves. You&#39;d catch things much earlier in the development process just by accident and realize you had a weak spot..  and more importantly.. it helps encapsulate different modules&#39; concerns, different modules can &#39;trust&#39; each other, and no more littering the code with `if = null else` constructs!\r\n\r\nThis is defensive programming and results in much cleaner code in the long run. Always sanitize the data, e.g. here by enforcing rigid standards, and the problems go away.\r\n\r\n    class C {\r\n        private final MyType mustBeSet;\r\n        public C(MyType mything) {\r\n           mustBeSet=Contract.notNull(mything);\r\n        }\r\n       private String name = &quot;&lt;unknown&gt;&quot;;\r\n       public void setName(String s) {\r\n          name = Contract.notNull(s);\r\n       }\r\n    }\r\n\r\n\r\n    class Contract {\r\n        public static &lt;T&gt; T notNull(T t) { if (t == null) { throw new ContractException(&quot;argument must be non-null&quot;); return t; }\r\n    }\r\n\r\nThe contracts are like mini-unit tests which are always running, even in production, and when things fail, you know why, rather than a random NPE you have to somehow figure out.\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":544,"user_id":2403791,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1b3c49a61a98f8311bf713b22cae10c3?s=128&d=identicon&r=PG","display_name":"Kurapika","link":"https://stackoverflow.com/users/2403791/kurapika"},"score":0,"creation_date":1512852899}],"owner":{"reputation":6786,"user_id":1564766,"user_type":"registered","accept_rate":15,"profile_image":"https://i.stack.imgur.com/00n8a.jpg?s=128&g=1","display_name":"abishkar bhattarai","link":"https://stackoverflow.com/users/1564766/abishkar-bhattarai"},"comment_count":1,"score":4,"creation_date":1354504523,"body_markdown":"You can use an interceptor before the method call. That is what [aspect-oriented programming][1] focus on.\r\n\r\nSuppose M1(Object test) is a method and M2 is a method where we apply an aspect before a method call, `M2(Object test2)`. If `test2 != null` then call M1, otherwise do another thing. It works for all methods with whom you want to apply an aspect for. If you want to apply an aspect for an instance field and constructor you can use [AspectJ][2]. [Spring][3] can also be the best choice for a method aspect.\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Aspect-oriented_programming\r\n  [2]: https://en.wikipedia.org/wiki/AspectJ\r\n  [3]: http://en.wikipedia.org/wiki/Spring_Framework\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":1977,"user_id":212665,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/FNE5j.jpg?s=128&g=1","display_name":"Vinay Lodha","link":"https://stackoverflow.com/users/212665/vinay-lodha"},"comment_count":0,"score":2,"creation_date":1357803959,"body_markdown":"First of all, we can&#39;t really remove all null conditions. We can reduce them using `@NotNull` and `@Nullable` annotations (**as mentioned already**). But this needs to be backed by some framework. This is where [OVal][1] can help.\r\n\r\nThe basic idea is object/parameters/constructor should always satisfy preconditions. You can have a whole lot of preconditions such as `Nullable`, `NotNull` and OVal would take care that an object should be in a consistent state when invoked.\r\n\r\nI guess OVal internally uses AspectJ to validate the preconditions.\r\n\r\n    @Guarded\r\n    public class BusinessObject\r\n    {\r\n      public BusinessObject(@NotNull String name)\r\n      {\r\n        this.name = name;\r\n      }\r\n\r\n      ...\r\n    }\r\n\r\nFor example,\r\n\r\n    // Throws a ConstraintsViolatedException because parameter name is null\r\n    BusinessObject bo = new BusinessObject(null);\r\n\r\n  [1]: http://oval.sourceforge.net\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":301,"user_id":728283,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/70543da898b68648636f07a6f9a5a6df?s=128&d=identicon&r=PG","display_name":"Bradley Gottfried","link":"https://stackoverflow.com/users/728283/bradley-gottfried"},"score":12,"creation_date":1369675826},{"owner":{"reputation":1163,"user_id":234391,"user_type":"registered","accept_rate":57,"profile_image":"https://i.stack.imgur.com/BaIJ4.jpg?s=128&g=1","display_name":"Cornel Masson","link":"https://stackoverflow.com/users/234391/cornel-masson"},"score":15,"creation_date":1412866629},{"owner":{"reputation":621,"user_id":1745416,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dc834a3f6f4aa0c674f92effdda58fe9?s=128&d=identicon&r=PG","display_name":"JohnC","link":"https://stackoverflow.com/users/1745416/johnc"},"score":0,"creation_date":1449619553},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"score":0,"creation_date":1519423820},{"owner":{"reputation":317,"user_id":5332993,"user_type":"registered","accept_rate":40,"profile_image":"https://i.stack.imgur.com/4KWHl.jpg?s=128&g=1","display_name":"Satyendra Kumar","link":"https://stackoverflow.com/users/5332993/satyendra-kumar"},"score":4,"creation_date":1520435199},{"owner":{"reputation":15739,"user_id":1195273,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/392b9a49e8a308036d37c9d07e9c7d9b?s=128&d=identicon&r=PG","display_name":"crush","link":"https://stackoverflow.com/users/1195273/crush"},"score":1,"creation_date":1533836342}],"owner":{"reputation":13924,"user_id":315677,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/s1vD0.png?s=128&g=1","display_name":"Pierre Henry","link":"https://stackoverflow.com/users/315677/pierre-henry"},"comment_count":6,"score":172,"creation_date":1366903370,"body_markdown":"With Java 8 comes the new `java.util.Optional` class that arguably solves some of the problem. One can at least say that it improves the readability of the code, and in the case of public APIs make the API&#39;s contract clearer to the client developer.\r\n\r\nThey work like that:\r\n\r\nAn optional object for a given type (`Fruit`) is created as the return type of a method. It can be empty or contain a `Fruit` object:\r\n\r\n    public static Optional&lt;Fruit&gt; find(String name, List&lt;Fruit&gt; fruits) {\r\n       for (Fruit fruit : fruits) {\r\n          if (fruit.getName().equals(name)) {\r\n             return Optional.of(fruit);\r\n          }\r\n       }\r\n       return Optional.empty();\r\n    }\r\n\r\nNow look at this code where we search a list of `Fruit` (`fruits`) for a given Fruit instance:\r\n\r\n    Optional&lt;Fruit&gt; found = find(&quot;lemon&quot;, fruits);\r\n    if (found.isPresent()) {\r\n       Fruit fruit = found.get();\r\n       String name = fruit.getName();\r\n    }\r\n\r\nYou can use the `map()` operator to perform a computation on--or extract a value from--an optional object.  `orElse()` lets you provide a fallback for missing values.\r\n    \r\n    String nameOrNull = find(&quot;lemon&quot;, fruits)\r\n        .map(f -&gt; f.getName())\r\n        .orElse(&quot;empty-name&quot;);\r\n\r\nOf course, the check for null/empty value is still necessary, but at least the developer is conscious that the value might be empty and the risk of forgetting to check is limited.\r\n\r\nIn an API built from scratch using `Optional` whenever a return value might be empty, and returning a plain object only when it cannot be `null` (convention), the client code might abandon null checks on simple object return values...\r\n\r\nOf course `Optional` could also be used as a method argument, perhaps a better way to indicate optional arguments than 5 or 10 overloading methods in some cases.\r\n\r\n`Optional` offers other convenient methods, such as `orElse` that allow the use of a default value, and `ifPresent` that works with [lambda expressions][1].\r\n\r\nI invite you to read this article (my main source for writing this answer) in which the `NullPointerException` (and in general null pointer) problematic as well as the (partial) solution brought by `Optional` are well explained: *[Java Optional Objects][2]*.\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Anonymous_function\r\n  [2]: http://java.dzone.com/articles/java-optional-objects\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":8957,"user_id":939063,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/3a40ab23342d27c430b88cf7edf23e45?s=128&d=identicon&r=PG","display_name":"Terence","link":"https://stackoverflow.com/users/939063/terence"},"score":0,"creation_date":1372664734},{"owner":{"reputation":1474,"user_id":619895,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/8ba1598aacecc60225f28f49211eac69?s=128&d=identicon&r=PG","display_name":"ggb667","link":"https://stackoverflow.com/users/619895/ggb667"},"score":3,"creation_date":1379947962}],"owner":{"reputation":1595,"user_id":62709,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/002c19193e3976723d5681cf4864bebb?s=128&d=identicon&r=PG","display_name":"Stuart Axon","link":"https://stackoverflow.com/users/62709/stuart-axon"},"comment_count":2,"score":16,"creation_date":1371215131,"body_markdown":"1. Never initialise variables to null.\r\n2. If (1) is not possible, initialise all collections and arrays to empty collections/arrays.\r\n\r\nDoing this in your own code and you can avoid != null checks.\r\n\r\nMost of the time null checks seem to guard loops over collections or arrays, so just initialise them empty, you won&#39;t need any null checks.\r\n\r\n\r\n\r\n    // Bad\r\n    ArrayList&lt;String&gt; lemmings;\r\n    String[] names;\r\n    \r\n    void checkLemmings() {\r\n        if (lemmings != null) for(lemming: lemmings) {\r\n            // do something\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    // Good\r\n    ArrayList&lt;String&gt; lemmings = new ArrayList&lt;String&gt;();\r\n    String[] names = {};\r\n    \r\n    void checkLemmings() {\r\n        for(lemming: lemmings) {\r\n            // do something\r\n        }\r\n    }\r\n\r\n\r\n\r\nThere is a tiny overhead in this, but it&#39;s worth it for cleaner code and less NullPointerExceptions.","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":57795,"user_id":24396,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/160d6580f280b5e9e5a1188b32c4ef2d?s=128&d=identicon&r=PG","display_name":"Steve Kuo","link":"https://stackoverflow.com/users/24396/steve-kuo"},"score":1,"creation_date":1405020443}],"owner":{"reputation":1804,"user_id":552782,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/7QCok.jpg?s=128&g=1","display_name":"iowatiger08","link":"https://stackoverflow.com/users/552782/iowatiger08"},"comment_count":1,"score":1,"creation_date":1383247104,"body_markdown":"We have been using Apache libraries (Apache Commons) for this issue.\r\n\r\n    ObjectUtils.equals(object, null)\r\n\r\nor\r\n    \r\n    CollectionUtils.isEmpty(myCollection);\r\n\r\nor \r\n\r\n    StringUtils.isEmpty(&quot;string&quot;);\r\n\r\nI like the previous answer before, as a practice, of providing initial default values or empty sets for collections to minimize the need.\r\n\r\nThese can be simple uses that keep you from having NullPointerException or using an empty collection.  This doesnt answer the question for what to do with the null object, but these provide some checks for basic validations of the object or collection. \r\n\r\nHope this helps. \r\n\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":10470,"user_id":1054021,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/186f36b0a1b1fe14e690cd2bfab8a324?s=128&d=identicon&r=PG","display_name":"Tobb","link":"https://stackoverflow.com/users/1054021/tobb"},"comment_count":0,"score":2,"creation_date":1390856070,"body_markdown":"The way to avoid unnecessary `null-checks` is simple to state:\r\n\r\n`You need to know which variables can be null, and which cannot, and you need to be confident about which category a given variable fall into.`\r\n\r\nBut, although it can be stated simply enough, achieving it is harder. The key lies in the `confident` part, because how can you be sure that a variable can&#39;t be null?\r\n\r\nThere are no quick-fix, easy answers to this, but here are some pointers:\r\n\r\n1. Clean code. The most important thing for being able to reason about the behaviour of a piece of code is that it is written in a matter that is easy to understand. Name your variables based on what they represent, name your methods after what they do, apply the `Single responsibility principle` (the `S` in `SOLID`: http://en.wikipedia.org/wiki/SOLID_(object-oriented_design), it means that each piece of code should have a single responsibility, and do this and nothing else). Once your code is clean, it is much easier to reason about it, also across multiple tiers/layers of code. With messy code, trying to understand what a method does might make you forget why you are reading the method in the first place. (Tip: Read &quot;Clean Code&quot; by Robert C. Martin)\r\n\r\n2. Avoid returning `null` values. If a `null` value would keep your program from functioning correctly, throw an `exception` instead (make sure to add the appropriate error-handling.) Cases where returning a `null` value might be acceptable is for instance trying to fetch an object from the database. In these cases, write code that handles the `null` values, and make a note behind your ear that here we have something that might return `null`. Handle returned `null` values as close to the caller of the method returning `null` as possible (don&#39;t just blindly pass it back up the call-chain.)\r\n\r\n3. Never EVER pass explicit `null` values as parameters (at least not across classes). If you are ever in a position where passing a `null`-parameter is the only option, creating a new method that does not have this parameter is the way to go. \r\n\r\n4. Validate your input! Identify the &quot;entry-points&quot; to your application. They can everything from webservices, REST-services, remote EJB classes, controllers, etc. For each method in these entry-points, ask yourself: &quot;Will this method execute correctly if this parameter is null?&quot; If the answer is no, add `Validate.notNull(someParam, &quot;Can&#39;t function when someParam is null!&quot;);`. This will throw an `IllegalArgumentException` if the required parameter is missing. The good thing about this type of validation in the entry-points, is that you can then easily assume in the code being executed from the entry-point, that this variable will never be null! Also, if this fails, being at the entry-point, debugging is made a lot easier than it would if you just got a `NullPointerException` deep down in your code, since a failure like this can only mean one thing: The client didn&#39;t send you all the required information. In most cases you want to validate all input parameters, if you find yourself in a position where you need to allow a lot of `null`-values, it might be a sign of a badly designed interface, which needs refactoring/additions to suite the needs of the clients.\r\n\r\n5. When working with `Collection`s, return an empty one rather than null! \r\n\r\n6. When working with a database, utilize `not null`-constraints. In that way, you&#39;ll know that a value read from the database cannot be null, and you won&#39;t have to check for it.\r\n\r\n7. Structure your code and stick with it. Doing this allows you to make assumptions about the behaviour of the code, for instance if all input to your application is validated, then you can assume that these values will never be null. \r\n\r\n8. If you are not already doing it, write automated tests of your code. By writing tests, you will reason about your code, and you will also become more confident that it does what it&#39;s supposed to. Also, automated tests guards you from blunders during refactoring, by letting you know immediatly that this piece of code is not doing what it used to.\r\n\r\nYou still have to null-check of course, but it can trimmed down to the bare minimum (i.e. the situation where _know_ you might be getting a null-value, instead of everywhere just to be sure.) When it comes to null-checks, i actually prefer to use the ternary operator (but use with care, when you start nesting them they come really messy.)\r\n\r\n    public String nullSafeToString(final Object o) {\r\n        return o != null ? o.toString() : &quot;null&quot;;\r\n    }\r\n\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":1236,"user_id":2100584,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/236ecbd2033b1620c2ae79a0877e1bba?s=128&d=identicon&r=PG","display_name":"Tomas","link":"https://stackoverflow.com/users/2100584/tomas"},"score":0,"creation_date":1446177745}],"owner":{"reputation":32609,"user_id":2648077,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/fd10f51a1b9acf80448616c0a03cd261?s=128&d=identicon&r=PG&f=1","display_name":"Alireza Fattahi","link":"https://stackoverflow.com/users/2648077/alireza-fattahi"},"comment_count":1,"score":17,"creation_date":1392205296,"body_markdown":"May I answer it more generally!\r\n\r\nWe **usually** face this issue when the methods get the parameters in the way we not expected (bad method call is programmer&#39;s fault). For example: you expect to get an object, instead you get a null. You expect to get an String with at least one character, instead you get an empty String ...\r\n\r\nSo there is no difference between:\r\n\r\n    if(object == null){\r\n       //you called my method badly!\r\n   }\r\n\r\nor\r\n\r\n    if(str.length() == 0){\r\n       //you called my method badly again!\r\n    }\r\n\r\nThey both want to make sure that we received valid parameters, before we do any other functions.\r\n\r\nAs mentioned in some other answers, to avoid above problems you can follow the **Design by contract** pattern. Please see http://en.wikipedia.org/wiki/Design_by_contract. \r\n\r\nTo implement this pattern in java, you can use core java annotations like **javax.annotation.NotNull** or use more sophisticated libraries like **Hibernate Validator**.\r\n\r\nJust a sample:\r\n\r\n    getCustomerAccounts(@NotEmpty String customerId,@Size(min = 1) String accountType)\r\n\r\nNow you can safely develop the core function of your method without needing to check input parameters, they guard your methods from unexpected parameters.\r\n\r\nYou can go a step further and make sure that only valid pojos could be created in your application. (sample from hibernate validator site)\r\n\r\n    public class Car {\r\n    \r\n       @NotNull\r\n       private String manufacturer;\r\n    \r\n       @NotNull\r\n       @Size(min = 2, max = 14)\r\n       private String licensePlate;\r\n    \r\n       @Min(2)\r\n       private int seatCount;\r\n    \r\n       // ...\r\n    }\r\n\r\n \r\n\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":710,"user_id":1940722,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/bf612346df3d5d8f4b9ce9c797aa70b2?s=128&d=identicon&r=PG","display_name":"Gal Morad","link":"https://stackoverflow.com/users/1940722/gal-morad"},"comment_count":0,"score":6,"creation_date":1394059441,"body_markdown":"I find Guava Preconditions to be very useful in this case. I don&#39;t like leaving nulls to null pointer exception since the only way to understand an NPE is by locating the line number. Line numbers in production version and development version can be different.\r\n\r\nUsing Guava Preconditions, I can check null parameters and define a meaningful exception message in one line.\r\n\r\nFor example,\r\n\r\n    Preconditions.checkNotNull(paramVal, &quot;Method foo received null paramVal&quot;);\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":1218,"user_id":718590,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/11708f36ab168b92413e5df4dde4fcdc?s=128&d=identicon&r=PG","display_name":"pkalinow","link":"https://stackoverflow.com/users/718590/pkalinow"},"score":0,"creation_date":1454501930}],"owner":{"reputation":10276,"user_id":2057902,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/6q1nz.jpg?s=128&g=1","display_name":"Sireesh Yarlagadda","link":"https://stackoverflow.com/users/2057902/sireesh-yarlagadda"},"comment_count":1,"score":15,"creation_date":1397247260,"body_markdown":"This is the most common error occurred for most of the developers.\r\n\r\nWe have number of ways to handle this.\r\n\r\n**Approach 1:**\r\n\r\n    org.apache.commons.lang.Validate //using apache framework\r\nnotNull(Object object, String message) \r\n\r\n**Approach 2:**\r\n\r\n    if(someObject!=null){ // simply checking against null\r\n    }\r\n\r\n\r\n**Approach 3:**\r\n\r\n    @isNull @Nullable  // using annotation based validation\r\n\r\n**Approach 4:**\r\n\r\n    // by writing static method and calling it across whereever we needed to check the validation\r\n\r\n    static &lt;T&gt; T isNull(someObject e){  \r\n       if(e == null){\r\n          throw new NullPointerException();\r\n       }\r\n       return e;\r\n    }\r\n\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":1218,"user_id":718590,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/11708f36ab168b92413e5df4dde4fcdc?s=128&d=identicon&r=PG","display_name":"pkalinow","link":"https://stackoverflow.com/users/718590/pkalinow"},"score":0,"creation_date":1454502372},{"owner":{"reputation":2150,"user_id":2000185,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/4ef405c6568affd4e3fb3428369b2c8d?s=128&d=identicon&r=PG&f=1","display_name":"luke1985","link":"https://stackoverflow.com/users/2000185/luke1985"},"score":0,"creation_date":1454513399},{"owner":{"reputation":1218,"user_id":718590,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/11708f36ab168b92413e5df4dde4fcdc?s=128&d=identicon&r=PG","display_name":"pkalinow","link":"https://stackoverflow.com/users/718590/pkalinow"},"score":0,"creation_date":1454582050},{"owner":{"reputation":2150,"user_id":2000185,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/4ef405c6568affd4e3fb3428369b2c8d?s=128&d=identicon&r=PG&f=1","display_name":"luke1985","link":"https://stackoverflow.com/users/2000185/luke1985"},"score":0,"creation_date":1454583464}],"owner":{"reputation":2150,"user_id":2000185,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/4ef405c6568affd4e3fb3428369b2c8d?s=128&d=identicon&r=PG&f=1","display_name":"luke1985","link":"https://stackoverflow.com/users/2000185/luke1985"},"comment_count":4,"score":17,"creation_date":1397309277,"body_markdown":"I highly disregard answers that suggest using the null objects in every situation. This pattern may break the contract and bury problems deeper and deeper instead of solving them, not mentioning that used inappropriately will create another pile of boilerplate code that will require future maintenance.\r\n\r\nIn reality if something returned from a method can be null and the calling code has to make decision upon that, there should an earlier call that ensures the state. \r\n\r\nAlso keep in mind, that null object pattern will be memory hungry if used without care. For this - the instance of a NullObject should be shared between owners, and not be an unigue instance for each of these.\r\n\r\nAlso I would not recommend using this pattern where the type is meant to be a primitive type representation - like mathematical entities, that are not scalars: vectors, matrices, complex numbers and POD(Plain Old Data) objects, which are meant to hold state in form of Java built-in types. In the latter case you would end up calling getter methods with arbitrary results. For example what should a NullPerson.getName() method return? \r\n\r\nIt&#39;s worth considering such cases in order to avoid absurd results.","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":5498,"user_id":2128327,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fdb32ecba89326d1528dbf8673e68b20?s=128&d=identicon&r=PG","display_name":"Khaled.K","link":"https://stackoverflow.com/users/2128327/khaled-k"},"comment_count":0,"score":-1,"creation_date":1416735591,"body_markdown":"Here is my approach ..\r\n\r\n    class MyObjectHandler\r\n    {\r\n    public static final int EXCEPTION = (-3);\r\n    public static final int INACCESSIBLE = (-2);\r\n    \r\n    public static int doSomething (MyObject obj, MyObjectParameter [] input)\r\n    {\r\n        int returnValue= 0;\r\n        \r\n        try\r\n        {\r\n            if (obj != null)\r\n            {\r\n                returnValue = obj.doSomething(input);\r\n            }\r\n            else\r\n            {\r\n                returnValue = MyObjectHandler.INACCESSIBLE;\r\n            }\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            e.printStack();\r\n            returnValue = MyObjectHandler.EXCEPTION;\r\n        }\r\n        finally\r\n        {\r\n            return returnValue;\r\n        }\r\n    }\r\n    \r\n    ..\r\n    \r\n    }\r\n\r\nThen your code will be just like:\r\n\r\n    import xx.xx.xx.MyObjectHandler;\r\n    import xx.xx.xx.MyObjectParameter;\r\n    \r\n    class Test\r\n    {\r\n    \r\n        public static void main ()\r\n        {\r\n        \r\n            MyObject obj = null;\r\n            \r\n            MyObjectHandler.doSomething(obj, null);\r\n        \r\n        }\r\n    \r\n        ..\r\n    \r\n    }\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":2502,"user_id":248847,"user_type":"registered","accept_rate":85,"profile_image":"https://i.stack.imgur.com/7ALzV.jpg?s=128&g=1","display_name":"KrishPrabakar","link":"https://stackoverflow.com/users/248847/krishprabakar"},"score":0,"creation_date":1577968565}],"owner":{"reputation":53,"user_id":1646333,"user_type":"registered","profile_image":"https://i.stack.imgur.com/a6MZ4.jpg?s=128&g=1","display_name":"Yogesh Devatraj","link":"https://stackoverflow.com/users/1646333/yogesh-devatraj"},"comment_count":1,"score":26,"creation_date":1430108209,"body_markdown":"This is a very common problem for every Java developer. So there is official support in Java&amp;nbsp;8 to address these issues without cluttered code.\r\n\r\nJava 8 has introduced `java.util.Optional&lt;T&gt;`. It is a container that may or may not hold a non-null value. Java 8 has given a safer way to handle an object whose value may be null in some of the cases. It is inspired from the ideas of [Haskell][1] and [Scala][2].\r\n\r\nIn a nutshell, the Optional class includes methods to explicitly deal with the cases where a value is present or absent. However, the advantage compared to null references is that the Optional&amp;lt;T&gt; class forces you to think about the case when the value is not present. As a consequence, you can prevent unintended null pointer exceptions.\r\n\r\nIn above example we have a home service factory that returns a handle to multiple appliances available in the home. But these services may or may not be available/functional; it means it may result in a NullPointerException. Instead of adding a null `if` condition before using any service, let&#39;s wrap it in to Optional&amp;lt;Service&gt;.\r\n\r\nWRAPPING TO OPTION&amp;lt;T&gt;\r\n\r\nLet&#39;s consider a method to get a reference of a service from a factory. Instead of returning the service reference, wrap it with Optional. It lets the API user know that the returned service may or may not available/functional, use defensively\r\n\r\n    public Optional&lt;Service&gt; getRefrigertorControl() {\r\n          Service s = new  RefrigeratorService();\r\n           //...\r\n          return Optional.ofNullable(s);\r\n       }\r\n\r\nAs you see `Optional.ofNullable()` provides an easy way to get the reference wrapped. There are another ways to get the reference of Optional, either `Optional.empty()` &amp; `Optional.of()`. One for returning an empty object instead of retuning null and the other to wrap a non-nullable object, respectively.\r\n\r\nSO HOW EXACTLY IT HELPS TO AVOID A NULL CHECK?\r\n\r\nOnce you have wrapped a reference object, Optional provides many useful methods to invoke methods on a wrapped reference without NPE.\r\n\r\n    Optional ref = homeServices.getRefrigertorControl();\r\n    ref.ifPresent(HomeServices::switchItOn);\r\n\r\nOptional.ifPresent invokes the given Consumer with a reference if it is a non-null value. Otherwise, it does nothing.\r\n\r\n    @FunctionalInterface\r\n    public interface Consumer&lt;T&gt;\r\n\r\nRepresents an operation that accepts a single input argument and returns no result. Unlike most other functional interfaces, Consumer is expected to operate via side-effects.\r\nIt is so clean and easy to understand. In the above code example, `HomeService.switchOn(Service)` gets invoked if the Optional holding reference is non-null.\r\n\r\nWe use the ternary operator very often for checking null condition and return an alternative value or default value. Optional provides another way to handle the same condition without checking null. Optional.orElse(defaultObj) returns defaultObj if the Optional has a null value. Let&#39;s use this in our sample code:\r\n\r\n    public static Optional&lt;HomeServices&gt; get() {\r\n        service = Optional.of(service.orElse(new HomeServices()));\r\n        return service;\r\n    }\r\n\r\nNow HomeServices.get() does same thing, but in a better way. It checks whether the service is already initialized of not. If it is then return the same or create a new New service. Optional&amp;lt;T&gt;.orElse(T) helps to return a default value.\r\n\r\nFinally, here is our NPE as well as null check-free code:\r\n\r\n    import java.util.Optional;\r\n    public class HomeServices {\r\n        private static final int NOW = 0;\r\n        private static Optional&lt;HomeServices&gt; service;\r\n\r\n    public static Optional&lt;HomeServices&gt; get() {\r\n        service = Optional.of(service.orElse(new HomeServices()));\r\n        return service;\r\n    }\r\n\r\n    public Optional&lt;Service&gt; getRefrigertorControl() {\r\n        Service s = new  RefrigeratorService();\r\n        //...\r\n        return Optional.ofNullable(s);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        /* Get Home Services handle */\r\n        Optional&lt;HomeServices&gt; homeServices = HomeServices.get();\r\n        if(homeServices != null) {\r\n            Optional&lt;Service&gt; refrigertorControl = homeServices.get().getRefrigertorControl();\r\n            refrigertorControl.ifPresent(HomeServices::switchItOn);\r\n        }\r\n    }\r\n\r\n    public static void switchItOn(Service s){\r\n             //...\r\n        }\r\n    }\r\n\r\nThe complete post is *[NPE as well as Null check-free code … Really?][3]*.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Haskell_%28programming_language%29\r\n  [2]: http://en.wikipedia.org/wiki/Scala_%28programming_language%29\r\n  [3]: http://ydtech.blogspot.in/2015/04/npe-as-well-as-null-check-free-code.html\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":1005,"user_id":1624839,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/040196ed887e3633755f1c491fb8367b?s=128&d=identicon&r=PG","display_name":"Mehdi","link":"https://stackoverflow.com/users/1624839/mehdi"},"comment_count":0,"score":0,"creation_date":1445263236,"body_markdown":"You can couple your Class with Unit Testing using a framework like JUnit.\r\nThis way your code will be clean (no useless checkings) and you will be sure your instances wont be null.\r\n\r\nThis is one good reason (of many) to use Unit Testing.\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":9820,"user_id":452775,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG","display_name":"Lii","link":"https://stackoverflow.com/users/452775/lii"},"comment_count":0,"score":1,"creation_date":1447781857,"body_markdown":"It is possible to define util methods which handles nested null-checks in an almost pretty way with Java 8 lambdas.\r\n\r\n    void example() {\r\n        Entry entry = new Entry();\r\n        // This is the same as H-MANs solution \r\n        Person person = getNullsafe(entry, e -&gt; e.getPerson());    \r\n        // Get object in several steps\r\n        String givenName = getNullsafe(entry, e -&gt; e.getPerson(), p -&gt; p.getName(), n -&gt; n.getGivenName());\r\n        // Call void methods\r\n        doNullsafe(entry, e -&gt; e.getPerson(), p -&gt; p.getName(), n -&gt; n.nameIt());        \r\n    }\r\n    \r\n    /** Return result of call to f1 with o1 if it is non-null, otherwise return null. */\r\n    public static &lt;R, T1&gt; R getNullsafe(T1 o1, Function&lt;T1, R&gt; f1) {\r\n        if (o1 != null) return f1.apply(o1);\r\n        return null; \r\n    }\r\n\r\n    public static &lt;R, T0, T1&gt; R getNullsafe(T0 o0, Function&lt;T0, T1&gt; f1, Function&lt;T1, R&gt; f2) {\r\n        return getNullsafe(getNullsafe(o0, f1), f2);\r\n    }\r\n    \r\n    public static &lt;R, T0, T1, T2&gt; R getNullsafe(T0 o0, Function&lt;T0, T1&gt; f1, Function&lt;T1, T2&gt; f2, Function&lt;T2, R&gt; f3) {\r\n        return getNullsafe(getNullsafe(o0, f1, f2), f3);\r\n    }\r\n    \r\n\r\n    /** Call consumer f1 with o1 if it is non-null, otherwise do nothing. */\r\n    public static &lt;T1&gt; void doNullsafe(T1 o1, Consumer&lt;T1&gt; f1) {\r\n        if (o1 != null) f1.accept(o1);\r\n    }\r\n\r\n    public static &lt;T0, T1&gt; void doNullsafe(T0 o0, Function&lt;T0, T1&gt; f1, Consumer&lt;T1&gt; f2) {\r\n        doNullsafe(getNullsafe(o0, f1), f2);\r\n    }\r\n    \r\n    public static &lt;T0, T1, T2&gt; void doNullsafe(T0 o0, Function&lt;T0, T1&gt; f1, Function&lt;T1, T2&gt; f2, Consumer&lt;T2&gt; f3) {\r\n        doNullsafe(getNullsafe(o0, f1, f2), f3);\r\n    }\r\n\r\n    \r\n    class Entry {\r\n        Person getPerson() { return null; }\r\n    }\r\n\r\n    class Person {\r\n        Name getName() { return null; }\r\n    }\r\n\r\n    class Name {\r\n        void nameIt() {}\r\n        String getGivenName() { return null; }\r\n    }\r\n\r\n&lt;i&gt;&lt;sup&gt;(This answer was first posted [here][2].)&lt;/sup&gt;&lt;/i&gt;\r\n\r\n[1]: https://stackoverflow.com/questions/271526/avoiding-null-statements?page=2#3925191\r\n[2]: https://stackoverflow.com/questions/4390141/java-operator-for-checking-null-what-is-it-not-ternary/33711967#33711967\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":10978,"user_id":977919,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/eT2FU.jpg?s=128&g=1","display_name":"sidgate","link":"https://stackoverflow.com/users/977919/sidgate"},"comment_count":0,"score":3,"creation_date":1450245245,"body_markdown":"Java 8 now has Optional class that wraps the object in consideration and if a value is present, isPresent() will return true and get() will return the value.\r\n\r\n\r\nhttp://www.oracle.com/technetwork/articles/java/java8-optional-2175753.html","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":41397,"user_id":4999394,"user_type":"registered","accept_rate":98,"profile_image":"https://i.stack.imgur.com/nAGmt.png?s=128&g=1","display_name":"Ravindra babu","link":"https://stackoverflow.com/users/4999394/ravindra-babu"},"comment_count":0,"score":8,"creation_date":1453736536,"body_markdown":"I follow below guidelines to avoid null checks.\r\n\r\n1. Avoid ***lazy initialization*** of member variables as much as possible. Initialize the variables in declaration itself. This will handle NullPointerExceptions. \r\n\r\n2. Decide on ***mutability*** of member variables early in the cycle. Use language constructs like `final` keyword effectively. \r\n\r\n3. If you know that augments for method won&#39;t be changed, declare them as `final`.\r\n\r\n4. Limit the ***mutation*** of data as much as possible. Some variables can be created in a constructor and can never be changed. ***Remove public setter methods unless they are really required***.\r\n\r\n E.g. Assume that one class in your application (`A.java`) is maintaining a collection like `HashMap`.  Don&#39;t provide `public` getter method in A.java and allow `B.java` to directly add an element in `Map`. Instead provide an API in `A.java`, which adds an element into collection. \r\n\r\n        // Avoid\r\n        a.getMap().put(key,value)\r\n\r\n        //recommended\r\n\r\n        public void addElement(Object key, Object value){\r\n               // Have null checks for both key and value here : single place\r\n               map.put(key,value);\r\n        }\r\n\r\n5. And finally, use `try{} catch{} finally{}` blocks at right places effectively.\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":3460,"user_id":2194364,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/00330b200be5730c3499104448dc25a0?s=128&d=identicon&r=PG","display_name":"Raghu K Nair","link":"https://stackoverflow.com/users/2194364/raghu-k-nair"},"comment_count":0,"score":20,"creation_date":1458691423,"body_markdown":"Probably the best alternative for Java 8 or newer is to use the [`Optional`][1] class. \r\n\r\n    Optional stringToUse = Optional.of(&quot;optional is there&quot;);\r\n    stringToUse.ifPresent(System.out::println);\r\n\r\nThis is especially handy for long chains of possible null values. Example:\r\n\r\n    Optional&lt;Integer&gt; i = Optional.ofNullable(wsObject.getFoo())\r\n        .map(f -&gt; f.getBar())\r\n        .map(b -&gt; b.getBaz())\r\n        .map(b -&gt; b.getInt());\r\n\r\nExample on how to throw exception on null:\r\n\r\n    Optional optionalCarNull = Optional.ofNullable(someNull);\r\n    optionalCarNull.orElseThrow(IllegalStateException::new);\r\n\r\nJava 7 introduced the [`Objects.requireNonNull`][2] method which can be handy when something should be checked for non-nullness. Example:\r\n\r\n    String lowerVal = Objects.requireNonNull(someVar, &quot;input cannot be null or empty&quot;).toLowerCase();\r\n\r\n[1]: https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\r\n[2]: https://docs.oracle.com/javase/7/docs/api/java/util/Objects.html#requireNonNull(T,%20java.lang.String)","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":169,"user_id":6546993,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-49vas4ObAAU/AAAAAAAAAAI/AAAAAAAAAAA/YQvDDi5PUOE/photo.jpg?sz=128","display_name":"Ivan Golovach","link":"https://stackoverflow.com/users/6546993/ivan-golovach"},"comment_count":0,"score":5,"creation_date":1467732261,"body_markdown":"In Java 8 you can use type `T` for local-variable/field/method-argument/method-return-type if it never assigned `null` (and do not check for `null`) or type `Optional&lt;T&gt;` if it can be `null`. Then use method `map` for processing `T -&gt; ` and method `flatMap` for processing `T -&gt; Optional&lt;R&gt;`:\r\n\r\n    class SomeService {\r\n        @Inject\r\n        private CompanyDao companyDao;\r\n    \r\n        // return Optional&lt;String&gt;\r\n        public Optional&lt;String&gt; selectCeoCityByCompanyId0(int companyId) {\r\n            return companyDao.selectById(companyId)\r\n                    .map(Company::getCeo)\r\n                    .flatMap(Person::getHomeAddress)\r\n                    .flatMap(Address::getCity);\r\n        }\r\n    \r\n        // return String + default value\r\n        public String selectCeoCityByCompanyId1(int companyId) {\r\n            return companyDao.selectById(companyId)\r\n                    .map(Company::getCeo)\r\n                    .flatMap(Person::getHomeAddress)\r\n                    .flatMap(Address::getCity)\r\n                    .orElse(&quot;UNKNOWN&quot;);\r\n        }\r\n    \r\n        // return String + exception\r\n        public String selectCeoCityByCompanyId2(int companyId) throws NoSuchElementException {\r\n            return companyDao.selectById(companyId)\r\n                    .map(Company::getCeo)\r\n                    .flatMap(Person::getHomeAddress)\r\n                    .flatMap(Address::getCity)\r\n                    .orElseThrow(NoSuchElementException::new);\r\n        }\r\n    }\r\n    \r\n    interface CompanyDao {\r\n        // real situation: no company for such id -&gt; use Optional&lt;Company&gt; \r\n        Optional&lt;Company&gt; selectById(int id);\r\n    }\r\n    \r\n    class Company {\r\n        // company always has ceo -&gt; use Person \r\n        Person ceo;\r\n        public Person getCeo() {return ceo;}\r\n    }\r\n    \r\n    class Person {\r\n        // person always has name -&gt; use String\r\n        String firstName;\r\n        // person can be without address -&gt; use Optional&lt;Address&gt;\r\n        Optional&lt;Address&gt; homeAddress = Optional.empty();\r\n    \r\n        public String getFirstName() {return firstName;}   \r\n        public Optional&lt;Address&gt; getHomeAddress() {return homeAddress;}\r\n    }\r\n    \r\n    class Address {\r\n        //  address always contains country -&gt; use String\r\n        String country;\r\n        //  city field is optional -&gt; use Optional&lt;String&gt;\r\n        Optional&lt;String&gt; city = Optional.empty();\r\n    \r\n        String getCountry() {return country;}    \r\n        Optional&lt;String&gt; getCity() {return city;}\r\n    }\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":1477,"user_id":3619962,"user_type":"registered","accept_rate":87,"profile_image":"https://graph.facebook.com/100000540018568/picture?type=large","display_name":"Yasin","link":"https://stackoverflow.com/users/3619962/yasin"},"score":5,"creation_date":1477487767},{"owner":{"reputation":671,"user_id":6090844,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-QX9rvkAbwyw/AAAAAAAAAAI/AAAAAAAALb0/rwm_RBZQZG8/photo.jpg?sz=128","display_name":"Manoel Campos","link":"https://stackoverflow.com/users/6090844/manoel-campos"},"score":0,"creation_date":1574196789},{"owner":{"reputation":778,"user_id":3152516,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/8ea925575fe0c9b928d81ff648ef7d50?s=128&d=identicon&r=PG&f=1","display_name":"Dan Chase","link":"https://stackoverflow.com/users/3152516/dan-chase"},"score":0,"creation_date":1603163384}],"owner":{"reputation":750,"user_id":3719179,"user_type":"registered","profile_image":"https://i.stack.imgur.com/VEtYE.jpg?s=128&g=1","display_name":"Vidura Mudalige","link":"https://stackoverflow.com/users/3719179/vidura-mudalige"},"comment_count":3,"score":-1,"creation_date":1475571466,"body_markdown":"Null object pattern can be used as a solution for this problem. For that, the class of the someObject should be modified. \r\n\r\n    public abstract class SomeObject {\r\n       public abstract boolean isNil();\r\n    }\r\n\r\n    public class NullObject extends SomeObject {\r\n       @Override\r\n       public boolean isNil() {\r\n          return true;\r\n       }\r\n    }\r\n    public class RealObject extends SomeObject {\r\n       @Override\r\n       public boolean isNil() {\r\n          return false;\r\n       }\r\n    }\r\nNow istead of checking,\r\n\r\n     if (someobject != null) {\r\n        someobject.doCalc();\r\n    }\r\n\r\nWe can use,\r\n\r\n    if (!someObject.isNil()) {\r\n       someobject.doCalc();\r\n    }\r\n\r\n\r\nReference : https://www.tutorialspoint.com/design_pattern/null_object_pattern.htm","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":3958,"user_id":4256410,"user_type":"registered","accept_rate":71,"profile_image":"https://lh3.googleusercontent.com/-2D9wo3pwJ4g/AAAAAAAAAAI/AAAAAAAAAJs/OBUoxsI9ljM/photo.jpg?sz=128","display_name":"Philip John","link":"https://stackoverflow.com/users/4256410/philip-john"},"comment_count":0,"score":7,"creation_date":1480325390,"body_markdown":"Since `Java 7` the class `java.util.Objects` exists.\r\n\r\nBut since `Java 8`, you can use `Objects.isNull(var)` and `Objects.nonNull(var)` methods of `Objects` class to do the null pointer check.\r\n\r\nFor example,\r\n\r\n    String var1 = null;\r\n    Date var2 = null;\r\n    Long var3 = null;\r\n\r\n    if(Objects.isNull(var1) &amp;&amp; Objects.isNull(var2) &amp;&amp; Objects.isNull(var3))\r\n        System.out.println(&quot;All Null&quot;);\r\n    else if (Objects.nonNull(var1) &amp;&amp; Objects.nonNull(var2) &amp;&amp; Objects.nonNull(var3))\r\n        System.out.println(&quot;All Not Null&quot;);\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":22036,"user_id":114226,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/8zmez.png?s=128&g=1","display_name":"PeterMmm","link":"https://stackoverflow.com/users/114226/petermmm"},"score":0,"creation_date":1499428490},{"owner":{"reputation":32440,"user_id":25122,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/udJ7V.png?s=128&g=1","display_name":"RealHowTo","link":"https://stackoverflow.com/users/25122/realhowto"},"score":0,"creation_date":1539353040},{"owner":{"reputation":4598,"user_id":2893693,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/Uft9O.jpg?s=128&g=1","display_name":"J J","link":"https://stackoverflow.com/users/2893693/j-j"},"score":0,"creation_date":1539384208}],"owner":{"reputation":4598,"user_id":2893693,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/Uft9O.jpg?s=128&g=1","display_name":"J J","link":"https://stackoverflow.com/users/2893693/j-j"},"comment_count":3,"score":7,"creation_date":1499161286,"body_markdown":"If you are using java8 or later go for the `isNull(yourObject)` from `java.util.Objects`.\r\n\r\nExample:-\r\n\r\n    String myObject = null;\r\n    \r\n    Objects.isNull(myObject); //will return true\r\n\r\nUsage: The below code returns a non null value (if the name is not null then that value will be returned else the default value will be returned).\r\n\r\n    final String name = &quot;Jobin&quot;;\r\n    String nonNullValue = Optional.ofNullable(name).filter(Objects::nonNull).orElse(&quot;DefaultName&quot;);","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":1225,"user_id":8432237,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/oWjOb.jpg?s=128&g=1","display_name":"NeeruKSingh","link":"https://stackoverflow.com/users/8432237/neeruksingh"},"comment_count":0,"score":10,"creation_date":1507545333,"body_markdown":"**Java 8 has introduced a new class Optional in java.util package.**\r\n\r\n**Advantages of Java 8 Optional:**\r\n\r\n1.) Null checks are not required.   \r\n2.) No more NullPointerException at run-time.  \r\n3.) We can develop clean and neat APIs.  \r\n\r\n\r\n**Optional** - A container object which may or may not contain a non-null value. If a value is present, isPresent() will return true and get() will return the value.\r\n\r\nFor more details find here oracle docs :-\r\nhttps://docs.oracle.com/javase/8/docs/api/java/util/Optional.html","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":880,"user_id":9163169,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/e98d8544b345776dd2404b0f4d4b20cc?s=128&d=identicon&r=PG&f=1","display_name":"user8478","link":"https://stackoverflow.com/users/9163169/user8478"},"score":0,"creation_date":1516208170}],"owner":{"reputation":1432,"user_id":4545552,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/efa48e206fce67fdca414825c81e6bd6?s=128&d=identicon&r=PG&f=1","display_name":"yanefedor","link":"https://stackoverflow.com/users/4545552/yanefedor"},"comment_count":1,"score":11,"creation_date":1510660644,"body_markdown":"All in all to avoid statement\n\n    if (object != null) {\n        ....\n    }\n\n 1. since java 7 you can use `Objects` methods:\n\n    Objects.isNull(object)\n\n    Objects.nonNull(object)\n\n    Objects.requireNonNull(object)\n\n    Objects.equals(object1, object2)\n\n 2. since java 8 you can use Optional class ([when to use][1]) \n\n`object.ifPresent(obj -&gt; ...);` java 8\n\n`object.ifPresentOrElse(obj -&gt; ..., () -&gt; ...);` java 9\n\n 3. rely on method contract ([JSR 305][2]) and use [Find Bugs][3]. Mark your code with annotations `@javax.annotation.Nullable` and `@javax.annotation.Nonnnul`. Also Preconditions are available.\n\n    Preconditions.checkNotNull(object);\n\n 4. In special cases (for example for Strings and Collections) you can use apache-commons (or Google guava) utility methods:\n\n&gt; public static boolean isEmpty(CharSequence cs) //apache CollectionUtils\n&gt;\n&gt; public static boolean isEmpty(Collection coll) //apache StringUtils\n&gt;\n&gt; public static boolean isEmpty(Map map) //apache MapUtils\n&gt;\n&gt; public static boolean isNullOrEmpty(@Nullable String string) //Guava Strings\n\n 5. When you need to assign default value when null use apache commons lang\n\n&gt; public static Object defaultIfNull(Object object, Object defaultValue)\n\n  [1]: https://stackoverflow.com/questions/23454952/uses-for-optional\n  [2]: https://minds.coremedia.com/2012/10/31/jsr-305-nonnull-and-guava-preconditions/\n  [3]: http://findbugs.sourceforge.net/","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":237,"user_id":1119386,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2ddb3fd05edffe2933e97486aa431104?s=128&d=identicon&r=PG","display_name":"Binod Pant","link":"https://stackoverflow.com/users/1119386/binod-pant"},"comment_count":0,"score":1,"creation_date":1514349317,"body_markdown":"One Option you have\r\n\r\n* Use [checker framework][1]&#39;s @RequiresNonNull on methods. for ex you get this if you call a method annotated as such, with a null argument. It will fail during compile, even before your code runs! since at runtime it will be NullPointerException\r\n\r\n\r\n        @RequiresNonNull(value = { &quot;#1&quot; })\r\n    \tstatic void check( Boolean x) {\r\n    \t\tif (x) System.out.println(&quot;true&quot;);\r\n    \t\telse System.out.println(&quot;false&quot;);\r\n    \t}\r\n    \t\r\n    \tpublic static void main(String[] args) {\r\n    \t\t\r\n    \t\t\r\n    \t\tcheck(null);\r\n    \t\t\r\n    \t}\r\n\r\n\r\ngets \r\n\r\n\r\n    [ERROR] found   : null\r\n    [ERROR] required: @Initialized @NonNull Boolean\r\n    [ERROR] -&gt; [Help 1]\r\n\r\n\r\nThere are other methods like Use Java 8&#39;s Optional, Guava Annotations, Null Object pattern etc. Does not matter as long as you obtain your goal of avoiding !=null\r\n\r\n\r\n  [1]: https://checkerframework.org/api/org/checkerframework/checker/nullness/qual/RequiresNonNull.html\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":13283,"user_id":503804,"user_type":"registered","accept_rate":70,"profile_image":"https://i.stack.imgur.com/o5zWb.png?s=128&g=1","display_name":"nilesh","link":"https://stackoverflow.com/users/503804/nilesh"},"comment_count":0,"score":3,"creation_date":1518030018,"body_markdown":"\r\n\r\n\r\nWith Java 8, you could pass a supplier to a helper method like below,\r\n\r\n\r\n    if(CommonUtil.resolve(()-&gt; a.b().c()).isPresent()) {\r\n    \r\n    }\r\n\r\nAbove replaces boiler plate code like below,\r\n\r\n\r\n    if(a!=null &amp;&amp; a.b()!=null &amp;&amp; a.b().c()!=null) {\r\n    \r\n    }\r\n\r\n\r\n//CommonUtil.java\r\n\r\n     public static &lt;T&gt; Optional&lt;T&gt; resolve(Supplier&lt;T&gt; resolver) {\r\n            try {\r\n                T result = resolver.get();\r\n                return Optional.ofNullable(result);\r\n            } catch (NullPointerException var2) {\r\n                return Optional.empty();\r\n            }\r\n        }\r\n\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":3251,"user_id":6147374,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/d05b5955de351d18e1c8d715f97f0be2?s=128&d=identicon&r=PG&f=1","display_name":"Ibo","link":"https://stackoverflow.com/users/6147374/ibo"},"score":0,"creation_date":1531418413},{"owner":{"reputation":321,"user_id":4014678,"user_type":"registered","profile_image":"https://i.stack.imgur.com/b0j5j.jpg?s=128&g=1","display_name":"Mukesh A","link":"https://stackoverflow.com/users/4014678/mukesh-a"},"score":0,"creation_date":1531418680},{"owner":{"reputation":3251,"user_id":6147374,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/d05b5955de351d18e1c8d715f97f0be2?s=128&d=identicon&r=PG&f=1","display_name":"Ibo","link":"https://stackoverflow.com/users/6147374/ibo"},"score":0,"creation_date":1531420294}],"owner":{"reputation":321,"user_id":4014678,"user_type":"registered","profile_image":"https://i.stack.imgur.com/b0j5j.jpg?s=128&g=1","display_name":"Mukesh A","link":"https://stackoverflow.com/users/4014678/mukesh-a"},"comment_count":3,"score":6,"creation_date":1531416917,"body_markdown":"You can avoid most a lot to avoid `NullPointerException` by just following most of the others answers to the Question, I just want to add few **more ways which have been introduced in  `Java 9`** to handle this scenario gracefully and also showcase a few of the older ones can also be used and thus reducing your efforts.\r\n\r\n 1. `public static boolean isNull(Object obj)`\r\n    \r\n    Returns true if the provided reference is null otherwise returns\r\n    false.\r\n    \r\n    Since Java 1.8\r\n 2. `public static boolean nonNull(Object obj)`\r\n    \r\n    Returns true if the provided reference is non-null otherwise returns\r\n    false.\r\n    \r\n    Since Java 1.8\r\n\r\n 3. `public static &lt;T&gt; T requireNonNullElse​(T obj, T defaultObj)`\r\n    \r\n    Returns the first argument if it is non-null and otherwise returns\r\n    the non-null second argument.\r\n    \r\n    Since Java 9\r\n\r\n 4. `public static &lt;T&gt; T requireNonNullElseGet​(T obj, Supplier&lt;? extends T&gt; supplier)`\r\n     \r\n     Returns the first argument if it is non-null and otherwise returns the non-null value of supplier.get().\r\n  \r\n     Since Java 9\r\n\r\n 5. `public static &lt;T&gt; T requireNonNull​(T obj, Supplier&lt;String&gt; messageSupplier)`\r\n     \r\n     Checks that the specified object reference is not null and throws a customized NullPointerException otherwise.\r\n\r\n     Since Java 1.8\r\n\r\nFurther details about the above functions can be found [here][1].\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/9/docs/api/java/util/Objects.html#isNull-java.lang.Object-","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":4198,"user_id":4353365,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-fOb7w8Ofk5E/AAAAAAAAAAI/AAAAAAAADmc/nymnI-_Ng9g/photo.jpg?sz=128","display_name":"Francis","link":"https://stackoverflow.com/users/4353365/francis"},"comment_count":0,"score":1,"creation_date":1534802753,"body_markdown":"[Kotlin][1] with null safety is elegant alternative, but it means a larger change.\r\n\r\n\r\n  [1]: https://kotlinlang.org","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":155,"user_id":7236932,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-K2H2MOiuyKg/AAAAAAAAAAI/AAAAAAAACVA/CBEarWwfjao/photo.jpg?sz=128","display_name":"Ramprabhu","link":"https://stackoverflow.com/users/7236932/ramprabhu"},"comment_count":0,"score":0,"creation_date":1546496486,"body_markdown":"Functional approach may help to wrap the repetitive null checks and execute anonymous code like the below sample.\r\n\r\n        BiConsumer&lt;Object, Consumer&lt;Object&gt;&gt; consumeIfPresent  = (s,f) -&gt;{\r\n\t\t\tif(s!=null) {\r\n\t\t\t\tf.accept(s);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconsumeIfPresent.accept(null, (s)-&gt; System.out.println(s) );\r\n\t\tconsumeIfPresent.accept(&quot;test&quot;, (s)-&gt; System.out.println(s));\r\n\r\n        BiFunction&lt;Object, Function&lt;Object,Object&gt;,Object&gt; executeIfPresent  = (a,b) -&gt;{\r\n\t\t\tif(a!=null) {\r\n\t\t\t\treturn b.apply(a);\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\texecuteIfPresent.apply(null, (s)-&gt; {System.out.println(s);return s;} );\r\n\t\texecuteIfPresent.apply(&quot;test&quot;, (s)-&gt; {System.out.println(s);return s;} );\r\n","title":"Avoiding NullPointerException in Java"},{"comments":[{"owner":{"reputation":1477,"user_id":1503554,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/ada69b2a87f0732a5b051e769d07b13d?s=128&d=identicon&r=PG","display_name":"ThisIsNoZaku","link":"https://stackoverflow.com/users/1503554/thisisnozaku"},"score":0,"creation_date":1565036656}],"owner":{"reputation":419,"user_id":2785025,"user_type":"registered","profile_image":"https://i.stack.imgur.com/SJPZW.jpg?s=128&g=1","display_name":"Sebastian3000","link":"https://stackoverflow.com/users/2785025/sebastian3000"},"comment_count":1,"score":3,"creation_date":1557911640,"body_markdown":"Another alternative to the != null check is (if you can&#39;t get rid of it design-wise):\r\n\r\n    Optional.ofNullable(someobject).ifPresent(someobject -&gt; someobject.doCalc());\r\n\r\nor\r\n\r\n    Optional.ofNullable(someobject).ifPresent(SomeClass::doCalc);\r\n\r\nWith SomeClass being someobject&#39;s type.\r\n\r\nYou can&#39;t get a return value back from doCalc() though, so only useful for void methods.","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":545,"user_id":6024604,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/TkOtR.jpg?s=128&g=1","display_name":"rohit prakash","link":"https://stackoverflow.com/users/6024604/rohit-prakash"},"comment_count":0,"score":6,"creation_date":1560256796,"body_markdown":"Java 8 has introduced a new class Optional in `java.util` package. It is used to represent a value is present or absent. The main advantage of this new construct is that No more too many null checks and `NullPointerException`. It avoids any runtime `NullPointerExceptions` and supports us in developing clean and neat Java APIs or Applications. Like `Collections` and `arrays`, it is also a Container to hold at most one value.\r\n\r\nBelow are some useful link you can follow\r\n\r\n[https://www.mkyong.com/java8/java-8-optional-in-depth/][1]\r\n\r\n\r\n[https://dzone.com/articles/java-8-optional-avoid-null-and][2]\r\n\r\n\r\n  [1]: https://www.mkyong.com/java8/java-8-optional-in-depth/\r\n  [2]: https://dzone.com/articles/java-8-optional-avoid-null-and","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":137,"user_id":12079719,"user_type":"registered","profile_image":"https://i.stack.imgur.com/JCWgc.jpg?s=128&g=1","display_name":"Satish Hawalppagol","link":"https://stackoverflow.com/users/12079719/satish-hawalppagol"},"comment_count":0,"score":0,"creation_date":1596967948,"body_markdown":"You can make one generic Method for object and string so that you can use it through out in your application-\r\nThis could help you and your colleagues : \r\nCreate a class eg. StringUtilities and add the method eg. getNullString\r\n \r\n    public static String getNullString(Object someobject)\r\n    {\r\n\t   if(null==someobject )\r\n\t\t    return null;\r\n\r\n\t   else if(someobject.getClass().isInstance(&quot;&quot;) &amp;&amp; \r\n              (((String)someobject).trim().equalsIgnoreCase(&quot;null&quot;)|| \r\n              ((String)someobject).trim().equalsIgnoreCase(&quot;&quot;)))\r\n\t        return null;\r\n\r\n\t   else if(someobject.getClass().isInstance(&quot;&quot;))\r\n\t        return (String)someobject;\r\n\r\n\t   else\r\n\t        return someobject.toString().trim();\r\n    }\r\n\r\nAnd simply call this method as,\r\n\r\n\tif (StringUtilities.getNullString(someobject) != null)\r\n    { \r\n      //Do something\r\n    }\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":778,"user_id":3152516,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/8ea925575fe0c9b928d81ff648ef7d50?s=128&d=identicon&r=PG&f=1","display_name":"Dan Chase","link":"https://stackoverflow.com/users/3152516/dan-chase"},"comment_count":0,"score":0,"creation_date":1603162603,"body_markdown":"The best way to avoid Null Checks in Java, is to properly handle and use exceptions. Null Checks in my experience have become more common and required as you move closer to the front-end, because it&#39;s closer to the user who may supply invalid information through the UI (such as, no value, being submitted for a field). \r\n\r\nOne may argue that you should be able to control what the UI is doing, lest you forget most UI is done through a third party library of some kind, which for example, may return either NULL or an Empty String for a blank text box, depending on the situation or the library.\r\n\r\nYou can combine the two like this:\r\n\r\n    try\r\n    {\r\n      myvar = get_user_supplied_value(); \r\n      if (!myvar || myvar.length() == 0) { alert_the_user_somehow(); return; };\r\n    \r\n      process_user_input(myvar);\r\n    } catch (Exception ex) {\r\n      handle_exception(ex);\r\n    }\r\n\r\nAnother approach people take is to say:\r\n\r\n    if (myvar &amp;&amp; myvar.length() &gt; 0)  { };\r\n\r\nYou could also throw an exception (which is what I prefer)\r\n\r\n    if (!myvar || myvar.length() == 0) {\r\n     throw new Exception(&quot;You must supply a name!&quot;);\r\n    };\r\n\r\nBut that&#39;s up to you.\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":76,"user_id":12716256,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-yCltr1_fIok/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfJ6macV0VZsU4p89QPAGI2GBDO3w/photo.jpg?sz=128","display_name":"Allen","link":"https://stackoverflow.com/users/12716256/allen"},"comment_count":0,"score":1,"creation_date":1603247013,"body_markdown":"There has a good way to check the null value from JDK.\r\nIt is Optional.java that has a sea of methods to resolve these problems. Such as follow:\r\n`\r\n   * Returns an {@code Optional} describing the specified value, if non-null,\r\n     * otherwise returns an empty {@code Optional}.\r\n     *\r\n     * @param &lt;T&gt; the class of the value\r\n     * @param value the possibly-null value to describe\r\n     * @return an {@code Optional} with a present value if the specified value\r\n     * is non-null, otherwise an empty {@code Optional}\r\n     *\r\n    public static &lt;T&gt; Optional&lt;T&gt; ofNullable(T value) {\r\n        return value == null ? empty() : of(value);\r\n    }  `\r\n   \r\n`/ \r\n  * Return {@code true} if there is a value present, otherwise {@code false}.\r\n     *\r\n     * @return {@code true} if there is a value present, otherwise {@code false}\r\n     *\\/\r\n    public boolean isPresent() {\r\n        return value != null;\r\n    }\r\n\r\n    \\/**\r\n     * If a value is present, invoke the specified consumer with the value,\r\n     * otherwise do nothing.\r\n     *\r\n     * @param consumer block to be executed if a value is present\r\n     * @throws NullPointerException if value is present and {@code consumer} is\r\n     * null\r\n     */\r\n    public void ifPresent(Consumer&lt;? super T&gt; consumer) {\r\n        if (value != null)\r\n            consumer.accept(value);\r\n    }`\r\n\r\n   It is really, really useful to help javer.\r\n\r\n","title":"Avoiding NullPointerException in Java"},{"owner":{"reputation":1142,"user_id":9993935,"user_type":"registered","profile_image":"https://i.stack.imgur.com/F78XX.jpg?s=128&g=1","display_name":"vidy","link":"https://stackoverflow.com/users/9993935/vidy"},"comment_count":0,"score":3,"creation_date":1604907009,"body_markdown":"    public class Null {\r\n\r\n    public static void main(String[] args) {\r\n        String str1 = null;\r\n        String str2 = &quot;&quot;;\r\n\r\n        if(isNullOrEmpty(str1))\r\n            System.out.println(&quot;First string is null or empty.&quot;);\r\n        else\r\n            System.out.println(&quot;First string is not null or empty.&quot;);\r\n\r\n        if(isNullOrEmpty(str2))\r\n            System.out.println(&quot;Second string is null or empty.&quot;);\r\n        else\r\n            System.out.println(&quot;Second string is not null or empty.&quot;);\r\n    }\r\n\r\n    public static boolean isNullOrEmpty(String str) {\r\n        if(str != null &amp;&amp; !str.isEmpty())\r\n            return false;\r\n        return true;\r\n    }\r\n    }\r\n\r\nOutput\r\n\r\n    str1 is null or empty.\r\n    str2 is null or empty.\r\n\r\nIn the above program, we&#39;ve two strings str1 and str2. str1 contains null value and str2 is an empty string.\r\n\r\nWe&#39;ve also created a function isNullOrEmpty() which checks, as the name suggests, whether the string is null or empty. It checks it using a null check using != null and isEmpty() method of string.\r\n\r\nIn plain terms, if a string isn&#39;t a null and isEmpty() returns false, it&#39;s not either null or empty. Else, it is.\r\n\r\nHowever, the above program doesn&#39;t return empty if a string contains only whitespace characters (spaces). Technically, isEmpty() sees it contains spaces and returns false. For string with spaces, we use the string method trim() to trim out all the leading and trailing whitespace characters.\r\n\r\n","title":"Avoiding NullPointerException in Java"}],"owner":{"reputation":3757,"user_id":34856,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1e57ced4476e0c629c70e6058159c4f0?s=128&d=identicon&r=PG","display_name":"Goran Martinic","link":"https://stackoverflow.com/users/34856/goran-martinic"},"comment_count":8,"is_answered":true,"answer_count":65,"score":4149,"creation_date":1226046700,"question_id":271526,"body_markdown":"I use `object != null` a lot to avoid [`NullPointerException`][1].\r\n\r\nWhat is an alternative to:\r\n\r\n```java\r\nif (someobject != null) {\r\n    someobject.doCalc();\r\n}\r\n``` \r\n\r\n[1]:https://docs.oracle.com/javase/9/docs/api/java/lang/NullPointerException.html","link":"https://stackoverflow.com/questions/271526/avoiding-nullpointerexception-in-java","title":"Avoiding NullPointerException in Java"},{"tags":["java","collections","hashmap","hashtable"],"comments":[{"owner":{"reputation":129,"user_id":2446305,"user_type":"registered","profile_image":"https://i.stack.imgur.com/5GjuI.gif?s=128&g=1","display_name":"MissFiona","link":"https://stackoverflow.com/users/2446305/missfiona"},"score":21,"creation_date":1491775819},{"owner":{"reputation":206732,"user_id":642706,"user_type":"registered","accept_rate":58,"profile_image":"https://i.stack.imgur.com/ZWEI3.jpg?s=128&g=1","display_name":"Basil Bourque","link":"https://stackoverflow.com/users/642706/basil-bourque"},"score":2,"creation_date":1577581873}],"answers":[{"comments":[{"owner":{"reputation":39915,"user_id":85821,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/28d7fc76db803c6757e7cfd2cde20354?s=128&d=identicon&r=PG","display_name":"Bart van Heukelom","link":"https://stackoverflow.com/users/85821/bart-van-heukelom"},"score":5,"creation_date":1292636698},{"owner":{"reputation":32465,"user_id":4257,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/e326ede439e929b12e36d8508de54040?s=128&d=identicon&r=PG","display_name":"pkaeding","link":"https://stackoverflow.com/users/4257/pkaeding"},"score":1,"creation_date":1293846396},{"owner":{"reputation":78117,"user_id":319403,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/e92a9af9e53cc8e5af575c4b18b34c21?s=128&d=identicon&r=PG","display_name":"cHao","link":"https://stackoverflow.com/users/319403/chao"},"score":0,"creation_date":1303135388}],"owner":{"reputation":32465,"user_id":4257,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/e326ede439e929b12e36d8508de54040?s=128&d=identicon&r=PG","display_name":"pkaeding","link":"https://stackoverflow.com/users/4257/pkaeding"},"comment_count":3,"score":28,"creation_date":1220386493,"body_markdown":"Based on the info [here][1], I&#39;d recommend going with HashMap.  I think the biggest advantage is that Java will prevent you from modifying it while you are iterating over it, unless you do it through the iterator.\r\n\r\n\r\n  [1]: http://www.jguru.com/faq/view.jsp?EID=430247","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":45056,"user_id":974,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/3d7e0433078e5d9b54fb90edf7bd10a3?s=128&d=identicon&r=PG","display_name":"izb","link":"https://stackoverflow.com/users/974/izb"},"comment_count":0,"score":35,"creation_date":1220386954,"body_markdown":"`Hashtable` is synchronized, whereas `HashMap` isn&#39;t. That makes `Hashtable` slower than `Hashmap`.\r\n\r\nFor single thread applications, use `HashMap` since they are otherwise the same in terms of functionality.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":7457,"user_id":3898,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/46d631c50ff6986b6cbc443be8b5fc73?s=128&d=identicon&r=PG","display_name":"Miles D","link":"https://stackoverflow.com/users/3898/miles-d"},"comment_count":0,"score":51,"creation_date":1220387130,"body_markdown":"`Hashtable` is similar to the `HashMap` and has a similar interface. It is recommended that you use `HashMap`, unless you require support for legacy applications or you need synchronisation, as the `Hashtables` methods are synchronised. So in your case as you are not multi-threading, `HashMaps` are your best bet.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":74856,"user_id":632951,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/77f196f4d3b4b89fc179071f3aa21e1e?s=128&d=identicon&r=PG","display_name":"Pacerier","link":"https://stackoverflow.com/users/632951/pacerier"},"score":3,"creation_date":1320178978},{"owner":{"reputation":491,"user_id":4271421,"user_type":"registered","profile_image":"https://i.stack.imgur.com/e0yOs.jpg?s=128&g=1","display_name":"Majid Ali Khan","link":"https://stackoverflow.com/users/4271421/majid-ali-khan"},"score":1,"creation_date":1558610733}],"owner":{"reputation":131708,"user_id":4249,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/c11c60c7e6d29cb4b87f3c0a3b692181?s=128&d=identicon&r=PG","display_name":"matt b","link":"https://stackoverflow.com/users/4249/matt-b"},"comment_count":2,"score":67,"creation_date":1220387400,"body_markdown":"In addition to what izb said, `HashMap` allows null values, whereas the `Hashtable` does not.\r\n\r\nAlso note that `Hashtable` extends the `Dictionary` class, which as the [Javadocs][1] state, is obsolete and has been replaced by the `Map` interface.\r\n\r\n\r\n  [1]: http://java.sun.com/j2se/1.4.2/docs/api/java/util/Dictionary.html","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":7626,"user_id":4276,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6e24f47aa88626872c16e0f740739e8a?s=128&d=identicon&r=PG","display_name":"Tim Howland","link":"https://stackoverflow.com/users/4276/tim-howland"},"comment_count":0,"score":18,"creation_date":1220395139,"body_markdown":"For threaded apps, you can often get away with ConcurrentHashMap- depends on your performance requirements.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":5975,"user_id":974531,"user_type":"registered","accept_rate":88,"profile_image":"https://i.stack.imgur.com/RddON.jpg?s=128&g=1","display_name":"Rok Strniša","link":"https://stackoverflow.com/users/974531/rok-strni%c5%a1a"},"score":93,"creation_date":1321987718},{"owner":{"reputation":247550,"user_id":3474,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/ffbf4e85b8ffbae4e9039b9c0cf07bc8?s=128&d=identicon&r=PG","display_name":"erickson","link":"https://stackoverflow.com/users/3474/erickson"},"score":292,"creation_date":1331918378},{"owner":{"reputation":944,"user_id":4348811,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/Xp82g.png?s=128&g=1","display_name":"Gaurava Agarwal","link":"https://stackoverflow.com/users/4348811/gaurava-agarwal"},"score":8,"creation_date":1467018002},{"owner":{"reputation":1257,"user_id":1187233,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3e2698a3f04cae6bb81b0d6cb191f10e?s=128&d=identicon&r=PG","display_name":"Maneesh Kumar","link":"https://stackoverflow.com/users/1187233/maneesh-kumar"},"score":3,"creation_date":1522381520},{"owner":{"reputation":6801,"user_id":1041442,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/99d5dced06046bd68560dc8eb4caa61f?s=128&d=identicon&r=PG","display_name":"Jilles van Gurp","link":"https://stackoverflow.com/users/1041442/jilles-van-gurp"},"score":2,"creation_date":1526717461},{"owner":{"reputation":265,"user_id":663999,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/b069662feaa169d5fe471e6fa81a7ce8?s=128&d=identicon&r=PG","display_name":"rashid","link":"https://stackoverflow.com/users/663999/rashid"},"score":1,"creation_date":1529911544}],"owner":{"reputation":48640,"user_id":2030,"user_type":"registered","accept_rate":91,"profile_image":"https://www.gravatar.com/avatar/73fad2d46ffaac8dd679d302a681147b?s=128&d=identicon&r=PG","display_name":"Josh Brown","link":"https://stackoverflow.com/users/2030/josh-brown"},"comment_count":6,"score":3909,"creation_date":1220396557,"body_markdown":"There are several differences between [`HashMap`][1] and [`Hashtable`][2] in Java:\r\n\r\n 1. `Hashtable` is [synchronized][3], whereas `HashMap` is not. This makes `HashMap` better for non-threaded applications, as unsynchronized Objects typically perform better than synchronized ones.\r\n\r\n 2. `Hashtable` does not allow `null` keys or values.  `HashMap` allows one `null` key and any number of `null` values.\r\n\r\n 3. One of HashMap&#39;s subclasses is [`LinkedHashMap`][4], so in the event that you&#39;d want predictable iteration order (which is insertion order by default), you could easily swap out the `HashMap` for a `LinkedHashMap`.  This wouldn&#39;t be as easy if you were using `Hashtable`.\r\n\r\nSince synchronization is not an issue for you, I&#39;d recommend `HashMap`. If synchronization becomes an issue, you may also look at [`ConcurrentHashMap`][5].\r\n\r\n  [1]: http://java.sun.com/javase/7/docs/api/java/util/HashMap.html\r\n  [2]: http://java.sun.com/javase/7/docs/api/java/util/Hashtable.html\r\n  [3]: https://stackoverflow.com/questions/1085709/what-does-synchronized-mean\r\n  [4]: http://java.sun.com/javase/7/docs/api/java/util/LinkedHashMap.html\r\n  [5]: http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":1600,"user_id":467413,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/8e7395f03e4db1ccea92b568126b8a69?s=128&d=identicon&r=PG","display_name":"prap19","link":"https://stackoverflow.com/users/467413/prap19"},"score":0,"creation_date":1321714520},{"owner":{"user_type":"does_not_exist","display_name":"user6552957"},"score":1,"creation_date":1535829834}],"owner":{"reputation":33489,"user_id":3434,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/5a484dc0812eb4542ee718d969513f66?s=128&d=identicon&r=PG","display_name":"Apocalisp","link":"https://stackoverflow.com/users/3434/apocalisp"},"comment_count":2,"score":134,"creation_date":1220397251,"body_markdown":"`HashMap`: An implementation of the `Map` interface that uses hash codes to index an array.\r\n`Hashtable`: Hi, 1998 called. They want their collections API back.\r\n\r\nSeriously though, you&#39;re better off staying away from `Hashtable` altogether. For single-threaded apps, you don&#39;t need the extra overhead of synchronisation. For highly concurrent apps, the paranoid synchronisation might lead to starvation, deadlocks, or unnecessary garbage collection pauses. Like Tim Howland pointed out, you might use `ConcurrentHashMap` instead.\r\n","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":10946,"user_id":51789,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/a174b4521f9e80327c0e63fb88657933?s=128&d=identicon&r=PG","display_name":"Chris K","link":"https://stackoverflow.com/users/51789/chris-k"},"score":54,"creation_date":1240437783},{"owner":{"reputation":1466,"user_id":350874,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/ee06255360a95ec2d81a746afa944443?s=128&d=identicon&r=PG","display_name":"telebog","link":"https://stackoverflow.com/users/350874/telebog"},"score":3,"creation_date":1321030106},{"owner":{"reputation":2428,"user_id":856634,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/ac5b6cf2423eb9e16de2cc80f1fa6637?s=128&d=identicon&r=PG","display_name":"Love Hasija","link":"https://stackoverflow.com/users/856634/love-hasija"},"score":3,"creation_date":1348136468},{"owner":{"reputation":7654,"user_id":190200,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4ece157c3adee7df9c94de40d286a5bb?s=128&d=identicon&r=PG","display_name":"Matt Stephenson","link":"https://stackoverflow.com/users/190200/matt-stephenson"},"score":0,"creation_date":1380826181},{"owner":{"reputation":44584,"user_id":581994,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/d2ae9ac6fb51918297a0ce5dada0eb22?s=128&d=identicon&r=PG","display_name":"Hot Licks","link":"https://stackoverflow.com/users/581994/hot-licks"},"score":0,"creation_date":1408548871},{"owner":{"reputation":133,"user_id":6548501,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3c787e1cfceebd98ac47e1c83db0798f?s=128&d=identicon&r=PG&f=1","display_name":"A248","link":"https://stackoverflow.com/users/6548501/a248"},"score":0,"creation_date":1610038507}],"owner":{"reputation":28478,"user_id":1853,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/073a27f428a71c155382dc8637ccd772?s=128&d=identicon&r=PG","display_name":"serg10","link":"https://stackoverflow.com/users/1853/serg10"},"comment_count":6,"score":709,"creation_date":1220439641,"body_markdown":"Note, that a lot of the answers state that Hashtable is synchronised.  **In practice this buys you very little.**  The synchronization is on the accessor / mutator methods will stop two threads adding or removing from the map concurrently, but in the real world you will often need additional synchronisation.\r\n\r\nA very common idiom is to &quot;check then put&quot; — i.e. look for an entry in the `Map`, and add it if it does not already exist. This is not in any way an atomic operation whether you use `Hashtable` or `HashMap`.\r\n\r\nAn equivalently synchronised `HashMap` can be obtained by:\r\n\r\n    Collections.synchronizedMap(myMap);\r\n\r\nBut to correctly implement this logic you need **additional synchronisation** of the form:\r\n\r\n    synchronized(myMap) {\r\n        if (!myMap.containsKey(&quot;tomato&quot;))\r\n            myMap.put(&quot;tomato&quot;, &quot;red&quot;);\r\n    }\r\n\r\nEven iterating over a `Hashtable`&#39;s entries (or a `HashMap` obtained by `Collections.synchronizedMap`) is not thread safe unless you also guard the `Map` from being modified through additional synchronization.\r\n\r\nImplementations of the [`ConcurrentMap`][1] interface (for example [`ConcurrentHashMap`][2]) solve some of this by including **thread safe check-then-act semantics** such as:\r\n\r\n    ConcurrentMap.putIfAbsent(key, value);\r\n\r\n  [1]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/ConcurrentMap.html\r\n  [2]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/ConcurrentHashMap.html","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":98019,"user_id":18511,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/c621039e41aef415ad25054da3bf3f9a?s=128&d=identicon&r=PG","display_name":"Kip","link":"https://stackoverflow.com/users/18511/kip"},"score":103,"creation_date":1263938943},{"owner":{"reputation":1900,"user_id":283519,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/3e60903f1cfe943d420b047006475e66?s=128&d=identicon&r=PG","display_name":"pwes","link":"https://stackoverflow.com/users/283519/pwes"},"score":15,"creation_date":1326356028},{"owner":{"reputation":7748,"user_id":584947,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/5c0e998a5b4fdce4f95cbec31e6dab22?s=128&d=identicon&r=PG","display_name":"anon58192932","link":"https://stackoverflow.com/users/584947/anon58192932"},"score":6,"creation_date":1453495255},{"owner":{"reputation":374,"user_id":4418511,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/4b10982a4070169a871c7f55a8c3c446?s=128&d=identicon&r=PG&f=1","display_name":"GC_","link":"https://stackoverflow.com/users/4418511/gc"},"score":0,"creation_date":1476459587},{"owner":{"reputation":7748,"user_id":584947,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/5c0e998a5b4fdce4f95cbec31e6dab22?s=128&d=identicon&r=PG","display_name":"anon58192932","link":"https://stackoverflow.com/users/584947/anon58192932"},"score":1,"creation_date":1476475556},{"owner":{"reputation":1140,"user_id":1028135,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/e882210063f14777167ac307cc6b9c82?s=128&d=identicon&r=PG","display_name":"MastAvalons","link":"https://stackoverflow.com/users/1028135/mastavalons"},"score":0,"creation_date":1560765253}],"owner":{"reputation":11554,"user_id":124111,"user_type":"registered","accept_rate":98,"profile_image":"https://www.gravatar.com/avatar/bc6298c65f412c09b6389c3518b76a0b?s=128&d=identicon&r=PG","display_name":"aberrant80","link":"https://stackoverflow.com/users/124111/aberrant80"},"comment_count":6,"score":376,"creation_date":1245894377,"body_markdown":"`Hashtable` is considered legacy code. There&#39;s nothing about `Hashtable` that can&#39;t be done using `HashMap` or derivations of `HashMap`, so for new code, I don&#39;t see any justification for going back to `Hashtable`.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":361,"user_id":934204,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/8bf2bddf25145ba09c989602406cff57?s=128&d=identicon&r=PG","display_name":"Neerja","link":"https://stackoverflow.com/users/934204/neerja"},"comment_count":0,"score":36,"creation_date":1315464013,"body_markdown":"Another key difference between hashtable and hashmap is that Iterator in the HashMap is  fail-fast  while the enumerator for the Hashtable is not and throw ConcurrentModificationException if any other Thread modifies the map structurally  by adding or removing any element except Iterator&#39;s own remove()  method. But this is not a guaranteed behavior and will be done by JVM on best effort.&quot;\r\n\r\nMy source: http://javarevisited.blogspot.com/2010/10/difference-between-hashmap-and.html\r\n","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":21,"creation_date":1378713951},{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":61,"creation_date":1378714471},{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":28,"creation_date":1378714613},{"owner":{"user_type":"does_not_exist","display_name":"user4229245"},"score":4,"creation_date":1430778406},{"owner":{"reputation":946,"user_id":2771888,"user_type":"registered","accept_rate":44,"profile_image":"https://www.gravatar.com/avatar/6d9ec8be7dd95a03549272c8e9f98e67?s=128&d=identicon&r=PG&f=1","display_name":"Abdul","link":"https://stackoverflow.com/users/2771888/abdul"},"score":0,"creation_date":1532915769}],"owner":{"reputation":4919,"user_id":759012,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3b8a1284aa6cee54750886264ddae2ca?s=128&d=identicon&r=PG","display_name":"sravan","link":"https://stackoverflow.com/users/759012/sravan"},"comment_count":5,"score":201,"creation_date":1317710392,"body_markdown":"This question is often asked in interview to check whether candidate understands correct usage of collection classes and is aware of alternative solutions available.\r\n\r\n 1. The `HashMap` class is roughly equivalent to `Hashtable`, except that it is non synchronized and permits nulls. (`HashMap` allows null values as key and value whereas `Hashtable` doesn&#39;t allow `null`s).\r\n 2. `HashMap` does not guarantee that the order of the map will remain constant over time.\r\n 3. `HashMap` is non synchronized whereas `Hashtable` is synchronized.\r\n 4. Iterator in the `HashMap` is  fail-safe while the enumerator for the `Hashtable` is not and throw `ConcurrentModificationException` if any other Thread modifies the map structurally  by adding or removing any element except `Iterator`&#39;s own `remove()`  method. But this is not a guaranteed behavior and will be done by JVM on best effort.\r\n\r\nNote on Some Important Terms:\r\n\r\n 1. Synchronized means only one thread can modify a hash table at one point of time. Basically, it means that any thread before performing an update on a `Hashtable` will have to acquire a lock on the object while others will wait for lock to be released.\r\n 2. Fail-safe is relevant within the context of iterators. If an iterator has been created on a collection object and some other thread tries to modify the collection object &quot;structurally&quot;, a concurrent modification exception will be thrown. It is possible for other threads though to invoke `set` method since it doesn&#39;t modify the collection &quot;structurally&quot;. However, if prior to calling `set`, the collection has been modified structurally, `IllegalArgumentException` will be thrown.\r\n 3. Structurally modification means deleting or inserting element which could effectively change the structure of map.\r\n\r\n`HashMap` can be synchronized by\r\n\r\n`Map m = Collections.synchronizeMap(hashMap);`\r\n\r\n\r\n Map provides Collection views instead of direct support for iteration\r\n via Enumeration objects. Collection views greatly enhance the\r\n expressiveness of the interface, as discussed later in this section.\r\n Map allows you to iterate over keys, values, or key-value pairs;\r\n `Hashtable` does not provide the third option. Map provides a safe way\r\n to remove entries in the midst of iteration; `Hashtable` did not.\r\n Finally, Map fixes a minor deficiency in the `Hashtable` interface.\r\n `Hashtable` has a method called contains, which returns true if the\r\n `Hashtable` contains a given value. Given its name, you&#39;d expect this\r\n method to return true if the `Hashtable` contained a given key, because\r\n the key is the primary access mechanism for a `Hashtable`. The Map\r\n interface eliminates this source of confusion by renaming the method\r\n `containsValue`. Also, this improves the interface&#39;s consistency —\r\n `containsValue` parallels `containsKey`.\r\n\r\n&gt; [The Map Interface][1]\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/tutorial/collections/interfaces/map.html","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":1900,"user_id":283519,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/3e60903f1cfe943d420b047006475e66?s=128&d=identicon&r=PG","display_name":"pwes","link":"https://stackoverflow.com/users/283519/pwes"},"comment_count":0,"score":36,"creation_date":1326359836,"body_markdown":"Beside all the other important aspects already mentioned here, Collections API (e.g. Map interface) is being modified all the time to conform to the &quot;latest and greatest&quot; additions to Java spec.\r\n\r\nFor example, compare Java 5 Map iterating:\r\n\r\n    for (Elem elem : map.keys()) {\r\n      elem.doSth();\r\n    }\r\n\r\nversus the old Hashtable approach:\r\n\r\n    for (Enumeration en = htable.keys(); en.hasMoreElements(); ) {\r\n      Elem elem = (Elem) en.nextElement();\r\n      elem.doSth();\r\n    }\r\n\r\nIn Java 1.8 we are also promised to be able to construct and access HashMaps like in good old scripting languages:\r\n\r\n    Map&lt;String,Integer&gt; map = { &quot;orange&quot; : 12, &quot;apples&quot; : 15 };\r\n    map[&quot;apples&quot;];\r\n\r\n**Update:** No, they won&#39;t land in 1.8... :(\r\n\r\nhttps://stackoverflow.com/questions/13692213/are-project-coins-collection-enhancements-going-to-be-in-jdk8","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":18940,"user_id":1140748,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/bc97b9d2fe6e0197b6fff186af8133d4?s=128&d=identicon&r=PG","display_name":"alain.janinm","link":"https://stackoverflow.com/users/1140748/alain-janinm"},"comment_count":0,"score":30,"creation_date":1335707866,"body_markdown":"- [HashTable][1] is synchronized, if you are using it in a single thread you can use [HashMap][2], which is an unsynchronized version. Unsynchronized objects are often a little more performant. By the way if multiple threads access a HashMap concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally. \r\nYoun can wrap a unsynchronized map in a synchronized one using :\r\n\r\n        Map m = Collections.synchronizedMap(new HashMap(...));\r\n\r\n- HashTable can only contain non-null object as a key or as a value. HashMap can contain one null key and null values.\r\n\r\n- The iterators returned by Map are fail-fast, if the map is structurally modified at any time after the iterator is created, in any way except through the iterator&#39;s own remove method, the iterator will throw a `ConcurrentModificationException`. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. **Whereas** the Enumerations returned by Hashtable&#39;s keys and elements methods are not fail-fast. \r\n\r\n- HashTable and HashMap are member of the [Java Collections Framework][3] (since Java 2 platform v1.2, HashTable was retrofitted to implement the Map interface).\r\n\r\n- HashTable is considered legacy code, the documentation advise to use [ConcurrentHashMap][4] in place of Hashtable if a thread-safe highly-concurrent implementation is desired.\r\n\r\n- HashMap doesn&#39;t guarantee the order in which elements are returned. For HashTable I guess it&#39;s the same but I&#39;m not entirely sure, I don&#39;t find ressource that clearly state that.\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/7/docs/api/java/util/Hashtable.html\r\n  [2]: http://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html\r\n  [3]: http://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html\r\n  [4]: http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":22723,"user_id":6998684,"user_type":"registered","profile_image":"https://i.stack.imgur.com/cqR2Z.jpg?s=128&g=1","display_name":"IgorGanapolsky","link":"https://stackoverflow.com/users/6998684/igorganapolsky"},"score":4,"creation_date":1490382205}],"owner":{"user_type":"does_not_exist","display_name":"user1506047"},"comment_count":1,"score":3,"creation_date":1344515325,"body_markdown":"HashMaps gives you freedom of synchronization and debugging is lot more easier","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":1382,"user_id":819014,"user_type":"registered","accept_rate":69,"profile_image":"https://i.stack.imgur.com/e75sz.jpg?s=128&g=1","display_name":"Sujan","link":"https://stackoverflow.com/users/819014/sujan"},"comment_count":0,"score":66,"creation_date":1353389753,"body_markdown":"Take a look at this chart. It provides comparisons between different data structures along with `HashMap` and `Hashtable`. The comparison is precise, clear and easy to understand.\r\n\r\n[Java Collection Matrix][1]\r\n\r\n\r\n  [1]: https://docs.google.com/spreadsheet/pub?key=0Aq3e8BiuZY2wdFpHSlV0QzVmV1lUNHJidGd2b0Zrb3c&amp;single=true&amp;gid=0&amp;output=pdf","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":11472,"user_id":1142881,"user_type":"registered","accept_rate":99,"profile_image":"https://www.gravatar.com/avatar/99836a8fe8fb744bfa64210a2bf7cc23?s=128&d=identicon&r=PG&f=1","display_name":"SkyWalker","link":"https://stackoverflow.com/users/1142881/skywalker"},"comment_count":0,"score":30,"creation_date":1355129834,"body_markdown":"`HashMap` and `Hashtable` have significant algorithmic differences as well. No one has mentioned this before so that&#39;s why I am bringing it up. `HashMap` will construct a hash table with power of two size, increase it dynamically such that you have at most about eight elements (collisions) in any bucket and will stir the elements very well for general element types. However, the `Hashtable` implementation provides better and finer control over the hashing if you know what you are doing, namely you can fix the table size using e.g. the closest prime number to your values domain size and this will result in better performance than HashMap i.e. less collisions for some cases.\r\n\r\nSeparate from the obvious differences discussed extensively in this question, I see the Hashtable as a &quot;manual drive&quot; car where you have better control over the hashing and the HashMap as the &quot;automatic drive&quot; counterpart that will generally perform well.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":4688,"user_id":926520,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/cIuFJ.jpg?s=128&g=1","display_name":"Pankaj","link":"https://stackoverflow.com/users/926520/pankaj"},"score":4,"creation_date":1359407589},{"owner":{"reputation":217,"user_id":4358787,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-aJTIvCaPv1Q/AAAAAAAAAAI/AAAAAAAABsg/q0ysREaQC8M/photo.jpg?sz=128","display_name":"Gaurav","link":"https://stackoverflow.com/users/4358787/gaurav"},"score":0,"creation_date":1597753358}],"owner":{"reputation":2233,"user_id":1199342,"user_type":"registered","profile_image":"https://i.stack.imgur.com/0dSNt.jpg?s=128&g=1","display_name":"raja","link":"https://stackoverflow.com/users/1199342/raja"},"comment_count":2,"score":10,"creation_date":1358832679,"body_markdown":" 1. `Hashtable` is synchronized whereas `HashMap` is not.\r\n 2. Another difference is that iterator in the `HashMap` is fail-safe\r\n    while the enumerator for the `Hashtable` isn&#39;t. If you change the map\r\n    while iterating, you&#39;ll know.\r\n 3. `HashMap` permits null values in it, while `Hashtable` doesn&#39;t.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":3069,"user_id":2837359,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/9B4kt.jpg?s=128&g=1","display_name":"manikant gautam","link":"https://stackoverflow.com/users/2837359/manikant-gautam"},"score":0,"creation_date":1571222901}],"owner":{"reputation":225,"user_id":1203455,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6d0eac988ccb563c7c6e4483b90e6e8f?s=128&d=identicon&r=PG","display_name":"Ankit","link":"https://stackoverflow.com/users/1203455/ankit"},"comment_count":1,"score":11,"creation_date":1359639665,"body_markdown":"HashMap: It is a class available inside java.util package and it is used to store the element in key and value format.\r\n\r\nHashtable: It is a legacy class which is being recognized inside collection framework.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":2530,"user_id":541755,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/8ba5f8d1fd128c235860a1847f8356c3?s=128&d=identicon&r=PG","display_name":"jontejj","link":"https://stackoverflow.com/users/541755/jontejj"},"score":0,"creation_date":1438936190}],"owner":{"reputation":2530,"user_id":541755,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/8ba5f8d1fd128c235860a1847f8356c3?s=128&d=identicon&r=PG","display_name":"jontejj","link":"https://stackoverflow.com/users/541755/jontejj"},"comment_count":1,"score":10,"creation_date":1366037392,"body_markdown":"[HashTable][1] is a legacy class in the jdk that shouldn&#39;t be used anymore. Replace usages of it with [ConcurrentHashMap][2]. If you don&#39;t require thread safety, use [HashMap][3] which isn&#39;t [threadsafe][4] but faster and uses less memory.\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/6/docs/api/java/util/Hashtable.html\r\n  [2]: http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/ConcurrentHashMap.html\r\n  [3]: http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html\r\n  [4]: http://jsr-305.googlecode.com/svn/trunk/javadoc/javax/annotation/concurrent/ThreadSafe.html","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":22723,"user_id":6998684,"user_type":"registered","profile_image":"https://i.stack.imgur.com/cqR2Z.jpg?s=128&g=1","display_name":"IgorGanapolsky","link":"https://stackoverflow.com/users/6998684/igorganapolsky"},"score":0,"creation_date":1490382249},{"owner":{"reputation":504,"user_id":1162526,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6a421fb7795e8d606652e3375ebd7d42?s=128&d=identicon&r=PG","display_name":"pong","link":"https://stackoverflow.com/users/1162526/pong"},"score":0,"creation_date":1490384504}],"owner":{"reputation":504,"user_id":1162526,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6a421fb7795e8d606652e3375ebd7d42?s=128&d=identicon&r=PG","display_name":"pong","link":"https://stackoverflow.com/users/1162526/pong"},"comment_count":2,"score":5,"creation_date":1373882050,"body_markdown":"`HashMap` is emulated and therefore usable in `GWT client code` whereas `Hashtable` is not.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":443,"user_id":2476998,"user_type":"registered","accept_rate":17,"profile_image":"https://i.stack.imgur.com/XdENJ.jpg?s=128&g=1","display_name":"Ekanta Swain","link":"https://stackoverflow.com/users/2476998/ekanta-swain"},"comment_count":0,"score":3,"creation_date":1374594626,"body_markdown":"HashMap is a class  used to store the element in key and value format.it is not thread safe.\r\nbecause it is not synchronized .where as Hashtable is synchronized.Hashmap permits null but hastable doesn&#39;t permit null.\r\n","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":4336,"user_id":1923551,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/548a5f3d73fb0e60561d0996eeb01a61?s=128&d=identicon&r=PG","display_name":"user1923551","link":"https://stackoverflow.com/users/1923551/user1923551"},"comment_count":0,"score":14,"creation_date":1386765949,"body_markdown":"There are 5 basic differentiations with HashTable and HashMaps. \r\n\r\n1. Maps allows you to iterate and retrieve keys, values, and both key-value pairs as well, Where HashTable don&#39;t have all this capability. \r\n2. In Hashtable there is a function contains(), which is very confusing to use. Because the meaning of contains is slightly deviating. Whether it means contains key or contains  value? tough to understand. Same thing in Maps we have ContainsKey() and ContainsValue() functions, which are very easy to understand. \r\n3. In hashmap you can remove element while iterating, safely. where as it is not possible in hashtables.\r\n4. HashTables are by default synchronized, so it can be used with multiple threads easily. Where as HashMaps are not synchronized by default, so can be used with only single thread.  But you can still convert HashMap to synchronized by using Collections util class&#39;s synchronizedMap(Map&lt;K,V&gt; m) function.\r\n5. HashTable won&#39;t allow null keys or null values. Where as HashMap allows one null key, and multiple null values.\r\n\r\n","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":310,"user_id":2970123,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/d349682c1b31bd863be6bec8f68afc31?s=128&d=identicon&r=PG&f=1","display_name":"PetarMI","link":"https://stackoverflow.com/users/2970123/petarmi"},"comment_count":0,"score":3,"creation_date":1394204561,"body_markdown":"Since Hashtable in Java is a subclass of Dictionary class which is now obsolete due to the existence of Map Interface, it is not used anymore. Moreover, there isn&#39;t anything you can&#39;t do with a class that implements the Map Interface that you can do with a Hashtable. ","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":11243,"user_id":838841,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/gIfDD.jpg?s=128&g=1","display_name":"Shreyos Adikari","link":"https://stackoverflow.com/users/838841/shreyos-adikari"},"comment_count":0,"score":13,"creation_date":1395179216,"body_markdown":"My small contribution :\n\n&gt;1. First and most significant different between `Hashtable` and `HashMap` is that, `HashMap` is not thread-safe  while `Hashtable` is a thread-safe collection.\n&gt;\n&gt;2. Second important difference between `Hashtable` and `HashMap` is performance, since `HashMap` is not synchronized it perform better than `Hashtable`.\n&gt;\n&gt;3. Third difference on `Hashtable` vs `HashMap` is that `Hashtable` is obsolete class and you should be using `ConcurrentHashMap` in place of `Hashtable` in Java.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":35959,"user_id":115722,"user_type":"registered","accept_rate":85,"profile_image":"https://i.stack.imgur.com/6cak4.jpg?s=128&g=1","display_name":"pierrotlefou","link":"https://stackoverflow.com/users/115722/pierrotlefou"},"comment_count":0,"score":130,"creation_date":1395737881,"body_markdown":"Keep in mind that `HashTable` was legacy class before Java Collections Framework (JCF) was introduced and was later retrofitted to implement the `Map` interface. So was `Vector` and `Stack`. \r\n\r\n**Therefore, always stay away from them in new code since there always better alternative in the JCF** as others had pointed out.\r\n\r\n\r\n\r\nHere is the [Java collection cheat sheet][1] that you will find useful. Notice the gray block contains the legacy class HashTable,Vector and Stack.\r\n\r\n![enter image description here][2]\r\n\r\n\r\n  [1]: http://pierrchen.blogspot.com/2014/03/java-collections-framework-cheat-sheet.html\r\n  [2]: http://i.stack.imgur.com/PyflH.png","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":651,"user_id":785622,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7494e4ed24c6eaed510805297625678c?s=128&d=identicon&r=PG","display_name":"Ioannis Sermetziadis","link":"https://stackoverflow.com/users/785622/ioannis-sermetziadis"},"score":2,"creation_date":1508910152}],"owner":{"reputation":1573,"user_id":3230563,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/MnydM.jpg?s=128&g=1","display_name":"JegsVala","link":"https://stackoverflow.com/users/3230563/jegsvala"},"comment_count":1,"score":9,"creation_date":1404541677,"body_markdown":"**HashMap and HashTable**    \r\n\r\n - Some important points about HashMap and HashTable.\r\n       please read below details.\r\n\r\n1) Hashtable and Hashmap implement the java.util.Map interface\r\n2) Both Hashmap and Hashtable is the hash based collection. and working on hashing.\r\nso these are similarity of HashMap and HashTable.    \r\n     \r\n\r\n    \r\n\r\n - What is the difference between HashMap and HashTable?\r\n\r\n \r\n \r\n\r\n1) First difference is HashMap is not thread safe While HashTable is ThreadSafe  \r\n2) HashMap is performance wise better because it is not thread safe. while Hashtable performance wise is not better because it is thread safe. so multiple thread can not access Hashtable at the same time.\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":22723,"user_id":6998684,"user_type":"registered","profile_image":"https://i.stack.imgur.com/cqR2Z.jpg?s=128&g=1","display_name":"IgorGanapolsky","link":"https://stackoverflow.com/users/6998684/igorganapolsky"},"score":0,"creation_date":1490383640}],"owner":{"reputation":185,"user_id":2647077,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/67e9c85d8f18e3975c96789608e6f484?s=128&d=identicon&r=PG&f=1","display_name":"Night0","link":"https://stackoverflow.com/users/2647077/night0"},"comment_count":1,"score":5,"creation_date":1408269518,"body_markdown":"Old and classic topic, just want to add this helpful blog that explains this:\r\n\r\n[http://blog.manishchhabra.com/2012/08/the-5-main-differences-betwen-hashmap-and-hashtable/][1]\r\n\r\nBlog by Manish Chhabra\r\n\r\n&gt; The 5 main differences betwen HashMap and Hashtable\r\n&gt; \r\n&gt; HashMap and Hashtable both implement java.util.Map interface but there\r\n&gt; are some differences that Java developers must understand to write\r\n&gt; more efficient code. As of the Java 2 platform v1.2, Hashtable class\r\n&gt; was retrofitted to implement the Map interface, making it a member of\r\n&gt; the Java Collections Framework.\r\n&gt; \r\n&gt; 1. One of the major differences between HashMap and Hashtable is that HashMap is non-synchronized whereas Hashtable is synchronized, which\r\n&gt; means Hashtable is thread-safe and can be shared between multiple\r\n&gt; threads but HashMap cannot be shared between multiple threads without\r\n&gt; proper synchronization. Java 5 introduced ConcurrentHashMap which is\r\n&gt; an alternative of Hashtable and provides better scalability than\r\n&gt; Hashtable in Java.Synchronized means only one thread can modify a hash\r\n&gt; table at one point of time. Basically, it means that any thread before\r\n&gt; performing an update on a hashtable will have to acquire a lock on the\r\n&gt; object while others will wait for lock to be released.\r\n&gt; \r\n&gt; 2. The HashMap class is roughly equivalent to Hashtable, except that it permits nulls. (HashMap allows null values as key and value whereas\r\n&gt; Hashtable doesn’t allow nulls).\r\n&gt; \r\n&gt; 3. The third significant difference between HashMap vs Hashtable is that Iterator in the HashMap is a fail-fast iterator while the\r\n&gt; enumerator for the Hashtable is not and throw\r\n&gt; ConcurrentModificationException if any other Thread modifies the map\r\n&gt; structurally by adding or removing any element except Iterator’s own\r\n&gt; remove() method. But this is not a guaranteed behavior and will be\r\n&gt; done by JVM on best effort. This is also an important difference\r\n&gt; between Enumeration and Iterator in Java.\r\n&gt; \r\n&gt; 4. One more notable difference between Hashtable and HashMap is that because of thread-safety and synchronization Hashtable is much slower\r\n&gt; than HashMap if used in Single threaded environment. So if you don’t\r\n&gt; need synchronization and HashMap is only used by one thread, it out\r\n&gt; perform Hashtable in Java.\r\n&gt; \r\n&gt; 5. HashMap does not guarantee that the order of the map will remain constant over time.\r\n&gt; \r\n&gt; Note that HashMap can be synchronized by\r\n&gt; \r\n&gt;     Map m = Collections.synchronizedMap(hashMap);\r\n&gt; \r\n&gt; In Summary there are significant differences between Hashtable and\r\n&gt; HashMap in Java e.g. thread-safety and speed and based upon that only\r\n&gt; use Hashtable if you absolutely need thread-safety, if you are running\r\n&gt; Java 5 consider using ConcurrentHashMap in Java.\r\n\r\n\r\n  [1]: http://blog.manishchhabra.com/2012/08/the-5-main-differences-betwen-hashmap-and-hashtable/","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":505,"user_id":3981269,"user_type":"registered","accept_rate":31,"profile_image":"https://i.stack.imgur.com/6VAYD.jpg?s=128&g=1","display_name":"Rahul Tripathi","link":"https://stackoverflow.com/users/3981269/rahul-tripathi"},"comment_count":0,"score":17,"creation_date":1409138981,"body_markdown":"1.`Hashmap` and `HashTable` both store key and value. \r\n\r\n2.`Hashmap` can store one key as `null`. `Hashtable` can&#39;t store `null`.\r\n \r\n3.`HashMap` is not synchronized but `Hashtable` is synchronized. \r\n\r\n4.`HashMap` can be synchronized with `Collection.SyncronizedMap(map)`\r\n\r\n    Map hashmap = new HashMap();\r\n    \r\n    Map map = Collections.SyncronizedMap(hashmap);","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":68953,"user_id":3395198,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/CJtaZ.jpg?s=128&g=1","display_name":"IntelliJ Amiya","link":"https://stackoverflow.com/users/3395198/intellij-amiya"},"comment_count":0,"score":8,"creation_date":1423554271,"body_markdown":"**`Hashtable:`**\r\n\r\n**Hashtable** is a data structure that retains values of key-value pair. It doesn’t allow null for both the keys and the values. You will get a `NullPointerException` if you add null value. It is synchronized. So it comes with its cost. Only one thread can access **HashTable** at a particular time.\r\n\r\n**Example** :\r\n\r\n    import java.util.Map;\r\n    import java.util.Hashtable;\r\n     \r\n    public class TestClass {\r\n     \r\n        public static void main(String args[ ]) {\r\n        Map&lt;Integer,String&gt; states= new Hashtable&lt;Integer,String&gt;();\r\n        states.put(1, &quot;INDIA&quot;);\r\n        states.put(2, &quot;USA&quot;);\r\n         \r\n        states.put(3, null);    //will throw NullPointerEcxeption at runtime\r\n             \r\n        System.out.println(states.get(1));\r\n        System.out.println(states.get(2));\r\n    //  System.out.println(states.get(3));\r\n     \r\n        }\r\n    }\r\n\r\n**HashMap:**\r\n\r\n**HashMap** is like **Hashtable** but it also accepts key value pair. It allows null for both the keys and the values. Its performance better is better than `HashTable`, because it is `unsynchronized`.\r\n\r\n**Example:**\r\n\r\n    import java.util.HashMap;\r\n    import java.util.Map;\r\n     \r\n    public class TestClass {\r\n     \r\n        public static void main(String args[ ]) {\r\n        Map&lt;Integer,String&gt; states = new HashMap&lt;Integer,String&gt;();\r\n        states.put(1, &quot;INDIA&quot;);\r\n        states.put(2, &quot;USA&quot;);\r\n         \r\n        states.put(3, null);    // Okay\r\n        states.put(null,&quot;UK&quot;);\r\n         \r\n        System.out.println(states.get(1));\r\n        System.out.println(states.get(2));\r\n        System.out.println(states.get(3));\r\n     \r\n        }\r\n    }","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":497,"user_id":3527383,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/2b93ba8968d0e8acef777c21c43222fa?s=128&d=identicon&r=PG&f=1","display_name":"amitguptageek","link":"https://stackoverflow.com/users/3527383/amitguptageek"},"comment_count":0,"score":4,"creation_date":1452018942,"body_markdown":"**Synchronization or Thread Safe** :\r\n\r\nHash Map is not synchronized hence it is not thred safe and it cannot be shared between multiple threads without proper synchronized block whereas, Hashtable is synchronized and hence it is thread safe.\r\n\r\n**Null keys and null values** :\r\n\r\nHashMap allows one null key and any number of null values.Hashtable does not allow null keys or values. \r\n\r\n**Iterating the values**:\r\n\r\nIterator in the HashMap is a fail-fast iterator while the enumerator for the Hashtable is not and throw ConcurrentModificationException if any other Thread modifies the map structurally by adding or removing any element except Iterator’s own remove() method.\r\n\r\n**Superclass and Legacy** :\r\n\r\nHashMap is subclass of AbstractMap class whereas Hashtable is subclass of Dictionary class.\r\n\r\n**Performance** :\r\n\r\nAs HashMap is not synchronized it is faster as compared to Hashtable.\r\n\r\nRefer http://modernpathshala.com/Article/1020/difference-between-hashmap-and-hashtable-in-java for examples and interview questions and quiz related to  Java collection","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":3761,"user_id":3294902,"user_type":"registered","profile_image":"https://i.stack.imgur.com/PwpJj.jpg?s=128&g=1","display_name":"Kostas Chalkias","link":"https://stackoverflow.com/users/3294902/kostas-chalkias"},"comment_count":0,"score":16,"creation_date":1462374255,"body_markdown":"Apart from the differences already mentioned, it should be noted that since Java 8, `HashMap` dynamically replaces the Nodes (linked list) used in each bucket with TreeNodes (red-black tree), so that even if high hash collisions exist, the worst case *when searching* is\r\n\r\nO(log(n)) for `HashMap` **Vs** O(n) in `Hashtable`.\r\n\r\n*The aforementioned improvement has not been applied to `Hashtable` yet, but only to `HashMap`, `LinkedHashMap`, and `ConcurrentHashMap`.\r\n\r\nFYI, currently,\r\n\r\n - `TREEIFY_THRESHOLD = 8` : if a bucket contains more than 8 nodes, the linked list is transformed into a balanced tree.\r\n - `UNTREEIFY_THRESHOLD = 6` : when a bucket becomes too small (due to removal or resizing) the tree is converted back to linked list.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"comments":[{"owner":{"reputation":26593,"user_id":432903,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/YCgsh.jpg?s=128&g=1","display_name":"prayagupd","link":"https://stackoverflow.com/users/432903/prayagupd"},"score":0,"creation_date":1489372588},{"owner":{"reputation":22723,"user_id":6998684,"user_type":"registered","profile_image":"https://i.stack.imgur.com/cqR2Z.jpg?s=128&g=1","display_name":"IgorGanapolsky","link":"https://stackoverflow.com/users/6998684/igorganapolsky"},"score":0,"creation_date":1490383753},{"owner":{"reputation":6153,"user_id":5167682,"user_type":"registered","accept_rate":29,"profile_image":"https://i.stack.imgur.com/2vexc.jpg?s=128&g=1","display_name":"roottraveller","link":"https://stackoverflow.com/users/5167682/roottraveller"},"score":3,"creation_date":1490780916},{"owner":{"reputation":946,"user_id":2771888,"user_type":"registered","accept_rate":44,"profile_image":"https://www.gravatar.com/avatar/6d9ec8be7dd95a03549272c8e9f98e67?s=128&d=identicon&r=PG&f=1","display_name":"Abdul","link":"https://stackoverflow.com/users/2771888/abdul"},"score":0,"creation_date":1532916350},{"owner":{"reputation":61,"user_id":1029162,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b517c8a51684983910f304a18e26d299?s=128&d=identicon&r=PG","display_name":"thomas.schuerger","link":"https://stackoverflow.com/users/1029162/thomas-schuerger"},"score":0,"creation_date":1612451717}],"owner":{"reputation":6153,"user_id":5167682,"user_type":"registered","accept_rate":29,"profile_image":"https://i.stack.imgur.com/2vexc.jpg?s=128&g=1","display_name":"roottraveller","link":"https://stackoverflow.com/users/5167682/roottraveller"},"comment_count":5,"score":74,"creation_date":1488794984,"body_markdown":"There is many good answer already posted. I&#39;m adding few new points and summarizing it.\r\n\r\n`HashMap` and `Hashtable` both are used to store *data in key and value form*. Both are using hashing technique to store unique keys.\r\nBut there are many differences between HashMap and Hashtable classes that are given below.\r\n\r\n**HashMap**\t\r\n\r\n1. ``HashMap`` is non synchronized. It is not-thread safe and can&#39;t be shared between many threads without proper synchronization code. \t\r\n2. ``HashMap`` allows one null key and multiple null values.\t\r\n3. `HashMap` is a new class introduced in JDK 1.2.\t\r\n4. `HashMap` is fast.\t\r\n5. We can make the `HashMap` as synchronized by calling this code   \r\n         `Map m = Collections.synchronizedMap(HashMap);\t `  \r\n6. `HashMap` is traversed by Iterator.\t\r\n7. Iterator in `HashMap` is fail-fast.\t\r\n8. `HashMap` inherits AbstractMap class.\t\r\n\r\n**Hashtable**\r\n\r\n1. `Hashtable` is synchronized. It is thread-safe and can be shared with many threads.  \r\n2. `Hashtable` doesn&#39;t allow any null key or value.  \r\n3. `Hashtable` is a legacy class.  \r\n4. `Hashtable` is slow.  \r\n5. `Hashtable` is internally synchronized and can&#39;t be unsynchronized.  \r\n6. `Hashtable` is traversed by Enumerator and Iterator.  \r\n7. Enumerator in `Hashtable` is not fail-fast.  \r\n8. `Hashtable` inherits Dictionary class.\r\n\r\nFurther reading [What is difference between HashMap and Hashtable in Java?][1]\r\n\r\n\r\n[![enter image description here][2]][2]\r\n\r\n\r\n  [1]: http://javarevisited.blogspot.in/2010/10/difference-between-hashmap-and.html\r\n  [2]: https://i.stack.imgur.com/sDoih.png","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":341,"user_id":4226914,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9800dbafaba6194ea3168086213253ec?s=128&d=identicon&r=PG&f=1","display_name":"KIBOU Hassan","link":"https://stackoverflow.com/users/4226914/kibou-hassan"},"comment_count":0,"score":0,"creation_date":1492789315,"body_markdown":"The Hashtable class is synchronized, that is, it is designed to be used by applications that handle multiple or multithreaded process. Synchronized classes are less efficient in the classical case of an application to a process, so the Hashmap class is faster in general.\r\nThe HashTable class does not accept the Null value, either for keys or for values, while the HashMap class allows a single key with Null and as many as null as possible.","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":7252,"user_id":5081877,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/vG3nv.png?s=128&g=1","display_name":"Yash","link":"https://stackoverflow.com/users/5081877/yash"},"comment_count":0,"score":25,"creation_date":1515067124,"body_markdown":"*A [`Collection`](https://docs.oracle.com/javase/tutorial/collections/intro/index.html) — sometimes called a container — is simply an object that groups multiple elements into a single unit. `Collection`s are used to store, retrieve, manipulate, and communicate aggregate data. A collections framework &lt;sup&gt;[W](https://en.wikipedia.org/wiki/Java_collections_framework)&lt;/sup&gt; is a unified architecture for representing and manipulating collections.*\n\nThe `HashMap` &lt;sup&gt;[_`JDK1.2`_](https://docs.oracle.com/javase/7/docs/api/java/util/Hashtable.html)&lt;/sup&gt; and Hashtable &lt;sup&gt;[_`JDK1.0`_](https://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html)&lt;/sup&gt;, both are used to represent a group of objects that are represented in `&lt;Key, Value&gt;` pair. Each `&lt;Key, Value&gt;` pair is called `Entry` object. The collection of Entries is referred by the object of `HashMap` and `Hashtable`. Keys in a collection must be unique or distinctive. [as they are used to retrieve a mapped value a particular key. values in a collection can be duplicated.]\n\n-----\n\n**&#171;** **Superclass, Legacy and Collection Framework member**\n\n *Hashtable is a legacy class introduced in `JDK1.0`, which is a subclass of Dictionary class. From `JDK1.2` Hashtable is re-engineered to implement the [Map interface](https://docs.oracle.com/javase/tutorial/collections/interfaces/map.html) to make a member of collection framework. HashMap is a member of Java Collection Framework right from the beginning of its introduction in `JDK1.2`. HashMap is the subclass of the AbstractMap class.*\n\n&lt;!-- language-all: lang-java --&gt;\n \n    public class Hashtable&lt;K,V&gt; extends Dictionary&lt;K,V&gt; implements Map&lt;K,V&gt;, Cloneable, Serializable { ... }\n    \n    public class HashMap&lt;K,V&gt; extends AbstractMap&lt;K,V&gt; implements Map&lt;K,V&gt;, Cloneable, Serializable { ... }\n\n&lt;!-- language-all: lang-java --&gt;\n\n**&#171;** **Initial capacity and Load factor**\n\n *The capacity is the number of buckets in the hash table, and the initial capacity is simply the capacity at the time the hash table is created. Note that the hash table is open: in the case of a &quot;`hash `[`collision`](http://www.algolist.net/Data_structures/Hash_table/Chaining)&quot;, a single bucket stores multiple entries, which must be searched sequentially. The load factor is a measure of how full the hash table is allowed to get before its capacity is automatically increased.*\n    \n _HashMap constructs an empty hash table with the default initial capacity **(16)** and the default load factor (0.75). Where as Hashtable constructs empty hashtable with a default initial capacity **(11)** and load factor/fill ratio (0.75)._\n\n[![Hash Map &amp; Hashtable][1]][1]\n\n**&#171;** **Structural modification in case of hash collision**\n\n  _`HashMap`, `Hashtable` in case of hash collisions they store the map entries in linked lists. **From Java8 for `HashMap`** if hash bucket grows beyond a certain threshold, that bucket will switch from [`linked list of entries to a balanced tree`](http://openjdk.java.net/jeps/180). which improve worst-case performance from O(n) to O(log n). While converting the list to binary tree, hashcode is used as a branching variable. If there are two different hashcodes in the same bucket, one is considered bigger and goes to the right of the tree and other one to the left. But when both the hashcodes are equal, `HashMap` assumes that the keys are comparable, and compares the key to determine the direction so that some order can be maintained. It is a good practice to make the keys of `HashMap` [comparable](https://stackoverflow.com/a/31244596/5081877). On adding entries if bucket size reaches `TREEIFY_THRESHOLD = 8` convert linked list of entries to a balanced tree, on removing entries less than `TREEIFY_THRESHOLD`  and at most `UNTREEIFY_THRESHOLD = 6` will reconvert  balanced tree to linked list of entries. &lt;sup&gt;[Java 8 SRC](http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/HashMap.java#l244), [stackpost](https://stackoverflow.com/a/43911638/5081877)&lt;/sup&gt;_\n\n\n**&#171;** **Collection-view iteration, Fail-Fast and Fail-Safe**\n\n     \n        +--------------------+-----------+-------------+\n        |                    | Iterator  | Enumeration |\n        +--------------------+-----------+-------------+\n        | Hashtable          | fail-fast |    safe     |\n        +--------------------+-----------+-------------+\n        | HashMap            | fail-fast | fail-fast   |\n        +--------------------+-----------+-------------+\n        | ConcurrentHashMap  |   safe    |   safe      |\n        +--------------------+-----------+-------------+\n\n    \n[`Iterator`](https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html) is a fail-fast in nature. i.e it throws ConcurrentModificationException if a collection is modified while iterating other than it’s own remove() method. Where as [`Enumeration`](https://docs.oracle.com/javase/8/docs/api/java/util/Enumeration.html) is fail-safe in nature. It doesn’t throw any exceptions if a collection is modified while iterating. \n\nAccording to Java API Docs, Iterator is always preferred over the Enumeration. \n\n&lt;sub&gt;&lt;b&gt;NOTE:&lt;/b&gt; The functionality of Enumeration interface is duplicated by the Iterator interface. In addition, Iterator adds an optional remove operation, and has shorter method names. New implementations should consider using Iterator in preference to Enumeration.&lt;/sub&gt;\n\nIn [Java 5 introduced ConcurrentMap Interface](https://docs.oracle.com/javase/8/docs/technotes/guides/collections/changes5.html): `ConcurrentHashMap` - a highly concurrent, high-performance `ConcurrentMap` implementation backed by a hash table. This implementation never blocks when performing retrievals and allows the client to select the concurrency level for updates. It is intended as a drop-in replacement for `Hashtable`: in addition to implementing `ConcurrentMap`, it supports all of the &quot;legacy&quot; methods peculiar to `Hashtable`.\n    \n * Each `HashMapEntry`s value is [volatile](https://stackoverflow.com/a/47695757/5081877) thereby ensuring fine grain consistency for contended modifications and subsequent reads; each read reflects the most recently completed update\n    \n * Iterators and Enumerations are Fail Safe - reflecting the state at some point since the creation of iterator/enumeration; this allows for simultaneous reads and modifications at the cost of reduced consistency. They do not throw ConcurrentModificationException. However, iterators are designed to be used by only one thread at a time.\n\n * **_Like `Hashtable` but unlike `HashMap`, this class does not allow null to be used as a key or value._**\n    \n&lt;!-- language-all: lang-java --&gt;\n\n    public static void main(String[] args) {\n\n        //HashMap&lt;String, Integer&gt; hash = new HashMap&lt;String, Integer&gt;();\n        Hashtable&lt;String, Integer&gt; hash = new Hashtable&lt;String, Integer&gt;();\n        //ConcurrentHashMap&lt;String, Integer&gt; hash = new ConcurrentHashMap&lt;&gt;();\n        \n        new Thread() {\n            @Override public void run() {\n                try {\n                    for (int i = 10; i &lt; 20; i++) {\n                        sleepThread(1);\n                        System.out.println(&quot;T1 :- Key&quot;+i);\n                        hash.put(&quot;Key&quot;+i, i);\n                    }\n                    System.out.println( System.identityHashCode( hash ) );\n                } catch ( Exception e ) {\n                    e.printStackTrace();\n                }\n            }\n        }.start();\n        new Thread() {\n            @Override public void run() {\n                try {\n                    sleepThread(5);\n                    // ConcurrentHashMap  traverse using Iterator, Enumeration is Fail-Safe.\n                    \n                    // Hashtable traverse using Enumeration is Fail-Safe, Iterator is Fail-Fast.\n                    for (Enumeration&lt;String&gt; e = hash.keys(); e.hasMoreElements(); ) {\n                        sleepThread(1);\n                        System.out.println(&quot;T2 : &quot;+ e.nextElement());\n                    }\n                    \n                    // HashMap traverse using Iterator, Enumeration is Fail-Fast.\n                    /*\n                    for (Iterator&lt; Entry&lt;String, Integer&gt; &gt; it = hash.entrySet().iterator(); it.hasNext(); ) {\n                        sleepThread(1);\n                        System.out.println(&quot;T2 : &quot;+ it.next());\n                        // ConcurrentModificationException at java.util.Hashtable$Enumerator.next\n                    }\n                    */\n                    \n                    /*\n                    Set&lt; Entry&lt;String, Integer&gt; &gt; entrySet = hash.entrySet();\n                    Iterator&lt; Entry&lt;String, Integer&gt; &gt; it = entrySet.iterator();\n                    Enumeration&lt;Entry&lt;String, Integer&gt;&gt; entryEnumeration = Collections.enumeration( entrySet );\n                    while( entryEnumeration.hasMoreElements() ) {\n                        sleepThread(1);\n                        Entry&lt;String, Integer&gt; nextElement = entryEnumeration.nextElement();\n                        System.out.println(&quot;T2 : &quot;+ nextElement.getKey() +&quot; : &quot;+ nextElement.getValue() );\n                        //java.util.ConcurrentModificationException at java.util.HashMap$HashIterator.nextNode\n                        //                                          at java.util.HashMap$EntryIterator.next\n                        //                                          at java.util.Collections$3.nextElement\n                    }\n                    */\n                } catch ( Exception e ) {\n                    e.printStackTrace();\n                }\n            }\n        }.start();\n        \n        Map&lt;String, String&gt; unmodifiableMap = Collections.unmodifiableMap( map );\n        try {\n            unmodifiableMap.put(&quot;key4&quot;, &quot;unmodifiableMap&quot;);\n        } catch (java.lang.UnsupportedOperationException e) {\n            System.err.println(&quot;UnsupportedOperationException : &quot;+ e.getMessage() );\n        }\n    }\n    static void sleepThread( int sec ) {\n        try {\n            Thread.sleep( 1000 * sec );\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n    \n&lt;!-- language-all: lang-java --&gt;\n\n**&#171;** **Null Keys And Null Values**\n\n  `HashMap` allows maximum one null key and any number of null values. Where as `Hashtable` doesn’t allow even a single null key and null value, if the key or value null is then it throws NullPointerException. &lt;sup&gt;[Example](https://stackoverflow.com/a/31243387/5081877)&lt;/sup&gt;\n  \n**&#171;** **Synchronized, Thread Safe**\n\n  `Hashtable` is internally synchronized. Therefore, it is very much safe to use `Hashtable` in multi threaded applications. Where as `HashMap` is not internally synchronized. Therefore, it is not safe to use `HashMap` in multi threaded applications without external synchronization. You can externally synchronize `HashMap` using `Collections.synchronizedMap()` method.\n\n**&#171;** **Performance**\n\n  As `Hashtable` is internally synchronized, this makes `Hashtable` slightly slower than the `HashMap`.\n\n-----\n\n@See\n\n * [A red–black tree is a kind of self-balancing binary search tree](https://en.wikipedia.org/wiki/Red%E2%80%93black_tree)\n * [Performance Improvement for `HashMap` in Java 8](https://www.nagarro.com/de/perspectives/post/24/performance-improvement-for-hashmap-in-java-8)\n\n\n  [1]: https://i.stack.imgur.com/AerdR.png","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"owner":{"reputation":1592,"user_id":7888956,"user_type":"registered","profile_image":"https://i.stack.imgur.com/vfzrr.png?s=128&g=1","display_name":"DeC","link":"https://stackoverflow.com/users/7888956/dec"},"comment_count":0,"score":7,"creation_date":1572435142,"body_markdown":"**HashMap** and **Hashtable** both are used to store data in key and value form. Both are using hashing technique to store unique keys.\r\nut there are many differences between HashMap and Hashtable classes that are given below.\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/mLpKn.png","title":"What are the differences between a HashMap and a Hashtable in Java?"}],"owner":{"reputation":46759,"user_id":4316,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/dc91d4e8c035283347ba673168770cea?s=128&d=identicon&r=PG","display_name":"dmanxiii","link":"https://stackoverflow.com/users/4316/dmanxiii"},"comment_count":2,"is_answered":true,"answer_count":35,"score":3902,"creation_date":1220386320,"question_id":40471,"body_markdown":"What are the differences between a [`HashMap`][map] and a [`Hashtable`][table] in Java?\r\n\r\nWhich is more efficient for non-threaded applications?\r\n\r\n[map]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html\r\n[table]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Hashtable.html","link":"https://stackoverflow.com/questions/40471/what-are-the-differences-between-a-hashmap-and-a-hashtable-in-java","title":"What are the differences between a HashMap and a Hashtable in Java?"},{"tags":["java","arrays","arraylist","type-conversion"],"comments":[{"owner":{"reputation":1017,"user_id":601362,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7dbcace56bbe82f6aec2ef93e4e81a00?s=128&d=identicon&r=PG","display_name":"MarekM","link":"https://stackoverflow.com/users/601362/marekm"},"score":55,"creation_date":1491913094},{"owner":{"reputation":2568,"user_id":6790326,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/--0W1SyomlMg/AAAAAAAAAAI/AAAAAAAAAGY/w5Ja9a3U4zE/photo.jpg?sz=128","display_name":"Dorian Gray","link":"https://stackoverflow.com/users/6790326/dorian-gray"},"score":23,"creation_date":1507789704},{"owner":{"reputation":1017,"user_id":601362,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7dbcace56bbe82f6aec2ef93e4e81a00?s=128&d=identicon&r=PG","display_name":"MarekM","link":"https://stackoverflow.com/users/601362/marekm"},"score":5,"creation_date":1508242161},{"owner":{"reputation":2568,"user_id":6790326,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/--0W1SyomlMg/AAAAAAAAAAI/AAAAAAAAAGY/w5Ja9a3U4zE/photo.jpg?sz=128","display_name":"Dorian Gray","link":"https://stackoverflow.com/users/6790326/dorian-gray"},"score":16,"creation_date":1533329990}],"answers":[{"comments":[{"owner":{"reputation":5521,"user_id":8434,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2524d041536b1535d33c68ffa3c3ab12?s=128&d=identicon&r=PG","display_name":"Calum","link":"https://stackoverflow.com/users/8434/calum"},"score":382,"creation_date":1222872107},{"owner":{"reputation":10824,"user_id":2352432,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/034be0844072773b847cdddac9b09c0a?s=128&d=identicon&r=PG","display_name":"Pool","link":"https://stackoverflow.com/users/2352432/pool"},"score":150,"creation_date":1309360700},{"owner":{"reputation":6328,"user_id":561690,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/b086b4bae811b9be7f62d8d11a29c0be?s=128&d=identicon&r=PG","display_name":"Code Jockey","link":"https://stackoverflow.com/users/561690/code-jockey"},"score":258,"creation_date":1317063894},{"owner":{"reputation":2199,"user_id":1699769,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6008a61ce87e9f69d6ed395cdf9b7987?s=128&d=identicon&r=PG","display_name":"markbaldy","link":"https://stackoverflow.com/users/1699769/markbaldy"},"score":14,"creation_date":1353648527},{"owner":{"reputation":703,"user_id":694000,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/d6dade536c4c6909132884297c8079fd?s=128&d=identicon&r=PG","display_name":"Adam","link":"https://stackoverflow.com/users/694000/adam"},"score":135,"creation_date":1358911733},{"owner":{"user_type":"does_not_exist","display_name":"user3458"},"score":16,"creation_date":1361375285},{"owner":{"reputation":16327,"user_id":1235867,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/1f2891fef756bf043d9b576af26bc021?s=128&d=identicon&r=PG","display_name":"lbalazscs","link":"https://stackoverflow.com/users/1235867/lbalazscs"},"score":16,"creation_date":1361481199},{"owner":{"reputation":703,"user_id":694000,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/d6dade536c4c6909132884297c8079fd?s=128&d=identicon&r=PG","display_name":"Adam","link":"https://stackoverflow.com/users/694000/adam"},"score":5,"creation_date":1361509681},{"owner":{"reputation":16327,"user_id":1235867,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/1f2891fef756bf043d9b576af26bc021?s=128&d=identicon&r=PG","display_name":"lbalazscs","link":"https://stackoverflow.com/users/1235867/lbalazscs"},"score":87,"creation_date":1361526069},{"owner":{"reputation":1513,"user_id":666583,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0183a50288bea023fd56b6ff59dd86c9?s=128&d=identicon&r=PG&f=1","display_name":"AndrewF","link":"https://stackoverflow.com/users/666583/andrewf"},"score":8,"creation_date":1363155525},{"owner":{"user_type":"does_not_exist","display_name":"user3458"},"score":4,"creation_date":1363355877},{"owner":{"reputation":7579,"user_id":1119997,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/4a485e339c4de35684dfe31dc758041e?s=128&d=identicon&r=PG","display_name":"tuxdna","link":"https://stackoverflow.com/users/1119997/tuxdna"},"score":6,"creation_date":1373267344},{"owner":{"reputation":26548,"user_id":281545,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/e9afcf11d81904cdb5677c13d249b6c5?s=128&d=identicon&r=PG","display_name":"Mr_and_Mrs_D","link":"https://stackoverflow.com/users/281545/mr-and-mrs-d"},"score":4,"creation_date":1397087742},{"owner":{"reputation":10129,"user_id":253938,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/f56facf7921f4e2fbc9a38ca609cbf6b?s=128&d=identicon&r=PG","display_name":"RenniePet","link":"https://stackoverflow.com/users/253938/renniepet"},"score":4,"creation_date":1425115464},{"owner":{"reputation":1472,"user_id":3281476,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/RaC33.jpg?s=128&g=1","display_name":"Srini","link":"https://stackoverflow.com/users/3281476/srini"},"score":4,"creation_date":1432735771},{"owner":{"reputation":44507,"user_id":106104,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG","display_name":"user253751","link":"https://stackoverflow.com/users/106104/user253751"},"score":1,"creation_date":1443666898},{"owner":{"reputation":5265,"user_id":431698,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/59b288f9d5793f1c114f30837ae0ec44?s=128&d=identicon&r=PG","display_name":"Jingguo Yao","link":"https://stackoverflow.com/users/431698/jingguo-yao"},"score":4,"creation_date":1483088937},{"owner":{"reputation":732,"user_id":2302884,"user_type":"registered","profile_image":"https://i.stack.imgur.com/eNF0u.jpg?s=128&g=1","display_name":"muzzlator","link":"https://stackoverflow.com/users/2302884/muzzlator"},"score":1,"creation_date":1511917803},{"owner":{"reputation":1154,"user_id":9224219,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9ff7270b7f8573e9f24f0eadd0a7b431?s=128&d=identicon&r=PG&f=1","display_name":"Datz","link":"https://stackoverflow.com/users/9224219/datz"},"score":4,"creation_date":1522133139}],"owner":{"reputation":52241,"user_id":22850,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/955fd033a0583419b2e2b7d2515e2e92?s=128&d=identicon&r=PG","display_name":"Tom","link":"https://stackoverflow.com/users/22850/tom"},"comment_count":19,"score":4761,"creation_date":1222871952,"body_markdown":"    new ArrayList&lt;&gt;(Arrays.asList(array));","title":"Create ArrayList from array"},{"owner":{"reputation":366115,"user_id":1288,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/fc763c6ff6c160ddad05741e87e517b6?s=128&d=identicon&r=PG","display_name":"Bill the Lizard","link":"https://stackoverflow.com/users/1288/bill-the-lizard"},"comment_count":0,"score":216,"creation_date":1222872046,"body_markdown":"    new ArrayList&lt;T&gt;(Arrays.asList(myArray));\r\n\r\nMake sure that `myArray` is the same type as `T`. You&#39;ll get a compiler error if you try to create a `List&lt;Integer&gt;` from an array of `int`, for example.","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":366115,"user_id":1288,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/fc763c6ff6c160ddad05741e87e517b6?s=128&d=identicon&r=PG","display_name":"Bill the Lizard","link":"https://stackoverflow.com/users/1288/bill-the-lizard"},"score":8,"creation_date":1222872398},{"owner":{"reputation":15821,"user_id":5382,"user_type":"registered","profile_image":"https://i.stack.imgur.com/s3eFh.jpg?s=128&g=1","display_name":"Mikezx6r","link":"https://stackoverflow.com/users/5382/mikezx6r"},"score":16,"creation_date":1222872423},{"owner":{"reputation":13693,"user_id":80701,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/d9391c16473dad5e699e1ca91b874663?s=128&d=identicon&r=PG","display_name":"monksy","link":"https://stackoverflow.com/users/80701/monksy"},"score":1,"creation_date":1255128509},{"owner":{"reputation":27490,"user_id":85421,"user_type":"registered","profile_image":"https://i.stack.imgur.com/kKvXH.gif?s=128&g=1","display_name":"user85421","link":"https://stackoverflow.com/users/85421/user85421"},"score":12,"creation_date":1259932240},{"owner":{"reputation":1093,"user_id":244365,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/4143c51b65350247de84a33eb8a9b46c?s=128&d=identicon&r=PG","display_name":"PaulMurrayCbr","link":"https://stackoverflow.com/users/244365/paulmurraycbr"},"score":1,"creation_date":1367745818},{"owner":{"reputation":80637,"user_id":296974,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/0e26cfe3ac75cd582ca200fbc6fa0421?s=128&d=identicon&r=PG","display_name":"glglgl","link":"https://stackoverflow.com/users/296974/glglgl"},"score":1,"creation_date":1424624726},{"owner":{"reputation":5265,"user_id":431698,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/59b288f9d5793f1c114f30837ae0ec44?s=128&d=identicon&r=PG","display_name":"Jingguo Yao","link":"https://stackoverflow.com/users/431698/jingguo-yao"},"score":0,"creation_date":1454569535}],"owner":{"reputation":98019,"user_id":18511,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/c621039e41aef415ad25054da3bf3f9a?s=128&d=identicon&r=PG","display_name":"Kip","link":"https://stackoverflow.com/users/18511/kip"},"comment_count":7,"score":86,"creation_date":1222872302,"body_markdown":"You probably just need a List, not an ArrayList.  In that case you can just do:\r\n\r\n    List&lt;Element&gt; arraylist = Arrays.asList(array);\r\n\r\n","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":905,"user_id":713495,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/549ee68ce18db501ca31dbf646ffedc4?s=128&d=identicon&r=PG","display_name":"damned","link":"https://stackoverflow.com/users/713495/damned"},"score":7,"creation_date":1337739441},{"owner":{"reputation":64779,"user_id":7671,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/4b6b8c8935300db9089a9277d7e76a88?s=128&d=identicon&r=PG","display_name":"Alex Miller","link":"https://stackoverflow.com/users/7671/alex-miller"},"score":37,"creation_date":1337778937},{"owner":{"reputation":64779,"user_id":7671,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/4b6b8c8935300db9089a9277d7e76a88?s=128&d=identicon&r=PG","display_name":"Alex Miller","link":"https://stackoverflow.com/users/7671/alex-miller"},"score":29,"creation_date":1337779274},{"owner":{"reputation":1997,"user_id":867620,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/85a3d947035a6a73b823b6fee2ccb933?s=128&d=identicon&r=PG","display_name":"sethro","link":"https://stackoverflow.com/users/867620/sethro"},"score":9,"creation_date":1352921608},{"owner":{"reputation":40850,"user_id":3093,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/98e69195c08f2c104c37137e33b9fc59?s=128&d=identicon&r=PG","display_name":"Dave L.","link":"https://stackoverflow.com/users/3093/dave-l"},"score":11,"creation_date":1466795804},{"owner":{"reputation":2517,"user_id":5908433,"user_type":"registered","accept_rate":100,"profile_image":"https://lh3.googleusercontent.com/-Z7z3juhMtXY/AAAAAAAAAAI/AAAAAAAAABw/Ua09V1L6sYc/photo.jpg?sz=128","display_name":"Dmitriy Fialkovskiy","link":"https://stackoverflow.com/users/5908433/dmitriy-fialkovskiy"},"score":2,"creation_date":1565004613}],"owner":{"reputation":64779,"user_id":7671,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/4b6b8c8935300db9089a9277d7e76a88?s=128&d=identicon&r=PG","display_name":"Alex Miller","link":"https://stackoverflow.com/users/7671/alex-miller"},"comment_count":6,"score":947,"creation_date":1222875546,"body_markdown":"Given:\r\n\r\n    Element[] array = new Element[] { new Element(1), new Element(2), new Element(3) };\r\n\r\nThe simplest answer is to do:\r\n\r\n    List&lt;Element&gt; list = Arrays.asList(array);\r\n\r\nThis will work fine.  But some caveats:\r\n\r\n 1. The list returned from asList has **fixed size**.  So, if you want to be able to add or remove elements from the returned list in your code, you&#39;ll need to wrap it in a new `ArrayList`.  Otherwise you&#39;ll get an `UnsupportedOperationException`.\r\n 2. The list returned from `asList()` is backed by the original array.  If you modify the original array, the list will be modified as well.  This may be surprising. \r\n","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":14404,"user_id":755804,"user_type":"registered","accept_rate":20,"profile_image":"https://www.gravatar.com/avatar/f26c355432581b8b1fc56f8585732d1a?s=128&d=identicon&r=PG","display_name":"18446744073709551615","link":"https://stackoverflow.com/users/755804/18446744073709551615"},"score":8,"creation_date":1468337361}],"owner":{"reputation":58271,"user_id":60518,"user_type":"registered","accept_rate":59,"profile_image":"https://www.gravatar.com/avatar/c5060835472688a132ffeb67a05803c1?s=128&d=identicon&r=PG","display_name":"Tim B&#252;the","link":"https://stackoverflow.com/users/60518/tim-b%c3%bcthe"},"comment_count":1,"score":241,"creation_date":1308742223,"body_markdown":"Since this question is pretty old, it surprises me that nobody suggested the simplest form yet:\r\n\r\n    List&lt;Element&gt; arraylist = Arrays.asList(new Element(1), new Element(2), new Element(3));\r\n\r\nAs of Java 5, `Arrays.asList()` takes a varargs parameter and you don&#39;t have to construct the array explicitly.\r\n\r\n","title":"Create ArrayList from array"},{"owner":{"reputation":11781,"user_id":280783,"user_type":"registered","accept_rate":91,"profile_image":"https://www.gravatar.com/avatar/4d69fc624c9269c11b835ad1481dd794?s=128&d=identicon&r=PG","display_name":"Peter Tseng","link":"https://stackoverflow.com/users/280783/peter-tseng"},"comment_count":0,"score":106,"creation_date":1333495255,"body_markdown":"Another way (although essentially equivalent to the `new ArrayList(Arrays.asList(array))` solution performance-wise:\r\n\r\n    Collections.addAll(arraylist, array);","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":51155,"user_id":697449,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/0d825a4fb8f4417045815f4c921aa0cc?s=128&d=identicon&r=PG","display_name":"Paul Bellora","link":"https://stackoverflow.com/users/697449/paul-bellora"},"score":29,"creation_date":1357786447},{"owner":{"reputation":4998,"user_id":2088822,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/c96b4e7fa4e410b2df9513f79cffd0fe?s=128&d=identicon&r=PG","display_name":"afsantos","link":"https://stackoverflow.com/users/2088822/afsantos"},"score":2,"creation_date":1368711691},{"owner":{"reputation":40481,"user_id":581205,"user_type":"registered","accept_rate":72,"profile_image":"https://www.gravatar.com/avatar/2be517e3b51c48a1c514627a87a1dd53?s=128&d=identicon&r=PG&f=1","display_name":"maaartinus","link":"https://stackoverflow.com/users/581205/maaartinus"},"score":1,"creation_date":1574156127}],"owner":{"reputation":21345,"user_id":453590,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/fbefde65228a384a59eb49e8a46c4e7b?s=128&d=identicon&r=PG","display_name":"haylem","link":"https://stackoverflow.com/users/453590/haylem"},"comment_count":3,"score":363,"creation_date":1353086201,"body_markdown":"_&lt;sup&gt;(old thread, but just 2 cents as none mention Guava or other libs and some other details)&lt;/sup&gt;_\r\n\r\n# If You Can, Use Guava\r\n\r\nIt&#39;s worth pointing out the Guava way, which greatly simplifies these shenanigans:\r\n\r\n## Usage\r\n\r\n### For an Immutable List\r\n\r\nUse the [`ImmutableList`][1] class and its [`of()`][2] and [`copyOf()`][3] factory methods &lt;sup&gt;(elements can&#39;t be null)&lt;/sup&gt;:\r\n\r\n    List&lt;String&gt; il = ImmutableList.of(&quot;string&quot;, &quot;elements&quot;);  // from varargs\r\n    List&lt;String&gt; il = ImmutableList.copyOf(aStringArray);      // from array\r\n\r\n### For A Mutable List\r\n\r\nUse the [`Lists`][4] class and its [`newArrayList()`][5] factory methods:\r\n\r\n    List&lt;String&gt; l1 = Lists.newArrayList(anotherListOrCollection);    // from collection\r\n    List&lt;String&gt; l2 = Lists.newArrayList(aStringArray);               // from array\r\n    List&lt;String&gt; l3 = Lists.newArrayList(&quot;or&quot;, &quot;string&quot;, &quot;elements&quot;); // from varargs\r\n\r\nPlease also note the similar methods for other data structures in other classes, for instance in [`Sets`][6].\r\n\r\n## [Why Guava?][7]\r\n\r\nThe main attraction could be to reduce the clutter due to generics for type-safety, as the use of the Guava [factory methods][8] allow the types to be inferred most of the time. However, this argument holds less water since Java 7 arrived with the new diamond operator.\r\n\r\nBut it&#39;s not the only reason (and Java 7 isn&#39;t everywhere yet): the shorthand syntax is also very handy, and the methods initializers, as seen above, allow to write more expressive code. You do in one Guava call what takes 2 with the current Java Collections.\r\n\r\n-----\r\n\r\n# If You Can&#39;t...\r\n\r\n## For an Immutable List\r\n\r\nUse the JDK&#39;s [`Arrays`][9] class and its [`asList()`][10] factory method, wrapped with a [`Collections.unmodifiableList()`][11]:\r\n\r\n    List&lt;String&gt; l1 = Collections.unmodifiableList(Arrays.asList(anArrayOfElements));\r\n    List&lt;String&gt; l2 = Collections.unmodifiableList(Arrays.asList(&quot;element1&quot;, &quot;element2&quot;));\r\n\r\nNote that the returned type for `asList()` is a `List` using a concrete `ArrayList` implementation, but **it is NOT** `java.util.ArrayList`. It&#39;s an inner type, which emulates an `ArrayList` but actually directly references the passed array and makes it &quot;write through&quot; (modifications are reflected in the array).\r\n\r\nIt forbids modifications through some of the `List` API&#39;s methods by way of simply extending an `AbstractList` (so, adding or removing elements is unsupported), however it allows calls to `set()` to override elements. Thus this list isn&#39;t truly immutable and a call to `asList()` should be wrapped with `Collections.unmodifiableList()`.\r\n\r\nSee the next step if you need a mutable list.\r\n\r\n## For a Mutable List\r\n\r\nSame as above, but wrapped with an actual `java.util.ArrayList`:\r\n\r\n    List&lt;String&gt; l1  = new ArrayList&lt;String&gt;(Arrays.asList(array));    // Java 1.5 to 1.6\r\n    List&lt;String&gt; l1b = new ArrayList&lt;&gt;(Arrays.asList(array));          // Java 1.7+\r\n    List&lt;String&gt; l2  = new ArrayList&lt;String&gt;(Arrays.asList(&quot;a&quot;, &quot;b&quot;)); // Java 1.5 to 1.6\r\n    List&lt;String&gt; l2b = new ArrayList&lt;&gt;(Arrays.asList(&quot;a&quot;, &quot;b&quot;));       // Java 1.7+\r\n\r\n----\r\n\r\n# For Educational Purposes: The Good ol&#39; Manual Way\r\n\r\n    // for Java 1.5+\r\n    static &lt;T&gt; List&lt;T&gt; arrayToList(final T[] array) {\r\n      final List&lt;T&gt; l = new ArrayList&lt;T&gt;(array.length);\r\n\r\n      for (final T s : array) {\r\n        l.add(s);\r\n      }\r\n      return (l);\r\n    }\r\n\r\n    // for Java &lt; 1.5 (no generics, no compile-time type-safety, boo!)\r\n    static List arrayToList(final Object[] array) {\r\n      final List l = new ArrayList(array.length);\r\n\r\n      for (int i = 0; i &lt; array.length; i++) {\r\n        l.add(array[i]);\r\n      }\r\n      return (l);\r\n    }\r\n\r\n\r\n   [1]:https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java\r\n  [2]:https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L101\r\n  [3]: https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L225\r\n  [4]: https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java\r\n  [5]: https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java#L87\r\n  [6]: https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Sets.java\r\n  [7]: http://code.google.com/p/guava-libraries/wiki/GuavaExplained\r\n  [8]: http://code.google.com/p/guava-libraries/wiki/CollectionUtilitiesExplained#Static_constructors\r\n  [9]: http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html\r\n  [10]: http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#asList%28T...%29\r\n  [11]: http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#unmodifiableList%28java.util.List%29","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":2420,"user_id":410342,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/af5f0b031000821a8c179733db0a2f9e?s=128&d=identicon&r=PG","display_name":"Shotgun Ninja","link":"https://stackoverflow.com/users/410342/shotgun-ninja"},"score":12,"creation_date":1428506268}],"owner":{"reputation":12457,"user_id":2798291,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/3564949ed84a4fa80017829e43b0d588?s=128&d=identicon&r=PG&f=1","display_name":"TwoThe","link":"https://stackoverflow.com/users/2798291/twothe"},"comment_count":1,"score":-22,"creation_date":1380923404,"body_markdown":"There is another option if your goal is to generate a fixed list at runtime, which is as simple as it is effective:\r\n\r\n    static final ArrayList&lt;Element&gt; myList = generateMyList();\r\n\r\n    private static ArrayList&lt;Element&gt; generateMyList() {\r\n      final ArrayList&lt;Element&gt; result = new ArrayList&lt;&gt;();\r\n      result.add(new Element(1));\r\n      result.add(new Element(2));\r\n      result.add(new Element(3));\r\n      result.add(new Element(4));\r\n      return result;\r\n    }\r\n&lt;br&gt;\r\nThe benefit of using this pattern is, that the list is for once generated very intuitively and therefore is very easy to modify even with large lists or complex initialization, while on the other hand always contains the same Elements on every actual run of the program (unless you change it at a later point of course).","title":"Create ArrayList from array"},{"owner":{"reputation":13353,"user_id":874275,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/740c1b9fae33eb899dc2770eb4170a73?s=128&d=identicon&r=PG","display_name":"Bohdan","link":"https://stackoverflow.com/users/874275/bohdan"},"comment_count":0,"score":32,"creation_date":1389074685,"body_markdown":"    // Guava\r\n    import com.google.common.collect.ListsLists\r\n    ...\r\n    List&lt;String&gt; list = Lists.newArrayList(aStringArray); \r\n\r\n","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":80637,"user_id":296974,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/0e26cfe3ac75cd582ca200fbc6fa0421?s=128&d=identicon&r=PG","display_name":"glglgl","link":"https://stackoverflow.com/users/296974/glglgl"},"score":1,"creation_date":1424624605},{"owner":{"reputation":6549,"user_id":968988,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/0073b7f7a38dd1bce045793606c7a403?s=128&d=identicon&r=PG","display_name":"Nicolas Zozol","link":"https://stackoverflow.com/users/968988/nicolas-zozol"},"score":0,"creation_date":1424635177},{"owner":{"reputation":80637,"user_id":296974,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/0e26cfe3ac75cd582ca200fbc6fa0421?s=128&d=identicon&r=PG","display_name":"glglgl","link":"https://stackoverflow.com/users/296974/glglgl"},"score":1,"creation_date":1424642189}],"owner":{"reputation":6549,"user_id":968988,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/0073b7f7a38dd1bce045793606c7a403?s=128&d=identicon&r=PG","display_name":"Nicolas Zozol","link":"https://stackoverflow.com/users/968988/nicolas-zozol"},"comment_count":3,"score":45,"creation_date":1390050102,"body_markdown":"If you use :\r\n\r\n    new ArrayList&lt;T&gt;(Arrays.asList(myArray));\r\n\r\nyou **may** create **and fill** two lists ! Filling twice a big list is exactly what you don&#39;t want to do because it will create another `Object[]` array each time the capacity needs to be extended.\r\n\r\nFortunately the JDK implementation is fast and `Arrays.asList(a[])` is very well done. It create a kind of ArrayList named Arrays.ArrayList where the Object[] data points directly to the array.\r\n\r\n    // in Arrays\r\n    @SafeVarargs\r\n    public static &lt;T&gt; List&lt;T&gt; asList(T... a) {\r\n        return new ArrayList&lt;&gt;(a);\r\n    }\r\n    //still in Arrays, creating a private unseen class\r\n    private static class ArrayList&lt;E&gt;\r\n         \r\n        private final E[] a;    \r\n        ArrayList(E[] array) {\r\n            a = array; // you point to the previous array\r\n        }\r\n        ....\r\n    }\r\n\r\nThe dangerous side is that **if you change the initial array, you change the List !** Are you sure you want that ? Maybe yes, maybe not.\r\n\r\nIf not, the most understandable way is to do this :\r\n\r\n    ArrayList&lt;Element&gt; list = new ArrayList&lt;Element&gt;(myArray.length); // you know the initial capacity\r\n    for (Element element : myArray) {\r\n        list.add(element);\r\n    }\r\n\r\nOr as said @glglgl, you can create another independant ArrayList with :\r\n\r\n    new ArrayList&lt;T&gt;(Arrays.asList(myArray));\r\n\r\n\r\n\r\nI love to use `Collections`, `Arrays`, or Guava. But if it don&#39;t fit, or you don&#39;t feel it, just write another inelegant line instead.\r\n\r\n","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":2598,"user_id":3529323,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/m3mE6.png?s=128&g=1","display_name":"bcsb1001","link":"https://stackoverflow.com/users/3529323/bcsb1001"},"score":8,"creation_date":1420055749},{"owner":{"reputation":4327,"user_id":7098259,"user_type":"registered","profile_image":"https://i.stack.imgur.com/b6nWr.jpg?s=128&g=1","display_name":"Patrick Parker","link":"https://stackoverflow.com/users/7098259/patrick-parker"},"score":0,"creation_date":1479470397},{"owner":{"reputation":2885,"user_id":2619091,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/VZgSx.jpg?s=128&g=1","display_name":"yamilmedina","link":"https://stackoverflow.com/users/2619091/yamilmedina"},"score":0,"creation_date":1480542339}],"owner":{"reputation":2885,"user_id":2619091,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/VZgSx.jpg?s=128&g=1","display_name":"yamilmedina","link":"https://stackoverflow.com/users/2619091/yamilmedina"},"comment_count":3,"score":72,"creation_date":1416948516,"body_markdown":"Another update, almost ending year 2014, you can do it with Java 8 too:\r\n\r\n    ArrayList&lt;Element&gt; arrayList = Stream.of(myArray).collect(Collectors.toCollection(ArrayList::new));\r\n\r\nA few characters would be saved, if this could be just a `List` \r\n\r\n    List&lt;Element&gt; list = Stream.of(myArray).collect(Collectors.toList());\r\n\r\n","title":"Create ArrayList from array"},{"owner":{"reputation":2144,"user_id":3012916,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0f457966b5c83df84dc968e7d779c674?s=128&d=identicon&r=PG","display_name":"nekperu15739","link":"https://stackoverflow.com/users/3012916/nekperu15739"},"comment_count":0,"score":35,"creation_date":1431900445,"body_markdown":"According with the question the answer using java 1.7 is:\r\n\r\n    ArrayList&lt;Element&gt; arraylist = new ArrayList&lt;Element&gt;(Arrays.&lt;Element&gt;asList(array));\r\n\r\nHowever it&#39;s better always use the interface:\r\n\r\n    List&lt;Element&gt; arraylist = Arrays.&lt;Element&gt;asList(array);","title":"Create ArrayList from array"},{"owner":{"reputation":13883,"user_id":3498950,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/fa49bc7b5d1a3d144ffcda8b447912e0?s=128&d=identicon&r=PG","display_name":"spencer.sm","link":"https://stackoverflow.com/users/3498950/spencer-sm"},"comment_count":0,"score":11,"creation_date":1450297959,"body_markdown":"Another simple way is to add all elements from the array to a new ArrayList using a for-each loop.\r\n\r\n    ArrayList&lt;Element&gt; list = new ArrayList&lt;&gt;();\r\n\r\n\tfor(Element e : array)\r\n\t\tlist.add(e);","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":2925,"user_id":2557818,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/ae8bb86c9f66051637cb52d5de9826f7?s=128&d=identicon&r=PG","display_name":"Raja Anbazhagan","link":"https://stackoverflow.com/users/2557818/raja-anbazhagan"},"score":3,"creation_date":1549278503}],"owner":{"reputation":654,"user_id":1912860,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/3a7a2d6d569f020a61f455226dd58384?s=128&d=identicon&r=PG","display_name":"Vaseph","link":"https://stackoverflow.com/users/1912860/vaseph"},"comment_count":1,"score":21,"creation_date":1454748981,"body_markdown":"You also can do it with stream in Java 8.\r\n\r\n\r\n     List&lt;Element&gt; elements = Arrays.stream(array).collect(Collectors.toList()); ","title":"Create ArrayList from array"},{"owner":{"reputation":4963,"user_id":4501480,"user_type":"registered","accept_rate":55,"profile_image":"https://lh3.googleusercontent.com/-WM3Hs4WWMBY/AAAAAAAAAAI/AAAAAAAAAAA/u2L29rWnQH8/photo.jpg?sz=128","display_name":"Vikrant Kashyap","link":"https://stackoverflow.com/users/4501480/vikrant-kashyap"},"comment_count":0,"score":16,"creation_date":1459320494,"body_markdown":"1. If we see the definition of `Arrays.asList()` method you will get something like this: \r\n\r\n         public static &lt;T&gt; List&lt;T&gt; asList(T... a) //varargs are of T type. \r\n\r\n   So, you might initialize `arraylist` like this: \r\n\r\n         List&lt;Element&gt; arraylist = Arrays.asList(new Element(1), new Element(2), new Element(3));\r\n\r\n  &gt;**Note** : each `new Element(int args)` will be treated as Individual Object and can be passed as a `var-args`.\r\n\r\n2. There might be another answer for this question too.  \r\nIf you see declaration for `java.util.Collections.addAll()` method you will get something like this:\r\n\r\n        public static &lt;T&gt; boolean addAll(Collection&lt;? super T&gt; c, T... a);\r\nSo, this code is also useful to do so\r\n\r\n        Collections.addAll(arraylist, array);\r\n\r\n\t","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":1498,"user_id":1554195,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b67f6a3639e7924c531053212048be5c?s=128&d=identicon&r=PG","display_name":"tquadrat","link":"https://stackoverflow.com/users/1554195/tquadrat"},"score":1,"creation_date":1562329876}],"owner":{"reputation":38394,"user_id":1393484,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/251d2d8ab5721e399a715d7531471448?s=128&d=identicon&r=PG","display_name":"Ali Dehghani","link":"https://stackoverflow.com/users/1393484/ali-dehghani"},"comment_count":1,"score":102,"creation_date":1460912315,"body_markdown":"# Java 9\n\nIn [Java 9][1], you can use [`List.of`][2] static factory method in order to create a `List` literal. Something like the following:\n\n    List&lt;Element&gt; elements = List.of(new Element(1), new Element(2), new Element(3));\n\nThis would return an [***immutable***][3] list containing three elements. If you want a ***mutable*** list, pass that list to the `ArrayList` constructor:\n\n    new ArrayList&lt;&gt;(List.of(// elements vararg))\n\n-----\n### JEP 269: Convenience Factory Methods for Collections\n[JEP 269][4] provides some convenience factory methods for [Java Collections][5] API. These immutable static factory methods are built into the [`List`][6], [`Set`][7], and [`Map`][8] interfaces in Java 9 and later.\n\n\n  [1]: https://en.wikipedia.org/wiki/Java_version_history#Java_SE_9\n  [2]: https://docs.oracle.com/javase/9/docs/api/java/util/List.html#of-E-E-E-\n  [3]: https://en.wikipedia.org/wiki/Immutable_object\n  [4]: http://openjdk.java.net/jeps/269\n  [5]: https://en.wikipedia.org/wiki/Java_collections_framework\n  [6]: https://docs.oracle.com/javase/9/docs/api/java/util/List.html\n  [7]: https://docs.oracle.com/javase/9/docs/api/java/util/Set.html\n  [8]: https://docs.oracle.com/javase/9/docs/api/java/util/Map.html","title":"Create ArrayList from array"},{"owner":{"reputation":1742,"user_id":3747720,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/XA0Bi.jpg?s=128&g=1","display_name":"oxy_js","link":"https://stackoverflow.com/users/3747720/oxy-js"},"comment_count":0,"score":24,"creation_date":1462178444,"body_markdown":"You can convert using different methods\r\n\r\n1. `List&lt;Element&gt; list = Arrays.asList(array);`\r\n\r\n2. `List&lt;Element&gt; list = new ArrayList();  \r\n  Collections.addAll(list, array);`\r\n\r\n3. `Arraylist list = new Arraylist();  \r\n   list.addAll(Arrays.asList(array));`\r\n\r\nFor more detail you can refer to http://javarevisited.blogspot.in/2011/06/converting-array-to-arraylist-in-java.html","title":"Create ArrayList from array"},{"owner":{"reputation":7771,"user_id":5091346,"user_type":"registered","accept_rate":72,"profile_image":"https://i.stack.imgur.com/MEVJT.jpg?s=128&g=1","display_name":"Andrii Abramov","link":"https://stackoverflow.com/users/5091346/andrii-abramov"},"comment_count":0,"score":24,"creation_date":1482496288,"body_markdown":"Since Java 8 there is an easier way to transform:\r\n\r\n    import java.util.List;    \r\n    import static java.util.stream.Collectors.toList;\r\n\r\n    public static &lt;T&gt; List&lt;T&gt; fromArray(T[] array) {\r\n        return Arrays.stream(array).collect(toList());\r\n    }","title":"Create ArrayList from array"},{"owner":{"reputation":388,"user_id":5936681,"user_type":"registered","profile_image":"https://i.stack.imgur.com/8kxOU.jpg?s=128&g=1","display_name":"Abojemyeg","link":"https://stackoverflow.com/users/5936681/abojemyeg"},"comment_count":0,"score":23,"creation_date":1483641175,"body_markdown":"as all said this will do so \r\n\r\n     new ArrayList&lt;&gt;(Arrays.asList(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;));\r\n\r\nand the common newest way to create array is **observableArrays**\r\n\r\n**ObservableList:** A list that allows listeners to track changes when they occur.\r\n\r\nfor Java SE you can try \r\n\r\n    FXCollections.observableArrayList(new Element(1), new Element(2), new Element(3));\r\n\r\nthat is according to [Oracle Docs][1]\r\n\r\n&gt; observableArrayList()\r\nCreates a new empty observable list that is backed by an arraylist.\r\n&gt; observableArrayList(E... items)\r\nCreates a new observable array list with items added to it.\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/8/javafx/api/javafx/collections/FXCollections.html\r\n\r\n\r\n## **Update Java 9** ##\r\nalso in Java 9 it&#39;s a little bit easy:\r\n\r\n    List&lt;String&gt; list = List.of(&quot;element 1&quot;, &quot;element 2&quot;, &quot;element 3&quot;);","title":"Create ArrayList from array"},{"owner":{"reputation":2468,"user_id":2889297,"user_type":"registered","profile_image":"https://i.stack.imgur.com/0d6wx.jpg?s=128&g=1","display_name":"Devendra Lattu","link":"https://stackoverflow.com/users/2889297/devendra-lattu"},"comment_count":0,"score":8,"creation_date":1491590750,"body_markdown":"Even though there are many perfectly written answers to this question, I will add my inputs. \r\n\r\nSay you have `Element[] array = { new Element(1), new Element(2), new Element(3) };`\r\n\r\nNew ArrayList can be created in the following ways\r\n\r\n    ArrayList&lt;Element&gt; arraylist_1 = new ArrayList&lt;&gt;(Arrays.asList(array));\r\n\tArrayList&lt;Element&gt; arraylist_2 = new ArrayList&lt;&gt;(\r\n        Arrays.asList(new Element[] { new Element(1), new Element(2), new Element(3) }));\r\n\r\n\t// Add through a collection\r\n\tArrayList&lt;Element&gt; arraylist_3 = new ArrayList&lt;&gt;();\r\n\tCollections.addAll(arraylist_3, array);\r\n\r\nAnd they very well support all operations of ArrayList\r\n\r\n    arraylist_1.add(new Element(4)); // or remove(): Success\r\n\tarraylist_2.add(new Element(4)); // or remove(): Success\r\n\tarraylist_3.add(new Element(4)); // or remove(): Success\r\n\r\nBut the following operations returns just a List view of an ArrayList and not actual ArrayList.\r\n\r\n\t// Returns a List view of array and not actual ArrayList\r\n\tList&lt;Element&gt; listView_1 = (List&lt;Element&gt;) Arrays.asList(array);\r\n\tList&lt;Element&gt; listView_2 = Arrays.asList(array);\r\n\tList&lt;Element&gt; listView_3 = Arrays.asList(new Element(1), new Element(2), new Element(3));\r\n\r\nTherefore, they will give error when trying to make some ArrayList operations\r\n\r\n    listView_1.add(new Element(4)); // Error\r\n    listView_2.add(new Element(4)); // Error\r\n    listView_3.add(new Element(4)); // Error\r\n\r\nMore on List representation of array [link][1].\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/43187083/benefits-of-creating-a-list-using-arrays-aslist","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":2568,"user_id":6790326,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/--0W1SyomlMg/AAAAAAAAAAI/AAAAAAAAAGY/w5Ja9a3U4zE/photo.jpg?sz=128","display_name":"Dorian Gray","link":"https://stackoverflow.com/users/6790326/dorian-gray"},"score":0,"creation_date":1533329850}],"owner":{"reputation":1017,"user_id":601362,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7dbcace56bbe82f6aec2ef93e4e81a00?s=128&d=identicon&r=PG","display_name":"MarekM","link":"https://stackoverflow.com/users/601362/marekm"},"comment_count":1,"score":39,"creation_date":1491913245,"body_markdown":"In `Java 9` you can use:\r\n\r\n    List&lt;String&gt; list = List.of(&quot;Hello&quot;, &quot;World&quot;, &quot;from&quot;, &quot;Java&quot;);\r\n    List&lt;Integer&gt; list = List.of(1, 2, 3, 4, 5);","title":"Create ArrayList from array"},{"owner":{"reputation":645,"user_id":5901831,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/3hMbK.jpg?s=128&g=1","display_name":"Hemin","link":"https://stackoverflow.com/users/5901831/hemin"},"comment_count":0,"score":8,"creation_date":1493800708,"body_markdown":"Simplest way to do so is by adding following code. Tried and Tested.\r\n\r\n    String[] Array1={&quot;one&quot;,&quot;two&quot;,&quot;three&quot;};\r\n\tArrayList&lt;String&gt; s1= new ArrayList&lt;String&gt;(Arrays.asList(Array1));","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":2568,"user_id":6790326,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/--0W1SyomlMg/AAAAAAAAAAI/AAAAAAAAAGY/w5Ja9a3U4zE/photo.jpg?sz=128","display_name":"Dorian Gray","link":"https://stackoverflow.com/users/6790326/dorian-gray"},"score":2,"creation_date":1530639931},{"owner":{"reputation":2568,"user_id":6790326,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/--0W1SyomlMg/AAAAAAAAAAI/AAAAAAAAAGY/w5Ja9a3U4zE/photo.jpg?sz=128","display_name":"Dorian Gray","link":"https://stackoverflow.com/users/6790326/dorian-gray"},"score":1,"creation_date":1533329633}],"owner":{"reputation":557,"user_id":4804146,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/083c2d7cfb8438ece051b66810220798?s=128&d=identicon&r=PG&f=1","display_name":"Adit A. Pillai","link":"https://stackoverflow.com/users/4804146/adit-a-pillai"},"comment_count":2,"score":8,"creation_date":1496837665,"body_markdown":"You can do it in java 8 as follows\r\n\r\n    ArrayList&lt;Element&gt; list = (ArrayList&lt;Element&gt;)Arrays.stream(array).collect(Collectors.toList());","title":"Create ArrayList from array"},{"owner":{"reputation":758,"user_id":1822659,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d938a7932ae071b7e3041587b21e8d49?s=128&d=identicon&r=PG","display_name":"Toothless Seer","link":"https://stackoverflow.com/users/1822659/toothless-seer"},"comment_count":0,"score":8,"creation_date":1497947585,"body_markdown":"&gt; Another Java8 solution *(I may have missed the answer among the large set. If so, my apologies).* This creates an ArrayList (as opposed to a List) i.e. one can delete elements\r\n\r\n    package package org.something.util;\r\n\r\n    import java.util.ArrayList;\r\n    import java.util.Arrays;\r\n    import java.util.List;\r\n    import java.util.stream.Collectors;\r\n\r\n    public class Junk {\r\n\t\r\n\t    static &lt;T&gt; ArrayList&lt;T&gt;  arrToArrayList(T[] arr){\r\n\t\t    return Arrays.asList(arr)\r\n                .stream()\r\n                .collect(Collectors.toCollection(ArrayList::new));\r\n\t    }\r\n\r\n\t    public static void main(String[] args) {\r\n\t\t    String[] sArr = new String[]{&quot;Hello&quot;, &quot;cruel&quot;, &quot;world&quot;};\r\n\t\t    List&lt;String&gt; ret = arrToArrayList(sArr);\r\n            // Verify one can remove an item and print list to verify so\r\n\t\t    ret.remove(1);\r\n\t\t    ret.stream()\r\n                .forEach(System.out::println);\r\n\t    }\r\n    }\r\nOutput is... &lt;br&gt;\r\nHello &lt;br&gt;\r\nworld","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":1907,"user_id":1778674,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/942ffef9f4e28b71f820a349a3fb2ccc?s=128&d=identicon&r=PG","display_name":"Suhaib","link":"https://stackoverflow.com/users/1778674/suhaib"},"score":0,"creation_date":1498855480}],"owner":{"reputation":92649,"user_id":187141,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/f9e28dc83496320c87c55b3cf988ab60?s=128&d=identicon&r=PG","display_name":"yegor256","link":"https://stackoverflow.com/users/187141/yegor256"},"comment_count":1,"score":2,"creation_date":1498479591,"body_markdown":"You can create an `ArrayList` using [Cactoos](http://www.cactoos.org) (I&#39;m one of the developers):\r\n\r\n    List&lt;String&gt; names = new StickyList&lt;&gt;(\r\n      &quot;Scott Fitzgerald&quot;, &quot;Fyodor Dostoyevsky&quot;\r\n    );\r\n\r\nThere is no guarantee that the object will actually be of class `ArrayList`. If you need that guarantee, do this:\r\n\r\n    ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;(\r\n      new StickyList&lt;&gt;(\r\n        &quot;Scott Fitzgerald&quot;, &quot;Fyodor Dostoyevsky&quot;\r\n      )\r\n    );","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":2561,"user_id":2957169,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Mf8Nx.jpg?s=128&g=1","display_name":"charles-allen","link":"https://stackoverflow.com/users/2957169/charles-allen"},"score":0,"creation_date":1499681166},{"owner":{"reputation":170,"user_id":4499183,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-uQx5Y_Kw7e8/AAAAAAAAAAI/AAAAAAAAAHo/eVGrbgpm8pQ/photo.jpg?sz=128","display_name":"Tamoghna Chowdhury","link":"https://stackoverflow.com/users/4499183/tamoghna-chowdhury"},"score":2,"creation_date":1507321571}],"owner":{"reputation":2541,"user_id":6714430,"user_type":"registered","profile_image":"https://i.stack.imgur.com/adedu.jpg?s=128&g=1","display_name":"rashedcs","link":"https://stackoverflow.com/users/6714430/rashedcs"},"comment_count":2,"score":8,"creation_date":1499152953,"body_markdown":"We can easily convert an array to `ArrayList`.\r\nWe use Collection interface&#39;s `addAll()` method for the purpose of copying content from one list to another. \r\n\r\n     Arraylist arr = new Arraylist();\r\n     arr.addAll(Arrays.asList(asset));\r\n\r\n","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":776,"user_id":5884126,"user_type":"registered","accept_rate":29,"profile_image":"https://www.gravatar.com/avatar/0dfff3618068596794d26ba021bff8d7?s=128&d=identicon&r=PG","display_name":"PixelMaster","link":"https://stackoverflow.com/users/5884126/pixelmaster"},"score":0,"creation_date":1528660546}],"owner":{"reputation":1399,"user_id":1469472,"user_type":"registered","profile_image":"https://i.stack.imgur.com/vD3Ty.jpg?s=128&g=1","display_name":"A1m","link":"https://stackoverflow.com/users/1469472/a1m"},"comment_count":1,"score":11,"creation_date":1499653289,"body_markdown":"If the array is of a primitive type, the given answers won&#39;t work. But since Java 8 you can use:\r\n\r\n    int[] array = new int[5];\r\n    Arrays.stream(array).boxed().collect(Collectors.toList());","title":"Create ArrayList from array"},{"comments":[{"owner":{"reputation":155,"user_id":1192706,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1a8569db1c3041093e288fb4dd35ea15?s=128&d=identicon&r=PG","display_name":"Priyanka","link":"https://stackoverflow.com/users/1192706/priyanka"},"score":0,"creation_date":1504947474},{"owner":{"reputation":170,"user_id":4499183,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-uQx5Y_Kw7e8/AAAAAAAAAAI/AAAAAAAAAHo/eVGrbgpm8pQ/photo.jpg?sz=128","display_name":"Tamoghna Chowdhury","link":"https://stackoverflow.com/users/4499183/tamoghna-chowdhury"},"score":4,"creation_date":1507321490}],"owner":{"reputation":171,"user_id":4648430,"user_type":"registered","profile_image":"https://i.stack.imgur.com/ppbVQ.jpg?s=128&g=1","display_name":"Sumit Das","link":"https://stackoverflow.com/users/4648430/sumit-das"},"comment_count":2,"score":5,"creation_date":1500962591,"body_markdown":"Already everyone has provided enough good answer for your problem. \r\nNow from the all suggestions, you need to decided which will fit your requirement. There are two types of collection which you need to know. One is unmodified collection and other one collection which will allow you to modify the object later.\r\n\r\nSo, Here I will give short example for two use cases.\r\n\r\n - Immutable collection creation :: When you don&#39;t want to modify the collection object after creation\r\n   \r\n   `List&lt;Element&gt; elementList = Arrays.asList(array)`\r\n\r\n - Mutable collection creation :: When you may want to modify the created collection object after creation.\r\n    \r\n   `List&lt;Element&gt; elementList = new ArrayList&lt;Element&gt;(Arrays.asList(array));`\r\n\r\n","title":"Create ArrayList from array"},{"owner":{"reputation":189,"user_id":9036713,"user_type":"registered","profile_image":"https://i.stack.imgur.com/OK454.jpg?s=128&g=1","display_name":"Kavinda Pushpitha","link":"https://stackoverflow.com/users/9036713/kavinda-pushpitha"},"comment_count":0,"score":8,"creation_date":1543836730,"body_markdown":"Use the following code to convert an element array into an ArrayList. \r\n\r\n    Element[] array = {new Element(1), new Element(2), new Element(3)};\r\n    \r\n    ArrayList&lt;Element&gt;elementArray=new ArrayList();\r\n    for(int i=0;i&lt;array.length;i++) {\r\n    \telementArray.add(array[i]);\r\n    }","title":"Create ArrayList from array"},{"owner":{"reputation":802,"user_id":9769061,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4ba04e0bf9ad6c749a7cd492adc6b191?s=128&d=identicon&r=PG&f=1","display_name":"Devratna","link":"https://stackoverflow.com/users/9769061/devratna"},"comment_count":0,"score":1,"creation_date":1553773363,"body_markdown":"Use below code\r\n\r\n    Element[] array = {new Element(1), new Element(2), new Element(3)};\r\n    ArrayList&lt;Element&gt; list = (ArrayList) Arrays.asList(array);","title":"Create ArrayList from array"},{"owner":{"reputation":109,"user_id":2418016,"user_type":"registered","profile_image":"https://i.stack.imgur.com/fQr9U.jpg?s=128&g=1","display_name":"Himanshu Dave","link":"https://stackoverflow.com/users/2418016/himanshu-dave"},"comment_count":0,"score":5,"creation_date":1558264827,"body_markdown":"Java 8’s Arrays class provides a stream() method which has overloaded versions accepting both primitive arrays and Object arrays.\r\n\r\n    /**** Converting a Primitive &#39;int&#39; Array to List ****/\r\n    \r\n    int intArray[] = {1, 2, 3, 4, 5};\r\n    \r\n    List&lt;Integer&gt; integerList1 = Arrays.stream(intArray).boxed().collect(Collectors.toList());\r\n    \r\n    /**** &#39;IntStream.of&#39; or &#39;Arrays.stream&#39; Gives The Same Output ****/\r\n    \r\n    List&lt;Integer&gt; integerList2 = IntStream.of(intArray).boxed().collect(Collectors.toList());\r\n    \r\n    /**** Converting an &#39;Integer&#39; Array to List ****/\r\n    \r\n    Integer integerArray[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\r\n    \r\n    List&lt;Integer&gt; integerList3 = Arrays.stream(integerArray).collect(Collectors.toList());\r\n\r\n","title":"Create ArrayList from array"},{"owner":{"reputation":629,"user_id":11199879,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a0a9c56c2190957960c9463c03486df8?s=128&d=identicon&r=PG&f=1","display_name":"Kaplan","link":"https://stackoverflow.com/users/11199879/kaplan"},"comment_count":0,"score":2,"creation_date":1564725011,"body_markdown":"_the lambda expression that generates a list of type_ `ArrayList&lt;Element&gt;`&lt;br /&gt;\r\n(1) without an unchecked cast&lt;br /&gt;\r\n(2) without creating a second list (with eg. `asList()`)\r\n\r\n`ArrayList&lt;Element&gt; list = Stream.of( array ).collect( Collectors.toCollection( ArrayList::new ) );`\r\n","title":"Create ArrayList from array"},{"owner":{"reputation":1711,"user_id":7353562,"user_type":"registered","accept_rate":75,"profile_image":"https://graph.facebook.com/1358578430859865/picture?type=large","display_name":"Arpan Saini","link":"https://stackoverflow.com/users/7353562/arpan-saini"},"comment_count":0,"score":6,"creation_date":1567888588,"body_markdown":"**Given Object Array:**\r\n\r\n  \r\n\r\n    Element[] array = {new Element(1), new Element(2), new Element(3) , new Element(2)};\r\n\r\n\r\n**Convert Array to List:**\r\n\r\n        List&lt;Element&gt; list = Arrays.stream(array).collect(Collectors.toList());\r\n\r\n **Convert Array to ArrayList**\r\n\r\n        ArrayList&lt;Element&gt; arrayList = Arrays.stream(array)\r\n                                           .collect(Collectors.toCollection(ArrayList::new));\r\n**Convert Array to LinkedList**\r\n\r\n        LinkedList&lt;Element&gt; linkedList = Arrays.stream(array)\r\n                         .collect(Collectors.toCollection(LinkedList::new));\r\n\r\n**Print List:**\r\n\r\n        list.forEach(element -&gt; {\r\n            System.out.println(element.i);\r\n        });\r\n\r\n**OUTPUT**\r\n\r\n1\r\n\r\n2\r\n\r\n3","title":"Create ArrayList from array"},{"owner":{"reputation":356,"user_id":3526891,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b429f8374c4f3fd2b1182259f7bce9bd?s=128&d=identicon&r=PG&f=1","display_name":"Singh123","link":"https://stackoverflow.com/users/3526891/singh123"},"comment_count":0,"score":4,"creation_date":1575446382,"body_markdown":"Below code seems nice way of doing this.\r\n\r\n    new ArrayList&lt;T&gt;(Arrays.asList(myArray));","title":"Create ArrayList from array"},{"owner":{"reputation":111,"user_id":13383275,"user_type":"registered","profile_image":"https://i.stack.imgur.com/M6n9y.jpg?s=128&g=1","display_name":"Suparno Saha","link":"https://stackoverflow.com/users/13383275/suparno-saha"},"comment_count":0,"score":0,"creation_date":1591118015,"body_markdown":"This is the first and the easiest method\r\n```\r\nnew ArrayList&lt;T&gt;(Arrays.asList(myArray));\r\n```\r\nAnother method\r\n```\r\n//declare myarray\r\nArrayList &lt;String&gt; ar = new ArrayList&lt;String&gt; ();\r\nfor(String s : myArray){\r\n    ar.add(s);\r\n}\r\n```\r\nThis is iterating through the array and adding each element separately\r\n\r\nThe kind of for loop used here is called enhanced for loop","title":"Create ArrayList from array"},{"owner":{"reputation":354,"user_id":12239357,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/a-/AAuE7mCzgwvt4EmbehNegBuQ7zDZrP9F9d8-gTKjcHqh=k-s128","display_name":"Chris","link":"https://stackoverflow.com/users/12239357/chris"},"comment_count":0,"score":0,"creation_date":1594023236,"body_markdown":"Hi you can use this **`line of code`** , and it&#39;s the **simplest way**\r\n\r\n     new ArrayList&lt;&gt;(Arrays.asList(myArray));\r\n\r\nor in case you use  **`Java 9`** you can also use this method:\r\n\r\n    List&lt;String&gt; list = List.of(&quot;Hello&quot;, &quot;Java&quot;); \r\n    List&lt;Integer&gt; list = List.of(1, 2, 3);","title":"Create ArrayList from array"},{"owner":{"reputation":1062,"user_id":7484853,"user_type":"registered","profile_image":"https://i.stack.imgur.com/OGdX0.jpg?s=128&g=1","display_name":"Hasee Amarathunga","link":"https://stackoverflow.com/users/7484853/hasee-amarathunga"},"comment_count":0,"score":0,"creation_date":1596175759,"body_markdown":"Use below script\r\n\r\n    Object[] myNum = {10, 20, 30, 40};\r\n    List&lt;Object&gt; newArr = new ArrayList&lt;&gt;(Arrays.asList(myNum));","title":"Create ArrayList from array"},{"owner":{"reputation":592,"user_id":10418392,"user_type":"registered","profile_image":"https://i.stack.imgur.com/eMSzP.jpg?s=128&g=1","display_name":"Sachintha Nayanajith","link":"https://stackoverflow.com/users/10418392/sachintha-nayanajith"},"comment_count":0,"score":1,"creation_date":1600946840,"body_markdown":"In java there are mainly 3 methods to convert an **array** to an **arrayList**\r\n\r\n 1. Using Arrays.asList() method : Pass the required array to this method and get a List object and pass it as a parameter to the constructor of the ArrayList class.\r\n\r\n        List&lt;String&gt; list = Arrays.asList(array);                   \r\n        System.out.println(list);\r\n\r\n2. Collections.addAll() method - Create a new list before using this method and then add array elements using this method to existing list.\r\n\r\n        List&lt;String&gt; list1 = new ArrayList&lt;String&gt;();\r\n        Collections.addAll(list1, array);\r\n        System.out.println(list1);\r\n\r\n3. Iteration method - Create a new list. Iterate the array and add each element to the list.\r\n\r\n        List&lt;String&gt; list2 = new ArrayList&lt;String&gt;();\r\n        for(String text:array) {\r\n            list2.add(text);\r\n        }\r\n        System.out.println(list2);\r\n\r\nyou can refer [this document][1] too\r\n\r\n\r\n  [1]: https://www.tutorialspoint.com/Conversion-of-Array-To-ArrayList-in-Java","title":"Create ArrayList from array"},{"owner":{"reputation":1062,"user_id":7484853,"user_type":"registered","profile_image":"https://i.stack.imgur.com/OGdX0.jpg?s=128&g=1","display_name":"Hasee Amarathunga","link":"https://stackoverflow.com/users/7484853/hasee-amarathunga"},"comment_count":0,"score":0,"creation_date":1603254277,"body_markdown":"You can use the following 3 ways to create ArrayList from Array.\r\n\r\n      String[] array = {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;};\r\n\r\n      //Method 1\r\n      List&lt;String&gt; list = Arrays.asList(array);          \r\n    \r\n      //Method 2\r\n      List&lt;String&gt; list1 = new ArrayList&lt;String&gt;();\r\n      Collections.addAll(list1, array);\r\n    \r\n      //Method 3\r\n      List&lt;String&gt; list2 = new ArrayList&lt;String&gt;();\r\n      for(String text:array) {\r\n         list2.add(text);\r\n      }","title":"Create ArrayList from array"},{"owner":{"reputation":344,"user_id":14618789,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c5575bb7e2c82ff6824395ab9e5ce0de?s=128&d=identicon&r=PG&f=1","display_name":"Lakindu Hewawasam","link":"https://stackoverflow.com/users/14618789/lakindu-hewawasam"},"comment_count":0,"score":1,"creation_date":1605584368,"body_markdown":"There is one more way that you can use to convert the array into an ArrayList. You can iterate over the array and insert each index into the ArrayList and return it back as in ArrayList. \r\n\r\nThis is shown below. \r\n\r\n    public static void main(String[] args) {\r\n            String[] array = {new String(&quot;David&quot;), new String(&quot;John&quot;), new String(&quot;Mike&quot;)};\r\n    \r\n            ArrayList&lt;String&gt; theArrayList = convertToArrayList(array);\r\n        }\r\n    \r\n        private static ArrayList&lt;String&gt; convertToArrayList(String[] array) {\r\n            ArrayList&lt;String&gt; convertedArray = new ArrayList&lt;String&gt;();\r\n    \r\n            for (String element : array) {\r\n                convertedArray.add(element);\r\n            }\r\n    \r\n            return convertedArray;\r\n        }","title":"Create ArrayList from array"},{"owner":{"reputation":73,"user_id":8278152,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6d14b04a66efadd7ecf6fc94b9149cec?s=128&d=identicon&r=PG&f=1","display_name":"Sandip Jangra","link":"https://stackoverflow.com/users/8278152/sandip-jangra"},"comment_count":0,"score":1,"creation_date":1605703557,"body_markdown":"For normal size arrays, above answers hold good. In case you have huge size of array and using java 8, you can do it using stream.\r\n\r\n      Element[] array = {new Element(1), new Element(2), new Element(3)};\r\n      List&lt;Element&gt; list = Arrays.stream(array).collect(Collectors.toList());\r\n\r\n","title":"Create ArrayList from array"}],"owner":{"reputation":49342,"user_id":939,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/ce6d3fed32e985093a107913c3762579?s=128&d=identicon&r=PG","display_name":"Ron Tuffin","link":"https://stackoverflow.com/users/939/ron-tuffin"},"comment_count":4,"is_answered":true,"answer_count":41,"score":3744,"creation_date":1222871912,"question_id":157944,"body_markdown":"I have an array that is initialized like:\r\n\r\n    Element[] array = {new Element(1), new Element(2), new Element(3)};\r\n\r\nI would like to convert this array into an object of the [`ArrayList`][1] class.\r\n\r\n    ArrayList&lt;Element&gt; arraylist = ???;\r\n\r\n\r\n  [1]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html","link":"https://stackoverflow.com/questions/157944/create-arraylist-from-array","title":"Create ArrayList from array"},{"tags":["java","android","usermanager"],"comments":[{"owner":{"reputation":18491,"user_id":407213,"user_type":"registered","accept_rate":74,"profile_image":"https://i.stack.imgur.com/c5T4C.jpg?s=128&g=1","display_name":"Dorian","link":"https://stackoverflow.com/users/407213/dorian"},"score":4,"creation_date":1352926397},{"owner":{"reputation":4880,"user_id":1115937,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/RJieM.jpg?s=128&g=1","display_name":"John Isaiah Carmona","link":"https://stackoverflow.com/users/1115937/john-isaiah-carmona"},"score":12,"creation_date":1352955522},{"owner":{"reputation":10633,"user_id":1385119,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/f6b1a1bae2c27ba86468471f32f6493a?s=128&d=identicon&r=PG&f=1","display_name":"none","link":"https://stackoverflow.com/users/1385119/none"},"score":3,"creation_date":1352974901},{"owner":{"reputation":3974,"user_id":366253,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/c0aa506896a36e17a6a8fa3a281a2215?s=128&d=identicon&r=PG","display_name":"Fernando Gallego","link":"https://stackoverflow.com/users/366253/fernando-gallego"},"score":21,"creation_date":1364594996},{"owner":{"reputation":815,"user_id":2996119,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7862d510be3065497d35269b34c5c514?s=128&d=identicon&r=PG&f=1","display_name":"Patrick","link":"https://stackoverflow.com/users/2996119/patrick"},"score":8,"creation_date":1461570591}],"answers":[{"comments":[{"owner":{"reputation":982,"user_id":297807,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/d2210ac9d73a778551686af43a382940?s=128&d=identicon&r=PG","display_name":"tedders","link":"https://stackoverflow.com/users/297807/tedders"},"score":106,"creation_date":1352897916},{"owner":{"reputation":25431,"user_id":423105,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/ced7f76fd1b5573ce3bdce2f3392df04?s=128&d=identicon&r=PG","display_name":"LarsH","link":"https://stackoverflow.com/users/423105/larsh"},"score":3,"creation_date":1352913424},{"owner":{"reputation":54107,"user_id":1339987,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/76aa5ba88e0d95b6480113239fe50008?s=128&d=identicon&r=PG","display_name":"djechlin","link":"https://stackoverflow.com/users/1339987/djechlin"},"score":12,"creation_date":1352923621},{"owner":{"reputation":70555,"user_id":50776,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/1b2b5d5007262ea3f9e21ab5b15f8b75?s=128&d=identicon&r=PG","display_name":"casperOne","link":"https://stackoverflow.com/users/50776/casperone"},"score":58,"creation_date":1352924797},{"owner":{"reputation":25431,"user_id":423105,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/ced7f76fd1b5573ce3bdce2f3392df04?s=128&d=identicon&r=PG","display_name":"LarsH","link":"https://stackoverflow.com/users/423105/larsh"},"score":3,"creation_date":1352926331},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":0,"creation_date":1377411185},{"owner":{"reputation":253007,"user_id":47773,"user_type":"registered","accept_rate":52,"profile_image":"https://www.gravatar.com/avatar/e72946d7c81ee170b322f6e6abae3442?s=128&d=identicon&r=PG","display_name":"Matthew Flaschen","link":"https://stackoverflow.com/users/47773/matthew-flaschen"},"score":2,"creation_date":1392789782},{"owner":{"reputation":1437,"user_id":437244,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/35263c7f4de748c0853eb12e4173bb4a?s=128&d=identicon&r=PG&f=1","display_name":"logain","link":"https://stackoverflow.com/users/437244/logain"},"score":7,"creation_date":1396212558},{"owner":{"reputation":35423,"user_id":1048340,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/3q8qF.jpg?s=128&g=1","display_name":"Jared Rummler","link":"https://stackoverflow.com/users/1048340/jared-rummler"},"score":9,"creation_date":1423128322},{"owner":{"reputation":8749,"user_id":1953590,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/b7f981d575a65b685a5ead903fcbfbf6?s=128&d=identicon&r=PG&f=1","display_name":"Kevin Krumwiede","link":"https://stackoverflow.com/users/1953590/kevin-krumwiede"},"score":38,"creation_date":1424506065},{"owner":{"reputation":49609,"user_id":276949,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/52e96d535181560d2b46d4b513454ee5?s=128&d=identicon&r=PG","display_name":"Martin Konecny","link":"https://stackoverflow.com/users/276949/martin-konecny"},"score":207,"creation_date":1430111505},{"owner":{"reputation":12408,"user_id":4299560,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/84fd2bf8783aba24dd496c7fef48daad?s=128&d=identicon&r=PG&f=1","display_name":"Ced","link":"https://stackoverflow.com/users/4299560/ced"},"score":5,"creation_date":1440222034},{"owner":{"reputation":2659,"user_id":1970990,"user_type":"registered","accept_rate":43,"profile_image":"https://i.stack.imgur.com/2ociD.jpg?s=128&g=1","display_name":"raulk","link":"https://stackoverflow.com/users/1970990/raulk"},"score":5,"creation_date":1452797923},{"owner":{"reputation":44507,"user_id":106104,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG","display_name":"user253751","link":"https://stackoverflow.com/users/106104/user253751"},"score":11,"creation_date":1474938093},{"owner":{"reputation":633,"user_id":641095,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2ad9e802c1b80b7b6067dfc47847e3da?s=128&d=identicon&r=PG","display_name":"aberaud","link":"https://stackoverflow.com/users/641095/aberaud"},"score":2,"creation_date":1602634803}],"owner":{"reputation":20611,"user_id":1597833,"user_type":"registered","accept_rate":76,"profile_image":"https://www.gravatar.com/avatar/0953d434c345c978e47a9970eceabd36?s=128&d=identicon&r=PG","display_name":"meh","link":"https://stackoverflow.com/users/1597833/meh"},"comment_count":15,"score":1855,"creation_date":1352882430,"body_markdown":"### Android R Update:\r\n\r\nFrom Android R, this method always returns false. Google says that this is done &quot;to protect goat privacy&quot;:\r\n\r\n    /**\r\n     * Used to determine whether the user making this call is subject to\r\n     * teleportations.\r\n     *\r\n     * &lt;p&gt;As of {@link android.os.Build.VERSION_CODES#LOLLIPOP}, this method can\r\n     * now automatically identify goats using advanced goat recognition technology.&lt;/p&gt;\r\n     *\r\n     * &lt;p&gt;As of {@link android.os.Build.VERSION_CODES#R}, this method always returns\r\n     * {@code false} in order to protect goat privacy.&lt;/p&gt;\r\n     *\r\n     * @return Returns whether the user making this call is a goat.\r\n     */\r\n    public boolean isUserAGoat() {\r\n        if (mContext.getApplicationInfo().targetSdkVersion &gt;= Build.VERSION_CODES.R) {\r\n            return false;\r\n        }\r\n        return mContext.getPackageManager()\r\n                .isPackageAvailable(&quot;com.coffeestainstudios.goatsimulator&quot;);\r\n    }\r\n------\r\n### Previous answer:\r\n\r\nFrom their **[source][1]**, the method used to return `false` until it was changed in API 21.\r\n\r\n    /**\r\n     * Used to determine whether the user making this call is subject to\r\n     * teleportations.\r\n     * @return whether the user making this call is a goat \r\n     */\r\n    public boolean isUserAGoat() {\r\n        return false;\r\n    }\r\n\r\nIt looks like the method has no real use for us as developers. Someone has previously stated that it might be an **[Easter egg][2]**.\r\n\r\n\r\nIn API 21 the implementation was changed to check if there is an installed app with the package `com.coffeestainstudios.goatsimulator`\r\n\r\n    /**\r\n     * Used to determine whether the user making this call is subject to\r\n     * teleportations.\r\n     *\r\n     * &lt;p&gt;As of {@link android.os.Build.VERSION_CODES#LOLLIPOP}, this method can\r\n     * now automatically identify goats using advanced goat recognition technology.&lt;/p&gt;\r\n     *\r\n     * @return Returns true if the user making this call is a goat.\r\n     */\r\n    public boolean isUserAGoat() {\r\n        return mContext.getPackageManager()\r\n                .isPackageAvailable(&quot;com.coffeestainstudios.goatsimulator&quot;);\r\n    }\r\n\r\nHere is the [source][3] and the [change][4].\r\n\r\n\r\n  [1]: https://android.googlesource.com/platform/frameworks/base/+/android-5.0.0_r6/core/java/android/os/UserManager.java#433\r\n  [2]: http://en.wikipedia.org/wiki/Easter_egg_(media)\r\n  [3]: https://android.googlesource.com/platform/frameworks/base/+/android-5.0.0_r6/core/java/android/os/UserManager.java#442\r\n  [4]: https://android.googlesource.com/platform/frameworks/base/+/e4ab16ad98b183afbf7a21ad7314372de41a8b57%5E%21/#F1","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"comments":[{"owner":{"reputation":25584,"user_id":1163019,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/47a57beaec8e4221a9e18ca9b876e8b2?s=128&d=identicon&r=PG","display_name":"auselen","link":"https://stackoverflow.com/users/1163019/auselen"},"score":25,"creation_date":1352884657},{"owner":{"reputation":3997,"user_id":1689695,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/ca8c74acad7784cfc93b15c9782bcbf6?s=128&d=identicon&r=PG","display_name":"CocoNess","link":"https://stackoverflow.com/users/1689695/coconess"},"score":0,"creation_date":1352885627},{"owner":{"user_type":"does_not_exist","display_name":"user479870"},"score":0,"creation_date":1352885862},{"owner":{"reputation":1642,"user_id":205877,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/3hFfT.jpg?s=128&g=1","display_name":"greenie","link":"https://stackoverflow.com/users/205877/greenie"},"score":13,"creation_date":1352885919},{"owner":{"user_type":"does_not_exist","display_name":"user479870"},"score":1,"creation_date":1352885979},{"owner":{"reputation":25584,"user_id":1163019,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/47a57beaec8e4221a9e18ca9b876e8b2?s=128&d=identicon&r=PG","display_name":"auselen","link":"https://stackoverflow.com/users/1163019/auselen"},"score":54,"creation_date":1352886449},{"owner":{"reputation":13807,"user_id":27206,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/94afce4e8f9766b629aba101b50cfc18?s=128&d=identicon&r=PG","display_name":"James Gregory","link":"https://stackoverflow.com/users/27206/james-gregory"},"score":1,"creation_date":1352887763},{"owner":{"reputation":1103,"user_id":5948,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/08c46737e830c3aeb4cbbde14dd57393?s=128&d=identicon&r=PG","display_name":"Mark Allen","link":"https://stackoverflow.com/users/5948/mark-allen"},"score":4,"creation_date":1353023781},{"owner":{"reputation":77059,"user_id":396458,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/16961c15df3fee8c4b3056ff83d1938b?s=128&d=identicon&r=PG","display_name":"NullUserException","link":"https://stackoverflow.com/users/396458/nulluserexception"},"score":2,"creation_date":1353024233},{"owner":{"reputation":1220,"user_id":1126459,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/e6a9b5ac135325506a299b7840536661?s=128&d=identicon&r=PG","display_name":"CupOfTea696","link":"https://stackoverflow.com/users/1126459/cupoftea696"},"score":18,"creation_date":1353448746},{"owner":{"reputation":2307,"user_id":529664,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/d347f545b426bebe31729e80cb15781b?s=128&d=identicon&r=PG","display_name":"om252345","link":"https://stackoverflow.com/users/529664/om252345"},"score":1,"creation_date":1391105167},{"owner":{"reputation":713,"user_id":799322,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8983d49f085ddcfdcdd509a699bb3fb4?s=128&d=identicon&r=PG","display_name":"Thanos","link":"https://stackoverflow.com/users/799322/thanos"},"score":0,"creation_date":1569823465},{"owner":{"reputation":3058,"user_id":1541397,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/991c4e6d0872e18880e3e0ff51cdf5a2?s=128&d=identicon&r=PG","display_name":"David Callanan","link":"https://stackoverflow.com/users/1541397/david-callanan"},"score":0,"creation_date":1578153159},{"owner":{"reputation":16803,"user_id":1079901,"user_type":"registered","accept_rate":87,"profile_image":"https://i.stack.imgur.com/oEWB8.png?s=128&g=1","display_name":"noob","link":"https://stackoverflow.com/users/1079901/noob"},"score":0,"creation_date":1592760779}],"owner":{"user_type":"does_not_exist","display_name":"user479870"},"comment_count":14,"score":776,"creation_date":1352883787,"body_markdown":"This appears to be an inside joke at Google. It&#39;s also featured in the Google Chrome task manager. It has no purpose, other than some engineers finding it amusing. Which is a purpose by itself, if you will.\r\n\r\n1. In Chrome, open the Task Manager with &lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Esc&lt;/kbd&gt;. \r\n2. Right click to add the  `Goats Teleported` column.\r\n3. Wonder.\r\n\r\nThere is even a huge Chromium bug report about [too many teleported goats][1].\r\n\r\n![chrome][2]  \r\n\r\nThe following Chromium [source code snippet][3] is stolen from the [HN][4] comments.\r\n\r\n\r\n    int TaskManagerModel::GetGoatsTeleported(int index) const {\r\n      int seed = goat_salt_ * (index + 1);\r\n      return (seed &gt;&gt; 16) &amp; 255;\r\n    }\r\n\r\n  [1]: http://code.google.com/p/chromium/issues/detail?id=31482\r\n  [2]: http://i.stack.imgur.com/1nwdC.png\r\n  [3]: http://git.chromium.org/gitweb/?p=chromium.git;a=blob;f=chrome/browser/task_manager/task_manager.cc;h=ad46354259ec8687c8665820f9f53bf89ccc715d;hb=HEAD#l599\r\n  [4]: http://news.ycombinator.com/item?id=4782574","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"comments":[{"owner":{"reputation":54107,"user_id":1339987,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/76aa5ba88e0d95b6480113239fe50008?s=128&d=identicon&r=PG","display_name":"djechlin","link":"https://stackoverflow.com/users/1339987/djechlin"},"score":1,"creation_date":1352905559},{"owner":{"reputation":8025,"user_id":347348,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/40cd07bc9546df9840ba02f04607f681?s=128&d=identicon&r=PG","display_name":"Andy","link":"https://stackoverflow.com/users/347348/andy"},"score":2,"creation_date":1352916819},{"owner":{"reputation":14767,"user_id":216111,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4f6b5ef485ac16233e1536193245fc55?s=128&d=identicon&r=PG","display_name":"josefx","link":"https://stackoverflow.com/users/216111/josefx"},"score":11,"creation_date":1352924677},{"owner":{"reputation":54107,"user_id":1339987,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/76aa5ba88e0d95b6480113239fe50008?s=128&d=identicon&r=PG","display_name":"djechlin","link":"https://stackoverflow.com/users/1339987/djechlin"},"score":2,"creation_date":1352924807},{"owner":{"reputation":14767,"user_id":216111,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4f6b5ef485ac16233e1536193245fc55?s=128&d=identicon&r=PG","display_name":"josefx","link":"https://stackoverflow.com/users/216111/josefx"},"score":0,"creation_date":1352925380},{"owner":{"reputation":54107,"user_id":1339987,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/76aa5ba88e0d95b6480113239fe50008?s=128&d=identicon&r=PG","display_name":"djechlin","link":"https://stackoverflow.com/users/1339987/djechlin"},"score":10,"creation_date":1352944898},{"owner":{"reputation":54107,"user_id":1339987,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/76aa5ba88e0d95b6480113239fe50008?s=128&d=identicon&r=PG","display_name":"djechlin","link":"https://stackoverflow.com/users/1339987/djechlin"},"score":2,"creation_date":1381333384},{"owner":{"reputation":7947,"user_id":440921,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/UnEvy.jpg?s=128&g=1","display_name":"Mark Whitaker","link":"https://stackoverflow.com/users/440921/mark-whitaker"},"score":174,"creation_date":1415190596},{"owner":{"reputation":6625,"user_id":152796,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/ffffd204ecbbae82a04f5b574d76746b?s=128&d=identicon&r=PG","display_name":"thedayturns","link":"https://stackoverflow.com/users/152796/thedayturns"},"score":14,"creation_date":1455760318},{"owner":{"reputation":457,"user_id":1928271,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/c37ae174afda83f600d9ec5a40e4218b?s=128&d=identicon&r=PG","display_name":"Szymon Drosdzol","link":"https://stackoverflow.com/users/1928271/szymon-drosdzol"},"score":10,"creation_date":1456751790},{"owner":{"reputation":44507,"user_id":106104,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG","display_name":"user253751","link":"https://stackoverflow.com/users/106104/user253751"},"score":2,"creation_date":1458424973},{"owner":{"reputation":342,"user_id":4773888,"user_type":"registered","profile_image":"https://i.stack.imgur.com/YMhMR.jpg?s=128&g=1","display_name":"BlueWizard","link":"https://stackoverflow.com/users/4773888/bluewizard"},"score":2,"creation_date":1479197820}],"owner":{"reputation":54107,"user_id":1339987,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/76aa5ba88e0d95b6480113239fe50008?s=128&d=identicon&r=PG","display_name":"djechlin","link":"https://stackoverflow.com/users/1339987/djechlin"},"comment_count":12,"score":994,"creation_date":1352904449,"body_markdown":"I don&#39;t know if this was &quot;the&quot; official use case, but the following produces a warning in Java (that can further produce compile errors if mixed with `return` statements, leading to unreachable code):\r\n\r\n    while (1 == 2) { // Note that &quot;if&quot; is treated differently\r\n        System.out.println(&quot;Unreachable code&quot;);\r\n    }\r\n\r\nHowever this is legal:\r\n\r\n    while (isUserAGoat()) {\r\n        System.out.println(&quot;Unreachable but determined at runtime, not at compile time&quot;);\r\n    }\r\n\r\nSo I often find myself writing a silly utility method for the quickest way to dummy out a code block, then in completing debugging find all calls to it, so provided the implementation doesn&#39;t change this can be used for that.\r\n\r\n[JLS](http://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html#jls-14.21) points out `if (false)` does not trigger &quot;unreachable code&quot; for the specific reason that this would break support for debug flags, i.e., basically this use case (h/t @auselen). (`static final boolean DEBUG = false;` for instance).\r\n\r\nI replaced `while` for `if`, producing a more obscure use case. I *believe* you can trip up your IDE, like Eclipse, with this behavior, but this edit is 4 years into the future, and I don&#39;t have an Eclipse environment to play with.\r\n\r\n","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"comments":[{"owner":{"reputation":1579,"user_id":1482388,"user_type":"registered","accept_rate":76,"profile_image":"https://www.gravatar.com/avatar/a5d1728a81f479389bf474290e5b96db?s=128&d=identicon&r=PG","display_name":"Angelo.Hannes","link":"https://stackoverflow.com/users/1482388/angelo-hannes"},"score":11,"creation_date":1352968243},{"owner":{"reputation":6898,"user_id":628447,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/b1e3e0cfe207c32be204d7258580fe6d?s=128&d=identicon&r=PG","display_name":"Aracem","link":"https://stackoverflow.com/users/628447/aracem"},"score":48,"creation_date":1352976111},{"owner":{"reputation":5777,"user_id":22545,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3ae195fdc56e0bb8fb98536ac442efcb?s=128&d=identicon&r=PG","display_name":"Gerry Coll","link":"https://stackoverflow.com/users/22545/gerry-coll"},"score":8,"creation_date":1352976764},{"owner":{"reputation":6247,"user_id":244521,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/e0b93762fe53d7a5d1ca735404961eba?s=128&d=identicon&r=PG","display_name":"Lance Nanek","link":"https://stackoverflow.com/users/244521/lance-nanek"},"score":12,"creation_date":1352988665},{"owner":{"reputation":32517,"user_id":216517,"user_type":"registered","accept_rate":76,"profile_image":"https://www.gravatar.com/avatar/9d5cb786a40fe045ecacad6b29eb782a?s=128&d=identicon&r=PG","display_name":"st0le","link":"https://stackoverflow.com/users/216517/st0le"},"score":18,"creation_date":1352991491},{"owner":{"reputation":398,"user_id":116853,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/65278539c6c7b4e07bcb8a71e5e2a342?s=128&d=identicon&r=PG","display_name":"peejaybee","link":"https://stackoverflow.com/users/116853/peejaybee"},"score":5,"creation_date":1362493436},{"owner":{"reputation":382,"user_id":4144974,"user_type":"registered","profile_image":"https://i.stack.imgur.com/pXJYy.png?s=128&g=1","display_name":"Emil S.","link":"https://stackoverflow.com/users/4144974/emil-s"},"score":2,"creation_date":1542300164}],"owner":{"reputation":6247,"user_id":244521,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/e0b93762fe53d7a5d1ca735404961eba?s=128&d=identicon&r=PG","display_name":"Lance Nanek","link":"https://stackoverflow.com/users/244521/lance-nanek"},"comment_count":7,"score":154,"creation_date":1352913964,"body_markdown":"There&#39;s a funny named method/constant/whatever in each version of Android. \r\n\r\nThe only practical use I ever saw was in the Last Call for [Google I/O][1] Contest where they asked what it was for a particular version, to see if contestants read the API diff report for each release. The contest had programming problems too, but generally some trivia that could be graded automatically first to get the number of submissions down to reasonable amounts that would be easier to check.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Google_I/O\r\n","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"comments":[{"owner":{"reputation":29389,"user_id":249538,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/1h9re.jpg?s=128&g=1","display_name":"goat","link":"https://stackoverflow.com/users/249538/goat"},"score":4,"creation_date":1410928192}],"owner":{"reputation":3770,"user_id":504299,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/63029017891acda218fbac25a93b4b1d?s=128&d=identicon&r=PG","display_name":"rickyduck","link":"https://stackoverflow.com/users/504299/rickyduck"},"comment_count":1,"score":130,"creation_date":1352975623,"body_markdown":"Google has a serious liking for goats and goat based [Easter eggs][1]. There has even been [previous Stack&amp;nbsp;Overflow posts about it][2]. \r\n\r\nAs has been mentioned in previous posts, it also exists within the Chrome task manager ([it first appeared in the wild in 2009][3]):\r\n\r\n    &lt;message name=&quot;IDS_TASK_MANAGER_GOATS_TELEPORTED_COLUMN&quot; desc=&quot;The goats teleported column&quot;&gt;\r\n        Goats Teleported\r\n    &lt;/message&gt;\r\n\r\n[And then in Windows, Linux and Mac versions of Chrome early 2010][4]). The number of &quot;Goats Teleported&quot; is in fact [random][5]:\r\n\r\n     int TaskManagerModel::GetGoatsTeleported(int index) const {\r\n         int seed = goat_salt_ * (index + 1);\r\n         return (seed &gt;&gt; 16) &amp; 255;\r\n     }\r\n\r\nOther Google references to goats include:\r\n\r\n- [Mowing with goats][6]\r\n- [The goats are baaaahk][7]\r\n\r\nThe earliest correlation of goats and Google belongs in the original &quot;Mowing with goats&quot; blog post, as far as I can tell.\r\n\r\nWe can safely assume that it&#39;s merely an Easter egg and has no real-world use, except for returning `false`.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Easter_egg_%28media%29#Software\r\n  [2]: https://stackoverflow.com/questions/3350892/graph-goat-teleportation-data-with-google-vis-api-via-chrome-extension\r\n  [3]: http://src.chromium.org/viewvc/chrome/trunk/src/chrome/app/generated_resources.grd?r1=27169&amp;r2=27216\r\n  [4]: http://techie-buzz.com/featured/google-chrome-goats-teleported-easter-egg.html\r\n  [5]: http://git.chromium.org/gitweb/?p=chromium.git;a=blob;f=chrome/browser/task_manager/task_manager.cc;h=ad46354259ec8687c8665820f9f53bf89ccc715d;hb=HEAD#l599\r\n  [6]: http://googleblog.blogspot.co.uk/2009/05/mowing-with-goats.html\r\n  [7]: http://googleblog.blogspot.co.uk/2010/04/goats-are-baaaahk.html\r\n","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"comments":[{"owner":{"reputation":664,"user_id":1024129,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/0c1a66f8237516543d0f90f2be07cf02?s=128&d=identicon&r=PG","display_name":"CtrlF","link":"https://stackoverflow.com/users/1024129/ctrlf"},"score":3,"creation_date":1390896988}],"owner":{"reputation":3345,"user_id":1143639,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/2ad387b358af367c236a391275c11af3?s=128&d=identicon&r=PG&f=1","display_name":"KDEx","link":"https://stackoverflow.com/users/1143639/kdex"},"comment_count":1,"score":112,"creation_date":1353101623,"body_markdown":"There is a similar call, `isUserAMonkey()`, that returns true if the [MonkeyRunner tool][1] is being used. The SDK explanation is just as curious as this one. \r\n\r\n&gt;     public static boolean isUserAMonkey(){}     \r\n&gt; Returns `true` if the user interface is currently being messed with by a monkey.\r\n\r\n[Here][2] is the source. \r\n\r\nI expect that this was added in anticipation of a new [SDK][3] tool named something with a goat and will *actually* be functional to test for the presence of that tool.  \r\n\r\nAlso see a similar question, **[Strange function in ActivityManager: isUserAMonkey. What does this mean, what is its use?][4]**.\r\n\r\n  [1]: http://developer.android.com/tools/help/monkeyrunner_concepts.html\r\n  [2]: http://developer.android.com/reference/android/app/ActivityManager.html\r\n  [3]: http://en.wikipedia.org/wiki/Software_development_kit\r\n  [4]: https://stackoverflow.com/questions/7792123/strange-function-in-activitymanager-isuseramonkey-what-does-this-mean-what-i\r\n","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"comments":[{"owner":{"reputation":3416,"user_id":415625,"user_type":"registered","profile_image":"https://i.stack.imgur.com/tzF8H.jpg?s=128&g=1","display_name":"Tomasz","link":"https://stackoverflow.com/users/415625/tomasz"},"score":15,"creation_date":1367353017},{"owner":{"reputation":14618,"user_id":1041822,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1fc976c3c3e2819f639f300378692c6d?s=128&d=identicon&r=PG","display_name":"higuaro","link":"https://stackoverflow.com/users/1041822/higuaro"},"score":21,"creation_date":1368051519},{"owner":{"reputation":3416,"user_id":415625,"user_type":"registered","profile_image":"https://i.stack.imgur.com/tzF8H.jpg?s=128&g=1","display_name":"Tomasz","link":"https://stackoverflow.com/users/415625/tomasz"},"score":4,"creation_date":1368063638},{"owner":{"reputation":14618,"user_id":1041822,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1fc976c3c3e2819f639f300378692c6d?s=128&d=identicon&r=PG","display_name":"higuaro","link":"https://stackoverflow.com/users/1041822/higuaro"},"score":9,"creation_date":1368715903},{"owner":{"reputation":1423,"user_id":3813188,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/8f00a75b89f2346ba7cb9c339d9858b3?s=128&d=identicon&r=PG&f=1","display_name":"Bassinator","link":"https://stackoverflow.com/users/3813188/bassinator"},"score":2,"creation_date":1489600633},{"owner":{"reputation":1126,"user_id":1806193,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/d43d36c8c11f80e149f04978200b7414?s=128&d=identicon&r=PG","display_name":"luizfzs","link":"https://stackoverflow.com/users/1806193/luizfzs"},"score":0,"creation_date":1497457375},{"owner":{"reputation":67931,"user_id":1081110,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Fp4Pm.jpg?s=128&g=1","display_name":"Dawood ibn Kareem","link":"https://stackoverflow.com/users/1081110/dawood-ibn-kareem"},"score":1,"creation_date":1523823747},{"owner":{"reputation":3139,"user_id":1900770,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c1a8a6be3c115dba1b54264bbc103ffa?s=128&d=identicon&r=PG","display_name":"Davide","link":"https://stackoverflow.com/users/1900770/davide"},"score":0,"creation_date":1576843007}],"owner":{"reputation":14618,"user_id":1041822,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1fc976c3c3e2819f639f300378692c6d?s=128&d=identicon&r=PG","display_name":"higuaro","link":"https://stackoverflow.com/users/1041822/higuaro"},"comment_count":8,"score":298,"creation_date":1353516912,"body_markdown":"Complementing the @djechlin [answer][1] (good answer by the way!), this function call could be **also** used as dummy code to hold a breakpoint in an IDE when you want to stop in some specific iteration or a particular recursive call, for example:\r\n\r\n![enter image description here][2]\r\n\r\n\r\n`isUserAGoat()` could be used instead of a dummy variable declaration that will be shown in the IDE as a warning and, in Eclipse particular case, will clog the breakpoint mark, making it difficult to enable/disable it. If the method is used as a convention, all the invocations could be later filtered by some script (during commit phase maybe?).\r\n\r\n![enter image description here][3]\r\n\r\n\r\nGoogle guys are heavy Eclipse users (they provide several of their projects as Eclipse plugins: Android SDK, GAE, etc), so the @djechlin answer and this complementary answer make a lot of sense (at least for me).\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/13381101/956397\r\n  [2]: http://i.stack.imgur.com/mW1Lf.png\r\n  [3]: http://i.stack.imgur.com/MFIBa.png","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"owner":{"reputation":2983,"user_id":602856,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/eeeab38a47f70a5043b2d2e5531d8a8b?s=128&d=identicon&r=PG","display_name":"rainer198","link":"https://stackoverflow.com/users/602856/rainer198"},"comment_count":0,"score":146,"creation_date":1369992824,"body_markdown":"In the discipline of speech recognition, users are divided into _goats_ and _sheeps_. \r\n\r\nFor instance, here **[on page 89][1]**:\r\n\r\n&gt; Sheeps are people for whom speech recognition works exceptionally well, and goats are people for whom it works exceptionally poorly. Only the voice recognizer knows what separates them. People can&#39;t predict whose voice will be recognized easily and whose won&#39;t. The best policy is to design the interface so it can handle all kinds of voices in all kinds of environments\r\n\r\nMaybe, it is planned to mark Android users as goats in the future to be able to configure the speech recognition engine for goats&#39; needs. ;-)\r\n\r\n  [1]: http://books.google.de/books?id=QWJ7KVMQk0cC&amp;lpg=PR1&amp;dq=voice%20enabling%20web&amp;hl=de&amp;pg=PA89#v=onepage&amp;q=voice%20enabling%20web&amp;f=false\r\n","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"owner":{"reputation":2606,"user_id":2619679,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/c27382e347a9dc46d04fac17bc23f885?s=128&d=identicon&r=PG&f=1","display_name":"j.c","link":"https://stackoverflow.com/users/2619679/j-c"},"comment_count":0,"score":43,"creation_date":1391682913,"body_markdown":"Funny Easter Egg.&lt;br/&gt; \r\nIn Ubuntu version of Chrome, in Task Manager (&lt;kbd&gt;shift&lt;/kbd&gt;+&lt;kbd&gt;esc&lt;/kbd&gt;), with right-click you can add a sci-fi column that in italian version is &quot;Capre Teletrasportate&quot; (Teleported Goats).\r\n\r\nA funny theory about it is [here][1].\r\n\r\n\r\n  [1]: http://news.softpedia.com/news/Chrome-s-quot-Goats-Teleported-quot-Easter-Egg-Hints-at-a-Wonderful-Future-323197.shtml","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"comments":[{"owner":{"reputation":54107,"user_id":1339987,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/76aa5ba88e0d95b6480113239fe50008?s=128&d=identicon&r=PG","display_name":"djechlin","link":"https://stackoverflow.com/users/1339987/djechlin"},"score":20,"creation_date":1415203019},{"owner":{"reputation":44507,"user_id":106104,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG","display_name":"user253751","link":"https://stackoverflow.com/users/106104/user253751"},"score":0,"creation_date":1601048237}],"owner":{"reputation":7947,"user_id":440921,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/UnEvy.jpg?s=128&g=1","display_name":"Mark Whitaker","link":"https://stackoverflow.com/users/440921/mark-whitaker"},"comment_count":2,"score":133,"creation_date":1413799229,"body_markdown":"[As of API 21 (the first Android 5.0/Lollipop SDK)](https://android.googlesource.com/platform/frameworks/base/+/android-5.0.0_r1/core/java/android/os/UserManager.java#433), this detects whether the [Goat Simulator][1] app is installed:\r\n\r\n    /**\r\n     * Used to determine whether the user making this call is subject to\r\n     * teleportations.\r\n     *\r\n     * &lt;p&gt;As of {@link android.os.Build.VERSION_CODES#LOLLIPOP}, this method can\r\n     * now automatically identify goats using advanced goat recognition technology.&lt;/p&gt;\r\n     *\r\n     * @return Returns true if the user making this call is a goat.\r\n     */\r\n    public boolean isUserAGoat() {\r\n        return mContext.getPackageManager()\r\n                .isPackageAvailable(&quot;com.coffeestainstudios.goatsimulator&quot;);\r\n    }\r\n\r\nThis should make it clear that [djechlin&#39;s suggestion][2] of using it as a warning-free `if (false)` is a potentially disastrous strategy. What previously returned `false` for every device now returns a seemingly random value: if this was buried deep enough in your code it could take a *long* time to figure out where your new bugs are coming from.\r\n\r\nBottom line: if you don&#39;t control the implementation of a method and decide to use it for purposes other than stated in the API documentation, you&#39;re heading for trouble.\r\n\r\n\r\n  [1]: https://play.google.com/store/apps/details?id=com.coffeestainstudios.goatsimulator&amp;hl=en\r\n  [2]: https://stackoverflow.com/questions/13375357/proper-use-cases-for-android-usermanager-isuseragoat/13381101#13381101","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"comments":[{"owner":{"reputation":573,"user_id":5791681,"user_type":"registered","profile_image":"https://i.stack.imgur.com/8h6rA.jpg?s=128&g=1","display_name":"Ricardo A.","link":"https://stackoverflow.com/users/5791681/ricardo-a"},"score":11,"creation_date":1559650032},{"owner":{"reputation":13472,"user_id":497132,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/Ou3th.jpg?s=128&g=1","display_name":"artem","link":"https://stackoverflow.com/users/497132/artem"},"score":2,"creation_date":1597693305}],"owner":{"reputation":434,"user_id":6116090,"user_type":"registered","profile_image":"https://i.stack.imgur.com/bWBZ2.png?s=128&g=1","display_name":"Gadget Guru","link":"https://stackoverflow.com/users/6116090/gadget-guru"},"comment_count":2,"score":4,"creation_date":1542481902,"body_markdown":"**It&#39;s not an inside joke**\r\n\r\nApparently it&#39;s just an application checker for\r\n[Goat Simulator - by Coffee Stain Studios][1]\r\n\r\nIf you have Goat Simulator installed, you&#39;re a goat.\r\nIf you don&#39;t have it installed, you&#39;re not a goat.\r\n\r\nI imagine it was more of a personal experiment by one of the developers, most likely to find people with a common interest.\r\n\r\n  [1]: https://play.google.com/store/apps/details?id=com.coffeestainstudios.goatsimulator","title":"Proper use cases for Android UserManager.isUserAGoat()?"}],"owner":{"reputation":67951,"user_id":542091,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/rQ7vZ.jpg?s=128&g=1","display_name":"Ovidiu Latcu","link":"https://stackoverflow.com/users/542091/ovidiu-latcu"},"comment_count":5,"is_answered":true,"answer_count":11,"score":3734,"creation_date":1352882041,"question_id":13375357,"body_markdown":"I was looking at the new APIs introduced in [Android 4.2][1].\r\nWhile looking at the [`UserManager`][2] class I came across the following method:\r\n\r\n&gt;     public boolean isUserAGoat()\r\n&gt; \r\n&gt; Used to determine whether the user making this call is subject to teleportations.\r\n&gt; \r\n&gt; Returns whether the user making this call is a goat.\r\n\r\nHow and when should this be used?\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Android_version_history#Android_4.1.2F4.2_Jelly_Bean\r\n  [2]: http://developer.android.com/reference/android/os/UserManager.html","link":"https://stackoverflow.com/questions/13375357/proper-use-cases-for-android-usermanager-isuseragoat","title":"Proper use cases for Android UserManager.isUserAGoat()?"},{"tags":["java","casting","operators","variable-assignment","assignment-operator"],"comments":[{"owner":{"reputation":1558,"user_id":4362954,"user_type":"registered","profile_image":"https://i.stack.imgur.com/RZVv4.jpg?s=128&g=1","display_name":"SQLDiver","link":"https://stackoverflow.com/users/4362954/sqldiver"},"score":140,"creation_date":1420475508},{"owner":{"reputation":7455,"user_id":2075524,"user_type":"registered","accept_rate":88,"profile_image":"https://i.stack.imgur.com/zXhmg.png?s=128&g=1","display_name":"Ross Drew","link":"https://stackoverflow.com/users/2075524/ross-drew"},"score":114,"creation_date":1446456272},{"owner":{"reputation":796,"user_id":5932611,"user_type":"registered","profile_image":"https://i.stack.imgur.com/iYD5D.jpg?s=128&g=1","display_name":"Tharindu Sathischandra","link":"https://stackoverflow.com/users/5932611/tharindu-sathischandra"},"score":10,"creation_date":1458287122},{"owner":{"reputation":22366,"user_id":1915893,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/580b31b0be7173bbc477ca1d6967d87c?s=128&d=identicon&r=PG","display_name":"Aluan Haddad","link":"https://stackoverflow.com/users/1915893/aluan-haddad"},"score":0,"creation_date":1500558254},{"owner":{"reputation":30154,"user_id":1013719,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/U8X0A.jpg?s=128&g=1","display_name":"Ryan Haining","link":"https://stackoverflow.com/users/1013719/ryan-haining"},"score":1,"creation_date":1503276218},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":6,"creation_date":1505837024},{"owner":{"reputation":2637,"user_id":1070480,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/6c5c61cd66cede1455405ebc8e89d502?s=128&d=identicon&r=PG","display_name":"HelloGoodbye","link":"https://stackoverflow.com/users/1070480/hellogoodbye"},"score":2,"creation_date":1539856333},{"owner":{"reputation":2637,"user_id":1070480,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/6c5c61cd66cede1455405ebc8e89d502?s=128&d=identicon&r=PG","display_name":"HelloGoodbye","link":"https://stackoverflow.com/users/1070480/hellogoodbye"},"score":2,"creation_date":1539856465},{"owner":{"reputation":133,"user_id":1683629,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/66c99827597303d24daaf0d72f45dd8f?s=128&d=identicon&r=PG","display_name":"Norill Tempest","link":"https://stackoverflow.com/users/1683629/norill-tempest"},"score":6,"creation_date":1540386575},{"owner":{"reputation":27765,"user_id":981744,"user_type":"registered","profile_image":"https://i.stack.imgur.com/qJi4S.png?s=128&g=1","display_name":"Erwin Bolwidt","link":"https://stackoverflow.com/users/981744/erwin-bolwidt"},"score":0,"creation_date":1548198448},{"owner":{"reputation":1558,"user_id":4362954,"user_type":"registered","profile_image":"https://i.stack.imgur.com/RZVv4.jpg?s=128&g=1","display_name":"SQLDiver","link":"https://stackoverflow.com/users/4362954/sqldiver"},"score":0,"creation_date":1567777701},{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":0,"creation_date":1606955108}],"answers":[{"comments":[{"owner":{"reputation":1354,"user_id":1114457,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/8e36b2cdc8d8ba3e26be043fec029430?s=128&d=identicon&r=PG","display_name":"bad_keypoints","link":"https://stackoverflow.com/users/1114457/bad-keypoints"},"score":43,"creation_date":1348294041},{"owner":{"reputation":177753,"user_id":521799,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/eb96efa7a5664ba1c4ebf586abd4121f?s=128&d=identicon&r=PG","display_name":"Lukas Eder","link":"https://stackoverflow.com/users/521799/lukas-eder"},"score":47,"creation_date":1348302719},{"owner":{"reputation":1354,"user_id":1114457,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/8e36b2cdc8d8ba3e26be043fec029430?s=128&d=identicon&r=PG","display_name":"bad_keypoints","link":"https://stackoverflow.com/users/1114457/bad-keypoints"},"score":12,"creation_date":1348325547},{"owner":{"reputation":35520,"user_id":1424875,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/HFA9w.png?s=128&g=1","display_name":"nanofarad","link":"https://stackoverflow.com/users/1424875/nanofarad"},"score":4,"creation_date":1376317704},{"owner":{"reputation":971,"user_id":2227222,"user_type":"registered","accept_rate":72,"profile_image":"https://www.gravatar.com/avatar/d80812002213736d9576158000e84d98?s=128&d=identicon&r=PG","display_name":"Hans","link":"https://stackoverflow.com/users/2227222/hans"},"score":2,"creation_date":1393288111},{"owner":{"reputation":177753,"user_id":521799,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/eb96efa7a5664ba1c4ebf586abd4121f?s=128&d=identicon&r=PG","display_name":"Lukas Eder","link":"https://stackoverflow.com/users/521799/lukas-eder"},"score":2,"creation_date":1393311209},{"owner":{"reputation":143,"user_id":4229629,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/56d76c0fb90562612e22509edda979e3?s=128&d=identicon&r=PG","display_name":"ThePyroEagle","link":"https://stackoverflow.com/users/4229629/thepyroeagle"},"score":11,"creation_date":1450818258},{"owner":{"reputation":3278,"user_id":2223027,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7eda60a3a729d8a42d7251cf78f4bff8?s=128&d=identicon&r=PG","display_name":"pyb","link":"https://stackoverflow.com/users/2223027/pyb"},"score":0,"creation_date":1459631688},{"owner":{"reputation":177753,"user_id":521799,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/eb96efa7a5664ba1c4ebf586abd4121f?s=128&d=identicon&r=PG","display_name":"Lukas Eder","link":"https://stackoverflow.com/users/521799/lukas-eder"},"score":6,"creation_date":1459687220},{"owner":{"reputation":548,"user_id":5795938,"user_type":"registered","profile_image":"https://i.stack.imgur.com/tPHml.png?s=128&g=1","display_name":"Stefan Neuhaus","link":"https://stackoverflow.com/users/5795938/stefan-neuhaus"},"score":1,"creation_date":1476551511},{"owner":{"reputation":177753,"user_id":521799,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/eb96efa7a5664ba1c4ebf586abd4121f?s=128&d=identicon&r=PG","display_name":"Lukas Eder","link":"https://stackoverflow.com/users/521799/lukas-eder"},"score":5,"creation_date":1500027657}],"owner":{"reputation":177753,"user_id":521799,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/eb96efa7a5664ba1c4ebf586abd4121f?s=128&d=identicon&r=PG","display_name":"Lukas Eder","link":"https://stackoverflow.com/users/521799/lukas-eder"},"comment_count":11,"score":2489,"creation_date":1325585723,"body_markdown":"As always with these questions, the JLS holds the answer. In this case [&#167;15.26.2 Compound Assignment Operators][1]. An extract:\r\n\r\n&gt; A compound assignment expression of the form &lt;code&gt;E1&amp;nbsp;op=&amp;nbsp;E2&lt;/code&gt; is equivalent to &lt;code&gt;E1&amp;nbsp;=&amp;nbsp;(T)((E1)&amp;nbsp;op&amp;nbsp;(E2))&lt;/code&gt;, where `T` is the type of `E1`, except that `E1` is evaluated only once.\r\n\r\nAn example cited from [&#167;15.26.2][1]\r\n\r\n&gt;   [...] the following code is correct:\r\n\r\n&gt;     short x = 3;\r\n    x += 4.6;\r\n\r\n&gt;    and results in x having the value 7 because it is equivalent to:\r\n\r\n&gt;     short x = 3;\r\n&gt;     x = (short)(x + 4.6);\r\n\r\nIn other words, your assumption is correct.\r\n\r\n  [1]: http://docs.oracle.com/javase/specs/jls/se14/html/jls-15.html#jls-15.26.2","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"comments":[{"owner":{"reputation":11735,"user_id":223339,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/2bd0d1b04580c60fccc0bfa94d261456?s=128&d=identicon&r=PG","display_name":"Romain","link":"https://stackoverflow.com/users/223339/romain"},"score":7,"creation_date":1325585838}],"owner":{"reputation":17300,"user_id":758708,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/b94e55c6b4ffe3fc2f20af7cf2d3dc94?s=128&d=identicon&r=PG","display_name":"dku.rajkumar","link":"https://stackoverflow.com/users/758708/dku-rajkumar"},"comment_count":1,"score":92,"creation_date":1325585748,"body_markdown":"you need to cast from `long` to `int` `explicitly` in case of `i = i + l`  then it will compile and give correct output. like \r\n\r\n    i = i + (int)l;\r\nor\r\n\r\n    i = (int)((long)i + l); // this is what happens in case of += , dont need (long) casting since upper casting is done implicitly.\r\n\r\nbut in case of `+=` it just works fine because the operator implicitly does the type casting from type of right variable to type of left variable so need not cast explicitly.","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"comments":[{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":17,"creation_date":1492716686},{"owner":{"reputation":1367,"user_id":426371,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/0a0b346c3bf9c2e739b80c452a8727b0?s=128&d=identicon&r=PG","display_name":"neXus","link":"https://stackoverflow.com/users/426371/nexus"},"score":5,"creation_date":1537533226},{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":1,"creation_date":1537542306},{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":1,"creation_date":1537542473}],"owner":{"reputation":18698,"user_id":137369,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/4a71acdbeaa4a25f132b37d2aeaece89?s=128&d=identicon&r=PG","display_name":"Thirler","link":"https://stackoverflow.com/users/137369/thirler"},"comment_count":4,"score":261,"creation_date":1325585855,"body_markdown":"Very good question. The [Java Language specification][1] confirms your suggestion.\r\n\r\n&gt; For example, the following code is correct:\r\n&gt; \r\n&gt; \r\n&gt;     short x = 3;\r\n&gt;     x += 4.6;\r\n&gt; \r\n&gt; and results in x having the value 7 because it is equivalent to:\r\n&gt; \r\n&gt; \r\n&gt;     short x = 3;\r\n&gt;     x = (short)(x + 4.6);\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.26.2","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"comments":[{"owner":{"reputation":35520,"user_id":1424875,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/HFA9w.png?s=128&g=1","display_name":"nanofarad","link":"https://stackoverflow.com/users/1424875/nanofarad"},"score":3,"creation_date":1376317755},{"owner":{"reputation":22520,"user_id":471607,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/f0cd8105fa92762569fd03b750d7a1f9?s=128&d=identicon&r=PG","display_name":"Umesh Awasthi","link":"https://stackoverflow.com/users/471607/umesh-awasthi"},"score":7,"creation_date":1376320643},{"owner":{"reputation":35520,"user_id":1424875,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/HFA9w.png?s=128&g=1","display_name":"nanofarad","link":"https://stackoverflow.com/users/1424875/nanofarad"},"score":4,"creation_date":1376333868},{"owner":{"reputation":80637,"user_id":296974,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/0e26cfe3ac75cd582ca200fbc6fa0421?s=128&d=identicon&r=PG","display_name":"glglgl","link":"https://stackoverflow.com/users/296974/glglgl"},"score":1,"creation_date":1424066905},{"owner":{"reputation":5008,"user_id":1646170,"user_type":"registered","accept_rate":49,"profile_image":"https://i.stack.imgur.com/kZdw4.jpg?s=128&g=1","display_name":"Bogdan Alexandru","link":"https://stackoverflow.com/users/1646170/bogdan-alexandru"},"score":7,"creation_date":1424097722},{"owner":{"reputation":80637,"user_id":296974,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/0e26cfe3ac75cd582ca200fbc6fa0421?s=128&d=identicon&r=PG","display_name":"glglgl","link":"https://stackoverflow.com/users/296974/glglgl"},"score":0,"creation_date":1424118896}],"owner":{"reputation":22520,"user_id":471607,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/f0cd8105fa92762569fd03b750d7a1f9?s=128&d=identicon&r=PG","display_name":"Umesh Awasthi","link":"https://stackoverflow.com/users/471607/umesh-awasthi"},"comment_count":6,"score":181,"creation_date":1325585988,"body_markdown":"Yes,\r\n\r\nbasically when we write\r\n\r\n    i += l; \r\n\r\nthe compiler converts this to \r\n\r\n    i = (int)(i + l);\r\n\r\nI just checked the `.class` file code.\r\n\r\nReally a good thing to know","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"comments":[{"owner":{"reputation":7240,"user_id":1765039,"user_type":"registered","profile_image":"https://i.stack.imgur.com/n7KQv.jpg?s=128&g=1","display_name":"Sajal Dutta","link":"https://stackoverflow.com/users/1765039/sajal-dutta"},"score":12,"creation_date":1399327678},{"owner":{"reputation":67931,"user_id":1081110,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Fp4Pm.jpg?s=128&g=1","display_name":"Dawood ibn Kareem","link":"https://stackoverflow.com/users/1081110/dawood-ibn-kareem"},"score":87,"creation_date":1401269101},{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"score":108,"creation_date":1401281775},{"owner":{"reputation":12952,"user_id":4684058,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/vhz3N.jpg?s=128&g=1","display_name":"Minhas Kamal","link":"https://stackoverflow.com/users/4684058/minhas-kamal"},"score":16,"creation_date":1458106144}],"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"comment_count":4,"score":494,"creation_date":1325586003,"body_markdown":"A good example of this casting is using *= or /=\r\n\r\n    byte b = 10;\r\n    b *= 5.7;\r\n    System.out.println(b); // prints 57\r\n\r\nor\r\n\r\n    byte b = 100;\r\n    b /= 2.5;\r\n    System.out.println(b); // prints 40\r\n\r\nor\r\n\r\n    char ch = &#39;0&#39;;\r\n    ch *= 1.1;\r\n    System.out.println(ch); // prints &#39;4&#39;\r\n\r\nor\r\n\r\n    char ch = &#39;A&#39;;\r\n    ch *= 1.5;\r\n    System.out.println(ch); // prints &#39;a&#39;\r\n\r\n","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"owner":{"reputation":2017,"user_id":1061518,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/d7cfcdbf0e37cd117ec0fd0c7f8d5eb9?s=128&d=identicon&r=PG&f=1","display_name":"dinesh028","link":"https://stackoverflow.com/users/1061518/dinesh028"},"comment_count":0,"score":64,"creation_date":1325586029,"body_markdown":"The problem here involves type casting.\r\n\r\nWhen you add int and long, \r\n\r\n1. The int object is casted to long &amp; both are added and you get long object.\r\n2. but long object cannot be implicitly casted to int. So, you have to do that explicitly.\r\n\r\nBut `+=` is coded in such a way that it does type casting. `i=(int)(i+m)`","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"comments":[{"owner":{"reputation":7416,"user_id":1418097,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/647fd44358712b7e73d70ae66daec14e?s=128&d=identicon&r=PG","display_name":"Display Name","link":"https://stackoverflow.com/users/1418097/display-name"},"score":2,"creation_date":1377857831},{"owner":{"reputation":2266,"user_id":1614599,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/62bb990b86bd625d7e46c9f6794f27fe?s=128&d=identicon&r=PG&f=1","display_name":"Alex MDC","link":"https://stackoverflow.com/users/1614599/alex-mdc"},"score":11,"creation_date":1378759284},{"owner":{"reputation":1027,"user_id":2862100,"user_type":"registered","accept_rate":33,"profile_image":"https://www.gravatar.com/avatar/f4e0dd53bc1bb6a8fabf6da4f0dac367?s=128&d=identicon&r=PG&f=1","display_name":"Luke","link":"https://stackoverflow.com/users/2862100/luke"},"score":2,"creation_date":1383830517},{"owner":{"reputation":143,"user_id":4229629,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/56d76c0fb90562612e22509edda979e3?s=128&d=identicon&r=PG","display_name":"ThePyroEagle","link":"https://stackoverflow.com/users/4229629/thepyroeagle"},"score":1,"creation_date":1450817973},{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":0,"creation_date":1492717237}],"owner":{"reputation":1245,"user_id":1891112,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/81b3619029da796bcc5afa3475ca7011?s=128&d=identicon&r=PG","display_name":"tinker_fairy","link":"https://stackoverflow.com/users/1891112/tinker-fairy"},"comment_count":5,"score":55,"creation_date":1358920236,"body_markdown":"In Java type conversions are performed automatically when the type of the expression on the right hand side of an assignment operation can be safely promoted to the type of the variable on the left hand side of the assignment. Thus we can safely assign:  \r\n&lt;pre&gt; byte -&gt; short -&gt; int -&gt; long -&gt; float -&gt; double. &lt;/pre&gt;  \r\nThe same will not work the other way round. For example we cannot automatically convert a long to an int because the first requires more storage than the second and consequently information may be lost. To force such a conversion we must carry out an explicit conversion.  \r\n[Type - Conversion][1]\r\n\r\n\r\n  [1]: http://way2java.com/casting-operations/data-type-casting-type-conversion/","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"comments":[{"owner":{"reputation":4655,"user_id":3469725,"user_type":"registered","accept_rate":96,"profile_image":"https://i.stack.imgur.com/PokWK.jpg?s=128&g=1","display_name":"Thomas","link":"https://stackoverflow.com/users/3469725/thomas"},"score":6,"creation_date":1421268615},{"owner":{"reputation":6824,"user_id":2886891,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/yaE6t.png?s=128&g=1","display_name":"Honza Zidek","link":"https://stackoverflow.com/users/2886891/honza-zidek"},"score":2,"creation_date":1522062538}],"owner":{"reputation":1413,"user_id":3880437,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/U1hD4.jpg?s=128&g=1","display_name":"Stopfan","link":"https://stackoverflow.com/users/3880437/stopfan"},"comment_count":2,"score":46,"creation_date":1417516858,"body_markdown":"Sometimes, such a question can be asked at an interview.\r\n\r\nFor example, when you write:\r\n\r\n    int a = 2;\r\n    long b = 3;\r\n    a = a + b;\r\n\r\nthere is no automatic typecasting. In C++ there will not be any error compiling the above code, but in Java you will get something like `Incompatible type exception`.\r\n\r\nSo to avoid it, you must write your code like this:\r\n\r\n    int a = 2;\r\n    long b = 3;\r\n    a += b;// No compilation error or any exception due to the auto typecasting","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"comments":[{"owner":{"reputation":3180,"user_id":905033,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3a6b947cd4c65dce0c3493549f9f411c?s=128&d=identicon&r=PG","display_name":"Lew Bloch","link":"https://stackoverflow.com/users/905033/lew-bloch"},"score":5,"creation_date":1452374055}],"owner":{"reputation":445,"user_id":4594967,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/11fa0e426e42e2ff8823b10eaf7a01c0?s=128&d=identicon&r=PG&f=1","display_name":"takra","link":"https://stackoverflow.com/users/4594967/takra"},"comment_count":1,"score":25,"creation_date":1433719624,"body_markdown":"The main difference is that with `a = a + b`, there is no typecasting going on, and so the compiler gets angry at you for not typecasting. But with `a += b`, what it&#39;s really doing is typecasting `b` to a type compatible with `a`. So if you do \r\n\r\n    int a=5;\r\n    long b=10;\r\n    a+=b;\r\n    System.out.println(a);\r\nWhat you&#39;re really doing is: \r\n\r\n    int a=5;\r\n    long b=10;\r\n    a=a+(int)b;\r\n    System.out.println(a);","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"comments":[{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":1,"creation_date":1534192065}],"owner":{"reputation":193,"user_id":1084927,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/03e81b5b74ea4f4891a241a4f1043241?s=128&d=identicon&r=PG","display_name":"Gabe Nones","link":"https://stackoverflow.com/users/1084927/gabe-nones"},"comment_count":1,"score":12,"creation_date":1453147629,"body_markdown":"Subtle point here...\r\n\r\nThere is an implicit typecast for `i+j` when `j` is a double and `i` is an int.\r\nJava **ALWAYS** converts an integer into a double when there is an operation between them.\r\n\r\nTo clarify `i+=j` where `i` is an integer and `j` is a double can be described as\r\n\r\n    i = &lt;int&gt;(&lt;double&gt;i + j)\r\n\r\nSee: [this description of implicit casting][1]\r\n\r\nYou might want to typecast `j` to `(int)` in this case for clarity.\r\n\r\n  [1]: https://www.cs.cmu.edu/~pattis/15-1XX/15-200/lectures/voe/lecture.html#ImplicitConversion","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"owner":{"reputation":9697,"user_id":736054,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/omJT2.jpg?s=128&g=1","display_name":"Konrad Borowski","link":"https://stackoverflow.com/users/736054/konrad-borowski"},"comment_count":0,"score":6,"creation_date":1552061167,"body_markdown":"Java Language Specification [defines `E1 op= E2` to be equivalent to `E1 = (T) ((E1) op (E2))` where `T` is a type of `E1` and `E1` is evaluated once](https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2).\r\n\r\nThat&#39;s a technical answer, but you may be wondering why that&#39;s a case. Well, let&#39;s consider the following program.\r\n\r\n    public class PlusEquals {\r\n        public static void main(String[] args) {\r\n            byte a = 1;\r\n            byte b = 2;\r\n            a = a + b;\r\n            System.out.println(a);\r\n        }\r\n    }\r\n\r\n\r\nWhat does this program print?\r\n\r\nDid you guess 3? Too bad, this program won&#39;t compile. Why? Well, it so happens that addition of bytes in Java [is defined to return an `int`](https://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.6.2). This, I believe was because the Java Virtual Machine doesn&#39;t define byte operations to save on bytecodes (there is a limited number of those, after all), using integer operations instead is an implementation detail exposed in a language.\r\n\r\nBut if `a = a + b` doesn&#39;t work, that would mean `a += b` would never work for bytes if it `E1 += E2` was defined to be `E1 = E1 + E2`. As the previous example shows, that would be indeed the case. As a hack to make `+=` operator work for bytes and shorts, there is an implicit cast involved. It&#39;s not that great of a hack, but back during the Java 1.0 work, the focus was on getting the language released to begin with. Now, because of backwards compatibility, this hack introduced in Java 1.0 couldn&#39;t be removed.","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"}],"owner":{"reputation":36138,"user_id":1127571,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/00735aa8e45c6a3f4a79efe9cf689e40?s=128&d=identicon&r=PG","display_name":"Honza Brabec","link":"https://stackoverflow.com/users/1127571/honza-brabec"},"comment_count":12,"is_answered":true,"answer_count":11,"score":3715,"creation_date":1325585432,"question_id":8710619,"body_markdown":"Until today, I thought that for example:\r\n\r\n    i += j;\r\n\r\nWas just a shortcut for:\r\n\r\n    i = i + j;\r\n\r\nBut if we try this:\r\n\r\n    int i = 5;\r\n    long j = 8;\r\n\r\nThen `i = i + j;` will not compile but `i += j;` will compile fine.\r\n\r\nDoes it mean that in fact `i += j;` is a shortcut for something like this\r\n`i = (type of i) (i + j)`?\r\n\r\n    \r\n","link":"https://stackoverflow.com/questions/8710619/why-dont-javas-compound-assignment-operators-require-casting","title":"Why don&#39;t Java&#39;s +=, -=, *=, /= compound assignment operators require casting?"},{"tags":["java","random","integer"],"comments":[{"owner":{"reputation":2993,"user_id":132162,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/7e05ab5ffe3b7b0bc5a9f4aeaa847564?s=128&d=identicon&r=PG","display_name":"raupach","link":"https://stackoverflow.com/users/132162/raupach"},"score":0,"creation_date":1229163528},{"owner":{"reputation":2150,"user_id":1139105,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/m3xAB.png?s=128&g=1","display_name":"janniks","link":"https://stackoverflow.com/users/1139105/janniks"},"score":13,"creation_date":1580730815},{"owner":{"reputation":378,"user_id":9732672,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/16efd09c414d154fe863ac369c232708?s=128&d=identicon&r=PG&f=1","display_name":"NomadMaker","link":"https://stackoverflow.com/users/9732672/nomadmaker"},"score":0,"creation_date":1613668844}],"answers":[{"owner":{"reputation":69711,"user_id":23691,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/ffd58f2ec488a7160c4e7bbfdf179493?s=128&d=identicon&r=PG","display_name":"krosenvold","link":"https://stackoverflow.com/users/23691/krosenvold"},"comment_count":0,"score":171,"creation_date":1229106308,"body_markdown":"Use:\r\n\r\n    minimum + rn.nextInt(maxValue - minvalue + 1)\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":1833,"user_id":3017818,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/HpZY3.jpg?s=128&g=1","display_name":"Daniel","link":"https://stackoverflow.com/users/3017818/daniel"},"score":47,"creation_date":1407839670},{"owner":{"reputation":2879,"user_id":4297364,"user_type":"registered","profile_image":"https://i.stack.imgur.com/YcLoW.jpg?s=128&g=1","display_name":"Moishe Lipsker","link":"https://stackoverflow.com/users/4297364/moishe-lipsker"},"score":1,"creation_date":1434561508},{"owner":{"reputation":18081,"user_id":961018,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/jdMgW.jpg?s=128&g=1","display_name":"mmm","link":"https://stackoverflow.com/users/961018/mmm"},"score":3,"creation_date":1434566577},{"owner":{"reputation":2136,"user_id":726315,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/7e8b17e4d12c4a25b5700a9173925746?s=128&d=identicon&r=PG&f=1","display_name":"b1nary.atr0phy","link":"https://stackoverflow.com/users/726315/b1nary-atr0phy"},"score":1,"creation_date":1439859688},{"owner":{"reputation":18081,"user_id":961018,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/jdMgW.jpg?s=128&g=1","display_name":"mmm","link":"https://stackoverflow.com/users/961018/mmm"},"score":1,"creation_date":1439899305},{"owner":{"reputation":12491,"user_id":648955,"user_type":"registered","accept_rate":62,"profile_image":"https://i.stack.imgur.com/DUiuD.jpg?s=128&g=1","display_name":"leventov","link":"https://stackoverflow.com/users/648955/leventov"},"score":0,"creation_date":1441357636},{"owner":{"reputation":43015,"user_id":462,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dcda1d207d2f416d1608aa625fdedb7f?s=128&d=identicon&r=PG","display_name":"Greg Case","link":"https://stackoverflow.com/users/462/greg-case"},"score":14,"creation_date":1441936638},{"owner":{"reputation":43015,"user_id":462,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dcda1d207d2f416d1608aa625fdedb7f?s=128&d=identicon&r=PG","display_name":"Greg Case","link":"https://stackoverflow.com/users/462/greg-case"},"score":2,"creation_date":1444625495},{"owner":{"reputation":1875,"user_id":3464919,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ec6f8ae7b324f7b67f37f72351bc807d?s=128&d=identicon&r=PG","display_name":"Webserveis","link":"https://stackoverflow.com/users/3464919/webserveis"},"score":6,"creation_date":1475524505},{"owner":{"reputation":43015,"user_id":462,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dcda1d207d2f416d1608aa625fdedb7f?s=128&d=identicon&r=PG","display_name":"Greg Case","link":"https://stackoverflow.com/users/462/greg-case"},"score":6,"creation_date":1475540957},{"owner":{"reputation":726,"user_id":5370518,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/1a4e85da22144d2a1cc3856f4772f4b3?s=128&d=identicon&r=PG&f=1","display_name":"Chit Khine","link":"https://stackoverflow.com/users/5370518/chit-khine"},"score":1,"creation_date":1488873758},{"owner":{"reputation":43015,"user_id":462,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dcda1d207d2f416d1608aa625fdedb7f?s=128&d=identicon&r=PG","display_name":"Greg Case","link":"https://stackoverflow.com/users/462/greg-case"},"score":5,"creation_date":1489374584},{"owner":{"reputation":1254,"user_id":5365075,"user_type":"registered","accept_rate":76,"profile_image":"https://www.gravatar.com/avatar/bc5aa3379123758f320a5afa713f813d?s=128&d=identicon&r=PG&f=1","display_name":"user5365075","link":"https://stackoverflow.com/users/5365075/user5365075"},"score":0,"creation_date":1519131895},{"owner":{"reputation":1104,"user_id":7322834,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f6c6214f6645964f70bc7960bc3b7e6f?s=128&d=identicon&r=PG&f=1","display_name":"Aman","link":"https://stackoverflow.com/users/7322834/aman"},"score":0,"creation_date":1542201580}],"owner":{"reputation":43015,"user_id":462,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dcda1d207d2f416d1608aa625fdedb7f?s=128&d=identicon&r=PG","display_name":"Greg Case","link":"https://stackoverflow.com/users/462/greg-case"},"comment_count":14,"score":3966,"creation_date":1229106327,"body_markdown":"In **Java 1.7 or later**, the standard way to do this is as follows:\r\n\r\n    import java.util.concurrent.ThreadLocalRandom;\r\n\r\n    // nextInt is normally exclusive of the top value,\r\n    // so add 1 to make it inclusive\r\n    int randomNum = ThreadLocalRandom.current().nextInt(min, max + 1);\r\n\r\nSee [the relevant JavaDoc][4].  This approach has the advantage of not needing to explicitly initialize a [java.util.Random][2] instance, which can be a source of confusion and error if used inappropriately.\r\n\r\nHowever, conversely there is no way to explicitly set the seed so it can be difficult to reproduce results in situations where that is useful such as testing or saving game states or similar.  In those situations, the pre-Java 1.7 technique shown below can be used.\r\n\r\n**Before Java 1.7**, the standard way to do this is as follows:\r\n\r\n    import java.util.Random;\r\n    \r\n    /**\r\n     * Returns a pseudo-random number between min and max, inclusive.\r\n     * The difference between min and max can be at most\r\n     * &lt;code&gt;Integer.MAX_VALUE - 1&lt;/code&gt;.\r\n     *\r\n     * @param min Minimum value\r\n     * @param max Maximum value.  Must be greater than min.\r\n     * @return Integer between min and max, inclusive.\r\n     * @see java.util.Random#nextInt(int)\r\n     */\r\n    public static int randInt(int min, int max) {\r\n\r\n        // NOTE: This will (intentionally) not run as written so that folks\r\n        // copy-pasting have to think about how to initialize their\r\n        // Random instance.  Initialization of the Random instance is outside\r\n        // the main scope of the question, but some decent options are to have\r\n        // a field that is initialized once and then re-used as needed or to\r\n        // use ThreadLocalRandom (if using at least Java 1.7).\r\n        // \r\n        // In particular, do NOT do &#39;Random rand = new Random()&#39; here or you\r\n        // will get not very good / not very random results.\r\n        Random rand;\r\n\r\n        // nextInt is normally exclusive of the top value,\r\n        // so add 1 to make it inclusive\r\n        int randomNum = rand.nextInt((max - min) + 1) + min;\r\n\r\n\t\treturn randomNum;\r\n    }\r\n\r\nSee [the relevant JavaDoc][1].  In practice, the [java.util.Random][2] class is often preferable to [java.lang.Math.random()][3].\r\n\r\nIn particular, there is no need to reinvent the random integer generation wheel when there is a straightforward API within the standard library to accomplish the task.\r\n\r\n\r\n  [1]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Random.html#nextInt(int)\r\n  [2]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Random.html\r\n  [3]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Math.html#random()\r\n  [4]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/ThreadLocalRandom.html#nextInt(int,int)","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":176486,"user_id":13531,"user_type":"moderator","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/49f3a2065659f5b4efa05ae29bd0856a?s=128&d=identicon&r=PG","display_name":"Michael Myers","link":"https://stackoverflow.com/users/13531/michael-myers"},"comment_count":0,"score":30,"creation_date":1229106339,"body_markdown":"     rand.nextInt((max+1) - min) + min;","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":9899,"user_id":31892,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/22aa27d8821b495e095f79dd331ef3d4?s=128&d=identicon&r=PG","display_name":"Chinnery","link":"https://stackoverflow.com/users/31892/chinnery"},"comment_count":0,"score":34,"creation_date":1229106475,"body_markdown":"I wonder if any of the random number generating methods provided by an [Apache Commons Math][math] library would fit the bill. \r\n\r\nFor example: [`RandomDataGenerator.nextInt`][1] or [`RandomDataGenerator.nextLong`][2]\r\n\r\n\r\n  [math]: http://commons.apache.org/proper/commons-math/\r\n  [1]: http://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/random/RandomDataGenerator.html#nextInt(int,%20int)\r\n  [2]: http://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/random/RandomDataGenerator.html#nextLong(long,%20long)","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":1957,"user_id":529286,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/0e10397e10ed767895b232fefedbfe8e?s=128&d=identicon&r=PG","display_name":"zakmck","link":"https://stackoverflow.com/users/529286/zakmck"},"score":0,"creation_date":1422610037},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":0,"creation_date":1464947235},{"owner":{"reputation":2499,"user_id":445058,"user_type":"registered","accept_rate":20,"profile_image":"https://www.gravatar.com/avatar/4c25f8c01051e0c96ffb240c2301a5e7?s=128&d=identicon&r=PG","display_name":"Hrishikesh Mishra","link":"https://stackoverflow.com/users/445058/hrishikesh-mishra"},"score":0,"creation_date":1482729263}],"owner":{"reputation":7432,"user_id":1356709,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/7cb1b8575a9a8c332a51b345550a3c6b?s=128&d=identicon&r=PG","display_name":"user2427","link":"https://stackoverflow.com/users/1356709/user2427"},"comment_count":3,"score":19,"creation_date":1229106515,"body_markdown":"    int random = minimum + Double.valueOf(Math.random()*(maximum-minimum )).intValue();\r\n\r\nOr take a look to RandomUtils from [Apache Commons][1].\r\n\r\n  [1]: http://commons.apache.org/lang\r\n\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":366115,"user_id":1288,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/fc763c6ff6c160ddad05741e87e517b6?s=128&d=identicon&r=PG","display_name":"Bill the Lizard","link":"https://stackoverflow.com/users/1288/bill-the-lizard"},"comment_count":0,"score":116,"creation_date":1229106688,"body_markdown":"You can edit your second code example to:\r\n\r\n    Random rn = new Random();\r\n    int range = maximum - minimum + 1;\r\n    int randomNum =  rn.nextInt(range) + minimum;","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":1010,"user_id":1020714,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/391f4eea1002054903fb6ca60c6b5d04?s=128&d=identicon&r=PG","display_name":"Lilian A. Moraru","link":"https://stackoverflow.com/users/1020714/lilian-a-moraru"},"score":85,"creation_date":1330039594},{"owner":{"reputation":50563,"user_id":360211,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/3baKW.png?s=128&g=1","display_name":"weston","link":"https://stackoverflow.com/users/360211/weston"},"score":6,"creation_date":1483018553},{"owner":{"reputation":12895,"user_id":340556,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/275d0c818c8301f5682ff7d6b764dfbe?s=128&d=identicon&r=PG","display_name":"Cephalopod","link":"https://stackoverflow.com/users/340556/cephalopod"},"score":5,"creation_date":1567072098},{"owner":{"reputation":173,"user_id":11670196,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ad0ea391d628290be8b71786bfb2e217?s=128&d=identicon&r=PG&f=1","display_name":"Tobias","link":"https://stackoverflow.com/users/11670196/tobias"},"score":0,"creation_date":1603200516}],"owner":{"reputation":15335,"user_id":10007,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/55df9d378f930d0f0941c1bbdb69abcb?s=128&d=identicon&r=PG","display_name":"TJ_Fischer","link":"https://stackoverflow.com/users/10007/tj-fischer"},"comment_count":4,"score":1453,"creation_date":1229106949,"body_markdown":"Note that this approach is more biased and less efficient than a `nextInt` approach, https://stackoverflow.com/a/738651/360211\r\n\r\nOne standard pattern for accomplishing this is:\r\n\r\n    Min + (int)(Math.random() * ((Max - Min) + 1))\r\n\r\nThe [Java][1] Math library function Math.random() generates a double value in the range `[0,1)`. Notice this range does not include the 1.\r\n\r\nIn order to get a specific range of values first, you need to multiply by the magnitude of the range of values you want covered. \r\n\r\n    Math.random() * ( Max - Min )\r\n\r\nThis returns a value in the range `[0,Max-Min)`, where &#39;Max-Min&#39; is not included.\r\n\r\nFor example, if you want `[5,10)`, you need to cover five integer values so you use\r\n\r\n    Math.random() * 5\r\n\r\nThis would return a value in the range `[0,5)`, where 5 is not included.\r\n\r\nNow you need to shift this range up to the range that you are targeting. You do this by adding the Min value.\r\n\r\n    Min + (Math.random() * (Max - Min))\r\n\r\nYou now will get a value in the range `[Min,Max)`. Following our example, that means `[5,10)`:\r\n\r\n    5 + (Math.random() * (10 - 5))\r\n\r\nBut, this still doesn&#39;t include `Max` and you are getting a double value. In order to get the `Max` value included, you need to add 1 to your range parameter `(Max - Min)` and then truncate the decimal part by casting to an int. This is accomplished via:\r\n\r\n    Min + (int)(Math.random() * ((Max - Min) + 1))\r\n\r\nAnd there you have it. A random integer value in the range `[Min,Max]`, or per the example `[5,10]`:\r\n\r\n    5 + (int)(Math.random() * ((10 - 5) + 1))\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Java_%28programming_language%29","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":165,"user_id":4072906,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-DZnrxoYbm0k/AAAAAAAAAAI/AAAAAAAAAVA/AlrskQuudVs/photo.jpg?sz=128","display_name":"Tapper7","link":"https://stackoverflow.com/users/4072906/tapper7"},"score":0,"creation_date":1477806297},{"owner":{"reputation":2561,"user_id":2957169,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Mf8Nx.jpg?s=128&g=1","display_name":"charles-allen","link":"https://stackoverflow.com/users/2957169/charles-allen"},"score":0,"creation_date":1501682033},{"owner":{"reputation":2347,"user_id":4298,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/oqcjk.png?s=128&g=1","display_name":"Matt R","link":"https://stackoverflow.com/users/4298/matt-r"},"score":0,"creation_date":1501684732},{"owner":{"reputation":2561,"user_id":2957169,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Mf8Nx.jpg?s=128&g=1","display_name":"charles-allen","link":"https://stackoverflow.com/users/2957169/charles-allen"},"score":0,"creation_date":1501684869},{"owner":{"reputation":15169,"user_id":477771,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/e1e6012428cc236ed32cf9a13376f0f3?s=128&d=identicon&r=PG","display_name":"Mark Storer","link":"https://stackoverflow.com/users/477771/mark-storer"},"score":0,"creation_date":1568744675}],"owner":{"reputation":2347,"user_id":4298,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/oqcjk.png?s=128&g=1","display_name":"Matt R","link":"https://stackoverflow.com/users/4298/matt-r"},"comment_count":5,"score":72,"creation_date":1231427082,"body_markdown":"The `Math.Random` class in [Java][1] is 0-based. So, if you write something like this: \r\n\r\n    Random rand = new Random();\r\n    int x = rand.nextInt(10);\r\n\r\n`x` will be between `0-9` inclusive.\r\n\r\nSo, given the following array of `25` items, the code to generate a random number between `0` (the base of the array) and `array.length` would be:\r\n\r\n    String[] i = new String[25];\r\n    Random rand = new Random();\r\n    int index = 0;\r\n    \r\n    index = rand.nextInt( i.length );\r\n\r\nSince `i.length` will return `25`, the `nextInt( i.length )` will return a number between the range of `0-24`. The other option is going with `Math.Random` which works in the same way.\r\n\r\n    index = (int) Math.floor(Math.random() * i.length);\r\n\r\nFor a better understanding, check out forum post *[Random Intervals (archive.org)][2]*.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Java_%28programming_language%29\r\n  [2]: http://web.archive.org/web/20070308142422/http://www.kirupa.com/forum/showthread.php?s=&amp;postid=81565","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"user_type":"does_not_exist","display_name":"jackson"},"comment_count":0,"score":401,"creation_date":1252038207,"body_markdown":"Use:\r\n\r\n    Random ran = new Random();\r\n    int x = ran.nextInt(6) + 5;\r\n\r\nThe integer `x` is now the random number that has a possible outcome of `5-10`.\r\n\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":199,"user_id":274198,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/cf2823e03c850868c8b0fea93b82287b?s=128&d=identicon&r=PG","display_name":"sam","link":"https://stackoverflow.com/users/274198/sam"},"comment_count":0,"score":19,"creation_date":1266310253,"body_markdown":"In case of rolling a dice it would be random number between 1 to 6 (not 0 to 6), so: \r\n\r\n    face = 1 + randomNumbers.nextInt(6);","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":149,"user_id":278646,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/f97b1cd47e04ca138e42e110391684b6?s=128&d=identicon&r=PG","display_name":"ganesh","link":"https://stackoverflow.com/users/278646/ganesh"},"comment_count":0,"score":14,"creation_date":1266839043,"body_markdown":"    rand.nextInt((max+1) - min) + min;\r\n\r\nThis is working fine. \r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":6265,"user_id":3945473,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/bc7a840257b5609850cabee995c052c3?s=128&d=identicon&r=PG","display_name":"M.P. Korstanje","link":"https://stackoverflow.com/users/3945473/m-p-korstanje"},"score":0,"creation_date":1420799277},{"owner":{"reputation":8318,"user_id":282229,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/nQR77.jpg?s=128&g=1","display_name":"Christian Semrau","link":"https://stackoverflow.com/users/282229/christian-semrau"},"score":3,"creation_date":1430940450}],"owner":{"reputation":625,"user_id":2081215,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8e398ef39b2577099639676083ce3453?s=128&d=identicon&r=PG","display_name":"Joel Sj&#246;strand","link":"https://stackoverflow.com/users/2081215/joel-sj%c3%b6strand"},"comment_count":2,"score":50,"creation_date":1294665599,"body_markdown":"Forgive me for being fastidious, but the solution suggested by the majority, i.e., `min + rng.nextInt(max - min + 1))`, seems perilous due to the fact that:\r\n\r\n - `rng.nextInt(n)` cannot reach `Integer.MAX_VALUE`.\r\n - `(max - min)` may cause overflow when `min` is negative.\r\n\r\nA foolproof solution would return correct results for any `min &lt;= max` within [`Integer.MIN_VALUE`, `Integer.MAX_VALUE`]. Consider the following naive implementation:\r\n\r\n    int nextIntInRange(int min, int max, Random rng) {\r\n       if (min &gt; max) {\r\n          throw new IllegalArgumentException(&quot;Cannot draw random int from invalid range [&quot; + min + &quot;, &quot; + max + &quot;].&quot;);\r\n       }\r\n       int diff = max - min;\r\n       if (diff &gt;= 0 &amp;&amp; diff != Integer.MAX_VALUE) {\r\n          return (min + rng.nextInt(diff + 1));\r\n       }\r\n       int i;\r\n       do {\r\n          i = rng.nextInt();\r\n       } while (i &lt; min || i &gt; max);\r\n       return i;\r\n    }\r\n\r\nAlthough inefficient, note that the probability of success in the `while` loop will always be 50% or higher.","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":35380,"user_id":185022,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/045d1e450716084b2a072b57f37a58c4?s=128&d=identicon&r=PG","display_name":"AZ_","link":"https://stackoverflow.com/users/185022/az"},"comment_count":0,"score":17,"creation_date":1310556715,"body_markdown":"    public static Random RANDOM = new Random(System.nanoTime());\r\n\r\n    public static final float random(final float pMin, final float pMax) {\r\n        return pMin + RANDOM.nextFloat() * (pMax - pMin);\r\n    }\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":4298,"user_id":697099,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/c1dd89427d4d5d899642c7624147ac7c?s=128&d=identicon&r=PG","display_name":"gerardw","link":"https://stackoverflow.com/users/697099/gerardw"},"comment_count":0,"score":16,"creation_date":1326903315,"body_markdown":"Another option is just using [Apache Commons][1]: \r\n\r\n    import org.apache.commons.math.random.RandomData;\r\n    import org.apache.commons.math.random.RandomDataImpl;\r\n\r\n    public void method() {\r\n        RandomData randomData = new RandomDataImpl();\r\n        int number = randomData.nextInt(5, 10);\r\n        // ...\r\n     }\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Apache_Commons","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":27534,"user_id":554988,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/f5a83cf2b9ae3bdc456dd48dd29023c3?s=128&d=identicon&r=PG","display_name":"Garrett Hall","link":"https://stackoverflow.com/users/554988/garrett-hall"},"comment_count":0,"score":18,"creation_date":1329322743,"body_markdown":"Here&#39;s a helpful class to generate random `ints` in a range with any combination of inclusive/exclusive bounds:\r\n\r\n    import java.util.Random;\r\n    \r\n    public class RandomRange extends Random {\r\n    \tpublic int nextIncInc(int min, int max) {\r\n    \t\treturn nextInt(max - min + 1) + min;\r\n    \t}\r\n    \r\n    \tpublic int nextExcInc(int min, int max) {\r\n    \t\treturn nextInt(max - min) + 1 + min;\r\n    \t}\r\n    \r\n    \tpublic int nextExcExc(int min, int max) {\r\n    \t\treturn nextInt(max - min - 1) + 1 + min;\r\n    \t}\r\n    \r\n    \tpublic int nextIncExc(int min, int max) {\r\n    \t\treturn nextInt(max - min) + min;\r\n    \t}\r\n    }\r\n\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":410,"user_id":767519,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8a1b314d68459f9aad9e827344537b30?s=128&d=identicon&r=PG","display_name":"Hospes","link":"https://stackoverflow.com/users/767519/hospes"},"comment_count":0,"score":16,"creation_date":1339065521,"body_markdown":"I found this example [Generate random numbers][1] : \r\n\r\n----------\r\n\r\nThis example generates random integers in a specific range. \r\n\r\n    \r\n    import java.util.Random;\r\n    \r\n    /** Generate random integers in a certain range. */\r\n    public final class RandomRange {\r\n      \r\n      public static final void main(String... aArgs){\r\n        log(&quot;Generating random integers in the range 1..10.&quot;);\r\n        \r\n        int START = 1;\r\n        int END = 10;\r\n        Random random = new Random();\r\n        for (int idx = 1; idx &lt;= 10; ++idx){\r\n          showRandomInteger(START, END, random);\r\n        }\r\n        \r\n        log(&quot;Done.&quot;);\r\n      }\r\n      \r\n      private static void showRandomInteger(int aStart, int aEnd, Random aRandom){\r\n        if ( aStart &gt; aEnd ) {\r\n          throw new IllegalArgumentException(&quot;Start cannot exceed End.&quot;);\r\n        }\r\n        //get the range, casting to long to avoid overflow problems\r\n        long range = (long)aEnd - (long)aStart + 1;\r\n        // compute a fraction of the range, 0 &lt;= frac &lt; range\r\n        long fraction = (long)(range * aRandom.nextDouble());\r\n        int randomNumber =  (int)(fraction + aStart);    \r\n        log(&quot;Generated : &quot; + randomNumber);\r\n      }\r\n      \r\n      private static void log(String aMessage){\r\n        System.out.println(aMessage);\r\n      }\r\n    } \r\n    \r\n    \r\nAn example run of this class :&lt;br/&gt;\r\n\r\n    Generating random integers in the range 1..10.\r\n    Generated : 9\r\n    Generated : 3\r\n    Generated : 3\r\n    Generated : 9\r\n    Generated : 4\r\n    Generated : 1\r\n    Generated : 3\r\n    Generated : 9\r\n    Generated : 10\r\n    Generated : 10\r\n    Done.\r\n\r\n\r\n  [1]: http://www.javapractices.com/topic/TopicAction.do?Id=62","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":0,"creation_date":1488403595},{"owner":{"reputation":8775,"user_id":1297445,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/4243850fb352160089d0576d9479a2ff?s=128&d=identicon&r=PG","display_name":"Luke Taylor","link":"https://stackoverflow.com/users/1297445/luke-taylor"},"score":0,"creation_date":1488448433},{"owner":{"reputation":9820,"user_id":452775,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG","display_name":"Lii","link":"https://stackoverflow.com/users/452775/lii"},"score":1,"creation_date":1529238110}],"owner":{"reputation":8775,"user_id":1297445,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/4243850fb352160089d0576d9479a2ff?s=128&d=identicon&r=PG","display_name":"Luke Taylor","link":"https://stackoverflow.com/users/1297445/luke-taylor"},"comment_count":3,"score":20,"creation_date":1344783697,"body_markdown":"This methods might be convenient to use:\r\n\r\nThis method will return a random number ***between*** the provided min and max value:\r\n\r\n    public static int getRandomNumberBetween(int min, int max) {\r\n        Random foo = new Random();\r\n        int randomNumber = foo.nextInt(max - min) + min;\r\n        if (randomNumber == min) {\r\n            // Since the random number is between the min and max values, simply add 1\r\n            return min + 1;\r\n        } else {\r\n            return randomNumber;\r\n        }\r\n    }\r\n\r\nand this method will return a random number ***from*** the provided min and max value (so the generated number could also be the min or max number):\r\n\r\n    public static int getRandomNumberFrom(int min, int max) {\r\n        Random foo = new Random();\r\n        int randomNumber = foo.nextInt((max + 1) - min) + min;\r\n    \r\n        return randomNumber;\r\n    }","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":1090,"user_id":1534027,"user_type":"registered","accept_rate":55,"profile_image":"https://www.gravatar.com/avatar/190ad0b7c4f0af34898ab7d0384ce565?s=128&d=identicon&r=PG","display_name":"sachit","link":"https://stackoverflow.com/users/1534027/sachit"},"comment_count":0,"score":7,"creation_date":1351325227,"body_markdown":"You can use this code snippet which will resolve your problem: \r\n\r\n    Random r = new Random();\r\n    int myRandomNumber = 0;\r\n    myRandomNumber = r.nextInt(maxValue-minValue+1)+minValue;\r\n    \r\nUse myRandomNumber (which will give you a number within a range).\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":788,"user_id":1348139,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/c680a504a05c61cd9a9069802536ce56?s=128&d=identicon&r=PG","display_name":"jatin3893","link":"https://stackoverflow.com/users/1348139/jatin3893"},"comment_count":0,"score":4,"creation_date":1351325846,"body_markdown":"I just generate a random number using Math.random() and multiply it by a big number, let&#39;s say 10000.  So, I get a number between 0 to 10,000 and call this number `i`. Now, if I need numbers between (x, y), then do the following:\r\n\r\n    i = x + (i % (y - x));\r\n\r\nSo, all `i`&#39;s are numbers between x and y.\r\n\r\nTo remove the bias as pointed out in the comments, rather than multiplying it by 10000 (or the big number), multiply it by (y-x).\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":710,"user_id":1321016,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0bdc823a00b61cd230c0c742e47fc10b?s=128&d=identicon&r=PG","display_name":"Warren MacEvoy","link":"https://stackoverflow.com/users/1321016/warren-macevoy"},"score":0,"creation_date":1471472723}],"owner":{"reputation":3703,"user_id":448005,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/2dEU1.png?s=128&g=1","display_name":"Arun Abraham","link":"https://stackoverflow.com/users/448005/arun-abraham"},"comment_count":1,"score":3,"creation_date":1354728528,"body_markdown":"One of my friends had asked me this same question in university today (his requirements was to generate a random number between 1 &amp; -1). So I wrote this, and it works fine so far with my testing. There are ideally a lot of ways to generate random numbers given a range. Try this: \r\n\r\nFunction:\r\n\r\n    private static float getRandomNumberBetween(float numberOne, float numberTwo) throws Exception{\r\n\r\n        if (numberOne == numberTwo){\r\n            throw new Exception(&quot;Both the numbers can not be equal&quot;);\r\n        }\r\n\r\n        float rand = (float) Math.random();\r\n        float highRange = Math.max(numberOne, numberTwo);\r\n        float lowRange = Math.min(numberOne, numberTwo);\r\n\r\n        float lowRand = (float) Math.floor(rand-1);\r\n        float highRand = (float) Math.ceil(rand+1);\r\n\r\n        float genRand = (highRange-lowRange)*((rand-lowRand)/(highRand-lowRand))+lowRange;\r\n\r\n        return genRand;\r\n    }\r\n\r\nExecute like this:\r\n\r\n    System.out.println( getRandomNumberBetween(1,-1));\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":2767,"user_id":1693143,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/86b35e06b396b113daf1a9f6d5765a77?s=128&d=identicon&r=PG","display_name":"andrew","link":"https://stackoverflow.com/users/1693143/andrew"},"comment_count":0,"score":88,"creation_date":1360711186,"body_markdown":"`ThreadLocalRandom` equivalent of class `java.util.Random` for multithreaded environment. Generating a random number is carried out locally in each of the threads. So we have a better performance by reducing the conflicts. \r\n\r\n    int rand = ThreadLocalRandom.current().nextInt(x,y);\r\n\r\n`x`,`y` - intervals e.g. (1,10)","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":4777,"user_id":1660192,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/retUf.jpg?s=128&g=1","display_name":"agpt","link":"https://stackoverflow.com/users/1660192/agpt"},"comment_count":0,"score":2,"creation_date":1370618059,"body_markdown":"Try using `org.apache.commons.lang.RandomStringUtils` class. Yes, it sometimes give a  repeated number adjacently, but it will give the value between 5 and 15:\r\n\r\n        while (true)\r\n        {\r\n            int abc = Integer.valueOf(RandomStringUtils.randomNumeric(1));\r\n            int cd = Integer.valueOf(RandomStringUtils.randomNumeric(2));\r\n            if ((cd-abc) &gt;= 5 &amp;&amp; (cd-abc) &lt;= 15)\r\n            {\r\n                System.out.println(cd-abc);\r\n                break;\r\n            }\r\n        }\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":5,"creation_date":1497907427},{"owner":{"reputation":9719,"user_id":1121841,"user_type":"registered","accept_rate":45,"profile_image":"https://i.stack.imgur.com/SN6YN.jpg?s=128&g=1","display_name":"Abel Callejo","link":"https://stackoverflow.com/users/1121841/abel-callejo"},"score":1,"creation_date":1497918967},{"owner":{"reputation":923,"user_id":1557306,"user_type":"registered","accept_rate":25,"profile_image":"https://i.stack.imgur.com/7cDGa.jpg?s=128&g=1","display_name":"Leevi L","link":"https://stackoverflow.com/users/1557306/leevi-l"},"score":0,"creation_date":1570523513}],"owner":{"reputation":9719,"user_id":1121841,"user_type":"registered","accept_rate":45,"profile_image":"https://i.stack.imgur.com/SN6YN.jpg?s=128&g=1","display_name":"Abel Callejo","link":"https://stackoverflow.com/users/1121841/abel-callejo"},"comment_count":3,"score":52,"creation_date":1378004033,"body_markdown":"It can be done by simply doing the statement:\r\n\r\n```java\r\nRandomizer.generate(0,10); //min of zero, max of ten\r\n```\r\n\r\nBelow is its source-code\r\n\r\n### Randomizer.java\r\n```java\r\npublic class Randomizer {\r\n    public static int generate(int min,int max) {\r\n        return min + (int)(Math.random() * ((max - min) + 1));\r\n    }\r\n}\r\n```\r\n\r\nIt is just clean and simple.\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":361,"user_id":1632187,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/28a404dfa649afec0bceec609b28f1cb?s=128&d=identicon&r=PG","display_name":"Akash Malhotra","link":"https://stackoverflow.com/users/1632187/akash-malhotra"},"comment_count":0,"score":3,"creation_date":1379928283,"body_markdown":"I think this code will work for it. Please try this: \r\n\r\n    import java.util.Random;\r\n    public final class RandomNumber {\r\n\r\n        public static final void main(String... aArgs) {\r\n            log(&quot;Generating 10 random integers in range 1..10.&quot;);\r\n            int START = 1;\r\n            int END = 10;\r\n            Random randomGenerator = new Random();\r\n            for (int idx=1; idx&lt;=10; ++idx) {\r\n\r\n                // int randomInt=randomGenerator.nextInt(100);\r\n                // log(&quot;Generated : &quot; + randomInt);\r\n                showRandomInteger(START,END,randomGenerator);\r\n            }\r\n            log(&quot;Done&quot;);\r\n        }\r\n\r\n        private static void log(String aMessage) {\r\n            System.out.println(aMessage);\r\n        }\r\n\r\n        private static void showRandomInteger(int aStart, int aEnd, Random aRandom) {\r\n            if (aStart &gt; aEnd) {\r\n                throw new IllegalArgumentException(&quot;Start cannot exceed End.&quot;);\r\n            }\r\n            long range = (long)aEnd - (long)aStart + 1;\r\n            long fraction = (long) (range * aRandom.nextDouble());\r\n            int randomNumber = (int) (fraction + aStart);\r\n            log(&quot;Generated&quot; + randomNumber);\r\n        }\r\n    }\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"user_type":"does_not_exist","display_name":"user591593"},"comment_count":0,"score":5,"creation_date":1385302503,"body_markdown":"I am thinking to linearly normalize the generated random numbers into desired range by using the following. Let `x` be a random number, let `a` and `b` be the minimum and maximum range of desired normalized number.\r\n\r\nThen below is just a very simple code snipplet to test the range produced by the linear mapping.\r\n\r\n    public static void main(String[] args) {\r\n        int a = 100;\r\n        int b = 1000;\r\n        int lowest = b;\r\n        int highest = a;\r\n        int count = 100000;\r\n        Random random = new Random();\r\n        for (int i = 0; i &lt; count; i++) {\r\n            int nextNumber = (int) ((Math.abs(random.nextDouble()) * (b - a))) + a;\r\n            if (nextNumber &lt; a || nextNumber &gt; b) {\r\n                System.err.println(&quot;number not in range :&quot; + nextNumber);\r\n            }\r\n            else {\r\n                System.out.println(nextNumber);\r\n            }\r\n            if (nextNumber &lt; lowest) {\r\n                lowest = nextNumber;\r\n            }\r\n            if (nextNumber &gt; highest) {\r\n                highest = nextNumber;\r\n            }\r\n        }\r\n        System.out.println(&quot;Produced &quot; + count + &quot; numbers from &quot; + lowest\r\n                + &quot; to &quot; + highest);\r\n    }\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":8,"creation_date":1497907313}],"owner":{"reputation":458,"user_id":565179,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f7013bb0d568b42b67e28504746f168a?s=128&d=identicon&r=PG","display_name":"Prof Mo","link":"https://stackoverflow.com/users/565179/prof-mo"},"comment_count":1,"score":21,"creation_date":1387891993,"body_markdown":"Just use the [Random][1] class: \r\n\r\n    Random ran = new Random();\r\n    // Assumes max and min are non-negative.\r\n    int randomInt = min + ran.nextInt(max - min + 1);\r\n\r\n  [1]: http://docs.oracle.com/javase/6/docs/api/java/util/Random.html\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":5240,"user_id":1501234,"user_type":"registered","accept_rate":72,"profile_image":"https://i.stack.imgur.com/2VLce.jpg?s=128&g=1","display_name":"Jaroslaw Pawlak","link":"https://stackoverflow.com/users/1501234/jaroslaw-pawlak"},"score":1,"creation_date":1425916331}],"owner":{"reputation":1384,"user_id":2271536,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/9795fd62281b6fa17ae44ea09eaee46a?s=128&d=identicon&r=PG","display_name":"Jorge","link":"https://stackoverflow.com/users/2271536/jorge"},"comment_count":1,"score":6,"creation_date":1389747115,"body_markdown":"I will simply state what is wrong with the solutions provided by the question and why the errors. \r\n\r\nSolution 1:\r\n\r\n    randomNum = minimum + (int)(Math.random()*maximum); \r\n\r\nProblem: randomNum is assigned values numbers bigger than maximum.\r\n\r\nExplanation: Suppose our minimum is 5, and your maximum is 10. Any value from `Math.random()` greater than 0.6 will make the expression evaluate to 6 or greater, and adding 5 makes it greater than 10 (your maximum). The problem is you are multiplying the random number by the maximum (which generates a number almost as big as the maximum) and then adding the minimum. Unless the minimum is 1, it&#39;s not correct. You have to switch to, as mentioned in other answers\r\n\r\n    randomNum = minimum + (int)(Math.random()*(maximum-minimum+1))\r\n\r\nThe +1 is because `Math.random()` will never return 1.0.\r\n\r\nSolution 2:\r\n\r\n    Random rn = new Random();\r\n    int n = maximum - minimum + 1;\r\n    int i = rn.nextInt() % n;\r\n    randomNum =  minimum + i;\r\n\r\nYour problem here is that &#39;%&#39; may return a negative number if the first term is smaller than 0. Since `rn.nextInt()` returns negative values with ~50% chance, you will also not get the expected result.\r\n\r\nThis, was, however, almost perfect. You just had to look a bit further down the Javadoc, [nextInt(int n)][1]. With that method available, doing\r\n\r\n    Random rn = new Random();\r\n    int n = maximum - minimum + 1;\r\n    int i = rn.nextInt(n);\r\n    randomNum =  minimum + i;\r\n    \r\nWould also return the desired result.\r\n\r\n  [1]: http://docs.oracle.com/javase/6/docs/api/java/util/Random.html#nextInt%28int%29\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":481,"user_id":3147737,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/YHlHB.jpg?s=128&g=1","display_name":"f3d0r","link":"https://stackoverflow.com/users/3147737/f3d0r"},"comment_count":0,"score":2,"creation_date":1400973672,"body_markdown":"You can either use the Random class to generate a random number and then use the .nextInt(maxNumber) to generate a random number. The maxNumber is the number that you want the maximum when generating a random number. Please remember though, that the Random class gives you the numbers 0 through maxNumber-1.  \r\n\r\n    Random r = new Random();\r\n    int i = r.nextInt();\r\n\r\nAnother way to do this is to use the Math.Random() class which many classes in schools require you to use because it is more efficient and you don&#39;t have to declare a new Random object. To get a random number using Math.Random() you type in:\r\n\r\n    Math.random() * (max - min) + min;","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":1681,"user_id":1734143,"user_type":"registered","accept_rate":29,"profile_image":"https://www.gravatar.com/avatar/74f968336365385471af8a7536bb1d3b?s=128&d=identicon&r=PG","display_name":"yottabrain","link":"https://stackoverflow.com/users/1734143/yottabrain"},"comment_count":0,"score":7,"creation_date":1402717838,"body_markdown":"    import java.util.Random; \r\n    \r\n    public class RandomUtil {\r\n    \t// Declare as class variable so that it is not re-seeded every call\r\n    \tprivate static Random random = new Random();\r\n    \r\n    \t/**\r\n    \t * Returns a psuedo-random number between min and max (both inclusive)\r\n    \t * @param min Minimim value\r\n    \t * @param max Maximim value. Must be greater than min.\r\n    \t * @return Integer between min and max (both inclusive)\r\n    \t * @see java.util.Random#nextInt(int)\r\n    \t */\r\n    \tpublic static int nextInt(int min, int max) {\r\n    \t\t// nextInt is normally exclusive of the top value,\r\n    \t\t// so add 1 to make it inclusive\r\n    \t\treturn random.nextInt((max - min) + 1) + min;\r\n    \t}\r\n    }","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":351,"user_id":3589614,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ded2e7aaf1e9948789cb75d7a0f109b3?s=128&d=identicon&r=PG&f=1","display_name":"Sunil Chawla","link":"https://stackoverflow.com/users/3589614/sunil-chawla"},"comment_count":0,"score":31,"creation_date":1407035274,"body_markdown":"Let us take an example.\r\n\r\nSuppose I wish to generate a number between **5-10**:\r\n    \r\n    int max = 10;\r\n    int min = 5;\r\n    int diff = max - min;\r\n    Random rn = new Random();\r\n    int i = rn.nextInt(diff + 1);\r\n    i += min;\r\n    System.out.print(&quot;The Random Number is &quot; + i);\r\n    \r\n*Let us understand this*...\r\n\r\n&gt;&gt; Initialize max with highest value and min with the lowest value. \r\n\r\n&gt;&gt; Now, we need to determine how many possible values can be obtained. For this example, it would be:\r\n\r\n&gt;&gt;&gt; **5, 6, 7, 8, 9, 10**\r\n\r\n&gt;&gt; So, count of this would be max - min + 1. \r\n    \r\n&gt;&gt;&gt; i.e. 10 - 5 + 1 = 6\r\n\r\n&gt;&gt; The random number will generate a number between **0-5**. \r\n\r\n&gt;&gt;&gt;  i.e. 0, 1, 2, 3, 4, 5\r\n\r\n&gt;&gt; Adding the *min* value to the random number would produce:\r\n\r\n&gt;&gt;&gt; 5, 6, 7, 8, 9, 10      \r\n\r\n&gt;&gt; Hence we obtain the desired range. \r\n   \r\n      \r\n   \r\n ","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":1104,"user_id":3157899,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/5f590cb295c3083b8a119f61aa73c201?s=128&d=identicon&r=PG","display_name":"Naxos84","link":"https://stackoverflow.com/users/3157899/naxos84"},"score":3,"creation_date":1519629223}],"owner":{"reputation":81496,"user_id":1587046,"user_type":"registered","accept_rate":62,"profile_image":"https://i.stack.imgur.com/onb2X.jpg?s=128&g=1","display_name":"Alexis C.","link":"https://stackoverflow.com/users/1587046/alexis-c"},"comment_count":1,"score":164,"creation_date":1417026547,"body_markdown":"With [tag:java-8] they introduced the method [`ints(int randomNumberOrigin, int randomNumberBound)`][1] in the [`Random`][2] class. \r\n\r\nFor example if you want to generate five random integers (or a single one) in the range [0, 10], just do:\r\n\r\n    Random r = new Random();\r\n    int[] fiveRandomNumbers = r.ints(5, 0, 11).toArray();\r\n    int randomNumber = r.ints(1, 0, 11).findFirst().getAsInt();\r\n\r\n\r\nThe first parameter indicates just the size of the `IntStream` generated (which is the overloaded method of the one that produces an unlimited `IntStream`).\r\n\r\nIf you need to do multiple separate calls, you can create an infinite primitive iterator from the stream:\r\n\r\n    public final class IntRandomNumberGenerator {\r\n    \r\n        private PrimitiveIterator.OfInt randomIterator;\r\n    \r\n        /**\r\n         * Initialize a new random number generator that generates\r\n         * random numbers in the range [min, max]\r\n         * @param min - the min value (inclusive)\r\n         * @param max - the max value (inclusive)\r\n         */\r\n        public IntRandomNumberGenerator(int min, int max) {\r\n            randomIterator = new Random().ints(min, max + 1).iterator();\r\n        }\r\n    \r\n        /**\r\n         * Returns a random number in the range (min, max)\r\n         * @return a random number in the range (min, max)\r\n         */\r\n        public int nextInt() {\r\n            return randomIterator.nextInt();\r\n        }\r\n    }\r\n\r\nYou can also do it for `double` and `long` values. I hope it helps! :)\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/8/docs/api/java/util/Random.html#ints-int-int-\r\n  [2]: http://docs.oracle.com/javase/8/docs/api/java/util/Random.html","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":7876,"user_id":1805989,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1c111e138995ac8390c16b4139889fef?s=128&d=identicon&r=PG","display_name":"Yakiv Mospan","link":"https://stackoverflow.com/users/1805989/yakiv-mospan"},"comment_count":0,"score":13,"creation_date":1417135824,"body_markdown":"Here is a simple sample that shows how to generate random number from closed `[min, max]` range, while `min &lt;= max is true`\r\n\r\nYou can reuse it as field in hole class, also having all `Random.class` methods in one place\r\n\r\n**Results example:**\r\n\r\n    RandomUtils random = new RandomUtils();\r\n    random.nextInt(0, 0); // returns 0\r\n    random.nextInt(10, 10); // returns 10\r\n    random.nextInt(-10, 10); // returns numbers from -10 to 10 (-10, -9....9, 10)\r\n    random.nextInt(10, -10); // throws assert\r\n\r\n**Sources:**\r\n\r\n    import junit.framework.Assert;\r\n    import java.util.Random;\r\n    \r\n    public class RandomUtils extends Random {\r\n    \r\n        /**\r\n         * @param min generated value. Can&#39;t be &gt; then max\r\n         * @param max generated value\r\n         * @return values in closed range [min, max].\r\n         */\r\n        public int nextInt(int min, int max) {\r\n            Assert.assertFalse(&quot;min can&#39;t be &gt; then max; values:[&quot; + min + &quot;, &quot; + max + &quot;]&quot;, min &gt; max);\r\n            if (min == max) {\r\n                return max;\r\n            }\r\n    \r\n            return nextInt(max - min + 1) + min;\r\n        }\r\n    }\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":710,"user_id":1321016,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0bdc823a00b61cd230c0c742e47fc10b?s=128&d=identicon&r=PG","display_name":"Warren MacEvoy","link":"https://stackoverflow.com/users/1321016/warren-macevoy"},"score":0,"creation_date":1471470385}],"owner":{"reputation":424,"user_id":1025230,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/537231f07f093f07f8210510b2b043f1?s=128&d=identicon&r=PG","display_name":"Muhammad Aamir Talib","link":"https://stackoverflow.com/users/1025230/muhammad-aamir-talib"},"comment_count":1,"score":12,"creation_date":1423654818,"body_markdown":"    private static Random random = new Random();    \r\n\r\n    public static int getRandomInt(int min, int max){\r\n      return random.nextInt(max - min + 1) + min;\r\n    }\r\n\r\nOR\r\n\r\n    public static int getRandomInt(Random random, int min, int max)\r\n    {\r\n      return random.nextInt(max - min + 1) + min;\r\n    }","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":13123,"user_id":4391450,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8db407436e19be13dbdd4b49fe224d3a?s=128&d=identicon&r=PG&f=1","display_name":"AxelH","link":"https://stackoverflow.com/users/4391450/axelh"},"score":0,"creation_date":1467981015},{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":0,"creation_date":1588708511},{"owner":{"reputation":2294,"user_id":3457328,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/462e1d9150f9530cef352b963e28f42b?s=128&d=identicon&r=PG&f=1","display_name":"frankfurt-laravel","link":"https://stackoverflow.com/users/3457328/frankfurt-laravel"},"score":0,"creation_date":1615294702}],"owner":{"reputation":1347,"user_id":4146952,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ab23ebb3f250c3f4c9ad63fc5b4c51ce?s=128&d=identicon&r=PG&f=1","display_name":"hexabunny","link":"https://stackoverflow.com/users/4146952/hexabunny"},"comment_count":3,"score":104,"creation_date":1426200268,"body_markdown":"Just a small modification of your first solution would suffice.\r\n\r\n    Random rand = new Random();\r\n    randomNum = minimum + rand.nextInt((maximum - minimum) + 1);\r\n\r\n----------\r\nSee more here for implementation of [`Random`][1]\r\n\r\n  [1]: https://insight.io/github.com/lambdalab-mirror/jdk8u-jdk/blob/master/src/share/classes/java/util/Random.java?line=77","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":7273,"user_id":4785110,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b1bae5c00f27770d807c943268438bb6?s=128&d=identicon&r=PG&f=1","display_name":"maraca","link":"https://stackoverflow.com/users/4785110/maraca"},"score":1,"creation_date":1429212654},{"owner":{"reputation":4505,"user_id":2590960,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/OxUCS.jpg?s=128&g=1","display_name":"grep","link":"https://stackoverflow.com/users/2590960/grep"},"score":0,"creation_date":1429272216},{"owner":{"reputation":7273,"user_id":4785110,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b1bae5c00f27770d807c943268438bb6?s=128&d=identicon&r=PG&f=1","display_name":"maraca","link":"https://stackoverflow.com/users/4785110/maraca"},"score":0,"creation_date":1429348783},{"owner":{"reputation":7273,"user_id":4785110,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b1bae5c00f27770d807c943268438bb6?s=128&d=identicon&r=PG&f=1","display_name":"maraca","link":"https://stackoverflow.com/users/4785110/maraca"},"score":0,"creation_date":1429349444},{"owner":{"reputation":7273,"user_id":4785110,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b1bae5c00f27770d807c943268438bb6?s=128&d=identicon&r=PG&f=1","display_name":"maraca","link":"https://stackoverflow.com/users/4785110/maraca"},"score":0,"creation_date":1429349998},{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":6,"creation_date":1488403966}],"owner":{"reputation":4505,"user_id":2590960,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/OxUCS.jpg?s=128&g=1","display_name":"grep","link":"https://stackoverflow.com/users/2590960/grep"},"comment_count":6,"score":14,"creation_date":1427374960,"body_markdown":"It&#39;s better to use [SecureRandom][1] rather than just Random.\r\n\r\n    public static int generateRandomInteger(int min, int max) {\r\n        SecureRandom rand = new SecureRandom();\r\n        rand.setSeed(new Date().getTime());\r\n        int randomNum = rand.nextInt((max - min) + 1) + min;\r\n        return randomNum;\r\n    }\r\n\r\n  [1]: http://docs.oracle.com/javase/7/docs/api/java/security/SecureRandom.html\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":489,"user_id":2095604,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/66c99547a9d57c7da77158f561f40c64?s=128&d=identicon&r=PG","display_name":"thangaraj","link":"https://stackoverflow.com/users/2095604/thangaraj"},"comment_count":0,"score":6,"creation_date":1428502441,"body_markdown":"You can do something like this:\r\n\r\n    import java.awt.*;\r\n    import java.io.*;\r\n    import java.util.*;\r\n    import java.math.*;\r\n\r\n    public class Test {\r\n\r\n        public static void main(String[] args) {\r\n            int first, second;\r\n\r\n            Scanner myScanner = new Scanner(System.in);\r\n\r\n            System.out.println(&quot;Enter first integer: &quot;);\r\n            int numOne;\r\n            numOne = myScanner.nextInt();\r\n            System.out.println(&quot;You have keyed in &quot; + numOne);\r\n\r\n            System.out.println(&quot;Enter second integer: &quot;);\r\n            int numTwo;\r\n            numTwo = myScanner.nextInt();\r\n            System.out.println(&quot;You have keyed in &quot; + numTwo);\r\n\r\n            Random generator = new Random();\r\n            int num = (int)(Math.random()*numTwo);\r\n            System.out.println(&quot;Random number: &quot; + ((num&gt;numOne)?num:numOne+num));\r\n        }\r\n    }\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":4037,"user_id":2093934,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/e8cf5a4aeca8cdf92b1c0e95987e65fb?s=128&d=identicon&r=PG&f=1","display_name":"gifpif","link":"https://stackoverflow.com/users/2093934/gifpif"},"comment_count":0,"score":27,"creation_date":1432723388,"body_markdown":"Generate a random number for the difference of min and max by using the [nextint(n)][1] method and then add min number to the result:\r\n\r\n    Random rn = new Random();\r\n    int result = rn.nextInt(max - min + 1) + min;\r\n    System.out.println(result);\r\n\r\n  [1]: http://docs.oracle.com/javase/6/docs/api/java/util/Random.html#nextInt(int)\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":30196,"user_id":2079831,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/707e9914d5a39558c376e8db47c60151?s=128&d=identicon&r=PG","display_name":"Andrew","link":"https://stackoverflow.com/users/2079831/andrew"},"comment_count":0,"score":2,"creation_date":1446151573,"body_markdown":"Random number from the range [min..max] inclusive:\r\n    \r\n    int randomFromMinToMaxInclusive = ThreadLocalRandom.current()\r\n            .nextInt(min, max + 1);","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":0,"creation_date":1488404394}],"owner":{"reputation":47762,"user_id":4233197,"user_type":"registered","accept_rate":55,"profile_image":"https://i.stack.imgur.com/sJEWz.jpg?s=128&g=1","display_name":"Hiren Patel","link":"https://stackoverflow.com/users/4233197/hiren-patel"},"comment_count":1,"score":3,"creation_date":1474920833,"body_markdown":"This will generate **Random numbers list** with **range (Min - Max)** with **no duplicate**.\r\n\r\n    generateRandomListNoDuplicate(1000, 8000, 500);\r\n\r\nAdd this method.\r\n\r\n    private void generateRandomListNoDuplicate(int min, int max, int totalNoRequired) {\r\n        Random rng = new Random();\r\n        Set&lt;Integer&gt; generatedList = new LinkedHashSet&lt;&gt;();\r\n        while (generatedList.size() &lt; totalNoRequired) {\r\n            Integer radnomInt = rng.nextInt(max - min + 1) + min;\r\n            generatedList.add(radnomInt);\r\n        }\r\n    }\r\n\r\nHope this will help you.","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":0,"creation_date":1497907742}],"owner":{"reputation":1385,"user_id":3380739,"user_type":"registered","profile_image":"https://graph.facebook.com/711282833/picture?type=large","display_name":"user_3380739","link":"https://stackoverflow.com/users/3380739/user-3380739"},"comment_count":1,"score":2,"creation_date":1480372411,"body_markdown":"Most of above suggestion don&#39;t consider &#39;overflow&#39;, For example: min = Integer.MIN_VALUE, max = 100. One of correct approaches I have so far is:\r\n\r\n    final long mod = max- min + 1L;\r\n    final int next = (int) (Math.abs(rand.nextLong() % mod) + min);\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":1943,"user_id":649451,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7a881bb04363e8447a2182a6048e2e0c?s=128&d=identicon&r=PG","display_name":"false9striker","link":"https://stackoverflow.com/users/649451/false9striker"},"comment_count":0,"score":5,"creation_date":1480702580,"body_markdown":"You could use \r\n\r\n    RandomStringUtils.randomNumeric(int count)\r\n\r\nmethod also which is from apache commons. ","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":47718,"user_id":6419007,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/CwqtX.jpg?s=128&g=1","display_name":"Eric Duminil","link":"https://stackoverflow.com/users/6419007/eric-duminil"},"score":0,"creation_date":1488227244},{"owner":{"reputation":47718,"user_id":6419007,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/CwqtX.jpg?s=128&g=1","display_name":"Eric Duminil","link":"https://stackoverflow.com/users/6419007/eric-duminil"},"score":0,"creation_date":1488227300},{"owner":{"reputation":2561,"user_id":2957169,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Mf8Nx.jpg?s=128&g=1","display_name":"charles-allen","link":"https://stackoverflow.com/users/2957169/charles-allen"},"score":1,"creation_date":1501681483}],"owner":{"reputation":740,"user_id":449946,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/gWI7z.png?s=128&g=1","display_name":"firephil","link":"https://stackoverflow.com/users/449946/firephil"},"comment_count":3,"score":6,"creation_date":1482363436,"body_markdown":"**A different approach using Java 8 IntStream and Collections.shuffle**\r\n\r\n\r\n    import java.util.stream.IntStream;\r\n    import java.util.ArrayList;\r\n    import java.util.Collections;\r\n    \r\n    public class Main {\r\n    \r\n    \tpublic static void main(String[] args) {\r\n    \t\t\r\n    \t\tIntStream range = IntStream.rangeClosed(5,10);\r\n    \t\tArrayList&lt;Integer&gt; ls =  new ArrayList&lt;Integer&gt;();\r\n    \t\t\r\n    \t\t//populate the ArrayList\r\n    \t\trange.forEach(i -&gt; ls.add(new Integer(i)) );\r\n    \t\t\r\n    \t\t//perform a random shuffle  using the Collections Fisher-Yates shuffle\r\n    \t\tCollections.shuffle(ls);\r\n    \t\tSystem.out.println(ls);\r\n    \t}\r\n    }\r\n\r\n\r\n**The equivalent in Scala**\r\n\r\n    import scala.util.Random\r\n    \r\n    object RandomRange extends App{\r\n      val x =  Random.shuffle(5 to 10)\r\n    \tprintln(x)\r\n    }","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":30325,"user_id":3496570,"user_type":"registered","accept_rate":39,"profile_image":"https://i.stack.imgur.com/fhSKV.jpg?s=128&g=1","display_name":"AndroidGeek","link":"https://stackoverflow.com/users/3496570/androidgeek"},"comment_count":0,"score":3,"creation_date":1484807845,"body_markdown":"I have created a method to get a unique integer in a given range.\r\n\r\n    /*\r\n          * minNum is the minimum possible random number\r\n          * maxNum is the maximum possible random number\r\n          * numbersNeeded is the quantity of random number required\r\n          * the give method provides you with unique random number between min &amp; max range\r\n    */\r\n    public static Set&lt;Integer&gt; getUniqueRandomNumbers( int minNum , int maxNum ,int numbersNeeded ){\r\n\r\n        if(minNum &gt;= maxNum)\r\n            throw new IllegalArgumentException(&quot;maxNum must be greater than minNum&quot;);\r\n\r\n        if(! (numbersNeeded &gt; (maxNum - minNum + 1) ))\r\n            throw new IllegalArgumentException(&quot;numberNeeded must be greater then difference b/w (max- min +1)&quot;);\r\n\r\n        Random rng = new Random(); // Ideally just create one instance globally\r\n\r\n        // Note: use LinkedHashSet to maintain insertion order\r\n        Set&lt;Integer&gt; generated = new LinkedHashSet&lt;Integer&gt;();\r\n        while (generated.size() &lt; numbersNeeded)\r\n        {\r\n            Integer next = rng.nextInt((maxNum - minNum) + 1) + minNum;\r\n\r\n            // As we&#39;re adding to a set, this will automatically do a containment check\r\n            generated.add(next);\r\n        }\r\n        return generated;\r\n    }\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":64,"user_id":7884494,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-yYL-IVed_qM/AAAAAAAAAAI/AAAAAAAAALU/ToMd6yWesy4/photo.jpg?sz=128","display_name":"Jake O","link":"https://stackoverflow.com/users/7884494/jake-o"},"comment_count":0,"score":0,"creation_date":1493209814,"body_markdown":"Using Java 8 Streams,\r\n\r\n * Pass the initialCapacity - How many numbers\r\n * Pass the randomBound - from x to randomBound\r\n * Pass true/false for sorted or not\r\n * Pass an new Random() object\r\n\r\n&amp;nbsp;\r\n\r\n    public static List&lt;Integer&gt; generateNumbers(int initialCapacity, int randomBound, Boolean sorted, Random random) {\r\n\r\n        List&lt;Integer&gt; numbers = random.ints(initialCapacity, 1, randomBound).boxed().collect(Collectors.toList());\r\n\r\n        if (sorted)\r\n            numbers.sort(null);\r\n\r\n        return numbers;\r\n    }\r\n\r\nIt generates numbers from 1-Randombound in this example.\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":2801,"user_id":5246706,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/XBcKe.jpg?s=128&g=1","display_name":"Divyesh Kanzariya","link":"https://stackoverflow.com/users/5246706/divyesh-kanzariya"},"comment_count":0,"score":3,"creation_date":1495805078,"body_markdown":"If you already use `Commons Lang API 2.x` or latest version then there is one class for random number generation `RandomUtils`.\r\n\r\n    public static int nextInt(int n)\r\n\r\nReturns a pseudorandom, uniformly distributed int value between 0 (inclusive) and the specified value (exclusive), from the Math.random() sequence.\r\n\r\nParameters:\r\n**n** - the specified exclusive max-value\r\n\r\n\r\n\r\n    int random = RandomUtils.nextInt(1000000);\r\n\r\nNote: In [RandomUtils][1] have many methods for random number generation    \r\n\r\n\r\n  [1]: https://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/math/RandomUtils.html#nextInt(java.util.Random)","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":569,"user_id":3698882,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/f217770f06488fcf2bab21157a97b47f?s=128&d=identicon&r=PG&f=1","display_name":"sokras","link":"https://stackoverflow.com/users/3698882/sokras"},"score":0,"creation_date":1500536331},{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":0,"creation_date":1524518814},{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":0,"creation_date":1524519391}],"owner":{"reputation":1796,"user_id":7664765,"user_type":"registered","profile_image":"https://i.stack.imgur.com/vu76T.png?s=128&g=1","display_name":"Simon","link":"https://stackoverflow.com/users/7664765/simon"},"comment_count":3,"score":30,"creation_date":1495981849,"body_markdown":"I use this:\r\n\r\n     /**\r\n       * @param min - The minimum.\r\n       * @param max - The maximum.\r\n       * @return A random double between these numbers (inclusive the minimum and maximum).\r\n       */\r\n     public static double getRandom(double min, double max) {\r\n       return (Math.random() * (max + 1 - min)) + min;\r\n     }\r\n\r\nYou can cast it to an Integer if you want.\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":261,"user_id":5150135,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-RBASI_A-_2g/AAAAAAAAAAI/AAAAAAAAAEI/k5qmh9zEjGM/photo.jpg=k-s128","display_name":"Mulalo Madida","link":"https://stackoverflow.com/users/5150135/mulalo-madida"},"comment_count":0,"score":18,"creation_date":1497962357,"body_markdown":"You can achieve that concisely in Java 8:\r\n\r\n    Random random = new Random();\r\n\r\n\tint max = 10;\r\n\tint min = 5;\r\n\tint totalNumber = 10;\r\n\r\n\tIntStream stream = random.ints(totalNumber, min, max);\r\n\tstream.forEach(System.out::println);","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":385,"user_id":5213194,"user_type":"registered","accept_rate":25,"profile_image":"https://i.stack.imgur.com/kx9Bc.jpg?s=128&g=1","display_name":"Gihan Chathuranga","link":"https://stackoverflow.com/users/5213194/gihan-chathuranga"},"comment_count":0,"score":4,"creation_date":1502547039,"body_markdown":"This is the easy way to do this.\r\n\r\n   \r\n\r\n    import java.util.Random;\r\n    class Example{\r\n    \tpublic static void main(String args[]){\r\n    \t\t/*-To test-\r\n    \t\tfor(int i = 1 ;i&lt;20 ; i++){\r\n    \t\t\tSystem.out.print(randomnumber()+&quot;,&quot;);\r\n    \t\t}\r\n    \t\t*/\r\n    \t\t\r\n    \t\tint randomnumber = randomnumber();\r\n    \t\t\r\n    \t}\r\n    \t\r\n    \tpublic static int randomnumber(){\r\n    \t\tRandom rand = new Random();\r\n    \t\tint randomNum = rand.nextInt(6) + 5;\r\n    \t\t\r\n    \t\treturn randomNum;\r\n    \t}\r\n    }\r\n\r\nIn there 5 is the starting point of random numbers. 6 is the range including number 5.","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":0,"creation_date":1588708315}],"owner":{"reputation":864,"user_id":6807980,"user_type":"registered","profile_image":"https://i.stack.imgur.com/dnezd.jpg?s=128&g=1","display_name":"Sam2016","link":"https://stackoverflow.com/users/6807980/sam2016"},"comment_count":1,"score":0,"creation_date":1507126685,"body_markdown":"A simple way to generate n random numbers between a and b\r\ne.g a =90, b=100, n =20\r\n\r\n    Random r = new Random();\r\n    for(int i =0; i&lt;20; i++){\r\n        System.out.println(r.ints(90, 100).iterator().nextInt());\r\n    }\r\n\r\n`r.ints()` returns an `IntStream` and has several useful methods, have look at its [API][1].\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1546683680}],"owner":{"reputation":226,"user_id":8674497,"user_type":"registered","profile_image":"https://i.stack.imgur.com/PeUWn.jpg?s=128&g=1","display_name":"namezhouyu","link":"https://stackoverflow.com/users/8674497/namezhouyu"},"comment_count":1,"score":7,"creation_date":1507538908,"body_markdown":"    Random random = new Random();\r\n    int max = 10;\r\n    int min = 3;\r\n    int randomNum = random.nextInt(max) % (max - min + 1) + min;\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":1916,"user_id":4485195,"user_type":"registered","profile_image":"https://i.stack.imgur.com/EOSCg.jpg?s=128&g=1","display_name":"Lawakush Kurmi","link":"https://stackoverflow.com/users/4485195/lawakush-kurmi"},"comment_count":0,"score":21,"creation_date":1509604687,"body_markdown":"To generate a random number &quot;in between two numbers&quot;, use the following code:\r\n\r\n    Random r = new Random();\r\n    int lowerBound = 1;\r\n    int upperBound = 11;\r\n    int result = r.nextInt(upperBound-lowerBound) + lowerBound;\r\n\r\nThis gives you a random number in between 1 (inclusive) and 11 (exclusive), so initialize the upperBound value by adding 1. For example, if you want to generate random number between 1 to 10 then initialize the upperBound number with 11 instead of 10.\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":516,"user_id":987044,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/usahc.jpg?s=128&g=1","display_name":"ledlogic","link":"https://stackoverflow.com/users/987044/ledlogic"},"comment_count":0,"score":2,"creation_date":1512169307,"body_markdown":"There is a library at https://sourceforge.net/projects/stochunit/ for handling selection of ranges.\r\n\r\n    StochIntegerSelector randomIntegerSelector = new StochIntegerSelector();\r\n    randomIntegerSelector.setMin(-1);\r\n    randomIntegerSelector.setMax(1);\r\n    Integer selectInteger = randomIntegerSelector.selectInteger();\r\n\r\nIt has edge inclusion/preclusion.\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":73,"user_id":8985913,"user_type":"registered","accept_rate":20,"profile_image":"https://lh4.googleusercontent.com/-yCd9VNryX0s/AAAAAAAAAAI/AAAAAAAAABM/VKYX4vvbMts/photo.jpg?sz=128","display_name":"BMAM","link":"https://stackoverflow.com/users/8985913/bmam"},"comment_count":0,"score":3,"creation_date":1517460898,"body_markdown":"The below code generates a random number between 100,000 and 900,000. This code will generate six digit values. I&#39;m using this code to generate a six-digit [OTP][1].\r\n\r\nUse `import java.util.Random` to use this random method.\r\n\r\n    import java.util.Random;\r\n\r\n    // Six digits random number generation for OTP\r\n    Random rnd = new Random();\r\n    long longregisterOTP = 100000 + rnd.nextInt(900000);\r\n    System.out.println(longregisterOTP);\r\n\r\n  [1]: https://en.wikipedia.org/wiki/One-time_password\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":590,"user_id":10253771,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6f311d0d20ddc701966d54c4f0ae80a2?s=128&d=identicon&r=PG&f=1","display_name":"user10253771","link":"https://stackoverflow.com/users/10253771/user10253771"},"score":0,"creation_date":1548205437}],"owner":{"reputation":1248,"user_id":6441370,"user_type":"registered","accept_rate":67,"profile_image":"https://lh3.googleusercontent.com/-Ko7l3J9xVaM/AAAAAAAAAAI/AAAAAAAAW0U/TQsjjxmp1tA/photo.jpg?sz=128","display_name":"Siddhartha Thota","link":"https://stackoverflow.com/users/6441370/siddhartha-thota"},"comment_count":1,"score":4,"creation_date":1519590394,"body_markdown":"Say you want range between 0-9, 0 is minimum and 9 is maximum. The below function will print anything between 0 and 9. It&#39;s the same for all ranges.\r\n\r\n    public static void main(String[] args) {\r\n        int b = randomNumberRange(0, 9);\r\n        int d = randomNumberRange (100, 200);\r\n        System.out.println(&quot;value of b is &quot; + b);\r\n        System.out.println(&quot;value of d is &quot; + d);\r\n    }\r\n\r\n    public static int randomNumberRange(int min, int max) {\r\n        int n = (max + 1 - min) + min;\r\n        return (int) (Math.random() * n);\r\n    }\r\n\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":2139,"user_id":958732,"user_type":"registered","profile_image":"https://i.stack.imgur.com/miJkn.png?s=128&g=1","display_name":"Johnbot","link":"https://stackoverflow.com/users/958732/johnbot"},"score":0,"creation_date":1532068152},{"owner":{"reputation":12945,"user_id":2668232,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/8uJTm.jpg?s=128&g=1","display_name":"Oleksandr Pyrohov","link":"https://stackoverflow.com/users/2668232/oleksandr-pyrohov"},"score":0,"creation_date":1532075720}],"owner":{"reputation":12945,"user_id":2668232,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/8uJTm.jpg?s=128&g=1","display_name":"Oleksandr Pyrohov","link":"https://stackoverflow.com/users/2668232/oleksandr-pyrohov"},"comment_count":2,"score":26,"creation_date":1523483679,"body_markdown":"&gt; As of Java 7, you should no longer use `Random`. For most uses, the\r\n&gt; random number generator of choice is now\r\n&gt; [`ThreadLocalRandom`][1].&lt;br/&gt;&lt;br/&gt;For fork join pools and parallel\r\n&gt; streams, use [`SplittableRandom`][2].\r\n\r\n*Joshua Bloch. Effective Java. Third Edition.*\r\n\r\nStarting from Java 8\r\n---\r\n\r\nFor fork join pools and parallel streams, use `SplittableRandom` that is usually faster, has a better statistical independence and uniformity properties in comparison with `Random`.\r\n\r\nTo generate a random `int` in the range `[0, 1_000]:`\r\n\r\n    int n = new SplittableRandom().nextInt(0, 1_001);\r\n\r\nTo generate a random `int[100]` array of values in the range `[0, 1_000]:`\r\n\r\n    int[] a = new SplittableRandom().ints(100, 0, 1_001).parallel().toArray();\r\n\r\nTo return a Stream of random values:\r\n\r\n    IntStream stream = new SplittableRandom().ints(100, 0, 1_001);\r\n\r\n  [1]: https://stackoverflow.com/questions/363681/how-do-i-generate-random-integers-within-a-specific-range-in-java#answer-363692\r\n  [2]: https://docs.oracle.com/javase/8/docs/api/java/util/SplittableRandom.html","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":61,"user_id":2310053,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7dbd66fd840556b131dc54c8764b9f27?s=128&d=identicon&r=PG&f=1","display_name":"Sanjeev Singh","link":"https://stackoverflow.com/users/2310053/sanjeev-singh"},"comment_count":0,"score":3,"creation_date":1527089053,"body_markdown":"The following is another example using Random and forEach\r\n\r\n    int firstNum = 20;//Inclusive\r\n    int lastNum = 50;//Exclusive\r\n    int streamSize = 10;\r\n    Random num = new Random().ints(10, 20, 50).forEach(System.out::println);\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":1,"creation_date":1546683533}],"owner":{"reputation":7718,"user_id":4812170,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/6oHM1.jpg?s=128&g=1","display_name":"vaquar khan","link":"https://stackoverflow.com/users/4812170/vaquar-khan"},"comment_count":1,"score":5,"creation_date":1527779794,"body_markdown":"    import java.util.Random;\r\n    \r\n    public class RandomSSNTest {\r\n    \r\n    \tpublic static void main(String args[]) {\r\n    \t\tgenerateDummySSNNumber();\r\n    \t}\r\n    \r\n    \t\r\n    \t//831-33-6049\r\n    \tpublic static void generateDummySSNNumber() {\r\n    \t\tRandom random = new Random();\r\n    \t\t\r\n    \t\tint id1 = random.nextInt(1000);//3\r\n    \t\tint id2 = random.nextInt(100);//2\r\n    \t\tint id3 = random.nextInt(10000);//4\r\n    \t\t\r\n    \t\tSystem.out.print((id1+&quot;-&quot;+id2+&quot;-&quot;+id3));\r\n    \t}\r\n    \r\n    }\r\n\r\n\r\n\r\nYou can also use \r\n       \r\n   \r\n\r\n    import java.util.concurrent.ThreadLocalRandom;\r\n    Random random = ThreadLocalRandom.current();\r\n\r\nHowever, this class doesn’t perform well in a multi-threaded environment.\r\n\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":778,"user_id":7315895,"user_type":"registered","profile_image":"https://i.stack.imgur.com/PTS6n.jpg?s=128&g=1","display_name":"monster","link":"https://stackoverflow.com/users/7315895/monster"},"comment_count":0,"score":4,"creation_date":1534249554,"body_markdown":"Making the following change in **Attempt 1** should do the work - \r\n\r\n    randomNum = minimum + (int)(Math.random() * (maximum - minimum) );\r\n\r\nCheck [this][1] for working code.\r\n\r\n  [1]: https://ideone.com/20nXU9\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":269,"user_id":9169330,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8f130db8a75d99333936b47f413fb3e7?s=128&d=identicon&r=PG&f=1","display_name":"Alekya","link":"https://stackoverflow.com/users/9169330/alekya"},"comment_count":0,"score":2,"creation_date":1534920392,"body_markdown":"\r\n\r\n    public static void main(String[] args) {\r\n    \r\n    \tRandom ran = new Random();\r\n    \r\n    \tint min, max;\r\n    \tScanner sc = new Scanner(System.in);\r\n    \tSystem.out.println(&quot;Enter min range:&quot;);\r\n    \tmin = sc.nextInt();\r\n    \tSystem.out.println(&quot;Enter max range:&quot;);\r\n    \tmax = sc.nextInt();\r\n    \tint num = ran.nextInt(min);\r\n    \tint num1 = ran.nextInt(max);\r\n    \tSystem.out.println(&quot;Random Number between given range is &quot; + num1);\r\n    \r\n    }","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":578,"user_id":8704849,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-YqQnm9dP7bQ/AAAAAAAAAAI/AAAAAAAAAUQ/mjgqTiG666k/photo.jpg?sz=128","display_name":"Prakhar Nigam","link":"https://stackoverflow.com/users/8704849/prakhar-nigam"},"comment_count":0,"score":3,"creation_date":1542440795,"body_markdown":"Use java.util for Random for general use.\r\n\r\nYou can define your minimum and maximum range to get those results.\r\n\r\n    Random rand=new Random();\r\n    rand.nextInt((max+1) - min) + min;\r\n","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":72,"user_id":6039920,"user_type":"registered","profile_image":"https://i.stack.imgur.com/RvgZK.jpg?s=128&g=1","display_name":"Anjali Pavithra","link":"https://stackoverflow.com/users/6039920/anjali-pavithra"},"comment_count":0,"score":-4,"creation_date":1546335544,"body_markdown":"You can do as below.\r\n\r\n    import java.util.Random;\r\n    public class RandomTestClass {\r\n\r\n        public static void main(String[] args) {\r\n            Random r = new Random();\r\n            int max, min;\r\n            Scanner scanner = new Scanner(System.in);\r\n            System.out.println(&quot;Enter maximum value : &quot;);\r\n            max = scanner.nextInt();\r\n            System.out.println(&quot;Enter minimum value : &quot;);\r\n            min = scanner.nextInt();\r\n            int randomNum;\r\n            randomNum = r.nextInt(max) + min;\r\n            System.out.println(&quot;Random Number : &quot; + randomNum);\r\n        }\r\n\r\n    }\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":2,"creation_date":1561980507}],"owner":{"reputation":939,"user_id":4398100,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f55a87c817e970a1406c79e682462370?s=128&d=identicon&r=PG&f=1","display_name":"Anshul Singhal","link":"https://stackoverflow.com/users/4398100/anshul-singhal"},"comment_count":1,"score":6,"creation_date":1557738270,"body_markdown":"Following code could be used:\r\n\r\n```\r\nThreadLocalRandom.current().nextInt(rangeStart, rangeEndExclusive)\r\n```","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":629,"user_id":11199879,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a0a9c56c2190957960c9463c03486df8?s=128&d=identicon&r=PG&f=1","display_name":"Kaplan","link":"https://stackoverflow.com/users/11199879/kaplan"},"comment_count":0,"score":0,"creation_date":1562403760,"body_markdown":"_here&#39;s a function that returns exactly one integer random number in a range defined by_ ```lowerBoundIncluded``` _and_ ```upperBoundIncluded```_, as requested by_ user42155\r\n\r\n```SplittableRandom splittableRandom = new SplittableRandom();```\r\n\r\n    BiFunction&lt;Integer,Integer,Integer&gt; randomInt = (lowerBoundIncluded, upperBoundIncluded)\r\n        -&gt; splittableRandom.nextInt( lowerBoundIncluded, upperBoundIncluded + 1 );\r\n\r\n```randomInt.apply( …, … );  // gets the random number```\r\n\r\n&lt;br /&gt;_…or shorter for the one-time generation of a random number_\r\n\r\n    new SplittableRandom().nextInt( lowerBoundIncluded, upperBoundIncluded + 1 );\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":23133,"user_id":4850040,"user_type":"registered","accept_rate":62,"profile_image":"https://i.stack.imgur.com/acYd0.png?s=128&g=1","display_name":"Toby Speight","link":"https://stackoverflow.com/users/4850040/toby-speight"},"score":10,"creation_date":1576495074}],"owner":{"reputation":37,"user_id":7030304,"user_type":"registered","profile_image":"https://i.stack.imgur.com/yJNi6.jpg?s=128&g=1","display_name":"Rahul Dhiman","link":"https://stackoverflow.com/users/7030304/rahul-dhiman"},"comment_count":1,"score":-4,"creation_date":1576493777,"body_markdown":"The following snippet will give a random value between 0 and 10000:\r\n```\r\nimport java.util.Random;\r\npublic class Main\r\n{\r\n\tpublic static void main(String[] args) {\r\n\t\tRandom rand = new Random();\r\n        System.out.printf(&quot;%04d%n&quot;, rand.nextInt(10000));\r\n\t}\r\n}\r\n```","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":8492,"user_id":1402846,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/z5AzI.png?s=128&g=1","display_name":"Pang","link":"https://stackoverflow.com/users/1402846/pang"},"score":0,"creation_date":1597194220}],"owner":{"reputation":135,"user_id":10401370,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-hsG34lHNVp8/AAAAAAAAAAI/AAAAAAAAA6o/NgTpSYwdrVI/photo.jpg?sz=128","display_name":"Lokesh Sharma","link":"https://stackoverflow.com/users/10401370/lokesh-sharma"},"comment_count":1,"score":2,"creation_date":1588603690,"body_markdown":"    int func(int max, int min){\r\n\r\n          int range = max - min + 1;\r\n          \r\n          // Math.random() function will return a random no between [0.0,1.0).\r\n          int res = (int) ( Math.random()*range)+min;\r\n    \r\n          return res;\r\n    }\r\n\r\n","title":"How do I generate random integers within a specific range in Java?"},{"comments":[{"owner":{"reputation":651,"user_id":2719152,"user_type":"registered","accept_rate":91,"profile_image":"https://www.gravatar.com/avatar/095141d76dd9b36dcad0a53bfd25df83?s=128&d=identicon&r=PG&f=1","display_name":"user2719152","link":"https://stackoverflow.com/users/2719152/user2719152"},"score":0,"creation_date":1594265665},{"owner":{"reputation":1540,"user_id":1343090,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/9cfae81db0246b542ae383782e9fc4eb?s=128&d=identicon&r=PG","display_name":"Anand","link":"https://stackoverflow.com/users/1343090/anand"},"score":0,"creation_date":1594293817},{"owner":{"reputation":7650,"user_id":1594823,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/Vm3pF.png?s=128&g=1","display_name":"Saikat","link":"https://stackoverflow.com/users/1594823/saikat"},"score":0,"creation_date":1595921573},{"owner":{"reputation":1069,"user_id":3726133,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/bd1869f14535babac41274d3500ae3ac?s=128&d=identicon&r=PG&f=1","display_name":"Raimund Kr&#228;mer","link":"https://stackoverflow.com/users/3726133/raimund-kr%c3%a4mer"},"score":0,"creation_date":1606051520},{"owner":{"reputation":1540,"user_id":1343090,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/9cfae81db0246b542ae383782e9fc4eb?s=128&d=identicon&r=PG","display_name":"Anand","link":"https://stackoverflow.com/users/1343090/anand"},"score":0,"creation_date":1606220414}],"owner":{"reputation":1540,"user_id":1343090,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/9cfae81db0246b542ae383782e9fc4eb?s=128&d=identicon&r=PG","display_name":"Anand","link":"https://stackoverflow.com/users/1343090/anand"},"comment_count":5,"score":3,"creation_date":1590727653,"body_markdown":"Use Apache Lang3 Commons \r\n\r\n    Integer.parseInt(RandomStringUtils.randomNumeric(6, 6));\r\n\r\nMin Value 100000 to Max Value 999999","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":1062,"user_id":7484853,"user_type":"registered","profile_image":"https://i.stack.imgur.com/OGdX0.jpg?s=128&g=1","display_name":"Hasee Amarathunga","link":"https://stackoverflow.com/users/7484853/hasee-amarathunga"},"comment_count":0,"score":3,"creation_date":1602134322,"body_markdown":"You can use following way to do that\r\n\r\n    int range = 10;\r\n    int min = 5\r\n    Random r = new Random();\r\n    int  = r.nextInt(range) + min;","title":"How do I generate random integers within a specific range in Java?"},{"owner":{"reputation":30335,"user_id":1366871,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/b3ec9d9128a25ba6eae8a1d42c2eb04a?s=128&d=identicon&r=PG","display_name":"dreamcrash","link":"https://stackoverflow.com/users/1366871/dreamcrash"},"comment_count":0,"score":0,"creation_date":1611770979,"body_markdown":"To avoid repeating what have been said multiple times, I am showing an alternative for those that need a cryptographically stronger pseudo-random number generator by using the [SecureRandom][1] class, which extends the class `Random`.  From [source][1] one can read:\r\n\r\n&gt; **This class provides a cryptographically strong random number generator\r\n&gt; (RNG).** A cryptographically strong random number minimally complies\r\n&gt; with the statistical random number generator tests specified in FIPS\r\n&gt; 140-2, Security Requirements for Cryptographic Modules, section 4.9.1.\r\n&gt; Additionally, SecureRandom must produce non-deterministic output.\r\n&gt; Therefore any seed material passed to a SecureRandom object must be\r\n&gt; unpredictable, and all SecureRandom output sequences must be\r\n&gt; cryptographically strong, as described in RFC 1750: Randomness\r\n&gt; Recommendations for Security.\r\n&gt; \r\n&gt; A caller obtains a SecureRandom instance via the no-argument\r\n&gt; constructor or one of the getInstance methods:\r\n&gt; \r\n&gt;       SecureRandom random = new SecureRandom();  \r\n&gt;\r\n&gt; Many SecureRandom implementations are in the form of a pseudo-random number generator\r\n&gt; (PRNG), which means they use a deterministic algorithm to produce a\r\n&gt; pseudo-random sequence from a true random seed. Other implementations\r\n&gt; may produce true random numbers, and yet others may use a combination\r\n&gt; of both techniques.\r\n\r\nTo generate a random number between a `min` and `max` values inclusive:\r\n\r\n    public static int generate(SecureRandom secureRandom, int min, int max) {\r\n            return min + secureRandom.nextInt((max - min) + 1);\r\n    }\r\n    \r\nfor a given a `min` (inclusive) and `max` (exclusive) values:\r\n\r\n    return min + secureRandom.nextInt((max - min));\r\n\r\nA running code example:\r\n\r\n    public class Main {\r\n    \r\n        public static int generate(SecureRandom secureRandom, int min, int max) {\r\n            return min + secureRandom.nextInt((max - min) + 1);\r\n        }\r\n    \r\n        public static void main(String[] arg) {\r\n            SecureRandom random = new SecureRandom();\r\n            System.out.println(generate(random, 0, 2 ));\r\n        }\r\n    }\r\n\r\nSource such as [stackoverflow][2], [baeldung][3], [geeksforgeeks][4] provide comparisons between `Random` and `SecureRandom` classes.\r\n\r\nFrom [baeldung][3] one can read:\r\n\r\n&gt; The most common way of using SecureRandom is to generate int, long,\r\n&gt; float, double or boolean values:\r\n&gt; \r\n&gt; int randomInt = secureRandom.nextInt(); &lt;br&gt;\r\n&gt; long randomLong = secureRandom.nextLong();  &lt;br&gt;\r\n&gt; float randomFloat = secureRandom.nextFloat();  &lt;br&gt;\r\n&gt; double randomDouble = secureRandom.nextDouble();  &lt;br&gt;\r\n&gt; boolean randomBoolean = secureRandom.nextBoolean();  &lt;br&gt;\r\n&gt;\r\n&gt; **For generating int values we can pass an upper bound as a parameter:**\r\n&gt; \r\n&gt; int randomInt = secureRandom.nextInt(upperBound); &lt;br&gt;\r\n&gt;\r\n&gt; **In addition, we can generate a stream of values for int, double and long:**\r\n&gt; \r\n&gt; IntStream randomIntStream = secureRandom.ints(); &lt;br&gt;\r\n&gt; LongStream randomLongStream = secureRandom.longs(); &lt;br&gt;\r\n&gt; DoubleStream randomDoubleStream = secureRandom.doubles(); &lt;br&gt;\r\n&gt;\r\n&gt; **For all streams we can explicitly set the stream size:**\r\n&gt; \r\n&gt; IntStream intStream = secureRandom.ints(streamSize);\r\n\r\nThis class offers several other options (*e.g.,* choosing the underlying random number generator) that are out of the scope of this question.  \r\n\r\n  [1]: https://docs.oracle.com/javase/8/docs/api/java/security/SecureRandom.html\r\n  [2]: https://stackoverflow.com/questions/11051205/difference-between-java-util-random-and-java-security-securerandom\r\n  [3]: https://www.baeldung.com/java-secure-random\r\n  [4]: https://www.geeksforgeeks.org/random-vs-secure-random-numbers-java/","title":"How do I generate random integers within a specific range in Java?"}],"owner":{"reputation":44419,"user_id":42155,"user_type":"registered","accept_rate":22,"profile_image":"https://www.gravatar.com/avatar/bec1c77805ad9d7e6b1dca098442e984?s=128&d=identicon&r=PG","display_name":"user42155","link":"https://stackoverflow.com/users/42155/user42155"},"comment_count":3,"is_answered":true,"answer_count":68,"score":3680,"creation_date":1229106057,"question_id":363681,"body_markdown":"How do I generate a random `int` value in a specific range?\r\n\r\nI have tried the following, but those do not work:\r\n\r\n**Attempt 1:**\r\n\r\n    randomNum = minimum + (int)(Math.random() * maximum);\r\n   Bug: `randomNum` can be bigger than `maximum`.\r\n\r\n**Attempt 2:**\r\n\r\n    Random rn = new Random();\r\n    int n = maximum - minimum + 1;\r\n    int i = rn.nextInt() % n;\r\n    randomNum =  minimum + i;\r\n   Bug: `randomNum` can be smaller than `minimum`.\r\n\r\n","link":"https://stackoverflow.com/questions/363681/how-do-i-generate-random-integers-within-a-specific-range-in-java","title":"How do I generate random integers within a specific range in Java?"},{"tags":["java","string","security","passwords","char"],"answers":[{"comments":[{"owner":{"reputation":2145,"user_id":1009901,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/pUwqu.jpg?s=128&g=1","display_name":"Yeti","link":"https://stackoverflow.com/users/1009901/yeti"},"score":10,"creation_date":1441106812},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":10,"creation_date":1441108036},{"owner":{"reputation":220615,"user_id":535871,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/nhcvo.jpg?s=128&g=1","display_name":"Ted Hopp","link":"https://stackoverflow.com/users/535871/ted-hopp"},"score":34,"creation_date":1473102684},{"owner":{"reputation":8903,"user_id":334451,"user_type":"registered","accept_rate":64,"profile_image":"https://www.gravatar.com/avatar/752bf1cd2ef2702724c89f661a5e78d7?s=128&d=identicon&r=PG","display_name":"Mikko Rantalainen","link":"https://stackoverflow.com/users/334451/mikko-rantalainen"},"score":5,"creation_date":1587454400},{"owner":{"reputation":397,"user_id":7597142,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ba2aaf02dcba82b8983be8d3e9787b22?s=128&d=identicon&r=PG&f=1","display_name":"Prateek Pande","link":"https://stackoverflow.com/users/7597142/prateek-pande"},"score":0,"creation_date":1610281800},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":4,"creation_date":1610282127}],"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"comment_count":6,"score":4458,"creation_date":1326723976,"body_markdown":"**Strings are immutable**. That means once you&#39;ve created the `String`, if another process can dump memory, there&#39;s no way (aside from [reflection](https://en.wikipedia.org/wiki/Reflection_%28computer_programming%29)) you can get rid of the data before [garbage collection](https://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29) kicks in.\r\n\r\nWith an array, you can explicitly wipe the data after you&#39;re done with it. You can overwrite the array with anything you like, and the password won&#39;t be present anywhere in the system, even before garbage collection.\r\n\r\nSo yes, this *is* a security concern - but even using `char[]` only reduces the window of opportunity for an attacker, and it&#39;s only for this specific type of attack.\r\n\r\nAs noted in the comments, it&#39;s possible that arrays being moved by the garbage collector will leave stray copies of the data in memory. I believe this is implementation-specific - the garbage collector *may* clear all memory as it goes, to avoid this sort of thing. Even if it does, there&#39;s still the time during which the `char[]` contains the actual characters as an attack window.","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":5475,"user_id":557153,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/h2fWz.png?s=128&g=1","display_name":"avgvstvs","link":"https://stackoverflow.com/users/557153/avgvstvs"},"score":16,"creation_date":1454685581},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":4,"creation_date":1489053888},{"owner":{"reputation":5475,"user_id":557153,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/h2fWz.png?s=128&g=1","display_name":"avgvstvs","link":"https://stackoverflow.com/users/557153/avgvstvs"},"score":3,"creation_date":1489077792},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":0,"creation_date":1489080480},{"owner":{"reputation":5475,"user_id":557153,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/h2fWz.png?s=128&g=1","display_name":"avgvstvs","link":"https://stackoverflow.com/users/557153/avgvstvs"},"score":3,"creation_date":1489257801},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":5,"creation_date":1489404049},{"owner":{"reputation":6153,"user_id":5167682,"user_type":"registered","accept_rate":29,"profile_image":"https://i.stack.imgur.com/2vexc.jpg?s=128&g=1","display_name":"roottraveller","link":"https://stackoverflow.com/users/5167682/roottraveller"},"score":0,"creation_date":1509433009},{"owner":{"reputation":80350,"user_id":1281433,"user_type":"registered","accept_rate":43,"profile_image":"https://i.stack.imgur.com/O8XCE.png?s=128&g=1","display_name":"Joshua Taylor","link":"https://stackoverflow.com/users/1281433/joshua-taylor"},"score":1,"creation_date":1521139654}],"owner":{"reputation":4588,"user_id":1011704,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f6aaf917279d86f93ae0671b3060985b?s=128&d=identicon&r=PG","display_name":"alephx","link":"https://stackoverflow.com/users/1011704/alephx"},"comment_count":8,"score":361,"creation_date":1326724053,"body_markdown":"Character arrays (`char[]`) can be cleared after use by setting each character to zero and Strings not. If someone can somehow see the memory image, they can see a password in plain text if Strings are used, but if `char[]` is used, after purging data with 0&#39;s, the password is secure.\r\n","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":45430,"user_id":69809,"user_type":"registered","accept_rate":96,"profile_image":"https://i.stack.imgur.com/yCVF0.jpg?s=128&g=1","display_name":"Groo","link":"https://stackoverflow.com/users/69809/groo"},"score":4,"creation_date":1326734810},{"owner":{"reputation":469,"user_id":1386469,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/eea9f016b5ae9a2f2a190e8e01ec824c?s=128&d=identicon&r=PG","display_name":"Dawesi","link":"https://stackoverflow.com/users/1386469/dawesi"},"score":2,"creation_date":1533498197}],"owner":{"reputation":63444,"user_id":64174,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1151371a864ddfe69499e8c8e5a401d7?s=128&d=identicon&r=PG","display_name":"Sean Owen","link":"https://stackoverflow.com/users/64174/sean-owen"},"comment_count":2,"score":88,"creation_date":1326724074,"body_markdown":"I don&#39;t think this is a valid suggestion, but, I can at least guess at the reason.\r\n\r\nI think the motivation is wanting to make sure that you can erase all trace of the password in memory promptly and with certainty after it is used. With a `char[]` you could overwrite each element of the array with a blank or something for sure. You can&#39;t edit the internal value of a `String` that way.\r\n\r\nBut that alone isn&#39;t a good answer; why not just make sure a reference to the `char[]` or `String` doesn&#39;t escape? Then there&#39;s no security issue. But the thing is that `String` objects can be `intern()`ed in theory and kept alive inside the constant pool. I suppose using `char[]` forbids this possibility.\r\n","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":273369,"user_id":40342,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/a648ccb47bbbe9497c073315aac4d33e?s=128&d=identicon&r=PG","display_name":"Joachim Sauer","link":"https://stackoverflow.com/users/40342/joachim-sauer"},"score":35,"creation_date":1326730997},{"owner":{"reputation":5680,"user_id":85661,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/2dbf658a6000684870711ebf974eaae8?s=128&d=identicon&r=PG&f=1","display_name":"Dan Is Fiddling By Firelight","link":"https://stackoverflow.com/users/85661/dan-is-fiddling-by-firelight"},"score":46,"creation_date":1326731172},{"owner":{"reputation":3789,"user_id":941058,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/vJ4dI.jpg?s=128&g=1","display_name":"kingdango","link":"https://stackoverflow.com/users/941058/kingdango"},"score":10,"creation_date":1326824327},{"owner":{"reputation":3060,"user_id":47402,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/761d507cb76e1cab2cb527891faf1b43?s=128&d=identicon&r=PG","display_name":"Rolf Rander","link":"https://stackoverflow.com/users/47402/rolf-rander"},"score":0,"creation_date":1327079952},{"owner":{"reputation":14767,"user_id":216111,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4f6b5ef485ac16233e1536193245fc55?s=128&d=identicon&r=PG","display_name":"josefx","link":"https://stackoverflow.com/users/216111/josefx"},"score":1,"creation_date":1327086527},{"owner":{"reputation":3060,"user_id":47402,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/761d507cb76e1cab2cb527891faf1b43?s=128&d=identicon&r=PG","display_name":"Rolf Rander","link":"https://stackoverflow.com/users/47402/rolf-rander"},"score":0,"creation_date":1327087907},{"owner":{"reputation":14767,"user_id":216111,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4f6b5ef485ac16233e1536193245fc55?s=128&d=identicon&r=PG","display_name":"josefx","link":"https://stackoverflow.com/users/216111/josefx"},"score":0,"creation_date":1327093089},{"owner":{"reputation":3060,"user_id":47402,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/761d507cb76e1cab2cb527891faf1b43?s=128&d=identicon&r=PG","display_name":"Rolf Rander","link":"https://stackoverflow.com/users/47402/rolf-rander"},"score":0,"creation_date":1327096971},{"owner":{"reputation":14767,"user_id":216111,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4f6b5ef485ac16233e1536193245fc55?s=128&d=identicon&r=PG","display_name":"josefx","link":"https://stackoverflow.com/users/216111/josefx"},"score":0,"creation_date":1327140395},{"owner":{"reputation":3060,"user_id":47402,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/761d507cb76e1cab2cb527891faf1b43?s=128&d=identicon&r=PG","display_name":"Rolf Rander","link":"https://stackoverflow.com/users/47402/rolf-rander"},"score":1,"creation_date":1327232978},{"owner":{"reputation":767,"user_id":1567566,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/4e534cd103a47fdf043beed76f6794e6?s=128&d=identicon&r=PG","display_name":"Tinman","link":"https://stackoverflow.com/users/1567566/tinman"},"score":2,"creation_date":1349904503},{"owner":{"reputation":4715,"user_id":253661,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/271ce22b6d779ccf67abd73688234905?s=128&d=identicon&r=PG","display_name":"Peter vdL","link":"https://stackoverflow.com/users/253661/peter-vdl"},"score":11,"creation_date":1406178905},{"owner":{"reputation":14767,"user_id":216111,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4f6b5ef485ac16233e1536193245fc55?s=128&d=identicon&r=PG","display_name":"josefx","link":"https://stackoverflow.com/users/216111/josefx"},"score":2,"creation_date":1406386073},{"owner":{"reputation":4715,"user_id":253661,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/271ce22b6d779ccf67abd73688234905?s=128&d=identicon&r=PG","display_name":"Peter vdL","link":"https://stackoverflow.com/users/253661/peter-vdl"},"score":1,"creation_date":1406486748},{"owner":{"reputation":14767,"user_id":216111,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4f6b5ef485ac16233e1536193245fc55?s=128&d=identicon&r=PG","display_name":"josefx","link":"https://stackoverflow.com/users/216111/josefx"},"score":11,"creation_date":1406741973},{"owner":{"reputation":14767,"user_id":216111,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4f6b5ef485ac16233e1536193245fc55?s=128&d=identicon&r=PG","display_name":"josefx","link":"https://stackoverflow.com/users/216111/josefx"},"score":6,"creation_date":1406835568},{"owner":{"reputation":4302,"user_id":201891,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/3798fee71522049317927bc8053c0599?s=128&d=identicon&r=PG","display_name":"DavidS","link":"https://stackoverflow.com/users/201891/davids"},"score":3,"creation_date":1436332550},{"owner":{"reputation":7916,"user_id":912829,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/8155348e86202fd2f553332dde3b2fcf?s=128&d=identicon&r=PG&f=1","display_name":"ACV","link":"https://stackoverflow.com/users/912829/acv"},"score":0,"creation_date":1524695589},{"owner":{"reputation":469,"user_id":1386469,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/eea9f016b5ae9a2f2a190e8e01ec824c?s=128&d=identicon&r=PG","display_name":"Dawesi","link":"https://stackoverflow.com/users/1386469/dawesi"},"score":0,"creation_date":1533499161},{"owner":{"reputation":1439,"user_id":218139,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e54f588a34f4efcf22992051febf8f94?s=128&d=identicon&r=PG","display_name":"Stefan L","link":"https://stackoverflow.com/users/218139/stefan-l"},"score":1,"creation_date":1545063488}],"owner":{"reputation":14767,"user_id":216111,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4f6b5ef485ac16233e1536193245fc55?s=128&d=identicon&r=PG","display_name":"josefx","link":"https://stackoverflow.com/users/216111/josefx"},"comment_count":20,"score":227,"creation_date":1326724345,"body_markdown":"Some people believe that you have to overwrite the memory used to store the password once you no longer need it. This reduces the time window an attacker has to read the password from your system and completely ignores the fact that the attacker already needs enough access to hijack the JVM memory to do this. An attacker with that much access can catch your key events making this completely useless (AFAIK, so please correct me if I am wrong).\r\n\r\n**Update**\r\n\r\nThanks to the comments I have to update my answer. Apparently there are two cases where this can add a (very) minor security improvement as it reduces the time a password could land on the hard drive. Still I think it&#39;s overkill for most use cases.\r\n\r\n* Your target system may be badly configured or you have to assume it is and you have to be paranoid about core dumps (can be valid if the systems are not managed by an administrator). \r\n* Your software has to be overly paranoid to prevent data leaks with the attacker gaining access to the hardware - using things like [TrueCrypt][1] (discontinued), [VeraCrypt][2], or [CipherShed][3].\r\n\r\nIf possible, disabling core dumps and the swap file would take care of both problems. However, they would require administrator rights and may reduce functionality (less memory to use) and pulling RAM from a running system would still be a valid concern.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/TrueCrypt\r\n  [2]: https://veracrypt.codeplex.com/\r\n  [3]: https://ciphershed.org/","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":44,"creation_date":1326849243},{"owner":{"reputation":49787,"user_id":277683,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/c15311acd88ded73e20238c71adf253f?s=128&d=identicon&r=PG","display_name":"Konrad Garus","link":"https://stackoverflow.com/users/277683/konrad-garus"},"score":44,"creation_date":1327063191},{"owner":{"reputation":472,"user_id":578101,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/594e4fb2b1c056db119f250630599c60?s=128&d=identicon&r=PG","display_name":"mauhiz","link":"https://stackoverflow.com/users/578101/mauhiz"},"score":18,"creation_date":1436430967},{"owner":{"reputation":30439,"user_id":1804599,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/v91P3.jpg?s=128&g=1","display_name":"rightfold","link":"https://stackoverflow.com/users/1804599/rightfold"},"score":42,"creation_date":1441042332},{"owner":{"reputation":374,"user_id":4418511,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/4b10982a4070169a871c7f55a8c3c446?s=128&d=identicon&r=PG&f=1","display_name":"GC_","link":"https://stackoverflow.com/users/4418511/gc"},"score":11,"creation_date":1471872181},{"owner":{"reputation":1109,"user_id":1294423,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/59e9d4f8bec370afd6e0bbb0906397c7?s=128&d=identicon&r=PG","display_name":"Gavin S. Yancey","link":"https://stackoverflow.com/users/1294423/gavin-s-yancey"},"score":3,"creation_date":1497917245},{"owner":{"reputation":3598,"user_id":436524,"user_type":"registered","accept_rate":72,"profile_image":"https://www.gravatar.com/avatar/f9668e754daecfa1260501a71ee9876a?s=128&d=identicon&r=PG","display_name":"Octavia Togami","link":"https://stackoverflow.com/users/436524/octavia-togami"},"score":8,"creation_date":1499817809},{"owner":{"reputation":7916,"user_id":912829,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/8155348e86202fd2f553332dde3b2fcf?s=128&d=identicon&r=PG&f=1","display_name":"ACV","link":"https://stackoverflow.com/users/912829/acv"},"score":1,"creation_date":1524695481},{"owner":{"reputation":469,"user_id":1386469,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/eea9f016b5ae9a2f2a190e8e01ec824c?s=128&d=identicon&r=PG","display_name":"Dawesi","link":"https://stackoverflow.com/users/1386469/dawesi"},"score":1,"creation_date":1533498381},{"owner":{"reputation":9688,"user_id":201722,"user_type":"registered","accept_rate":95,"profile_image":"https://i.stack.imgur.com/z5MSO.jpg?s=128&g=1","display_name":"luis.espinal","link":"https://stackoverflow.com/users/201722/luis-espinal"},"score":1,"creation_date":1546527256},{"owner":{"reputation":8903,"user_id":334451,"user_type":"registered","accept_rate":64,"profile_image":"https://www.gravatar.com/avatar/752bf1cd2ef2702724c89f661a5e78d7?s=128&d=identicon&r=PG","display_name":"Mikko Rantalainen","link":"https://stackoverflow.com/users/334451/mikko-rantalainen"},"score":0,"creation_date":1587454510}],"owner":{"reputation":49787,"user_id":277683,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/c15311acd88ded73e20238c71adf253f?s=128&d=identicon&r=PG","display_name":"Konrad Garus","link":"https://stackoverflow.com/users/277683/konrad-garus"},"comment_count":11,"score":1260,"creation_date":1326742650,"body_markdown":"While other suggestions here seem valid, there is one other good reason. With plain `String` you have much higher chances of **accidentally printing the password to logs**, monitors or some other insecure place. `char[]` is less vulnerable.\r\n\r\nConsider this:\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tObject pw = &quot;Password&quot;;\r\n\t\tSystem.out.println(&quot;String: &quot; + pw);\r\n\t\r\n\t\tpw = &quot;Password&quot;.toCharArray();\r\n\t\tSystem.out.println(&quot;Array: &quot; + pw);\r\n\t}\r\n\r\nPrints:\r\n\r\n\tString: Password\r\n\tArray: [C@5829428e","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":4,"creation_date":1327265120},{"owner":{"reputation":3204,"user_id":961954,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/c4c5bbd954fee282f42f909f5323eb37?s=128&d=identicon&r=PG","display_name":"user961954","link":"https://stackoverflow.com/users/961954/user961954"},"score":40,"creation_date":1344684457},{"owner":{"reputation":10921,"user_id":2161954,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/eccdcef378f17549482325c2051c4048?s=128&d=identicon&r=PG","display_name":"SnakeDoc","link":"https://stackoverflow.com/users/2161954/snakedoc"},"score":11,"creation_date":1403830221},{"owner":{"reputation":469,"user_id":1386469,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/eea9f016b5ae9a2f2a190e8e01ec824c?s=128&d=identicon&r=PG","display_name":"Dawesi","link":"https://stackoverflow.com/users/1386469/dawesi"},"score":3,"creation_date":1533498624},{"owner":{"reputation":9688,"user_id":201722,"user_type":"registered","accept_rate":95,"profile_image":"https://i.stack.imgur.com/z5MSO.jpg?s=128&g=1","display_name":"luis.espinal","link":"https://stackoverflow.com/users/201722/luis-espinal"},"score":3,"creation_date":1546543505}],"owner":{"reputation":109295,"user_id":372643,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/63edcce213b4c96b8b4a660e1df2da08?s=128&d=identicon&r=PG","display_name":"Bruno","link":"https://stackoverflow.com/users/372643/bruno"},"comment_count":5,"score":704,"creation_date":1326770457,"body_markdown":"To quote an official document, the [Java Cryptography Architecture guide][1] says this about `char[]` vs. `String` passwords (about password-based encryption, but this is more generally about passwords of course):\r\n\r\n&gt; It would seem logical to collect and store the password in an object\r\n&gt; of type `java.lang.String`. However, here&#39;s the caveat: `Object`s of\r\n&gt; type `String` are immutable, i.e., there are no methods defined that\r\n&gt; allow you to change (overwrite) or zero out the contents of a `String`\r\n&gt; after usage. This feature makes `String` objects unsuitable for\r\n&gt; storing security sensitive information such as user passwords. You\r\n&gt; should always collect and store security sensitive information in a\r\n&gt; `char` array instead.\r\n\r\n[Guideline 2-2 of the Secure Coding Guidelines for the Java Programming Language, Version 4.0][2] also says something similar (although it is originally in the context of logging):\r\n\r\n&gt; *Guideline 2-2: Do not log highly sensitive information*\r\n&gt; \r\n&gt; Some information, such as Social Security numbers (SSNs) and\r\n&gt; passwords, is highly sensitive. This information should not be kept\r\n&gt; for longer than necessary nor where it may be seen, even by\r\n&gt; administrators. For instance, it should not be sent to log files and\r\n&gt; its presence should not be detectable through searches. Some transient\r\n&gt; data may be kept in mutable data structures, such as char arrays, and\r\n&gt; cleared immediately after use. Clearing data structures has reduced\r\n&gt; effectiveness on typical Java runtime systems as objects are moved in\r\n&gt; memory transparently to the programmer.\r\n&gt; \r\n&gt; This guideline also has implications for implementation and use of\r\n&gt; lower-level libraries that do not have semantic knowledge of the data\r\n&gt; they are dealing with. As an example, a low-level string parsing\r\n&gt; library may log the text it works on. An application may parse an SSN\r\n&gt; with the library. This creates a situation where the SSNs are\r\n&gt; available to administrators with access to the log files.\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/6/docs/technotes/guides/security/crypto/CryptoSpec.html#PBEEx\r\n  [2]: http://www.oracle.com/technetwork/java/seccodeguide-139067.html#2","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":109295,"user_id":372643,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/63edcce213b4c96b8b4a660e1df2da08?s=128&d=identicon&r=PG","display_name":"Bruno","link":"https://stackoverflow.com/users/372643/bruno"},"score":0,"creation_date":1327152715},{"owner":{"reputation":36257,"user_id":827060,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1ecef11b3cc6abfda85798858745ef72?s=128&d=identicon&r=PG","display_name":"emboss","link":"https://stackoverflow.com/users/827060/emboss"},"score":0,"creation_date":1327155527},{"owner":{"reputation":109295,"user_id":372643,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/63edcce213b4c96b8b4a660e1df2da08?s=128&d=identicon&r=PG","display_name":"Bruno","link":"https://stackoverflow.com/users/372643/bruno"},"score":0,"creation_date":1327156170},{"owner":{"reputation":36257,"user_id":827060,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1ecef11b3cc6abfda85798858745ef72?s=128&d=identicon&r=PG","display_name":"emboss","link":"https://stackoverflow.com/users/827060/emboss"},"score":0,"creation_date":1327157109}],"owner":{"reputation":36257,"user_id":827060,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1ecef11b3cc6abfda85798858745ef72?s=128&d=identicon&r=PG","display_name":"emboss","link":"https://stackoverflow.com/users/827060/emboss"},"comment_count":4,"score":71,"creation_date":1327001987,"body_markdown":"The answer has already been given, but I&#39;d like to share an issue that I discovered lately with Java standard libraries. While they take great care now of replacing password strings with `char[]` everywhere (which of course is a good thing), other security-critical data seems to be overlooked when it comes to clearing it from memory.\r\n\r\nI&#39;m thinking of e.g. the [PrivateKey](http://docs.oracle.com/javase/6/docs/api/java/security/PrivateKey.html) class. Consider a scenario where you would load a private RSA key from a PKCS#12 file, using it to perform some operation. Now in this case, sniffing the password alone wouldn&#39;t help you much as long as physical access to the key file is properly restricted. As an attacker, you would be much better off if you obtained the key directly instead of the password. The desired information can be leaked manifold, core dumps, a debugger session or swap files are just some examples.\r\n\r\nAnd as it turns out, there is nothing that lets you clear the private information of a `PrivateKey` from memory, because there&#39;s no API that lets you wipe the bytes that form the corresponding information.\r\n\r\nThis is a bad situation, as this [paper](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.77.3297&amp;rep=rep1&amp;type=pdf) describes how this circumstance could be potentially exploited.\r\n\r\nThe OpenSSL library for example overwrites critical memory sections before private keys are freed. Since Java is garbage-collected, we would need explicit methods to wipe and invalidate private information for Java keys, which are to be applied immediately after using the key. \r\n\r\n","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":14489,"user_id":1793718,"user_type":"registered","accept_rate":69,"profile_image":"https://i.stack.imgur.com/o5ujD.jpg?s=128&g=1","display_name":"Lucky","link":"https://stackoverflow.com/users/1793718/lucky"},"score":10,"creation_date":1478159835},{"owner":{"reputation":506,"user_id":3350632,"user_type":"registered","accept_rate":57,"profile_image":"https://i.stack.imgur.com/JB2LY.jpg?s=128&g=1","display_name":"Vaibhav_Sharma","link":"https://stackoverflow.com/users/3350632/vaibhav-sharma"},"score":0,"creation_date":1501240416},{"owner":{"reputation":12146,"user_id":2985643,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/eaacaf1426f7e6d02914fcf99dc0a33b?s=128&d=identicon&r=PG&f=1","display_name":"skomisa","link":"https://stackoverflow.com/users/2985643/skomisa"},"score":3,"creation_date":1568778812}],"owner":{"reputation":7571,"user_id":1835198,"user_type":"registered","accept_rate":58,"profile_image":"https://www.gravatar.com/avatar/b0dd576a5009818db16d42f684a51ba7?s=128&d=identicon&r=PG&f=1","display_name":"Human Being","link":"https://stackoverflow.com/users/1835198/human-being"},"comment_count":3,"score":46,"creation_date":1399544266,"body_markdown":"These are all the reasons, one should choose a **char[]** array instead of **String** for a password.\r\n\r\n**1.**  Since Strings are immutable in Java, if you store the password as plain text it will be available in memory until the Garbage collector clears it, and since String is used in the String pool for reusability there is a pretty high chance that it will remain in memory for a long duration, which poses a security threat. \r\n\r\nSince anyone who has access to the memory dump can find the password in clear text, that&#39;s another reason you should always use an encrypted password rather than plain text. Since Strings are immutable there is no way the contents of Strings can be changed because any change will produce a new String, while if you use a char[] you can still set all the elements as blank or zero. So storing a password in a character array clearly mitigates the security risk of stealing a password.\r\n\r\n**2.**  Java itself recommends using the getPassword() method of JPasswordField which returns a char[], instead of the deprecated getText() method which returns passwords in clear text stating security reasons. It&#39;s good to follow advice from the Java team and adhere to standards rather than going against them.\r\n\r\n**3.**  With String there is always a risk of printing plain text in a log file or console but if you use an Array you won&#39;t print contents of an array, but instead its memory location gets printed. Though not a real reason, it still makes sense.\r\n\r\n\tString strPassword=&quot;Unknown&quot;;\r\n\tchar[] charPassword= new char[]{&#39;U&#39;,&#39;n&#39;,&#39;k&#39;,&#39;w&#39;,&#39;o&#39;,&#39;n&#39;};\r\n\tSystem.out.println(&quot;String password: &quot; + strPassword);\r\n\tSystem.out.println(&quot;Character password: &quot; + charPassword);\r\n\r\n\tString password: Unknown\r\n\tCharacter password: [C@110b053\r\n\r\n\r\nReferenced from [this blog](http://javarevisited.blogspot.com/2012/03/why-character-array-is-better-than.html).\r\nI hope this helps.","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":0,"creation_date":1489081527},{"owner":{"reputation":15888,"user_id":513342,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/392cd0766310cdd85a78f06b8a642b1b?s=128&d=identicon&r=PG","display_name":"Oleg Mikheev","link":"https://stackoverflow.com/users/513342/oleg-mikheev"},"score":0,"creation_date":1489084136},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":0,"creation_date":1489084504},{"owner":{"reputation":15888,"user_id":513342,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/392cd0766310cdd85a78f06b8a642b1b?s=128&d=identicon&r=PG","display_name":"Oleg Mikheev","link":"https://stackoverflow.com/users/513342/oleg-mikheev"},"score":0,"creation_date":1489182043},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":0,"creation_date":1489404641},{"owner":{"reputation":39429,"user_id":86967,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/624a9d99ab6293522102feab52c61f36?s=128&d=identicon&r=PG&f=1","display_name":"Brent Bradburn","link":"https://stackoverflow.com/users/86967/brent-bradburn"},"score":0,"creation_date":1568739515}],"owner":{"reputation":15888,"user_id":513342,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/392cd0766310cdd85a78f06b8a642b1b?s=128&d=identicon&r=PG","display_name":"Oleg Mikheev","link":"https://stackoverflow.com/users/513342/oleg-mikheev"},"comment_count":6,"score":38,"creation_date":1422085420,"body_markdown":"There is nothing that char array gives you vs String unless you clean it up manually after use, and I haven&#39;t seen anyone actually doing that. So to me the preference of char[] vs String is a bit exaggerated.\r\n\r\nTake a look at the &lt;sub&gt;widely used&lt;/sub&gt; Spring Security library [here](http://grepcode.com/file/repo1.maven.org/maven2/org.springframework.security/spring-security-web/3.0.1.RELEASE/org/springframework/security/web/authentication/UsernamePasswordAuthenticationFilter.java#73) and ask yourself - are Spring Security guys incompetent or char[] passwords just don&#39;t make much sense. When some nasty hacker grabs memory dumps of your RAM be sure s/he&#39;ll get all the passwords even if you use sophisticated ways to hide them.\r\n\r\nHowever, Java changes all the time, and some scary features like https://stackoverflow.com/questions/27949213/string-deduplication-feature-of-java-8 might intern String objects without your knowledge. But that&#39;s a different conversation.","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":2641,"user_id":1336558,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/LKezQ.jpg?s=128&g=1","display_name":"Mohit Kanwar","link":"https://stackoverflow.com/users/1336558/mohit-kanwar"},"score":0,"creation_date":1435729316},{"owner":{"reputation":679,"user_id":3264657,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/20c5379214923e99c21443dd4d3351f1?s=128&d=identicon&r=PG&f=1","display_name":"Graph Theory","link":"https://stackoverflow.com/users/3264657/graph-theory"},"score":3,"creation_date":1435870989},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":0,"creation_date":1489054964},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":0,"creation_date":1489055080}],"owner":{"reputation":679,"user_id":3264657,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/20c5379214923e99c21443dd4d3351f1?s=128&d=identicon&r=PG&f=1","display_name":"Graph Theory","link":"https://stackoverflow.com/users/3264657/graph-theory"},"comment_count":4,"score":43,"creation_date":1428451499,"body_markdown":"**Edit:** Coming back to this answer after a year of security research, I realize it makes the rather unfortunate implication that you would ever actually compare plaintext passwords. Please don&#39;t. [Use a secure one-way hash with a salt and a reasonable number of iterations][1]. Consider using a library: this stuff is hard to get right!\r\n\r\n**Original answer:** What about the fact that String.equals() uses [short-circuit evaluation][2], and is therefore vulnerable to a timing attack? It may be unlikely, but you could *theoretically* time the password comparison in order to determine the correct sequence of characters.\r\n\r\n    public boolean equals(Object anObject) {\r\n        if (this == anObject) {\r\n            return true;\r\n        }\r\n        if (anObject instanceof String) {\r\n            String anotherString = (String)anObject;\r\n            int n = value.length;\r\n            // Quits here if Strings are different lengths.\r\n            if (n == anotherString.value.length) {\r\n                char v1[] = value;\r\n                char v2[] = anotherString.value;\r\n                int i = 0;\r\n                // Quits here at first different character.\r\n                while (n-- != 0) {\r\n                    if (v1[i] != v2[i])\r\n                        return false;\r\n                    i++;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\nSome more resources on timing attacks:\r\n\r\n - [A Lesson In Timing Attacks][3]\r\n - [A discussion about timing attacks][4] over on Information Security Stack Exchange\r\n - And of course, the [Timing Attack Wikipedia page][5]\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/2860943/how-can-i-hash-a-password-in-java\r\n  [2]: http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/lang/String.java#String.equals%28java.lang.Object%29\r\n  [3]: http://codahale.com/a-lesson-in-timing-attacks/\r\n  [4]: https://security.stackexchange.com/a/83671\r\n  [5]: http://en.wikipedia.org/wiki/Timing_attack","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":111064,"user_id":2410359,"user_type":"registered","accept_rate":87,"profile_image":"https://i.stack.imgur.com/pIl9T.png?s=128&g=1","display_name":"chux - Reinstate Monica","link":"https://stackoverflow.com/users/2410359/chux-reinstate-monica"},"score":2,"creation_date":1440703315},{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"score":0,"creation_date":1440706596},{"owner":{"reputation":1821,"user_id":660887,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/18b3a6e07ac8dc07b978568f6ad6a010?s=128&d=identicon&r=PG","display_name":"jamp","link":"https://stackoverflow.com/users/660887/jamp"},"score":6,"creation_date":1454942929},{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"score":0,"creation_date":1454945607},{"owner":{"reputation":1821,"user_id":660887,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/18b3a6e07ac8dc07b978568f6ad6a010?s=128&d=identicon&r=PG","display_name":"jamp","link":"https://stackoverflow.com/users/660887/jamp"},"score":1,"creation_date":1454948453},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":1,"creation_date":1578327326}],"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"comment_count":6,"score":55,"creation_date":1436347615,"body_markdown":"As Jon Skeet states, there is no way except by using reflection. \r\n\r\nHowever, if reflection is an option for you, you can do this.\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(&quot;please enter a password&quot;);\r\n        // don&#39;t actually do this, this is an example only.\r\n        Scanner in = new Scanner(System.in);\r\n        String password = in.nextLine();\r\n        usePassword(password);\r\n\r\n        clearString(password);\r\n\r\n        System.out.println(&quot;password: &#39;&quot; + password + &quot;&#39;&quot;);\r\n    }\r\n\r\n    private static void usePassword(String password) {\r\n\r\n    }\r\n\r\n    private static void clearString(String password) {\r\n        try {\r\n            Field value = String.class.getDeclaredField(&quot;value&quot;);\r\n            value.setAccessible(true);\r\n            char[] chars = (char[]) value.get(password);\r\n            Arrays.fill(chars, &#39;*&#39;);\r\n        } catch (Exception e) {\r\n            throw new AssertionError(e);\r\n        }\r\n    }\r\n\r\nwhen run\r\n\r\n    please enter a password\r\n    hello world\r\n    password: &#39;***********&#39;\r\n\r\nNote: if the String&#39;s char[] has been copied as a part of a GC cycle, there is a chance the previous copy is somewhere in memory.  \r\n\r\nThis old copy wouldn&#39;t appear in a heap dump, but if you have direct access to the raw memory of the process you could see it.  In general you should avoid anyone having such access.","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":5475,"user_id":557153,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/h2fWz.png?s=128&g=1","display_name":"avgvstvs","link":"https://stackoverflow.com/users/557153/avgvstvs"},"score":0,"creation_date":1454685330},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":0,"creation_date":1489055295},{"owner":{"reputation":5475,"user_id":557153,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/h2fWz.png?s=128&g=1","display_name":"avgvstvs","link":"https://stackoverflow.com/users/557153/avgvstvs"},"score":0,"creation_date":1489077396},{"owner":{"reputation":5475,"user_id":557153,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/h2fWz.png?s=128&g=1","display_name":"avgvstvs","link":"https://stackoverflow.com/users/557153/avgvstvs"},"score":0,"creation_date":1489077591},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":0,"creation_date":1489080877}],"owner":{"reputation":21406,"user_id":102040,"user_type":"registered","accept_rate":66,"profile_image":"https://www.gravatar.com/avatar/dbf44501979768be513fc1d001e4238e?s=128&d=identicon&r=PG","display_name":"Geek","link":"https://stackoverflow.com/users/102040/geek"},"comment_count":5,"score":32,"creation_date":1438080400,"body_markdown":"Strings are immutable and cannot be altered once they have been created. Creating a password as a string will leave stray references to the password on the heap or on the String pool. Now if someone takes a heap dump of the Java process and carefully scans through he might be able to guess the passwords. Of course these non used strings will be garbage collected but that depends on when the GC kicks in.\r\n\r\nOn the other side char[] are mutable as soon as the authentication is done you can overwrite them with any character like all M&#39;s or backslashes. Now even if someone takes a heap dump he might not be able to get the passwords which are not currently in use. This gives you more control in the sense like clearing the Object content yourself vs waiting for the GC to do it.","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":15019,"user_id":1475228,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/TgQ5O.png?s=128&g=1","display_name":"Pritam Banerjee","link":"https://stackoverflow.com/users/1475228/pritam-banerjee"},"score":0,"creation_date":1505109761}],"owner":{"reputation":15019,"user_id":1475228,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/TgQ5O.png?s=128&g=1","display_name":"Pritam Banerjee","link":"https://stackoverflow.com/users/1475228/pritam-banerjee"},"comment_count":1,"score":22,"creation_date":1481310174,"body_markdown":"The short and straightforward answer would be because `char[]` is mutable while `String` objects are not.\r\n\r\n`Strings` in Java are immutable objects. That is why they can&#39;t be modified once created, and therefore the only way for their contents to be removed from memory is to have them garbage collected. It will be only then when the memory freed by the object can be overwritten, and the data will be gone.\r\n\r\nNow garbage collection in Java doesn&#39;t happen at any guaranteed interval. The `String` can thus persist in memory for a long time, and if a process crashes during this time, the contents of the string may end up in a memory dump or some log. \r\n\r\nWith a *character array*, you can read the password, finish working with it as soon as you can, and then immediately change the contents.\r\n\r\n\r\n","title":"Why is char[] preferred over String for passwords?"},{"owner":{"reputation":229,"user_id":8161256,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7f089a17f988bf55a9ca0e3fcb5fcc7e?s=128&d=identicon&r=PG&f=1","display_name":"Saathvik","link":"https://stackoverflow.com/users/8161256/saathvik"},"comment_count":0,"score":13,"creation_date":1501223586,"body_markdown":"String in java is immutable. So whenever a string is created, it will remain in the memory until it is garbage collected. So anyone who has access to the memory can read the value of the string. &lt;br/&gt;\r\nIf the value of the string is modified then it will end up creating a new string. So both the original value and the modified value stay in the memory until it is garbage collected. &lt;br/&gt; &lt;br/&gt;\r\nWith the character array, the contents of the array can be modified or erased once the purpose of the password is served. The original contents of the array will not be found in memory after it is modified and even before the garbage collection kicks in.&lt;br/&gt;&lt;br/&gt;\r\nBecause of the security concern it is better to store password as a character array.","title":"Why is char[] preferred over String for passwords?"},{"comments":[{"owner":{"reputation":721,"user_id":4740914,"user_type":"registered","profile_image":"https://i.stack.imgur.com/hnmAL.jpg?s=128&g=1","display_name":"Yugerten","link":"https://stackoverflow.com/users/4740914/yugerten"},"score":2,"creation_date":1543791397},{"owner":{"reputation":1056,"user_id":2631925,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/w35kw.png?s=128&g=1","display_name":"Tvde1","link":"https://stackoverflow.com/users/2631925/tvde1"},"score":0,"creation_date":1575889787},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":2,"creation_date":1578327937},{"owner":{"reputation":7916,"user_id":912829,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/8155348e86202fd2f553332dde3b2fcf?s=128&d=identicon&r=PG&f=1","display_name":"ACV","link":"https://stackoverflow.com/users/912829/acv"},"score":0,"creation_date":1578481249},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":3,"creation_date":1578481580}],"owner":{"reputation":7916,"user_id":912829,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/8155348e86202fd2f553332dde3b2fcf?s=128&d=identicon&r=PG&f=1","display_name":"ACV","link":"https://stackoverflow.com/users/912829/acv"},"comment_count":5,"score":25,"creation_date":1524695995,"body_markdown":"String is immutable and it goes to the string pool. Once written, it cannot be overwritten.\r\n\r\n`char[]` is an array which you should overwrite once you used the password and this is how it should be done:\r\n\r\n\r\n    char[] passw = request.getPassword().toCharArray()\r\n    if (comparePasswords(dbPassword, passw) {\r\n     allowUser = true;\r\n     cleanPassword(passw);\r\n     cleanPassword(dbPassword);\r\n     passw=null;\r\n    }\r\n    \r\n    private static void cleanPassword (char[] pass) {\r\n\r\n    Arrays.fill(pass, &#39;0&#39;);\r\n    }\r\n\r\nOne scenario where the attacker could use it is a crashdump - when the JVM crashes and generates a memory dump - you will be able to see the password.\r\n\r\nThat is not necessarily a malicious external attacker. This could be a support user that has access to the server for monitoring purposes. He could peek into a crashdump and find the passwords.\r\n\r\n","title":"Why is char[] preferred over String for passwords?"},{"owner":{"reputation":115,"user_id":10017725,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fd529dcc96a6891e39a317fdf39e26c1?s=128&d=identicon&r=PG&f=1","display_name":"Neeraj","link":"https://stackoverflow.com/users/10017725/neeraj"},"comment_count":0,"score":3,"creation_date":1543818706,"body_markdown":"It is debatable as to whether you should use String or use Char[] for this purpose because both have their advantages and disadvantages. It depends on what the user needs.\r\n\r\nSince Strings in Java are immutable, whenever some tries to manipulate your string it creates a new Object and the existing String remains unaffected. This could be seen as an advantage for storing a password as a String, but the object remains in memory even after use. So if anyone somehow got the memory location of the object, that person can easily trace your password stored at that location.\r\n\r\nChar[] is mutable, but it has the advantage that after its usage the programmer can explicitly clean the array or override values. So when it&#39;s done being used it is cleaned and no one could ever know about the information you had stored.\r\n\r\nBased on the above circumstances, one can get an idea whether to go with String or to go with Char[] for their requirements.\r\n","title":"Why is char[] preferred over String for passwords?"},{"owner":{"reputation":1029,"user_id":12237837,"user_type":"registered","profile_image":"https://i.stack.imgur.com/5ZSpJ.png?s=128&g=1","display_name":"Aditya Rewari","link":"https://stackoverflow.com/users/12237837/aditya-rewari"},"comment_count":0,"score":5,"creation_date":1587731037,"body_markdown":"Case String:\r\n\r\n        String password = &quot;ill stay in StringPool after Death !!!&quot;;\r\n        // some long code goes\r\n        // ...Now I want to remove traces of password\r\n        password = null;\r\n        password = &quot;&quot;;\r\n        // above attempts wil change value of password\r\n        // but the actual password can be traced from String pool through memory dump, if not garbage collected\r\n        \r\nCase CHAR ARRAY:\r\n        \r\n        char[] passArray = {&#39;p&#39;,&#39;a&#39;,&#39;s&#39;,&#39;s&#39;,&#39;w&#39;,&#39;o&#39;,&#39;r&#39;,&#39;d&#39;};\r\n        // some long code goes\r\n        // ...Now I want to remove traces of password\r\n        for (int i=0; i&lt;passArray.length;i++){\r\n            passArray[i] = &#39;x&#39;;\r\n        }\r\n        // Now you ACTUALLY DESTROYED traces of password form memory\r\n","title":"Why is char[] preferred over String for passwords?"},{"owner":{"reputation":89,"user_id":2626085,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a0714ed44eb16f261951c6b66fafaf24?s=128&d=identicon&r=PG","display_name":"Dibsyhex","link":"https://stackoverflow.com/users/2626085/dibsyhex"},"comment_count":0,"score":0,"creation_date":1615211495,"body_markdown":"Lot of great answers above. There is another point which I am assuming(please correct me if I am wrong ). By default Java uses UTF-16 for storing strings. Using character arrays char[]array facilitates utilization of unicode, regional characters,etc. This technique allow all character set to be respected equally for storing the passwords and henceforth will not initiate certain crypto issues due to character set confusion. Finally using the char array we can convert the password array to our desired character set string.","title":"Why is char[] preferred over String for passwords?"}],"owner":{"reputation":36295,"user_id":953140,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/daa7534f8797b6392e9e2a3496663196?s=128&d=identicon&r=PG","display_name":"Ahamed","link":"https://stackoverflow.com/users/953140/ahamed"},"comment_count":0,"is_answered":true,"answer_count":18,"score":3550,"creation_date":1326723642,"question_id":8881291,"body_markdown":"In Swing, the password field has a `getPassword()` (returns `char[]`) method instead of the usual `getText()` (returns `String`) method. Similarly, I have come across a suggestion not to use `String` to handle passwords.\r\n\r\nWhy does `String` pose a threat to security when it comes to passwords?\r\nIt feels inconvenient to use `char[]`.","link":"https://stackoverflow.com/questions/8881291/why-is-char-preferred-over-string-for-passwords","title":"Why is char[] preferred over String for passwords?"},{"tags":["java","dictionary","collections","iteration"],"comments":[{"owner":{"reputation":3402,"user_id":1503859,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/4bcbf19e148dc37a98be5ea8311c4770?s=128&d=identicon&r=PG&f=1","display_name":"Nitin Mahesh","link":"https://stackoverflow.com/users/1503859/nitin-mahesh"},"score":41,"creation_date":1437849109},{"owner":{"reputation":18327,"user_id":1216775,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/gX53v.jpg?s=128&g=1","display_name":"akhil_mittal","link":"https://stackoverflow.com/users/1216775/akhil-mittal"},"score":5,"creation_date":1539175528}],"answers":[{"comments":[{"owner":{"reputation":19551,"user_id":157705,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/72d4492ee192ad44198fdbb08d87e4e1?s=128&d=identicon&r=PG","display_name":"jai","link":"https://stackoverflow.com/users/157705/jai"},"score":45,"creation_date":1256044805},{"owner":{"reputation":32465,"user_id":4257,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/e326ede439e929b12e36d8508de54040?s=128&d=identicon&r=PG","display_name":"pkaeding","link":"https://stackoverflow.com/users/4257/pkaeding"},"score":8,"creation_date":1326210149},{"owner":{"reputation":5211,"user_id":1431728,"user_type":"registered","accept_rate":49,"profile_image":"https://www.gravatar.com/avatar/ef157021535e6330f7100061a4056365?s=128&d=identicon&r=PG","display_name":"JohnK","link":"https://stackoverflow.com/users/1431728/johnk"},"score":1,"creation_date":1420848417},{"owner":{"reputation":32465,"user_id":4257,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/e326ede439e929b12e36d8508de54040?s=128&d=identicon&r=PG","display_name":"pkaeding","link":"https://stackoverflow.com/users/4257/pkaeding"},"score":1,"creation_date":1421202945},{"owner":{"user_type":"does_not_exist","display_name":"user5778069"},"score":1,"creation_date":1484986159}],"owner":{"reputation":32465,"user_id":4257,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/e326ede439e929b12e36d8508de54040?s=128&d=identicon&r=PG","display_name":"pkaeding","link":"https://stackoverflow.com/users/4257/pkaeding"},"comment_count":5,"score":251,"creation_date":1220649319,"body_markdown":"Yes, the order depends on the specific Map implementation.\r\n\r\n[@ScArcher2 has the more elegant Java 1.5 syntax][1]. In 1.4, I would do something like this:\r\n\r\n    Iterator entries = myMap.entrySet().iterator();\r\n    while (entries.hasNext()) {\r\n      Entry thisEntry = (Entry) entries.next();\r\n      Object key = thisEntry.getKey();\r\n      Object value = thisEntry.getValue();\r\n      // ...\r\n    }\r\n\r\n  [1]: https://stackoverflow.com/questions/46898/how-to-efficiently-iterate-over-each-entry-in-a-map/46908#46908\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":77429,"user_id":1310,"user_type":"registered","accept_rate":98,"profile_image":"https://www.gravatar.com/avatar/9cb44812fc259d55c656dd8038ea5af3?s=128&d=identicon&r=PG","display_name":"ScArcher2","link":"https://stackoverflow.com/users/1310/scarcher2"},"score":94,"creation_date":1269264604},{"owner":{"reputation":19605,"user_id":75863,"user_type":"registered","accept_rate":76,"profile_image":"https://www.gravatar.com/avatar/36e4f1786bbe6ec3169a147bf54f91c1?s=128&d=identicon&r=PG","display_name":"jjujuma","link":"https://stackoverflow.com/users/75863/jjujuma"},"score":275,"creation_date":1272623659},{"owner":{"reputation":294197,"user_id":829571,"user_type":"registered","accept_rate":94,"profile_image":"https://i.stack.imgur.com/zflGZ.png?s=128&g=1","display_name":"assylias","link":"https://stackoverflow.com/users/829571/assylias"},"score":56,"creation_date":1349692454},{"owner":{"reputation":2202,"user_id":1048186,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/taKn8.png?s=128&g=1","display_name":"Josiah Yoder","link":"https://stackoverflow.com/users/1048186/josiah-yoder"},"score":107,"creation_date":1417725087},{"owner":{"reputation":2354,"user_id":3320962,"user_type":"registered","accept_rate":71,"profile_image":"https://graph.facebook.com/1412668009/picture?type=large","display_name":"Saras Arya","link":"https://stackoverflow.com/users/3320962/saras-arya"},"score":2,"creation_date":1428319151},{"owner":{"reputation":8240,"user_id":1404049,"user_type":"registered","accept_rate":85,"profile_image":"https://i.stack.imgur.com/vkpuK.png?s=128&g=1","display_name":"Fallenreaper","link":"https://stackoverflow.com/users/1404049/fallenreaper"},"score":1,"creation_date":1434978651},{"owner":{"reputation":3071,"user_id":4561047,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/637eff3f3244f3658d31a25ea7636d82?s=128&d=identicon&r=PG","display_name":"intcreator","link":"https://stackoverflow.com/users/4561047/intcreator"},"score":1,"creation_date":1443472087},{"owner":{"reputation":5628,"user_id":712526,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/06e3c4065e9d08da698b4f4de3959294?s=128&d=identicon&r=PG","display_name":"jpaugh","link":"https://stackoverflow.com/users/712526/jpaugh"},"score":2,"creation_date":1453840724},{"owner":{"reputation":1439,"user_id":3752374,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/eed2837aa54f87a4d8b9ccf92b427d18?s=128&d=identicon&r=PG&f=1","display_name":"dguay","link":"https://stackoverflow.com/users/3752374/dguay"},"score":33,"creation_date":1476306238},{"owner":{"reputation":522,"user_id":2532888,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/AC65b.jpg?s=128&g=1","display_name":"Marcus MacWilliam","link":"https://stackoverflow.com/users/2532888/marcus-macwilliam"},"score":3,"creation_date":1518534927},{"owner":{"reputation":3257,"user_id":1324802,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/41K0O.jpg?s=128&g=1","display_name":"Androidcoder","link":"https://stackoverflow.com/users/1324802/androidcoder"},"score":2,"creation_date":1532537071},{"owner":{"reputation":10998,"user_id":1015327,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/00d71e011fc61cad60c5ffc9bf48c5ef?s=128&d=identicon&r=PG","display_name":"JimmyB","link":"https://stackoverflow.com/users/1015327/jimmyb"},"score":2,"creation_date":1542204561},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":2,"creation_date":1550137432}],"owner":{"reputation":77429,"user_id":1310,"user_type":"registered","accept_rate":98,"profile_image":"https://www.gravatar.com/avatar/9cb44812fc259d55c656dd8038ea5af3?s=128&d=identicon&r=PG","display_name":"ScArcher2","link":"https://stackoverflow.com/users/1310/scarcher2"},"comment_count":13,"score":5305,"creation_date":1220649352,"body_markdown":"    Map&lt;String, String&gt; map = ...\r\n    for (Map.Entry&lt;String, String&gt; entry : map.entrySet()) {\r\n        System.out.println(entry.getKey() + &quot;/&quot; + entry.getValue());\r\n    }","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":8861,"user_id":3267,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/16e36041f517bc26ef314e08cf2433ae?s=128&d=identicon&r=PG","display_name":"Leigh Caldwell","link":"https://stackoverflow.com/users/3267/leigh-caldwell"},"comment_count":0,"score":37,"creation_date":1220649480,"body_markdown":"In theory, the most efficient way will depend on which implementation of Map. The official way to do this is to call `map.entrySet()`, which returns a set of `Map.Entry`, each of which contains a key and a value (`entry.getKey()` and `entry.getValue()`).\r\n\r\nIn an idiosyncratic implementation, it might make some difference whether you use `map.keySet()`, `map.entrySet()` or something else. But I can&#39;t think of a reason why anyone would write it like that. Most likely it makes no difference to performance what you do.\r\n\r\nAnd yes, the order will depend on the implementation - as well as (possibly) the order of insertion and other hard-to-control factors.\r\n\r\n[edit] I wrote `valueSet()` originally but of course `entrySet()` is actually the answer.","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":7382,"user_id":617612,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/Wfubm.jpg?s=128&g=1","display_name":"Premraj","link":"https://stackoverflow.com/users/617612/premraj"},"score":6,"creation_date":1299771666},{"owner":{"reputation":5628,"user_id":712526,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/06e3c4065e9d08da698b4f4de3959294?s=128&d=identicon&r=PG","display_name":"jpaugh","link":"https://stackoverflow.com/users/712526/jpaugh"},"score":1,"creation_date":1453840894},{"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"score":5,"creation_date":1453843440},{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":1,"creation_date":1517956614}],"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"comment_count":4,"score":141,"creation_date":1220650017,"body_markdown":"Typical code for iterating over a map is:\r\n\r\n    Map&lt;String,Thing&gt; map = ...;\r\n    for (Map.Entry&lt;String,Thing&gt; entry : map.entrySet()) {\r\n        String key = entry.getKey();\r\n        Thing thing = entry.getValue();\r\n        ...\r\n    }\r\n\r\n`HashMap` is the canonical map implementation and doesn&#39;t make guarantees (or though it should not change order if no mutating operation are performed on it). `SortedMap` will return entries based on the natural ordering of the keys, or a `Comparator`, if provided. `LinkedHashMap` will either return entries in insertion-order or access-order depending upon how it has been constructed. `EnumMap` returns entries in natural order of keys.\r\n\r\n**(Update: I think this is no longer true.**) Note, `IdentityHashMap` `entrySet` iterator currently has a peculiar implementation which returns the same `Map.Entry` instance for every item in the `entrySet`! However, every time a new the iterator advances the `Map.Entry` is updated.","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":28478,"user_id":1853,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/073a27f428a71c155382dc8637ccd772?s=128&d=identicon&r=PG","display_name":"serg10","link":"https://stackoverflow.com/users/1853/serg10"},"comment_count":0,"score":104,"creation_date":1220652930,"body_markdown":"This is a two part question:\r\n\r\n*How to iterate over the entries of a Map* - @ScArcher2 has [answered][1] that perfectly.\r\n\r\n*What is the order of iteration* - if you are just using `Map`, then strictly speaking, there are **no ordering guarantees**.  So you shouldn&#39;t really rely on the ordering given by any implementation.  However, the [`SortedMap`][2] interface extends `Map` and provides exactly what you are looking for - implementations will aways give a consistent sort order.\r\n\r\n**[`NavigableMap`][3] is another useful extension** - this is a `SortedMap` with additional methods for finding entries by their ordered position in the key set.  So potentially this can remove the need for iterating in the first place - you might be able to find the specific `entry` you are after using the `higherEntry`, `lowerEntry`, `ceilingEntry`, or `floorEntry` methods.  The `descendingMap` method even gives you an explicit method of **reversing the traversal order**.\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/46908/1851302\r\n  [2]: http://docs.oracle.com/javase/8/docs/api/java/util/SortedMap.html\r\n  [3]: http://docs.oracle.com/javase/8/docs/api/java/util/NavigableMap.html","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":1969,"user_id":2551,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/d304016a12e554129ea45b5816de29a7?s=128&d=identicon&r=PG","display_name":"ckpwong","link":"https://stackoverflow.com/users/2551/ckpwong"},"comment_count":0,"score":59,"creation_date":1220653672,"body_markdown":"FYI, you can also use `map.keySet()` and `map.values()` if you&#39;re only interested in keys/values of the map and not the other.","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":5742,"user_id":56708,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/64c66e0f95ddc09d2c46f78bf74e0525?s=128&d=identicon&r=PG","display_name":"Jeff Olson","link":"https://stackoverflow.com/users/56708/jeff-olson"},"score":15,"creation_date":1257540386},{"owner":{"reputation":15823,"user_id":347508,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d0552df3ae8cb4abb34baaf22bb493dc?s=128&d=identicon&r=PG","display_name":"kritzikratzi","link":"https://stackoverflow.com/users/347508/kritzikratzi"},"score":6,"creation_date":1349702712},{"owner":{"reputation":5742,"user_id":56708,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/64c66e0f95ddc09d2c46f78bf74e0525?s=128&d=identicon&r=PG","display_name":"Jeff Olson","link":"https://stackoverflow.com/users/56708/jeff-olson"},"score":0,"creation_date":1349717641},{"owner":{"reputation":15823,"user_id":347508,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d0552df3ae8cb4abb34baaf22bb493dc?s=128&d=identicon&r=PG","display_name":"kritzikratzi","link":"https://stackoverflow.com/users/347508/kritzikratzi"},"score":4,"creation_date":1349738787},{"owner":{"reputation":1101,"user_id":1151800,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e3e7075884b89f71194c96efdce31278?s=128&d=identicon&r=PG","display_name":"kornero","link":"https://stackoverflow.com/users/1151800/kornero"},"score":0,"creation_date":1354531426},{"owner":{"reputation":15823,"user_id":347508,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d0552df3ae8cb4abb34baaf22bb493dc?s=128&d=identicon&r=PG","display_name":"kritzikratzi","link":"https://stackoverflow.com/users/347508/kritzikratzi"},"score":0,"creation_date":1356179391},{"owner":{"reputation":1101,"user_id":1151800,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e3e7075884b89f71194c96efdce31278?s=128&d=identicon&r=PG","display_name":"kornero","link":"https://stackoverflow.com/users/1151800/kornero"},"score":0,"creation_date":1356273020},{"owner":{"reputation":15823,"user_id":347508,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d0552df3ae8cb4abb34baaf22bb493dc?s=128&d=identicon&r=PG","display_name":"kritzikratzi","link":"https://stackoverflow.com/users/347508/kritzikratzi"},"score":2,"creation_date":1356279431},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":2,"creation_date":1478694122},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":2,"creation_date":1478694927}],"owner":{"reputation":24025,"user_id":5077,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/83397d0973788189bc7a8f5a9a88e56a?s=128&d=identicon&r=PG","display_name":"Chris Dail","link":"https://stackoverflow.com/users/5077/chris-dail"},"comment_count":10,"score":60,"creation_date":1220816915,"body_markdown":"The correct way to do this is to use the accepted answer as it is the most efficient. I find the following code looks a bit cleaner.\r\n\r\n    for (String key: map.keySet()) {\r\n       System.out.println(key + &quot;/&quot; + map.get(key));\r\n    }\r\n\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":57795,"user_id":24396,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/160d6580f280b5e9e5a1188b32c4ef2d?s=128&d=identicon&r=PG","display_name":"Steve Kuo","link":"https://stackoverflow.com/users/24396/steve-kuo"},"score":14,"creation_date":1329510722},{"owner":{"reputation":452,"user_id":429583,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/cbe141d16879dec55c8eed37343aada4?s=128&d=identicon&r=PG","display_name":"StudioWorks","link":"https://stackoverflow.com/users/429583/studioworks"},"score":1,"creation_date":1422980003},{"owner":{"reputation":27236,"user_id":603003,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/XBlaU.png?s=128&g=1","display_name":"ComFreek","link":"https://stackoverflow.com/users/603003/comfreek"},"score":13,"creation_date":1426264417},{"owner":{"reputation":452,"user_id":429583,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/cbe141d16879dec55c8eed37343aada4?s=128&d=identicon&r=PG","display_name":"StudioWorks","link":"https://stackoverflow.com/users/429583/studioworks"},"score":3,"creation_date":1426265975}],"owner":{"reputation":101935,"user_id":20128,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/4b62eef3ad218a5d3cbdd1077660ca8b?s=128&d=identicon&r=PG","display_name":"serg","link":"https://stackoverflow.com/users/20128/serg"},"comment_count":4,"score":126,"creation_date":1250616891,"body_markdown":"Example of using iterator and generics:\r\n\r\n    Iterator&lt;Map.Entry&lt;String, String&gt;&gt; entries = myMap.entrySet().iterator();\r\n    while (entries.hasNext()) {\r\n      Map.Entry&lt;String, String&gt; entry = entries.next();\r\n      String key = entry.getKey();\r\n      String value = entry.getValue();\r\n      // ...\r\n    }\r\n\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":291,"user_id":265011,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/01c4364883a1fe08cb293cd4824f2eed?s=128&d=identicon&r=PG","display_name":"abods","link":"https://stackoverflow.com/users/265011/abods"},"comment_count":0,"score":29,"creation_date":1265177403,"body_markdown":"Try this with Java 1.4:\r\n\r\n    for( Iterator entries = myMap.entrySet().iterator(); entries.hasNext();){\r\n\r\n      Entry entry = (Entry) entries.next();\r\n\r\n      System.out.println(entry.getKey() + &quot;/&quot; + entry.getValue());\r\n\r\n      //...\r\n    }","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":7223,"user_id":991065,"user_type":"registered","profile_image":"https://i.stack.imgur.com/oGhAn.jpg?s=128&g=1","display_name":"Fathah Rehman P","link":"https://stackoverflow.com/users/991065/fathah-rehman-p"},"comment_count":0,"score":20,"creation_date":1337246516,"body_markdown":"    public class abcd{\r\n        public static void main(String[] args)\r\n        {\r\n           Map&lt;Integer, String&gt; testMap = new HashMap&lt;Integer, String&gt;();\r\n            testMap.put(10, &quot;a&quot;);\r\n            testMap.put(20, &quot;b&quot;);\r\n            testMap.put(30, &quot;c&quot;);\r\n            testMap.put(40, &quot;d&quot;);\r\n            for (Integer key:testMap.keySet()) {\r\n                String value=testMap.get(key);\r\n                System.out.println(value);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\nOR\r\n\r\n\r\n\r\n    public class abcd {\r\n        public static void main(String[] args)\r\n        {\r\n           Map&lt;Integer, String&gt; testMap = new HashMap&lt;Integer, String&gt;();\r\n            testMap.put(10, &quot;a&quot;);\r\n            testMap.put(20, &quot;b&quot;);\r\n            testMap.put(30, &quot;c&quot;);\r\n            testMap.put(40, &quot;d&quot;);\r\n            for (Entry&lt;Integer, String&gt; entry : testMap.entrySet()) {\r\n                Integer key=entry.getKey();\r\n                String value=entry.getValue();\r\n            }\r\n        }\r\n    }\r\n\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":5666,"user_id":1570415,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Scl35.jpg?s=128&g=1","display_name":"Donald Raab","link":"https://stackoverflow.com/users/1570415/donald-raab"},"comment_count":0,"score":42,"creation_date":1355872393,"body_markdown":"With [Eclipse Collections][1], you would use the `forEachKeyValue` method on the [`MapIterable`][2] interface, which is inherited by the `MutableMap` and `ImmutableMap` interfaces and their implementations.\r\n\r\n    MutableBag&lt;String&gt; result = Bags.mutable.empty();\r\n    MutableMap&lt;Integer, String&gt; map = Maps.mutable.of(1, &quot;One&quot;, 2, &quot;Two&quot;, 3, &quot;Three&quot;);\r\n    map.forEachKeyValue((key, value) -&gt; result.add(key + value));\r\n    Assert.assertEquals(Bags.mutable.of(&quot;1One&quot;, &quot;2Two&quot;, &quot;3Three&quot;), result);\r\n\r\nUsing an anonymous inner class, you can write the code as follows:\r\n \r\n    final MutableBag&lt;String&gt; result = Bags.mutable.empty();\r\n    MutableMap&lt;Integer, String&gt; map = Maps.mutable.of(1, &quot;One&quot;, 2, &quot;Two&quot;, 3, &quot;Three&quot;);\r\n    map.forEachKeyValue(new Procedure2&lt;Integer, String&gt;()\r\n    {\r\n        public void value(Integer key, String value)\r\n        {\r\n            result.add(key + value);\r\n        }\r\n    });\r\n    Assert.assertEquals(Bags.mutable.of(&quot;1One&quot;, &quot;2Two&quot;, &quot;3Three&quot;), result);\r\n \r\n \r\n**Note:** I am a committer for Eclipse Collections.\r\n \r\n\r\n\r\n  [1]: https://github.com/eclipse/eclipse-collections\r\n  [2]: https://github.com/eclipse/eclipse-collections/blob/master/eclipse-collections-api/src/main/java/org/eclipse/collections/api/map/MapIterable.java","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":114194,"user_id":1927832,"user_type":"registered","accept_rate":49,"profile_image":"https://i.stack.imgur.com/ziSzK.jpg?s=128&g=1","display_name":"Suresh Atta","link":"https://stackoverflow.com/users/1927832/suresh-atta"},"comment_count":0,"score":10,"creation_date":1363894406,"body_markdown":"Yes, as many people agreed this is the best way to iterate over a `Map`.\r\n\r\nBut there are chances to throw `nullpointerexception` if the map is `null`. Don&#39;t forget to put `null` .check in.\r\n\r\n                                                     |\r\n                                                     |\r\n                                             - - - -\r\n                                           |\r\n                                           |\r\n    for (Map.Entry&lt;String, Object&gt; entry : map.entrySet()) {\r\n        String key = entry.getKey();\r\n        Object value = entry.getValue();\r\n    }\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":968,"user_id":1918772,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/Ql7kG.png?s=128&g=1","display_name":"Pranoti","link":"https://stackoverflow.com/users/1918772/pranoti"},"comment_count":0,"score":14,"creation_date":1372683260,"body_markdown":"You can do it using generics:\r\n\r\n\tMap&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();\r\n\tIterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; entries = map.entrySet().iterator();\r\n\twhile (entries.hasNext()) {\r\n\t\tMap.Entry&lt;Integer, Integer&gt; entry = entries.next();\r\n\t\tSystem.out.println(&quot;Key = &quot; + entry.getKey() + &quot;, Value = &quot; + entry.getValue());\r\n\t}\r\n\r\n\r\n\r\n\r\n    ","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":95367,"user_id":288671,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/65f66029eed1093e5c7e3214b4774d8f?s=128&d=identicon&r=PG&f=1","display_name":"Vitalii Fedorenko","link":"https://stackoverflow.com/users/288671/vitalii-fedorenko"},"score":12,"creation_date":1403959574},{"owner":{"reputation":3331,"user_id":349169,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/deb4446b33506242c883e644d33c5bb5?s=128&d=identicon&r=PG","display_name":"Chris","link":"https://stackoverflow.com/users/349169/chris"},"score":1,"creation_date":1492720171},{"owner":{"reputation":12067,"user_id":1584255,"user_type":"registered","accept_rate":65,"profile_image":"https://i.stack.imgur.com/6Tpsk.jpg?s=128&g=1","display_name":"The Coordinator","link":"https://stackoverflow.com/users/1584255/the-coordinator"},"score":8,"creation_date":1492811056}],"owner":{"reputation":12067,"user_id":1584255,"user_type":"registered","accept_rate":65,"profile_image":"https://i.stack.imgur.com/6Tpsk.jpg?s=128&g=1","display_name":"The Coordinator","link":"https://stackoverflow.com/users/1584255/the-coordinator"},"comment_count":3,"score":310,"creation_date":1382350525,"body_markdown":"In Java 8 you can do it clean and fast using the new lambdas features:\r\n\r\n     Map&lt;String,String&gt; map = new HashMap&lt;&gt;();\r\n     map.put(&quot;SomeKey&quot;, &quot;SomeValue&quot;);\r\n     map.forEach( (k,v) -&gt; [do something with key and value] );\r\n    \r\n     // such as\r\n     map.forEach( (k,v) -&gt; System.out.println(&quot;Key: &quot; + k + &quot;: Value: &quot; + v));\r\n\r\nThe type of `k` and `v` will be inferred by the compiler and there is no need to use `Map.Entry` anymore.\r\n\r\nEasy-peasy!","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":443,"user_id":1276364,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/83ad6d335131dc3b6f5bd123f4fd7568?s=128&d=identicon&r=PG","display_name":"dmunozfer","link":"https://stackoverflow.com/users/1276364/dmunozfer"},"comment_count":0,"score":21,"creation_date":1385729623,"body_markdown":"If you have a generic untyped Map you can use:\r\n\r\n    Map map = new HashMap();\r\n    for (Map.Entry entry : ((Set&lt;Map.Entry&gt;) map.entrySet())) {\r\n\t    System.out.println(entry.getKey() + &quot;/&quot; + entry.getValue());\r\n    }\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":2595,"user_id":1293500,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/19J7X.jpg?s=128&g=1","display_name":"edin-m","link":"https://stackoverflow.com/users/1293500/edin-m"},"score":0,"creation_date":1574998718}],"owner":{"reputation":261,"user_id":3141443,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Mz125.jpg?s=128&g=1","display_name":"J.B.Vala","link":"https://stackoverflow.com/users/3141443/j-b-vala"},"comment_count":1,"score":5,"creation_date":1388752108,"body_markdown":"There are several ways to iterate a map. Please refer to the following code.\r\n\r\nWhen you iterate a map using iterator Interface you must go with `Entry&lt;K,V&gt;` or `entrySet()`.\r\n\r\nIt looks like this:\r\n\r\n```java\r\n    import java.util.*;\r\n    import java.util.HashMap;\r\n    import java.util.Iterator;\r\n    import java.util.Map;\r\n\r\n    public class IteratMapDemo{\r\n\r\n        public static void main(String arg[]){\r\n            Map&lt;String, String&gt; mapOne = new HashMap&lt;String, String&gt;();\r\n            mapOne.put(&quot;1&quot;, &quot;January&quot;);\r\n            mapOne.put(&quot;2&quot;, &quot;February&quot;);\r\n            mapOne.put(&quot;3&quot;, &quot;March&quot;);\r\n            mapOne.put(&quot;4&quot;, &quot;April&quot;);\r\n            mapOne.put(&quot;5&quot;, &quot;May&quot;);\r\n            mapOne.put(&quot;6&quot;, &quot;June&quot;);\r\n            mapOne.put(&quot;7&quot;, &quot;July&quot;);\r\n            mapOne.put(&quot;8&quot;, &quot;August&quot;);\r\n            mapOne.put(&quot;9&quot;, &quot;September&quot;);\r\n            mapOne.put(&quot;10&quot;, &quot;Octomber&quot;);\r\n            mapOne.put(&quot;11&quot;, &quot;November&quot;);\r\n            mapOne.put(&quot;12&quot;, &quot;December&quot;);\r\n\r\n            Iterator it = mapOne.entrySet().iterator();\r\n            while(it.hasNext())\r\n            {\r\n                Map.Entry me = (Map.Entry) it.next();\r\n                //System.out.println(&quot;Get Key through While loop = &quot; + me.getKey());\r\n            }\r\n            for(Map.Entry&lt;String, String&gt; entry:mapOne.entrySet()){\r\n                //System.out.println(entry.getKey() + &quot;=&quot; + entry.getValue());\r\n            }\r\n\r\n            for (Object key : mapOne.keySet()) {\r\n                System.out.println(&quot;Key: &quot; + key.toString() + &quot; Value: &quot; +\r\n                                   mapOne.get(key));\r\n            }\r\n        }\r\n    }\r\n```","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":14052,"user_id":918472,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/d4GgD.jpg?s=128&g=1","display_name":"Rupesh Yadav","link":"https://stackoverflow.com/users/918472/rupesh-yadav"},"comment_count":0,"score":29,"creation_date":1390998903,"body_markdown":"In Map one can Iteration over `keys` and/or `values` and/or `both (e.g., entrySet)`  depends on one&#39;s interested in_ Like:\r\n\r\n1. Iterate through the [`keys -&gt; keySet()`](http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#keySet%28%29) of the map:\r\n\r\n        Map&lt;String, Object&gt; map = ...;\r\n\r\n        for (String key : map.keySet()) {\r\n            //your Business logic...\r\n        }\r\n\r\n2. Iterate through the [`values -&gt; values()`](http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#values%28%29) of the map:\r\n\r\n        for (Object value : map.values()) {\r\n            //your Business logic...\r\n        }\r\n\r\n3. Iterate through the [`both -&gt; entrySet()`](http://java.sun.com/j2se/1.5.0/docs/api/java/util/Map.html#entrySet%28%29) of the map:\r\n\r\n        for (Map.Entry&lt;String, Object&gt; entry : map.entrySet()) {\r\n            String key = entry.getKey();\r\n            Object value = entry.getValue();\r\n            //your Business logic...\r\n        }\r\n\r\nMoreover, there are 3 different ways to iterate through a HashMap. They are as below:\r\n\r\n\t//1.\r\n\tfor (Map.Entry entry : hm.entrySet()) {\r\n\t\tSystem.out.print(&quot;key,val: &quot;);\r\n\t\tSystem.out.println(entry.getKey() + &quot;,&quot; + entry.getValue());\r\n\t}\r\n\r\n\t//2.\r\n\tIterator iter = hm.keySet().iterator();\r\n\twhile(iter.hasNext()) {\r\n\t\tInteger key = (Integer)iter.next();\r\n\t\tString val = (String)hm.get(key);\r\n\t\tSystem.out.println(&quot;key,val: &quot; + key + &quot;,&quot; + val);\r\n\t}\r\n\r\n\t//3.\r\n\tIterator it = hm.entrySet().iterator();\r\n\twhile (it.hasNext()) {\r\n\t\tMap.Entry entry = (Map.Entry) it.next();\r\n\t\tInteger key = (Integer)entry.getKey();\r\n\t\tString val = (String)entry.getValue();\r\n\t\tSystem.out.println(&quot;key,val: &quot; + key + &quot;,&quot; + val);\r\n\t}","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":409,"user_id":9533625,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6c1e696a696e7c231435fc67da09e614?s=128&d=identicon&r=PG&f=1","display_name":"AlexB","link":"https://stackoverflow.com/users/9533625/alexb"},"score":1,"creation_date":1547473468}],"owner":{"reputation":4017,"user_id":3131537,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/mOOLT.jpg?s=128&g=1","display_name":"Darshan Patel","link":"https://stackoverflow.com/users/3131537/darshan-patel"},"comment_count":1,"score":86,"creation_date":1391582575,"body_markdown":"There are several ways to iterate over map.\r\n\r\nHere is comparison of their performances for a common data set stored in map by storing a million key value pairs in map and will iterate over map.\r\n\r\n**1) Using `entrySet()` in for each loop**\r\n\r\n    for (Map.Entry&lt;String,Integer&gt; entry : testMap.entrySet()) {\r\n        entry.getKey();\r\n        entry.getValue();\r\n    }\r\n *50 milliseconds*\r\n\r\n**2) Using `keySet()` in for each loop**\r\n\r\n    for (String key : testMap.keySet()) {\r\n        testMap.get(key);\r\n    }\r\n\r\n *76 milliseconds*\r\n\r\n**3) Using `entrySet()` and iterator**\r\n\r\n    Iterator&lt;Map.Entry&lt;String,Integer&gt;&gt; itr1 = testMap.entrySet().iterator();\r\n    while(itr1.hasNext()) {\r\n        Map.Entry&lt;String,Integer&gt; entry = itr1.next();\r\n        entry.getKey();\r\n        entry.getValue();\r\n    }\r\n\r\n *50 milliseconds*\r\n\r\n**4) Using `keySet()` and iterator**\r\n\r\n    Iterator itr2 = testMap.keySet().iterator();\r\n    while(itr2.hasNext()) {\r\n        String key = itr2.next();\r\n        testMap.get(key);\r\n    }\r\n\r\n *75 milliseconds*\r\n\r\nI have referred [`this link`](http://howtodoinjava.com/2013/04/01/performance-comparison-of-different-ways-to-iterate-over-hashmap/).","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":1052,"user_id":3254469,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/66f5b2e2d08cdbb1a19b2d69799db8ad?s=128&d=identicon&r=PG&f=1","display_name":"Fadid","link":"https://stackoverflow.com/users/3254469/fadid"},"comment_count":0,"score":15,"creation_date":1395250492,"body_markdown":"        Iterator iterator = map.entrySet().iterator();\r\n        while (iterator.hasNext()) {\r\n            Map.Entry element = (Map.Entry)it.next();\r\n            LOGGER.debug(&quot;Key: &quot; + element.getKey());\r\n            LOGGER.debug(&quot;value: &quot; + element.getValue());    \r\n        }","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":3899,"user_id":2185582,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/rSrJW.png?s=128&g=1","display_name":"humblerookie","link":"https://stackoverflow.com/users/2185582/humblerookie"},"score":0,"creation_date":1408650546},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":9,"creation_date":1478695044}],"owner":{"reputation":13913,"user_id":1123501,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/tCkbe.jpg?s=128&g=1","display_name":"George Siggouroglou","link":"https://stackoverflow.com/users/1123501/george-siggouroglou"},"comment_count":2,"score":33,"creation_date":1407148249,"body_markdown":"**Java 8:**\r\n\r\nYou can use lambda expressions:\r\n\r\n    myMap.entrySet().stream().forEach((entry) -&gt; {\r\n        Object currentKey = entry.getKey();\r\n        Object currentValue = entry.getValue();\r\n    });\r\n\r\nFor more information, follow [this](http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html).\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":725,"user_id":1941878,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/g4tts.png?s=128&g=1","display_name":"fechidal89","link":"https://stackoverflow.com/users/1941878/fechidal89"},"comment_count":0,"score":2,"creation_date":1408659317,"body_markdown":"I copied the data of a map to another with this code:\r\n\r\n    HashMap product =(HashMap)shopping_truck.get(i);\r\n    HashMap tmp = new HashMap();\r\n    for (Iterator it = product.entrySet().iterator(); it.hasNext();) {\r\n        Map.Entry thisEntry = (Map.Entry) it.next();\r\n        tmp.put(thisEntry.getKey(), thisEntry.getValue());\r\n    }","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":5211,"user_id":1431728,"user_type":"registered","accept_rate":49,"profile_image":"https://www.gravatar.com/avatar/ef157021535e6330f7100061a4056365?s=128&d=identicon&r=PG","display_name":"JohnK","link":"https://stackoverflow.com/users/1431728/johnk"},"comment_count":0,"score":3,"creation_date":1420849358,"body_markdown":"It doesn&#39;t quite answer the OP&#39;s question, but might be useful to others who find this page:\r\n\r\nIf you only need the values and not the keys, you can do this:\r\n\r\n    Map&lt;Ktype, Vtype&gt; myMap = [...];\r\n    for (Vtype v: myMap.values()) {\r\n      System.out.println(&quot;value: &quot; + v);\r\n    }\r\n\r\n`Ktype`, `Vtype` are pseudocode.","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":29218,"user_id":1762224,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/20969bd926bb6a29ee19a07a25f7fea8?s=128&d=identicon&r=PG","display_name":"Mr. Polywhirl","link":"https://stackoverflow.com/users/1762224/mr-polywhirl"},"comment_count":0,"score":7,"creation_date":1431520652,"body_markdown":"Here is a generic type-safe method which can be called to dump any given `Map`.\r\n\r\n    import java.util.Iterator;\r\n    import java.util.Map;\r\n\r\n    public class MapUtils {\r\n        static interface ItemCallback&lt;K, V&gt; {\r\n            void handler(K key, V value, Map&lt;K, V&gt; map);\r\n        }\r\n\r\n        public static &lt;K, V&gt; void forEach(Map&lt;K, V&gt; map, ItemCallback&lt;K, V&gt; callback) {\r\n            Iterator&lt;Map.Entry&lt;K, V&gt;&gt; it = map.entrySet().iterator();\r\n\r\n            while (it.hasNext()) {\r\n                Map.Entry&lt;K, V&gt; entry = it.next();\r\n\r\n                callback.handler(entry.getKey(), entry.getValue(), map);\r\n            }\r\n        }\r\n\r\n        public static &lt;K, V&gt; void printMap(Map&lt;K, V&gt; map) {\r\n            forEach(map, new ItemCallback&lt;K, V&gt;() {\r\n                @Override\r\n                public void handler(K key, V value, Map&lt;K, V&gt; map) {\r\n                    System.out.println(key + &quot; = &quot; + value);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n## Example\r\n\r\nHere is an example of its use. Notice that the type of the `Map` is inferred by the method.\r\n\r\n    import java.util.*;\r\n\r\n    public class MapPrinter {\r\n        public static void main(String[] args) {\r\n            List&lt;Map&lt;?, ?&gt;&gt; maps = new ArrayList&lt;Map&lt;?, ?&gt;&gt;() {\r\n                private static final long serialVersionUID = 1L;\r\n                {\r\n                    add(new LinkedHashMap&lt;String, Integer&gt;() {\r\n                        private static final long serialVersionUID = 1L;\r\n                        {\r\n                            put(&quot;One&quot;, 0);\r\n                            put(&quot;Two&quot;, 1);\r\n                            put(&quot;Three&quot;, 3);\r\n                        }\r\n                    });\r\n\r\n                    add(new LinkedHashMap&lt;String, Object&gt;() {\r\n                        private static final long serialVersionUID = 1L;\r\n                        {\r\n                            put(&quot;Object&quot;, new Object());\r\n                            put(&quot;Integer&quot;, new Integer(0));\r\n                            put(&quot;Double&quot;, new Double(0.0));\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            for (Map&lt;?, ?&gt; map : maps) {\r\n                MapUtils.printMap(map);\r\n                System.out.println();\r\n            }\r\n        }\r\n    }\r\n\r\n## Output\r\n\r\n    One = 0\r\n    Two = 1\r\n    Three = 3\r\n\r\n    Object = java.lang.Object@15db9742\r\n    Integer = 0\r\n    Double = 0.0\r\n\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":2217,"user_id":2197975,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/Ykqvj.jpg?s=128&g=1","display_name":"Joshua Michael Waggoner","link":"https://stackoverflow.com/users/2197975/joshua-michael-waggoner"},"comment_count":0,"score":2,"creation_date":1433012884,"body_markdown":"This is the easiest way of doing it I believe...\r\n    \r\n    /* For example, this could be a map object */\r\n    Map&lt;String, Integer&gt; MAP = new Map&lt;&gt;();\r\n\r\n    // Do something like put keys/value pairs into the map, etc...\r\n    MAP.put(&quot;Denver&quot;, 35);\r\n    MAP.put(&quot;Patriots&quot;, 14);\r\n\r\n    /* Then, simply use a for each loop like this to iterate */\r\n    for (Object o : MAP.entrySet()) {\r\n        Map.Entry pair = (Map.Entry) o;\r\n        // Do whatever with the pair here (i.e. pair.getKey(), or pair.getValue();\r\n    }","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":1342,"user_id":1758634,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/943f886688032f3aaa78bef2bea61310?s=128&d=identicon&r=PG","display_name":"tomaj","link":"https://stackoverflow.com/users/1758634/tomaj"},"comment_count":0,"score":6,"creation_date":1440868304,"body_markdown":"If your reason for iterating trough the `Map`, is to do an operation on the value and write to a resulting `Map`. I recommend using the `transform`-methods in the [Google Guava](https://github.com/google/guava) `Maps` class.\r\n\r\n    import com.google.common.collect.Maps;\r\n\r\nAfter you have added the `Maps` to your imports, you can use `Maps.transformValues` and `Maps.transformEntries` on your maps, like this:\r\n\r\n    public void transformMap(){\r\n        Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();\r\n        map.put(&quot;a&quot;, 2);\r\n        map.put(&quot;b&quot;, 4);\r\n\r\n        Map&lt;String, Integer&gt; result = Maps.transformValues(map, num -&gt; num * 2);\r\n        result.forEach((key, val) -&gt; print(key, Integer.toString(val)));\r\n        // key=a,value=4\r\n        // key=b,value=8\r\n\r\n        Map&lt;String, String&gt; result2 = Maps.transformEntries(map, (key, value) -&gt; value + &quot;[&quot; + key + &quot;]&quot;);\r\n        result2.forEach(this::print);\r\n        // key=a,value=2[a]\r\n        // key=b,value=4[b]\r\n    }\r\n\r\n    private void print(String key, String val){\r\n        System.out.println(&quot;key=&quot; + key + &quot;,value=&quot; + val);\r\n    }","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":18327,"user_id":1216775,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/gX53v.jpg?s=128&g=1","display_name":"akhil_mittal","link":"https://stackoverflow.com/users/1216775/akhil-mittal"},"comment_count":0,"score":37,"creation_date":1441155600,"body_markdown":"Java 8\r\n------\r\n\r\nWe have got `forEach` method that accepts a [lambda expression][1]. We have also got [stream][2] APIs. Consider a map:\r\n\r\n    Map&lt;String,String&gt; sample = new HashMap&lt;&gt;();\r\n    sample.put(&quot;A&quot;,&quot;Apple&quot;);\r\n    sample.put(&quot;B&quot;, &quot;Ball&quot;);\r\n\r\n**Iterate over keys:**\r\n\r\n    sample.keySet().forEach((k) -&gt; System.out.println(k));\r\n\r\n**Iterate over values:**\r\n\r\n    sample.values().forEach((v) -&gt; System.out.println(v));\r\n\r\n**Iterate over entries (Using forEach and Streams):**\r\n\r\n    sample.forEach((k,v) -&gt; System.out.println(k + &quot;:&quot; + v)); \r\n    sample.entrySet().stream().forEach((entry) -&gt; {\r\n                Object currentKey = entry.getKey();\r\n                Object currentValue = entry.getValue();\r\n                System.out.println(currentKey + &quot;:&quot; + currentValue);\r\n            });\r\n\r\nThe advantage with streams is they can be parallelized easily in case we want to. We simply need to use `parallelStream()` in place of `stream()` above.\r\n\r\n**`forEachOrdered` vs `forEach` with streams ?**\r\nThe `forEach` does not follow encounter order (if defined) and is inherently non-deterministic in nature where as the `forEachOrdered` does. So `forEach` does not guarantee that the order would be kept. Also check [this][3] for more.\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html\r\n  [2]: https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html\r\n  [3]: https://stackoverflow.com/questions/32797579/foreach-vs-foreachordered-in-java-8-stream","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":3402,"user_id":1503859,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/4bcbf19e148dc37a98be5ea8311c4770?s=128&d=identicon&r=PG&f=1","display_name":"Nitin Mahesh","link":"https://stackoverflow.com/users/1503859/nitin-mahesh"},"comment_count":0,"score":37,"creation_date":1444144053,"body_markdown":"&gt; **Lambda** Expression Java 8\r\n\r\nIn Java 1.8 (Java 8) this has become lot easier by using **forEach** method from Aggregate operations(**Stream operations**) that looks similar to iterators from **Iterable** Interface. \r\n\r\nJust copy paste below statement to your code and rename the **HashMap** variable from **hm** to your HashMap variable to print out key-value pair.\r\n\r\n    HashMap&lt;Integer,Integer&gt; hm = new HashMap&lt;Integer, Integer&gt;();\r\n    /*\r\n     *     Logic to put the Key,Value pair in your HashMap hm\r\n     */\r\n\t\r\n    // Print the key value pair in one line.\r\n\r\n    hm.forEach((k, v) -&gt; System.out.println(&quot;key: &quot; + k + &quot; value:&quot; + v));\r\n\r\n    // Just copy and paste above line to your code.\r\n\r\nBelow is the sample code that I tried using **Lambda Expression**. This stuff is so cool. Must try.\r\n\r\n\r\n    HashMap&lt;Integer, Integer&gt; hm = new HashMap&lt;Integer, Integer&gt;();\r\n\t\tRandom rand = new Random(47);\r\n\t\tint i = 0;\r\n\t\twhile(i &lt; 5) {\r\n\t\t\ti++;\r\n\t\t\tint key = rand.nextInt(20);\r\n\t\t\tint value = rand.nextInt(50);\r\n\t\t\tSystem.out.println(&quot;Inserting key: &quot; + key + &quot; Value: &quot; + value);\r\n\t\t\tInteger imap = hm.put(key, value);\r\n\t\t\tif( imap == null) {\r\n\t\t\t\tSystem.out.println(&quot;Inserted&quot;);\r\n\t\t\t} else {\r\n\t\t\t\tSystem.out.println(&quot;Replaced with &quot; + imap);\r\n\t\t\t}\t\t\t\t\r\n\t\t}\r\n\t\r\n\t\thm.forEach((k, v) -&gt; System.out.println(&quot;key: &quot; + k + &quot; value:&quot; + v));\r\n\t\t\r\n    Output:\r\n    \r\n    Inserting key: 18 Value: 5\r\n    Inserted\r\n    Inserting key: 13 Value: 11\r\n    Inserted\r\n    Inserting key: 1 Value: 29\r\n    Inserted\r\n    Inserting key: 8 Value: 0\r\n    Inserted\r\n    Inserting key: 2 Value: 7\r\n    Inserted\r\n    key: 1 value:29\r\n    key: 18 value:5\r\n    key: 2 value:7\r\n    key: 8 value:0\r\n    key: 13 value:11\r\n\r\nAlso one can use **Spliterator** for the same.\r\n\r\n    Spliterator sit = hm.entrySet().spliterator();\r\n\r\n**UPDATE**\r\n\r\n\r\n----------\r\n\r\n\r\nIncluding documentation links to Oracle Docs.\r\nFor more on **Lambda** go to this [link][1] and must read [Aggregate Operations][2] and for Spliterator go to this [link][3].\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html\r\n  [2]: https://docs.oracle.com/javase/tutorial/collections/streams/\r\n  [3]: https://docs.oracle.com/javase/8/docs/api/java/util/Spliterator.html\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":1077,"user_id":5135746,"user_type":"registered","profile_image":"https://i.stack.imgur.com/9iLB9.png?s=128&g=1","display_name":"Syd Lambert","link":"https://stackoverflow.com/users/5135746/syd-lambert"},"comment_count":0,"score":3,"creation_date":1445969374,"body_markdown":"If you want to iterate through the map in the order that the elements were added, use `LinkedHashMap` as opposed to just `Map`.\r\n\r\nThis approach has worked for me in the past:\r\n\r\n    LinkedHashMap&lt;String,Integer&gt; test=new LinkedHashMap();\r\n    \r\n    test.put(&quot;foo&quot;,69);\r\n    test.put(&quot;bar&quot;,1337);\r\n\r\n    for(int i=0;i&lt;test.size();i++){\r\n        System.out.println(test.get(test.keySet().toArray()[i]));\r\n    }\r\n\r\nOutput:\r\n\r\n    69\r\n    1337","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":7986,"user_id":2131074,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/579b58072937a718317e020c891de635?s=128&d=identicon&r=PG","display_name":"GPI","link":"https://stackoverflow.com/users/2131074/gpi"},"score":11,"creation_date":1463054014},{"owner":{"reputation":15291,"user_id":3656904,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1","display_name":"talex","link":"https://stackoverflow.com/users/3656904/talex"},"score":23,"creation_date":1473780053},{"owner":{"reputation":27964,"user_id":706317,"user_type":"registered","accept_rate":70,"profile_image":"https://i.stack.imgur.com/1mafF.jpg?s=128&g=1","display_name":"ZhekaKozlov","link":"https://stackoverflow.com/users/706317/zhekakozlov"},"score":2,"creation_date":1489688869},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":51,"creation_date":1489775308},{"owner":{"reputation":80637,"user_id":296974,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/0e26cfe3ac75cd582ca200fbc6fa0421?s=128&d=identicon&r=PG","display_name":"glglgl","link":"https://stackoverflow.com/users/296974/glglgl"},"score":7,"creation_date":1496612715},{"owner":{"reputation":4620,"user_id":201557,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/465fb55f784b092bd32a669c5923d72c?s=128&d=identicon&r=PG","display_name":"Thierry","link":"https://stackoverflow.com/users/201557/thierry"},"score":8,"creation_date":1510097877},{"owner":{"reputation":42806,"user_id":57611,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/fbIWO.jpg?s=128&g=1","display_name":"ErikE","link":"https://stackoverflow.com/users/57611/erike"},"score":16,"creation_date":1531595052},{"owner":{"reputation":36577,"user_id":671543,"user_type":"registered","accept_rate":55,"profile_image":"https://www.gravatar.com/avatar/2145962377da9419f2446cd565f614ee?s=128&d=identicon&r=PG","display_name":"njzk2","link":"https://stackoverflow.com/users/671543/njzk2"},"score":4,"creation_date":1544418100},{"owner":{"reputation":1380,"user_id":5517612,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9311c4cfa84f7914806dfb88a75ee219?s=128&d=identicon&r=PG&f=1","display_name":"Todd Sewell","link":"https://stackoverflow.com/users/5517612/todd-sewell"},"score":6,"creation_date":1546434027},{"owner":{"reputation":1027,"user_id":5870336,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/21a411552aec6db6c9f636258ced2d4c?s=128&d=identicon&r=PG&f=1","display_name":"Sina Madani","link":"https://stackoverflow.com/users/5870336/sina-madani"},"score":4,"creation_date":1551209546},{"owner":{"reputation":328,"user_id":3972824,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/vE2WO.jpg?s=128&g=1","display_name":"Aswin Prasad","link":"https://stackoverflow.com/users/3972824/aswin-prasad"},"score":0,"creation_date":1577327061},{"owner":{"reputation":6188,"user_id":821497,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/956003d5607ba6be2dd3f37427980e2c?s=128&d=identicon&r=PG","display_name":"ciamej","link":"https://stackoverflow.com/users/821497/ciamej"},"score":0,"creation_date":1589208644},{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":1,"creation_date":1596705010},{"owner":{"reputation":4971,"user_id":39334,"user_type":"registered","accept_rate":81,"profile_image":"https://graph.facebook.com/520402061/picture?type=large","display_name":"stolsvik","link":"https://stackoverflow.com/users/39334/stolsvik"},"score":0,"creation_date":1611698375}],"owner":{"reputation":48686,"user_id":4318868,"user_type":"registered","profile_image":"https://i.stack.imgur.com/p6Tpv.jpg?s=128&g=1","display_name":"Slava Vedenin","link":"https://stackoverflow.com/users/4318868/slava-vedenin"},"comment_count":14,"score":1334,"creation_date":1456159049,"body_markdown":"To summarize the other answers and combine them with what I know, I found 10 main ways to do this (see below). Also, I wrote some performance tests (see results below). For example, if we want to find the sum of all of the keys and values of a map, we can write:\r\n\r\n 1. Using **iterator** and **Map.Entry**\r\n\r\n        long i = 0;\r\n        Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; it = map.entrySet().iterator();\r\n        while (it.hasNext()) {\r\n            Map.Entry&lt;Integer, Integer&gt; pair = it.next();\r\n            i += pair.getKey() + pair.getValue();\r\n        }\r\n\r\n 2. Using **foreach** and **Map.Entry**\r\n\r\n        long i = 0;\r\n        for (Map.Entry&lt;Integer, Integer&gt; pair : map.entrySet()) {\r\n            i += pair.getKey() + pair.getValue();\r\n        }\r\n\r\n 3. Using **forEach** from Java 8\r\n\r\n        final long[] i = {0};\r\n        map.forEach((k, v) -&gt; i[0] += k + v);\r\n\r\n 4. Using **keySet** and **foreach**\r\n\r\n        long i = 0;\r\n        for (Integer key : map.keySet()) {\r\n            i += key + map.get(key);\r\n        }\r\n\r\n 5. Using **keySet** and **iterator**\r\n\r\n        long i = 0;\r\n        Iterator&lt;Integer&gt; itr2 = map.keySet().iterator();\r\n        while (itr2.hasNext()) {\r\n            Integer key = itr2.next();\r\n            i += key + map.get(key);\r\n        }\r\n\r\n 6. Using **for** and **Map.Entry**\r\n\r\n        long i = 0;\r\n        for (Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; entries = map.entrySet().iterator(); entries.hasNext(); ) {\r\n            Map.Entry&lt;Integer, Integer&gt; entry = entries.next();\r\n            i += entry.getKey() + entry.getValue();\r\n        }\r\n\r\n 7. Using the Java 8 **Stream API**\r\n\r\n        final long[] i = {0};\r\n        map.entrySet().stream().forEach(e -&gt; i[0] += e.getKey() + e.getValue());\r\n\r\n 8. Using the Java 8 **Stream API parallel**\r\n\r\n        final long[] i = {0};\r\n        map.entrySet().stream().parallel().forEach(e -&gt; i[0] += e.getKey() + e.getValue());\r\n\r\n 9. Using **IterableMap** of `Apache Collections`\r\n\r\n        long i = 0;\r\n        MapIterator&lt;Integer, Integer&gt; it = iterableMap.mapIterator();\r\n        while (it.hasNext()) {\r\n            i += it.next() + it.getValue();\r\n        }\r\n\r\n 10. Using **MutableMap** of Eclipse (CS) collections\r\n\r\n        final long[] i = {0};\r\n        mutableMap.forEachKeyValue((key, value) -&gt; {\r\n            i[0] += key + value;\r\n        });\r\n\r\n**Perfomance tests** (mode = AverageTime, system = Windows&amp;nbsp;8.1 64-bit, Intel i7-4790 3.60 GHz, 16&amp;nbsp;GB)\r\n\r\n1. For a small map (100 elements), score 0.308 is the best\r\n\r\n        Benchmark                          Mode  Cnt  Score    Error  Units\r\n        test3_UsingForEachAndJava8         avgt  10   0.308 &#177;  0.021  &#181;s/op\r\n        test10_UsingEclipseMap             avgt  10   0.309 &#177;  0.009  &#181;s/op\r\n        test1_UsingWhileAndMapEntry        avgt  10   0.380 &#177;  0.014  &#181;s/op\r\n        test6_UsingForAndIterator          avgt  10   0.387 &#177;  0.016  &#181;s/op\r\n        test2_UsingForEachAndMapEntry      avgt  10   0.391 &#177;  0.023  &#181;s/op\r\n        test7_UsingJava8StreamApi          avgt  10   0.510 &#177;  0.014  &#181;s/op\r\n        test9_UsingApacheIterableMap       avgt  10   0.524 &#177;  0.008  &#181;s/op\r\n        test4_UsingKeySetAndForEach        avgt  10   0.816 &#177;  0.026  &#181;s/op\r\n        test5_UsingKeySetAndIterator       avgt  10   0.863 &#177;  0.025  &#181;s/op\r\n        test8_UsingJava8StreamApiParallel  avgt  10   5.552 &#177;  0.185  &#181;s/op\r\n\r\n2. For a map with 10000 elements,  score 37.606 is the best\r\n\r\n        Benchmark                           Mode   Cnt  Score      Error   Units\r\n        test10_UsingEclipseMap              avgt   10    37.606 &#177;   0.790  &#181;s/op\r\n        test3_UsingForEachAndJava8          avgt   10    50.368 &#177;   0.887  &#181;s/op\r\n        test6_UsingForAndIterator           avgt   10    50.332 &#177;   0.507  &#181;s/op\r\n        test2_UsingForEachAndMapEntry       avgt   10    51.406 &#177;   1.032  &#181;s/op\r\n        test1_UsingWhileAndMapEntry         avgt   10    52.538 &#177;   2.431  &#181;s/op\r\n        test7_UsingJava8StreamApi           avgt   10    54.464 &#177;   0.712  &#181;s/op\r\n        test4_UsingKeySetAndForEach         avgt   10    79.016 &#177;  25.345  &#181;s/op\r\n        test5_UsingKeySetAndIterator        avgt   10    91.105 &#177;  10.220  &#181;s/op\r\n        test8_UsingJava8StreamApiParallel   avgt   10   112.511 &#177;   0.365  &#181;s/op\r\n        test9_UsingApacheIterableMap        avgt   10   125.714 &#177;   1.935  &#181;s/op\r\n\r\n3. For a map with 100000 elements,  score 1184.767 is the best\r\n\r\n        Benchmark                          Mode   Cnt  Score        Error    Units\r\n        test1_UsingWhileAndMapEntry        avgt   10   1184.767 &#177;   332.968  &#181;s/op\r\n        test10_UsingEclipseMap             avgt   10   1191.735 &#177;   304.273  &#181;s/op\r\n        test2_UsingForEachAndMapEntry      avgt   10   1205.815 &#177;   366.043  &#181;s/op\r\n        test6_UsingForAndIterator          avgt   10   1206.873 &#177;   367.272  &#181;s/op\r\n        test8_UsingJava8StreamApiParallel  avgt   10   1485.895 &#177;   233.143  &#181;s/op\r\n        test5_UsingKeySetAndIterator       avgt   10   1540.281 &#177;   357.497  &#181;s/op\r\n        test4_UsingKeySetAndForEach        avgt   10   1593.342 &#177;   294.417  &#181;s/op\r\n        test3_UsingForEachAndJava8         avgt   10   1666.296 &#177;   126.443  &#181;s/op\r\n        test7_UsingJava8StreamApi          avgt   10   1706.676 &#177;   436.867  &#181;s/op\r\n        test9_UsingApacheIterableMap       avgt   10   3289.866 &#177;  1445.564  &#181;s/op\r\n\r\nGraphs (performance tests depending on map size)\r\n\r\n[![Enter image description here][1]][1]\r\n\r\nTable (perfomance tests depending on map size)\r\n\r\n              100     600      1100     1600     2100\r\n    test10    0.333    1.631    2.752    5.937    8.024\r\n    test3     0.309    1.971    4.147    8.147   10.473\r\n    test6     0.372    2.190    4.470    8.322   10.531\r\n    test1     0.405    2.237    4.616    8.645   10.707\r\n    test2     0.376    2.267    4.809    8.403   10.910\r\n    test7     0.473    2.448    5.668    9.790   12.125\r\n    test9     0.565    2.830    5.952   13.220   16.965\r\n    test4     0.808    5.012    8.813   13.939   17.407\r\n    test5     0.810    5.104    8.533   14.064   17.422\r\n    test8     5.173   12.499   17.351   24.671   30.403\r\n\r\nAll tests are on [GitHub][2].\r\n\r\n  [1]: https://i.stack.imgur.com/17VGh.png\r\n  [2]: https://github.com/Vedenin/useful-java-links/blob/master/helloworlds/5.0-other-examples/src/main/java/other_examples/IterateThroughHashMapTest.java\r\n\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":557,"user_id":4533984,"user_type":"registered","accept_rate":50,"profile_image":"https://lh5.googleusercontent.com/-skN5Kda7DlE/AAAAAAAAAAI/AAAAAAAAAJc/wVXgdFh2Mlg/photo.jpg?sz=128","display_name":"Sajad NasiriNezhad","link":"https://stackoverflow.com/users/4533984/sajad-nasirinezhad"},"comment_count":0,"score":11,"creation_date":1460533666,"body_markdown":"               //Functional Oprations\r\n                Map&lt;String, String&gt; mapString = new HashMap&lt;&gt;();\r\n                mapString.entrySet().stream().map((entry) -&gt; {\r\n                    String mapKey = entry.getKey();\r\n                    return entry;\r\n                }).forEach((entry) -&gt; {\r\n                    String mapValue = entry.getValue();\r\n                });\r\n                \r\n                //Intrator\r\n                Map&lt;String, String&gt; mapString = new HashMap&lt;&gt;();\r\n                for (Iterator&lt;Map.Entry&lt;String, String&gt;&gt; it = mapString.entrySet().iterator(); it.hasNext();) {\r\n                    Map.Entry&lt;String, String&gt; entry = it.next();\r\n                    String mapKey = entry.getKey();\r\n                    String mapValue = entry.getValue();\r\n                }\r\n\r\n                //Simple for loop\r\n                Map&lt;String, String&gt; mapString = new HashMap&lt;&gt;();\r\n                for (Map.Entry&lt;String, String&gt; entry : mapString.entrySet()) {\r\n                    String mapKey = entry.getKey();\r\n                    String mapValue = entry.getValue();\r\n\r\n                }","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":7521,"user_id":6931119,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/21edf33688ace0d81b66178964aee370?s=128&d=identicon&r=PG&f=1","display_name":"Witold Kaczurba","link":"https://stackoverflow.com/users/6931119/witold-kaczurba"},"comment_count":0,"score":21,"creation_date":1477479418,"body_markdown":"The ordering will always depend on the specific map implementation.\r\nUsing Java&amp;nbsp;8 you can use either of these:\r\n\r\n    map.forEach((k,v) -&gt; { System.out.println(k + &quot;:&quot; + v); });\r\n\r\nOr:\r\n\r\n    map.entrySet().forEach((e) -&gt; {\r\n                System.out.println(e.getKey() + &quot; : &quot; + e.getValue());\r\n            });\r\n\r\nThe result will be the same (same order). The entrySet backed by the map so you are getting the same order. The second one is handy as it allows you to use lambdas, e.g. if you want only to print only Integer objects that are greater than 5:\r\n\r\n    map.entrySet()\r\n        .stream()\r\n        .filter(e-&gt; e.getValue() &gt; 5)\r\n        .forEach(System.out::println);\r\n\r\nThe code below shows iteration through LinkedHashMap and normal HashMap (example). You will see difference in the order:\r\n\r\n    public class HMIteration {\r\n\r\n\r\n        public static void main(String[] args) {\r\n            Map&lt;Object, Object&gt; linkedHashMap = new LinkedHashMap&lt;&gt;();\r\n            Map&lt;Object, Object&gt; hashMap = new HashMap&lt;&gt;();\r\n\r\n            for (int i=10; i&gt;=0; i--) {\r\n                linkedHashMap.put(i, i);\r\n                hashMap.put(i, i);\r\n            }\r\n\r\n            System.out.println(&quot;LinkedHashMap (1): &quot;);\r\n            linkedHashMap.forEach((k,v) -&gt; { System.out.print(k + &quot; (#=&quot;+k.hashCode() + &quot;):&quot; + v + &quot;, &quot;); });\r\n\r\n            System.out.println(&quot;\\nLinkedHashMap (2): &quot;);\r\n\r\n            linkedHashMap.entrySet().forEach((e) -&gt; {\r\n                System.out.print(e.getKey() + &quot; : &quot; + e.getValue() + &quot;, &quot;);\r\n            });\r\n\r\n\r\n            System.out.println(&quot;\\n\\nHashMap (1): &quot;);\r\n            hashMap.forEach((k,v) -&gt; { System.out.print(k + &quot; (#:&quot;+k.hashCode() + &quot;):&quot; + v + &quot;, &quot;); });\r\n\r\n            System.out.println(&quot;\\nHashMap (2): &quot;);\r\n\r\n            hashMap.entrySet().forEach((e) -&gt; {\r\n                System.out.print(e.getKey() + &quot; : &quot; + e.getValue() + &quot;, &quot;);\r\n            });\r\n        }\r\n    }\r\n\r\nOutput:\r\n\r\n```\r\nLinkedHashMap (1):\r\n10 (#=10):10, 9 (#=9):9, 8 (#=8):8, 7 (#=7):7, 6 (#=6):6, 5 (#=5):5, 4 (#=4):4, 3 (#=3):3, 2 (#=2):2, 1 (#=1):1, 0 (#=0):0,\r\nLinkedHashMap (2):\r\n10 : 10, 9 : 9, 8 : 8, 7 : 7, 6 : 6, 5 : 5, 4 : 4, 3 : 3, 2 : 2, 1 : 1, 0 : 0,\r\nHashMap (1):\r\n0 (#:0):0, 1 (#:1):1, 2 (#:2):2, 3 (#:3):3, 4 (#:4):4, 5 (#:5):5, 6 (#:6):6, 7 (#:7):7, 8 (#:8):8, 9 (#:9):9, 10 (#:10):10,\r\nHashMap (2):\r\n0 : 0, 1 : 1, 2 : 2, 3 : 3, 4 : 4, 5 : 5, 6 : 6, 7 : 7, 8 : 8, 9 : 9, 10 : 10,\r\n```\r\n\r\n\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":240,"user_id":1706743,"user_type":"registered","profile_image":"https://i.stack.imgur.com/2JgeL.jpg?s=128&g=1","display_name":"Rupendra Sharma","link":"https://stackoverflow.com/users/1706743/rupendra-sharma"},"comment_count":0,"score":9,"creation_date":1491460575,"body_markdown":"    package com.test;\r\n    \r\n    import java.util.Collection;\r\n    import java.util.HashMap;\r\n    import java.util.Iterator;\r\n    import java.util.Map;\r\n    import java.util.Map.Entry;\r\n    import java.util.Set;\r\n    \r\n    public class Test {\r\n    \r\n    \tpublic static void main(String[] args) {\r\n    \t\tMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();\r\n    \t\tmap.put(&quot;ram&quot;, &quot;ayodhya&quot;);\r\n    \t\tmap.put(&quot;krishan&quot;, &quot;mathura&quot;);\r\n    \t\tmap.put(&quot;shiv&quot;, &quot;kailash&quot;);\r\n    \t   \r\n    \t\tSystem.out.println(&quot;********* Keys *********&quot;);\r\n    \t\tSet&lt;String&gt; keys = map.keySet();\r\n    \t\tfor (String key : keys) {\r\n    \t\t\tSystem.out.println(key);\r\n    \t\t}\r\n    \r\n    \t\tSystem.out.println(&quot;********* Values *********&quot;);\r\n    \t\tCollection&lt;String&gt; values = map.values();\r\n    \t\tfor (String value : values) {\r\n    \t\t\tSystem.out.println(value);\r\n    \t\t}\r\n    \r\n    \t\tSystem.out.println(&quot;***** Keys and Values (Using for each loop) *****&quot;);\r\n    \t\tfor (Map.Entry&lt;String, String&gt; entry : map.entrySet()) {\r\n    \t\t\tSystem.out.println(&quot;Key: &quot; + entry.getKey() + &quot;\\t Value: &quot;\r\n    \t\t\t\t\t+ entry.getValue());\r\n    \t\t}\r\n    \r\n    \t\tSystem.out.println(&quot;***** Keys and Values (Using while loop) *****&quot;);\r\n    \t\tIterator&lt;Entry&lt;String, String&gt;&gt; entries = map.entrySet().iterator();\r\n    \t\twhile (entries.hasNext()) {\r\n    \t\t\tMap.Entry&lt;String, String&gt; entry = (Map.Entry&lt;String, String&gt;) entries\r\n    \t\t\t\t\t.next();\r\n    \t\t\tSystem.out.println(&quot;Key: &quot; + entry.getKey() + &quot;\\t Value: &quot;\r\n    \t\t\t\t\t+ entry.getValue());\r\n    \t\t}\r\n    \r\n    \t\tSystem.out\r\n    \t\t\t\t.println(&quot;** Keys and Values (Using java 8 using lambdas )***&quot;);\r\n    \t\tmap.forEach((k, v) -&gt; System.out\r\n    \t\t\t\t.println(&quot;Key: &quot; + k + &quot;\\t value: &quot; + v));\r\n    \t}\r\n    }\r\n\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":1247,"user_id":3876382,"user_type":"registered","profile_image":"https://i.stack.imgur.com/R2ODc.jpg?s=128&g=1","display_name":"michaeak","link":"https://stackoverflow.com/users/3876382/michaeak"},"score":2,"creation_date":1544616047}],"owner":{"reputation":1216,"user_id":6759926,"user_type":"registered","profile_image":"https://i.stack.imgur.com/eeQrl.jpg?s=128&g=1","display_name":"shivampip","link":"https://stackoverflow.com/users/6759926/shivampip"},"comment_count":1,"score":10,"creation_date":1509891497,"body_markdown":"Iterating a [Map][1] is very easy. \r\n\r\n    for(Object key: map.keySet()){\r\n       Object value= map.get(key);\r\n       //Do your stuff\r\n    }\r\n\r\nFor instance, you have a `Map&lt;String, int&gt; data;`\r\n\r\n    for(Object key: data.keySet()){\r\n      int value= data.get(key);\r\n    }\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/10/docs/api/java/util/Map.html","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":343,"user_id":4745890,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-VcVRsccYCEU/AAAAAAAAAAI/AAAAAAAAAis/1YWdWeVJ3lo/photo.jpg?sz=128","display_name":"Utpal Kumar","link":"https://stackoverflow.com/users/4745890/utpal-kumar"},"comment_count":0,"score":10,"creation_date":1510545135,"body_markdown":"There are a lot of ways to do this. Below is a few simple steps:\r\n\r\nSuppose you have one Map like:\r\n\r\n    Map&lt;String, Integer&gt; m = new HashMap&lt;String, Integer&gt;();\r\n\r\nThen you can do something like the below to iterate over map elements.\r\n\r\n    // ********** Using an iterator ****************\r\n    Iterator&lt;Entry&lt;String, Integer&gt;&gt; me = m.entrySet().iterator();\r\n    while(me.hasNext()){\r\n        Entry&lt;String, Integer&gt; pair = me.next();\r\n        System.out.println(pair.getKey() + &quot;:&quot; + pair.getValue());\r\n    }\r\n\r\n    // *********** Using foreach ************************\r\n    for(Entry&lt;String, Integer&gt; me : m.entrySet()){\r\n        System.out.println(me.getKey() + &quot; : &quot; + me.getValue());\r\n    }\r\n\r\n    // *********** Using keySet *****************************\r\n    for(String s : m.keySet()){\r\n        System.out.println(s + &quot; : &quot; + m.get(s));\r\n    }\r\n\r\n    // *********** Using keySet and iterator *****************\r\n    Iterator&lt;String&gt; me = m.keySet().iterator();\r\n    while(me.hasNext()){\r\n        String key = me.next();\r\n        System.out.println(key + &quot; : &quot; + m.get(key));\r\n    }\r\n\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":1173,"user_id":7369238,"user_type":"registered","profile_image":"https://i.stack.imgur.com/GVyII.jpg?s=128&g=1","display_name":"ABHAY JOHRI","link":"https://stackoverflow.com/users/7369238/abhay-johri"},"comment_count":0,"score":14,"creation_date":1523990765,"body_markdown":"Use Java 8:\r\n\r\n    map.entrySet().forEach(entry -&gt; System.out.println(entry.getValue()));","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":9805,"user_id":512907,"user_type":"registered","accept_rate":88,"profile_image":"https://i.stack.imgur.com/vIyJf.jpg?s=128&g=1","display_name":"bluehallu","link":"https://stackoverflow.com/users/512907/bluehallu"},"comment_count":0,"score":24,"creation_date":1524141140,"body_markdown":"Most compact with Java 8:\r\n\r\n    map.entrySet().forEach(System.out::println);\r\n\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":2261,"user_id":4813777,"user_type":"registered","profile_image":"https://i.stack.imgur.com/oAMFb.png?s=128&g=1","display_name":"Taras Melnyk","link":"https://stackoverflow.com/users/4813777/taras-melnyk"},"comment_count":0,"score":50,"creation_date":1525346707,"body_markdown":"With **Java 8**, you can iterate Map using forEach and lambda expression,\r\n\r\n    map.forEach((k, v) -&gt; System.out.println((k + &quot;:&quot; + v)));","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":567,"user_id":5756557,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/965b778c12f6543adde584fcf96259ea?s=128&d=identicon&r=PG","display_name":"anandchaugule","link":"https://stackoverflow.com/users/5756557/anandchaugule"},"comment_count":0,"score":12,"creation_date":1543314287,"body_markdown":"An effective iterative solution over a Map is a `for` loop from Java 5 through Java 7. Here it is:\r\n\r\n    for (String key : phnMap.keySet()) {\r\n        System.out.println(&quot;Key: &quot; + key + &quot; Value: &quot; + phnMap.get(key));\r\n    }\r\n\r\nFrom Java 8 you can use a lambda expression to iterate over a Map. It is an enhanced `forEach`\r\n\r\n    phnMap.forEach((k,v) -&gt; System.out.println(&quot;Key: &quot; + k + &quot; Value: &quot; + v));\r\n\r\nIf you want to write a conditional for lambda you can write it like this:\r\n\r\n    phnMap.forEach((k,v)-&gt;{\r\n        System.out.println(&quot;Key: &quot; + k + &quot; Value: &quot; + v);\r\n        if(&quot;abc&quot;.equals(k)){\r\n            System.out.println(&quot;Hello abc&quot;);\r\n        }\r\n    });\r\n","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"user_type":"does_not_exist","display_name":"user1098063"},"comment_count":0,"score":6,"creation_date":1559764607,"body_markdown":"I like to concat a counter, then save the final value of the counter;\r\n\r\n    int counter = 0;\r\n    HashMap&lt;String, String&gt; m = new HashMap&lt;String, String&gt;();\r\n    for(int i = 0;i&lt;items.length;i++)\r\n    {\r\n    m.put(&quot;firstname&quot;+i, items.get(i).getFirstName());\r\n    counter = i;\r\n    }\r\n    \r\n    m.put(&quot;recordCount&quot;,String.valueOf(counter));\r\n\r\n\r\nThen when you want to retrieve:\r\n\r\n    int recordCount = Integer.parseInf(m.get(&quot;recordCount&quot;));\r\n    for(int i =0 ;i&lt;recordCount;i++)\r\n    {\r\n    System.out.println(&quot;First Name :&quot; + m.get(&quot;firstname&quot;+i));\r\n    }","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":1931,"user_id":5256337,"user_type":"registered","profile_image":"https://i.stack.imgur.com/d3GFu.jpg?s=128&g=1","display_name":"Lova Chittumuri","link":"https://stackoverflow.com/users/5256337/lova-chittumuri"},"comment_count":0,"score":6,"creation_date":1564731038,"body_markdown":"&gt; Using  Java 7\r\n\r\n    Map&lt;String,String&gt; sampleMap = new HashMap&lt;&gt;();\r\n    for (sampleMap.Entry&lt;String,String&gt; entry : sampleMap.entrySet()) {\r\n        String key = entry.getKey();\r\n        String value = entry.getValue();\r\n        \r\n    \t/* your Code as per the Business Justification  */\r\n    \t\r\n    }\r\n\r\n&gt; Using Java 8\r\n\r\n\r\n    Map&lt;String,String&gt; sampleMap = new HashMap&lt;&gt;();\r\n    \r\n    sampleMap.forEach((k, v) -&gt; System.out.println(&quot;Key is :  &quot; + k + &quot; Value is :  &quot; + v));","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":2208,"user_id":991710,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/f660a9ad68d31e30b2d7b153f7eb5bc5?s=128&d=identicon&r=PG","display_name":"user991710","link":"https://stackoverflow.com/users/991710/user991710"},"score":1,"creation_date":1581878541}],"owner":{"reputation":206732,"user_id":642706,"user_type":"registered","accept_rate":58,"profile_image":"https://i.stack.imgur.com/ZWEI3.jpg?s=128&g=1","display_name":"Basil Bourque","link":"https://stackoverflow.com/users/642706/basil-bourque"},"comment_count":1,"score":20,"creation_date":1572119097,"body_markdown":"&gt;If I have an object implementing the Map interface in Java and I wish to iterate over every pair contained within it, what is the most efficient way of going through the map?\r\n\r\nIf efficiency of looping the keys is a priority for your app, then choose a `Map` implementation that maintains the keys in your desired order.\r\n\r\n&gt;Will the ordering of elements depend on the specific map implementation that I have for the interface?\r\n\r\nYes, absolutely. \r\n\r\n - Some `Map` implementations promise a certain iteration order, others do not.\r\n - Different implementations of `Map` maintain different ordering of the key-value pairs. \r\n\r\nSee this table I created summarizing the various `Map` implementations bundled with Java 11. Specifically, notice the *iteration order* column. Click/tap to zoom.\r\n\r\n\r\n[![Table of map implementations in Java 11, comparing their features][2]][2]\r\n\r\nYou can see there are **four `Map` implementations maintaining an order**:\r\n\r\n - `TreeMap`\r\n - `ConcurrentSkipListMap` \r\n - `LinkedHashMap`\r\n - `EnumMap`\r\n\r\n## `NavigableMap` interface\r\n\r\nTwo of those implement the [`NavigableMap`][3] interface: `TreeMap` &amp; `ConcurrentSkipListMap`. \r\n\r\nThe older [`SortedMap`][4] interface is effectively supplanted by the newer [`NavigableMap`][3] interface. But you may find 3rd-party implementations implementing the older interface only.\r\n\r\n## Natural order\r\n\r\nIf you want a [`Map`][5] that keeps its pairs arranged by the “natural order” of the key, use [`TreeMap`][6] or [`ConcurrentSkipListMap`][7]. The term “natural order” means the class of the keys implements [`Comparable`][8]. The value returned by the [`compareTo`][9] method is used for comparison in sorting.\r\n\r\n## Custom order\r\n\r\nIf you want to specify a custom sorting routine for your keys to be used in maintaining a sorted order, pass a [`Comparator`][10] implementation appropriate to the class of your keys. Use either [`TreeMap`][6] or [`ConcurrentSkipListMap`][7], passing your `Comparator`. \r\n\r\n## Original insertion order\r\n\r\nIf you want the pairs of your map to be kept in their original order in which you inserted them into the map, use [`LinkedHashMap`][11]. \r\n\r\n## Enum-definition order\r\n\r\nIf you are using an enum such as [`DayOfWeek`][12] or [`Month`][13] as your keys, use the [`EnumMap`][14] class. Not only is this class *highly* optimized to use very little memory and run very fast, it maintains your pairs in the order defined by the enum. For `DayOfWeek`, for example, the key of `DayOfWeek.MONDAY` will be first found when iterated, and the key of `DayOfWeek.SUNDAY` will be last.\r\n\r\n## Other considerations\r\n\r\nIn choosing a `Map` implementation, also consider:\r\n\r\n - NULLs. Some implementations forbid/accept a NULL as key and/or value. \r\n - Concurrency. If you are manipulating the map across threads, you must use an implementation that supports concurrency. Or wrap the map with [`Collections::synchronizedMap`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Collections.html#synchronizedMap(java.util.Map)) (less preferable). \r\n\r\nBoth of these considerations are covered in the graphic table above.\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/47xJF.png\r\n  [2]: https://i.stack.imgur.com/4z5Fb.png\r\n  [3]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/NavigableMap.html\r\n  [4]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/SortedMap.html\r\n  [5]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html\r\n  [6]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/TreeMap.html\r\n  [7]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/ConcurrentSkipListMap.html\r\n  [8]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Comparable.html\r\n  [9]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Comparable.html#compareTo(T)\r\n  [10]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Comparator.html\r\n  [11]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html\r\n  [12]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/DayOfWeek.html\r\n  [13]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/Month.html\r\n  [14]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/EnumMap.html","title":"How do I efficiently iterate over each entry in a Java Map?"},{"comments":[{"owner":{"reputation":206732,"user_id":642706,"user_type":"registered","accept_rate":58,"profile_image":"https://i.stack.imgur.com/ZWEI3.jpg?s=128&g=1","display_name":"Basil Bourque","link":"https://stackoverflow.com/users/642706/basil-bourque"},"score":0,"creation_date":1578297081},{"owner":{"reputation":238,"user_id":3659492,"user_type":"registered","accept_rate":78,"profile_image":"https://graph.facebook.com/100001600262099/picture?type=large","display_name":"Mahbubur Rahman Khan","link":"https://stackoverflow.com/users/3659492/mahbubur-rahman-khan"},"score":0,"creation_date":1583445734}],"owner":{"reputation":2758,"user_id":4332316,"user_type":"registered","accept_rate":20,"profile_image":"https://i.stack.imgur.com/Lqx6f.png?s=128&g=1","display_name":"Ali Akram","link":"https://stackoverflow.com/users/4332316/ali-akram"},"comment_count":2,"score":7,"creation_date":1578296646,"body_markdown":"# `Map.forEach`\r\n\r\nWhat about simply using [`Map::forEach`][1] where both the key and the value are passed to your [`BiConsumer`][2]?\r\n\r\n    map.forEach((k,v)-&gt;{\r\n        System.out.println(k+&quot;-&gt;&quot;+v);\r\n    });\r\n\r\n\r\n  [1]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html#forEach(java.util.function.BiConsumer)\r\n  [2]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/function/BiConsumer.html","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":1483,"user_id":3705861,"user_type":"registered","profile_image":"https://i.stack.imgur.com/QZvw8.jpg?s=128&g=1","display_name":"Younes EO","link":"https://stackoverflow.com/users/3705861/younes-eo"},"comment_count":0,"score":6,"creation_date":1592169562,"body_markdown":"Since Java 10, you can use local variable inference (a.k.a. &quot;var&quot;) to make a lot of the already available answers less bloated. For example:\r\n\r\n```java\r\nfor (var entry : map.entrySet()) {\r\n    System.out.println(entry.getKey() + &quot; : &quot; + entry.getValue());\r\n}\r\n```","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":130,"user_id":9363081,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/090477ff046c0a1d81e6cc76a345532a?s=128&d=identicon&r=PG&f=1","display_name":"Dubstep","link":"https://stackoverflow.com/users/9363081/dubstep"},"comment_count":0,"score":2,"creation_date":1600210429,"body_markdown":"```\r\nMap&lt;String, String&gt; map = \r\nfor (Map.Entry&lt;String, String&gt; entry : map.entrySet()) {\r\n    MapKey = entry.getKey() \r\n    MapValue = entry.getValue();\r\n}\r\n```","title":"How do I efficiently iterate over each entry in a Java Map?"},{"owner":{"reputation":387,"user_id":9898251,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e795cc299ab4b7e5d4fbe4a2853ce2e7?s=128&d=identicon&r=PG&f=1","display_name":"Badri Paudel","link":"https://stackoverflow.com/users/9898251/badri-paudel"},"comment_count":0,"score":0,"creation_date":1610381067,"body_markdown":"You can search for the key and with the help of the key you can find the associated value of the map as map has **unique key**, see what happens when key is duplicate [here][1] or [here][2].\r\n\r\nDemo map : \r\n\r\n     Map&lt;String, String&gt; map = new HashMap();\r\n      map.put(&quot;name&quot;, &quot;Badri Paudel&quot;);\r\n      map.put(&quot;age&quot;, &quot;23&quot;);\r\n      map.put(&quot;address&quot;, &quot;KTM&quot;);\r\n      map.put(&quot;faculty&quot;, &quot;BE&quot;);\r\n      map.put(&quot;major&quot;, &quot;CS&quot;);\r\n      map.put(&quot;head&quot;, &quot;AVD&quot;);\r\n     \r\n\r\nTo get key only, you can use `map.keySet();` like this :\r\n\r\n    for(String key : map.keySet()) {\r\n          System.out.println(key);\r\n      }\r\n\r\nTo get value only , you can use `map.values();` like this:\r\n\r\n          for(String value : map.values()) {\r\n          System.out.println(value);\r\n      }\r\n\r\nTo get both key and its value you still can use `map.keySet();` and get its corresponding value, like this : \r\n\r\n     //this prints the key value pair\r\n      for (String k : map.keySet()) {\r\n            System.out.println(k + &quot; &quot; + map.get(k) + &quot; &quot;);\r\n        }\r\n\r\n`map.get(key)` gives the value pointed by that key. \r\n\r\n   \r\n\r\n  [1]: https://stackoverflow.com/a/20537942/9898251\r\n  [2]: https://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html#put%28K,%20V%29","title":"How do I efficiently iterate over each entry in a Java Map?"}],"owner":{"reputation":33897,"user_id":4807,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/7453d8a240de4b8d26869aa92743bb8e?s=128&d=identicon&r=PG","display_name":"iMack","link":"https://stackoverflow.com/users/4807/imack"},"comment_count":2,"is_answered":true,"answer_count":45,"score":3501,"creation_date":1220649168,"question_id":46898,"body_markdown":"If I have an object implementing the `Map` interface in Java and I wish to iterate over every pair contained within it,  what is the most efficient way of going through the map?\r\n\r\nWill the ordering of elements depend on the specific map implementation that I have for the interface?\r\n\r\n","link":"https://stackoverflow.com/questions/46898/how-do-i-efficiently-iterate-over-each-entry-in-a-java-map","title":"How do I efficiently iterate over each entry in a Java Map?"},{"tags":["java","loops","hashmap","iteration"],"comments":[{"owner":{"reputation":53600,"user_id":84916,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/IaDb2.jpg?s=128&g=1","display_name":"burntsugar","link":"https://stackoverflow.com/users/84916/burntsugar"},"score":4,"creation_date":1246406754},{"owner":{"reputation":3402,"user_id":1503859,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/4bcbf19e148dc37a98be5ea8311c4770?s=128&d=identicon&r=PG&f=1","display_name":"Nitin Mahesh","link":"https://stackoverflow.com/users/1503859/nitin-mahesh"},"score":6,"creation_date":1437849205}],"answers":[{"comments":[{"owner":{"reputation":2039,"user_id":247573,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/d38468649b64bbd35be0f1154a2d63d9?s=128&d=identicon&r=PG","display_name":"Benjamin Wootton","link":"https://stackoverflow.com/users/247573/benjamin-wootton"},"score":38,"creation_date":1292491322},{"owner":{"reputation":6334,"user_id":1000194,"user_type":"registered","accept_rate":72,"profile_image":"https://www.gravatar.com/avatar/a77c8ac040705a145c1b2eb556ca1728?s=128&d=identicon&r=PG","display_name":"fresh_dev","link":"https://stackoverflow.com/users/1000194/fresh-dev"},"score":462,"creation_date":1319533018},{"owner":{"reputation":999,"user_id":540128,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/62054833895a3df695f9854d8dee6a9f?s=128&d=identicon&r=PG","display_name":"vim","link":"https://stackoverflow.com/users/540128/vim"},"score":14,"creation_date":1326188828},{"owner":{"reputation":6777,"user_id":597419,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/bcf048ba341ced9fe6f427467d26e8cb?s=128&d=identicon&r=PG","display_name":"Danny","link":"https://stackoverflow.com/users/597419/danny"},"score":27,"creation_date":1327604871},{"owner":{"reputation":4444,"user_id":48839,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/48ba428b5ea2c890e8e9a21a37863ecc?s=128&d=identicon&r=PG","display_name":"Chad Okere","link":"https://stackoverflow.com/users/48839/chad-okere"},"score":114,"creation_date":1327771783},{"owner":{"reputation":5659,"user_id":1352530,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/ECK2F.jpg?s=128&g=1","display_name":"Whimusical","link":"https://stackoverflow.com/users/1352530/whimusical"},"score":2,"creation_date":1342701704},{"owner":{"reputation":5228,"user_id":801790,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/96845ef83ad5cd6109cdaf83633f7e5d?s=128&d=identicon&r=PG","display_name":"etlds","link":"https://stackoverflow.com/users/801790/etlds"},"score":4,"creation_date":1362512239},{"owner":{"reputation":3314,"user_id":903998,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/pZCd4.jpg?s=128&g=1","display_name":"Victor","link":"https://stackoverflow.com/users/903998/victor"},"score":0,"creation_date":1393602402},{"owner":{"reputation":1081,"user_id":3425114,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/8e217893d7cb524f08559af7e5581afe?s=128&d=identicon&r=PG&f=1","display_name":"Puru--","link":"https://stackoverflow.com/users/3425114/puru"},"score":7,"creation_date":1397414558},{"owner":{"reputation":1300,"user_id":2266428,"user_type":"registered","accept_rate":57,"profile_image":"https://i.stack.imgur.com/W8K6m.png?s=128&g=1","display_name":"J E Carter II","link":"https://stackoverflow.com/users/2266428/j-e-carter-ii"},"score":0,"creation_date":1400079995},{"owner":{"reputation":4773,"user_id":2482582,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/yQkZE.jpg?s=128&g=1","display_name":"Moebius","link":"https://stackoverflow.com/users/2482582/moebius"},"score":0,"creation_date":1409749981},{"owner":{"reputation":1369,"user_id":1935753,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/069c9c1b8c31ac76cbe4b362f13ccbe5?s=128&d=identicon&r=PG","display_name":"Hele","link":"https://stackoverflow.com/users/1935753/hele"},"score":2,"creation_date":1418620768},{"owner":{"reputation":2733,"user_id":5152497,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/31173db9fa0458111656bb2c9cfa6a09?s=128&d=identicon&r=PG&f=1","display_name":"J&#252;rgen K.","link":"https://stackoverflow.com/users/5152497/j%c3%bcrgen-k"},"score":0,"creation_date":1445276325},{"owner":{"reputation":8628,"user_id":2714301,"user_type":"registered","accept_rate":47,"profile_image":"https://www.gravatar.com/avatar/23c7ba1f14e71e14f65b7b95516b0f19?s=128&d=identicon&r=PG","display_name":"Jwan622","link":"https://stackoverflow.com/users/2714301/jwan622"},"score":0,"creation_date":1452182607},{"owner":{"reputation":6164,"user_id":1199931,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/e4480d84d8fb7ff925de83d8dcffe855?s=128&d=identicon&r=PG","display_name":"ashishduh","link":"https://stackoverflow.com/users/1199931/ashishduh"},"score":4,"creation_date":1480702940},{"owner":{"reputation":139,"user_id":3897771,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f231b3c03aa88bc684b785104423bcb7?s=128&d=identicon&r=PG","display_name":"apraetor","link":"https://stackoverflow.com/users/3897771/apraetor"},"score":0,"creation_date":1494540014},{"owner":{"reputation":43194,"user_id":106261,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/c6e6d6c8ca22de9d91745bce5b8e0399?s=128&d=identicon&r=PG","display_name":"NimChimpsky","link":"https://stackoverflow.com/users/106261/nimchimpsky"},"score":0,"creation_date":1496198228},{"owner":{"reputation":2027,"user_id":270654,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6db8e6e1cf36dfcc4c4d59e4b5827344?s=128&d=identicon&r=PG","display_name":"nemetroid","link":"https://stackoverflow.com/users/270654/nemetroid"},"score":1,"creation_date":1498724550},{"owner":{"reputation":1069,"user_id":3605161,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/3f207c6dc42b5ad3a4dc3e670b211aee?s=128&d=identicon&r=PG&f=1","display_name":"phil","link":"https://stackoverflow.com/users/3605161/phil"},"score":0,"creation_date":1499348950},{"owner":{"reputation":67931,"user_id":600500,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/5925786f174975db18cbc83dd85e5c1d?s=128&d=identicon&r=PG","display_name":"Paŭlo Ebermann","link":"https://stackoverflow.com/users/600500/pa%c5%adlo-ebermann"},"score":0,"creation_date":1503338246},{"owner":{"reputation":2271,"user_id":5117236,"user_type":"registered","accept_rate":84,"profile_image":"https://lh3.googleusercontent.com/-G6BMgWAersY/AAAAAAAAAAI/AAAAAAAAGG4/wnThVo0uWoA/photo.jpg?sz=128","display_name":"Impulse The Fox","link":"https://stackoverflow.com/users/5117236/impulse-the-fox"},"score":1,"creation_date":1505721145},{"owner":{"reputation":3257,"user_id":1324802,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/41K0O.jpg?s=128&g=1","display_name":"Androidcoder","link":"https://stackoverflow.com/users/1324802/androidcoder"},"score":0,"creation_date":1508709381},{"owner":{"reputation":1040,"user_id":3878948,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/a128928fb7879cd4d568769a4a49428e?s=128&d=identicon&r=PG&f=1","display_name":"Rishabh Agarwal","link":"https://stackoverflow.com/users/3878948/rishabh-agarwal"},"score":0,"creation_date":1512542759},{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1517957857},{"owner":{"reputation":722,"user_id":2083957,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/255411eabb91a1c9d7d87c3a2fa7db2b?s=128&d=identicon&r=PG&f=1","display_name":"technazi","link":"https://stackoverflow.com/users/2083957/technazi"},"score":0,"creation_date":1524110805},{"owner":{"reputation":381,"user_id":1800181,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/bfce3fc9139dee8f038ffe042797ddec?s=128&d=identicon&r=PG","display_name":"Mader Levap","link":"https://stackoverflow.com/users/1800181/mader-levap"},"score":1,"creation_date":1551445541},{"owner":{"reputation":974,"user_id":4722577,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/df632265f05cfef80f4d3da89de8cd7b?s=128&d=identicon&r=PG&f=1","display_name":"CAM_344","link":"https://stackoverflow.com/users/4722577/cam-344"},"score":1,"creation_date":1588000377},{"owner":{"reputation":314,"user_id":11323252,"user_type":"registered","profile_image":"https://i.stack.imgur.com/14ACB.jpg?s=128&g=1","display_name":"Rohit Chaurasiya","link":"https://stackoverflow.com/users/11323252/rohit-chaurasiya"},"score":0,"creation_date":1607284208}],"owner":{"reputation":324818,"user_id":70393,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/tTRDl.jpg?s=128&g=1","display_name":"karim79","link":"https://stackoverflow.com/users/70393/karim79"},"comment_count":28,"score":3360,"creation_date":1246404445,"body_markdown":"Iterate through the [`entrySet()`][1] like so:\r\n\r\n    public static void printMap(Map mp) {\r\n        Iterator it = mp.entrySet().iterator();\r\n        while (it.hasNext()) {\r\n            Map.Entry pair = (Map.Entry)it.next();\r\n            System.out.println(pair.getKey() + &quot; = &quot; + pair.getValue());\r\n            it.remove(); // avoids a ConcurrentModificationException\r\n        }\r\n    }\r\n\r\nRead more about [`Map`](http://docs.oracle.com/javase/7/docs/api/java/util/Map.html).\r\n\r\n  [1]: http://www.java2s.com/Code/JavaAPI/java.util/HashtableentrySet.htm","title":"Iterate through a HashMap"},{"comments":[{"owner":{"reputation":1907,"user_id":751077,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/0b38829fe4fedee43c2f3df36a85fff1?s=128&d=identicon&r=PG","display_name":"DaMainBoss","link":"https://stackoverflow.com/users/751077/damainboss"},"score":3,"creation_date":1311704297},{"owner":{"reputation":84005,"user_id":86463,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/7f3df7269d897d0e9798b29cbe768ebc?s=128&d=identicon&r=PG","display_name":"harto","link":"https://stackoverflow.com/users/86463/harto"},"score":2,"creation_date":1311739707},{"owner":{"reputation":49377,"user_id":32453,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/bec38d63650c8912b6ba9b557fb953b9?s=128&d=identicon&r=PG","display_name":"rogerdpack","link":"https://stackoverflow.com/users/32453/rogerdpack"},"score":21,"creation_date":1317856472},{"owner":{"reputation":19829,"user_id":416369,"user_type":"registered","accept_rate":29,"profile_image":"https://www.gravatar.com/avatar/a62fe70596b17d431234e25a95965875?s=128&d=identicon&r=PG","display_name":"sactiw","link":"https://stackoverflow.com/users/416369/sactiw"},"score":4,"creation_date":1390552030},{"owner":{"reputation":13401,"user_id":1763602,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/uZ8dA.gif?s=128&g=1","display_name":"Marco Sulla","link":"https://stackoverflow.com/users/1763602/marco-sulla"},"score":0,"creation_date":1492505677},{"owner":{"reputation":5914,"user_id":1127972,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/WkDOK.jpg?s=128&g=1","display_name":"doug65536","link":"https://stackoverflow.com/users/1127972/doug65536"},"score":0,"creation_date":1502057133},{"owner":{"reputation":1040,"user_id":3878948,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/a128928fb7879cd4d568769a4a49428e?s=128&d=identicon&r=PG&f=1","display_name":"Rishabh Agarwal","link":"https://stackoverflow.com/users/3878948/rishabh-agarwal"},"score":0,"creation_date":1512542670},{"owner":{"reputation":3257,"user_id":1324802,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/41K0O.jpg?s=128&g=1","display_name":"Androidcoder","link":"https://stackoverflow.com/users/1324802/androidcoder"},"score":0,"creation_date":1532535855},{"owner":{"reputation":3750,"user_id":1695458,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/RQwhT.jpg?s=128&g=1","display_name":"EM-Creations","link":"https://stackoverflow.com/users/1695458/em-creations"},"score":0,"creation_date":1609767951},{"owner":{"reputation":313,"user_id":4012708,"user_type":"registered","profile_image":"https://i.stack.imgur.com/K3NW9.jpg?s=128&g=1","display_name":"Heath Mitchell","link":"https://stackoverflow.com/users/4012708/heath-mitchell"},"score":0,"creation_date":1615033661}],"owner":{"reputation":84005,"user_id":86463,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/7f3df7269d897d0e9798b29cbe768ebc?s=128&d=identicon&r=PG","display_name":"harto","link":"https://stackoverflow.com/users/86463/harto"},"comment_count":10,"score":4979,"creation_date":1246404507,"body_markdown":"If you&#39;re only interested in the keys, you can iterate through the [`keySet()`][1] of the map:\r\n\r\n    Map&lt;String, Object&gt; map = ...;\r\n\r\n    for (String key : map.keySet()) {\r\n        // ...\r\n    }\r\n\r\nIf you only need the values, use [`values()`][2]:\r\n\r\n    for (Object value : map.values()) {\r\n        // ...\r\n    }\r\n\r\nFinally, if you want both the key and value, use [`entrySet()`][3]:\r\n\r\n    for (Map.Entry&lt;String, Object&gt; entry : map.entrySet()) {\r\n        String key = entry.getKey();\r\n        Object value = entry.getValue();\r\n        // ...\r\n    }\r\n\r\nOne caveat: if you want to remove items mid-iteration, you&#39;ll need to do so via an Iterator (see [karim79&#39;s answer][4]). However, changing item values is OK (see [`Map.Entry`][5]).\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#keySet%28%29\r\n  [2]: https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#values%28%29\r\n  [3]: https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#entrySet%28%29\r\n  [4]: https://stackoverflow.com/questions/1066589/java-iterate-through-hashmap/1066603#1066603\r\n  [5]: https://docs.oracle.com/javase/6/docs/api/java/util/Map.Entry.html","title":"Iterate through a HashMap"},{"comments":[{"owner":{"reputation":19829,"user_id":416369,"user_type":"registered","accept_rate":29,"profile_image":"https://www.gravatar.com/avatar/a62fe70596b17d431234e25a95965875?s=128&d=identicon&r=PG","display_name":"sactiw","link":"https://stackoverflow.com/users/416369/sactiw"},"score":1,"creation_date":1390551918}],"owner":{"reputation":4500,"user_id":17967,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/FvEyq.jpg?s=128&g=1","display_name":"Gary Kephart","link":"https://stackoverflow.com/users/17967/gary-kephart"},"comment_count":1,"score":51,"creation_date":1246404550,"body_markdown":"Depends. If you know you&#39;re going to need both the key and the value of every entry, then go through the `entrySet`. If you just need the values, then there&#39;s the `values()` method. And if you just need the keys, then use `keyset()`.\r\n\r\nA bad practice would be to iterate through all of the keys, and then within the loop, always do `map.get(key)` to get the value. If you&#39;re doing that, then the first option I wrote is for you.\r\n","title":"Iterate through a HashMap"},{"owner":{"reputation":3736,"user_id":130516,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/510dad0194a9bed55971d9134efe3c1c?s=128&d=identicon&r=PG&f=1","display_name":"codethulhu","link":"https://stackoverflow.com/users/130516/codethulhu"},"comment_count":0,"score":104,"creation_date":1246405401,"body_markdown":"You can iterate through the entries in a [`Map`][1] in several ways. Get each key and value like this:\r\n\r\n    Map&lt;?,?&gt; map = new HashMap&lt;Object, Object&gt;();\r\n    for(Entry&lt;?, ?&gt; e: map.entrySet()){\r\n        System.out.println(&quot;Key &quot; + e.getKey());\r\n        System.out.println(&quot;Value &quot; + e.getValue());\r\n    }\r\n\r\nOr you can get the list of keys with\r\n\r\n    Collection&lt;?&gt; keys = map.keySet();\r\n    for(Object key: keys){\r\n        System.out.println(&quot;Key &quot; + key);\r\n        System.out.println(&quot;Value &quot; + map.get(key));\r\n    }\r\n\r\nIf you just want to get all of the values and aren&#39;t concerned with the keys, you can use:\r\n\r\n    Collection&lt;?&gt; values = map.values();\r\n\r\n   [1]:http://java.sun.com/javase/6/docs/api/java/util/Map.html\r\n","title":"Iterate through a HashMap"},{"comments":[{"owner":{"reputation":4005,"user_id":542395,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/a87359d53892f4fcfacc082a8877ed5d?s=128&d=identicon&r=PG","display_name":"icfantv","link":"https://stackoverflow.com/users/542395/icfantv"},"score":9,"creation_date":1317854029},{"owner":{"reputation":1041,"user_id":916046,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/ac4f5c34b40b8626dbeb447d6d0b1bc8?s=128&d=identicon&r=PG&f=1","display_name":"CompEng88","link":"https://stackoverflow.com/users/916046/compeng88"},"score":15,"creation_date":1366320614},{"owner":{"reputation":1041,"user_id":916046,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/ac4f5c34b40b8626dbeb447d6d0b1bc8?s=128&d=identicon&r=PG&f=1","display_name":"CompEng88","link":"https://stackoverflow.com/users/916046/compeng88"},"score":2,"creation_date":1460812273},{"owner":{"reputation":5704,"user_id":1783588,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/mU0bj.png?s=128&g=1","display_name":"jasonleonhard","link":"https://stackoverflow.com/users/1783588/jasonleonhard"},"score":0,"creation_date":1501972833}],"owner":{"reputation":931,"user_id":417084,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/d4945cbb1901b353aa90b0b636895a97?s=128&d=identicon&r=PG","display_name":"jkarretero","link":"https://stackoverflow.com/users/417084/jkarretero"},"comment_count":4,"score":72,"creation_date":1281520864,"body_markdown":"Smarter:\r\n\r\n    for (String key : hashMap.keySet()) {\r\n        System.out.println(&quot;Key: &quot; + key + &quot;, Value: &quot; + map.get(key));\r\n    }","title":"Iterate through a HashMap"},{"comments":[{"owner":{"reputation":1882,"user_id":7877391,"user_type":"registered","profile_image":"https://i.stack.imgur.com/1oVvK.png?s=128&g=1","display_name":"c-an","link":"https://stackoverflow.com/users/7877391/c-an"},"score":0,"creation_date":1551228786},{"owner":{"reputation":2745,"user_id":5835423,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/81bc770a5e7f25a722f904a42c4c9543?s=128&d=identicon&r=PG&f=1","display_name":"heman123","link":"https://stackoverflow.com/users/5835423/heman123"},"score":0,"creation_date":1551306597}],"owner":{"reputation":3923,"user_id":838228,"user_type":"registered","accept_rate":10,"profile_image":"https://www.gravatar.com/avatar/65040e3cb750f3035553290dcc8feede?s=128&d=identicon&r=PG","display_name":"gabor","link":"https://stackoverflow.com/users/838228/gabor"},"comment_count":2,"score":174,"creation_date":1311384531,"body_markdown":"    for (Map.Entry&lt;String, String&gt; item : hashMap.entrySet()) {\r\n        String key = item.getKey();\r\n        String value = item.getValue();\r\n    }","title":"Iterate through a HashMap"},{"comments":[{"owner":{"reputation":958,"user_id":1211018,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/1ed0028c9bfc61a4a7214a8fe528e6f5?s=128&d=identicon&r=PG","display_name":"P Marecki","link":"https://stackoverflow.com/users/1211018/p-marecki"},"score":1,"creation_date":1456749247},{"owner":{"reputation":771,"user_id":4696214,"user_type":"registered","accept_rate":42,"profile_image":"https://www.gravatar.com/avatar/bea909dd9b61ea4c4f79192fb97d3f1f?s=128&d=identicon&r=PG&f=1","display_name":"ohbrobig","link":"https://stackoverflow.com/users/4696214/ohbrobig"},"score":2,"creation_date":1528031376},{"owner":{"reputation":3204,"user_id":961954,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/c4c5bbd954fee282f42f909f5323eb37?s=128&d=identicon&r=PG","display_name":"user961954","link":"https://stackoverflow.com/users/961954/user961954"},"score":1,"creation_date":1555145139}],"owner":{"reputation":8555,"user_id":1087918,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8370c8c0859447b1a297308c5d5ee5e1?s=128&d=identicon&r=PG","display_name":"arvind","link":"https://stackoverflow.com/users/1087918/arvind"},"comment_count":3,"score":850,"creation_date":1323353960,"body_markdown":"Extracted from the reference *[How to Iterate Over a Map in Java][1]*:\r\n\r\nThere are several ways of iterating over a `Map` in Java. Let&#39;s go over the most common methods and review their advantages and disadvantages. Since all maps in Java implement the Map interface, the following techniques will work for any map implementation (`HashMap`, `TreeMap`, `LinkedHashMap`, `Hashtable`, etc.)\r\n\r\n**Method #1**: Iterating over entries using a For-Each loop.\r\n\r\nThis is the most common method and is preferable in most cases. It should be used if you need both map keys and values in the loop.\r\n\r\n    Map&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();\r\n    for (Map.Entry&lt;Integer, Integer&gt; entry : map.entrySet()) {\r\n        System.out.println(&quot;Key = &quot; + entry.getKey() + &quot;, Value = &quot; + entry.getValue());\r\n    }\r\n\r\nNote that the For-Each loop was introduced in Java 5, so this method is working only in newer versions of the language. Also a For-Each loop will throw `NullPointerException` if you try to iterate over a map that is null, so before iterating you should always check for null references.\r\n\r\n**Method #2**: Iterating over keys or values using a For-Each loop.\r\n\r\nIf you need only keys or values from the map, you can iterate over keySet or values instead of entrySet.\r\n\r\n    Map&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();\r\n\r\n    // Iterating over keys only\r\n    for (Integer key : map.keySet()) {\r\n        System.out.println(&quot;Key = &quot; + key);\r\n    }\r\n\r\n    // Iterating over values only\r\n    for (Integer value : map.values()) {\r\n        System.out.println(&quot;Value = &quot; + value);\r\n    }\r\n\r\nThis method gives a slight performance advantage over `entrySet` iteration (about 10% faster) and is more clean.\r\n\r\n**Method #3**: Iterating using Iterator.\r\n\r\nUsing Generics:\r\n\r\n    Map&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();\r\n    Iterator&lt;Map.Entry&lt;Integer, Integer&gt;&gt; entries = map.entrySet().iterator();\r\n    while (entries.hasNext()) {\r\n        Map.Entry&lt;Integer, Integer&gt; entry = entries.next();\r\n        System.out.println(&quot;Key = &quot; + entry.getKey() + &quot;, Value = &quot; + entry.getValue());\r\n    }\r\n\r\nWithout Generics:\r\n\r\n    Map map = new HashMap();\r\n    Iterator entries = map.entrySet().iterator();\r\n    while (entries.hasNext()) {\r\n        Map.Entry entry = (Map.Entry) entries.next();\r\n        Integer key = (Integer)entry.getKey();\r\n        Integer value = (Integer)entry.getValue();\r\n        System.out.println(&quot;Key = &quot; + key + &quot;, Value = &quot; + value);\r\n    }\r\n\r\nYou can also use same technique to iterate over `keySet` or values.\r\n\r\nThis method might look redundant, but it has its own advantages. First of all, it is the only way to iterate over a map in older versions of Java. The other important feature is that it is the only method that allows you to remove entries from the map during iteration by calling `iterator.remove()`. If you try to do this during For-Each iteration you will get &quot;unpredictable results&quot; according to [Javadoc][2].\r\n\r\nFrom a performance point of view this method is equal to a For-Each iteration.\r\n\r\n**Method #4**: Iterating over keys and searching for values (inefficient).\r\n\r\n    Map&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();\r\n    for (Integer key : map.keySet()) {\r\n        Integer value = map.get(key);\r\n        System.out.println(&quot;Key = &quot; + key + &quot;, Value = &quot; + value);\r\n    }\r\n\r\nThis might look like a cleaner alternative for method #1, but in practice it is pretty slow and inefficient as getting values by a key might be time-consuming (this method in different Map implementations is 20%-200% slower than method #1). If you have FindBugs installed, it will detect this and warn you about inefficient iteration. This method should be avoided.\r\n\r\n**Conclusion:**\r\n\r\nIf you need only keys or values from the map, use method #2. If you are stuck with older version of Java (less than 5) or planning to remove entries during iteration, you have to use method #3. Otherwise use method #1.\r\n\r\n  [1]: http://www.sergiy.ca/how-to-iterate-over-a-map-in-java\r\n  [2]: https://en.wikipedia.org/wiki/Javadoc\r\n","title":"Iterate through a HashMap"}],"owner":{"reputation":53600,"user_id":84916,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/IaDb2.jpg?s=128&g=1","display_name":"burntsugar","link":"https://stackoverflow.com/users/84916/burntsugar"},"comment_count":2,"is_answered":true,"answer_count":7,"score":3500,"creation_date":1246404254,"question_id":1066589,"body_markdown":"What&#39;s the best way to iterate over the items in a [`HashMap`][1]?\r\n\r\n  [1]: https://docs.oracle.com/javase/10/docs/api/java/util/HashMap.html","link":"https://stackoverflow.com/questions/1066589/iterate-through-a-hashmap","title":"Iterate through a HashMap"},{"tags":["java","memory","memory-leaks"],"answers":[{"comments":[{"owner":{"reputation":273369,"user_id":40342,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/a648ccb47bbbe9497c073315aac4d33e?s=128&d=identicon&r=PG","display_name":"Joachim Sauer","link":"https://stackoverflow.com/users/40342/joachim-sauer"},"score":23,"creation_date":1308932111},{"owner":{"reputation":22605,"user_id":486057,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/a9fd749502d6cb012df9425b028cea32?s=128&d=identicon&r=PG","display_name":"Rogach","link":"https://stackoverflow.com/users/486057/rogach"},"score":0,"creation_date":1308932220},{"owner":{"reputation":12928,"user_id":582675,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/hHXty.jpg?s=128&g=1","display_name":"Fabian Barney","link":"https://stackoverflow.com/users/582675/fabian-barney"},"score":6,"creation_date":1308932892},{"owner":{"reputation":25958,"user_id":257356,"user_type":"registered","accept_rate":59,"profile_image":"https://www.gravatar.com/avatar/ff30e750ecad4c76dd1fa0c448f15b90?s=128&d=identicon&r=PG","display_name":"SyntaxT3rr0r","link":"https://stackoverflow.com/users/257356/syntaxt3rr0r"},"score":4,"creation_date":1311335485}],"owner":{"reputation":22605,"user_id":486057,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/a9fd749502d6cb012df9425b028cea32?s=128&d=identicon&r=PG","display_name":"Rogach","link":"https://stackoverflow.com/users/486057/rogach"},"comment_count":4,"score":36,"creation_date":1308932069,"body_markdown":"Maybe by using external native code through JNI?\r\n\r\nWith pure Java, it is almost impossible.\r\n\r\nBut that is about a &quot;standard&quot; type of memory leak, when you cannot access the memory anymore, but it is still owned by the application. You can instead keep references to unused objects, or open streams without closing them afterwards.\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"score":0,"creation_date":1308932401},{"owner":{"reputation":117977,"user_id":301832,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/965220a70d38e6a29466f44cdb4f804e?s=128&d=identicon&r=PG","display_name":"Donal Fellows","link":"https://stackoverflow.com/users/301832/donal-fellows"},"score":73,"creation_date":1309022627},{"owner":{"reputation":76229,"user_id":330057,"user_type":"registered","accept_rate":77,"profile_image":"https://i.stack.imgur.com/i6yM6.png?s=128&g=1","display_name":"corsiKa","link":"https://stackoverflow.com/users/330057/corsika"},"score":2,"creation_date":1309047223},{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"score":0,"creation_date":1309072492},{"owner":{"reputation":117977,"user_id":301832,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/965220a70d38e6a29466f44cdb4f804e?s=128&d=identicon&r=PG","display_name":"Donal Fellows","link":"https://stackoverflow.com/users/301832/donal-fellows"},"score":1,"creation_date":1309082206},{"owner":{"reputation":76229,"user_id":330057,"user_type":"registered","accept_rate":77,"profile_image":"https://i.stack.imgur.com/i6yM6.png?s=128&g=1","display_name":"corsiKa","link":"https://stackoverflow.com/users/330057/corsika"},"score":13,"creation_date":1309119899},{"owner":{"reputation":187216,"user_id":541686,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/f2d0d2c0f7a83e2f8797a5ae79a324b6?s=128&d=identicon&r=PG","display_name":"user541686","link":"https://stackoverflow.com/users/541686/user541686"},"score":99,"creation_date":1309581030},{"owner":{"reputation":25958,"user_id":257356,"user_type":"registered","accept_rate":59,"profile_image":"https://www.gravatar.com/avatar/ff30e750ecad4c76dd1fa0c448f15b90?s=128&d=identicon&r=PG","display_name":"SyntaxT3rr0r","link":"https://stackoverflow.com/users/257356/syntaxt3rr0r"},"score":0,"creation_date":1311335004},{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"score":13,"creation_date":1311337932},{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"score":0,"creation_date":1311338249},{"owner":{"reputation":25958,"user_id":257356,"user_type":"registered","accept_rate":59,"profile_image":"https://www.gravatar.com/avatar/ff30e750ecad4c76dd1fa0c448f15b90?s=128&d=identicon&r=PG","display_name":"SyntaxT3rr0r","link":"https://stackoverflow.com/users/257356/syntaxt3rr0r"},"score":0,"creation_date":1311339043},{"owner":{"reputation":25958,"user_id":257356,"user_type":"registered","accept_rate":59,"profile_image":"https://www.gravatar.com/avatar/ff30e750ecad4c76dd1fa0c448f15b90?s=128&d=identicon&r=PG","display_name":"SyntaxT3rr0r","link":"https://stackoverflow.com/users/257356/syntaxt3rr0r"},"score":0,"creation_date":1311339275},{"owner":{"reputation":25958,"user_id":257356,"user_type":"registered","accept_rate":59,"profile_image":"https://www.gravatar.com/avatar/ff30e750ecad4c76dd1fa0c448f15b90?s=128&d=identicon&r=PG","display_name":"SyntaxT3rr0r","link":"https://stackoverflow.com/users/257356/syntaxt3rr0r"},"score":13,"creation_date":1311339406},{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"score":0,"creation_date":1311342717},{"owner":{"reputation":3182,"user_id":315988,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/pzLbj.png?s=128&g=1","display_name":"Darien","link":"https://stackoverflow.com/users/315988/darien"},"score":8,"creation_date":1311359010},{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"score":7,"creation_date":1311359259},{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"score":5,"creation_date":1311374029}],"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"comment_count":17,"score":468,"creation_date":1308932189,"body_markdown":"A simple thing to do is to use a HashSet with an incorrect (or non-existent) `hashCode()` or `equals()`, and then keep adding &quot;duplicates&quot;.  Instead of ignoring duplicates as it should, the set will only ever grow and you won&#39;t be able to remove them.\r\n\r\nIf you want these bad keys/elements to hang around you can use a static field like \r\n\r\n    class BadKey {\r\n       // no hashCode or equals();\r\n       public final String key;\r\n       public BadKey(String key) { this.key = key; }\r\n    }\r\n\r\n    Map map = System.getProperties();\r\n    map.put(new BadKey(&quot;key&quot;), &quot;value&quot;); // Memory leak even if your threads die.\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":44150,"user_id":375874,"user_type":"registered","accept_rate":88,"profile_image":"https://i.stack.imgur.com/STZt9.jpg?s=128&g=1","display_name":"Falmarri","link":"https://stackoverflow.com/users/375874/falmarri"},"score":90,"creation_date":1311275453},{"owner":{"reputation":3505,"user_id":3335,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/a5ace0638f020717d2ededf10fdae506?s=128&d=identicon&r=PG","display_name":"Kyle","link":"https://stackoverflow.com/users/3335/kyle"},"score":3,"creation_date":1342552134},{"owner":{"reputation":291457,"user_id":37213,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/eeec80237213c91e5bab56b77ac5b8ca?s=128&d=identicon&r=PG","display_name":"duffymo","link":"https://stackoverflow.com/users/37213/duffymo"},"score":3,"creation_date":1342555632},{"owner":{"reputation":44150,"user_id":375874,"user_type":"registered","accept_rate":88,"profile_image":"https://i.stack.imgur.com/STZt9.jpg?s=128&g=1","display_name":"Falmarri","link":"https://stackoverflow.com/users/375874/falmarri"},"score":8,"creation_date":1342649425},{"owner":{"reputation":2242,"user_id":972932,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/z6oin.jpg?s=128&g=1","display_name":"gyorgyabraham","link":"https://stackoverflow.com/users/972932/gyorgyabraham"},"score":3,"creation_date":1385721374},{"owner":{"reputation":1363,"user_id":631627,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/24c72655c90bf98c046f984952982633?s=128&d=identicon&r=PG","display_name":"sceaj","link":"https://stackoverflow.com/users/631627/sceaj"},"score":3,"creation_date":1511909998},{"owner":{"reputation":76775,"user_id":659804,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/7afeb4d1993dc25c6028646840e4868a?s=128&d=identicon&r=PG","display_name":"Ernest Friedman-Hill","link":"https://stackoverflow.com/users/659804/ernest-friedman-hill"},"score":5,"creation_date":1546524570}],"owner":{"reputation":291457,"user_id":37213,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/eeec80237213c91e5bab56b77ac5b8ca?s=128&d=identicon&r=PG","display_name":"duffymo","link":"https://stackoverflow.com/users/37213/duffymo"},"comment_count":7,"score":18,"creation_date":1308932263,"body_markdown":"Create a static Map and keep adding hard references to it.  Those will never be garbage collected.\r\n\r\n    public class Leaker {\r\n        private static final Map&lt;String, Object&gt; CACHE = new HashMap&lt;String, Object&gt;();\r\n\r\n        // Keep adding until failure.\r\n        public static void addToCache(String key, Object value) { Leaker.CACHE.put(key, value); }\r\n    }\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":187216,"user_id":541686,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/f2d0d2c0f7a83e2f8797a5ae79a324b6?s=128&d=identicon&r=PG","display_name":"user541686","link":"https://stackoverflow.com/users/541686/user541686"},"score":15,"creation_date":1309581103},{"owner":{"reputation":366115,"user_id":1288,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/fc763c6ff6c160ddad05741e87e517b6?s=128&d=identicon&r=PG","display_name":"Bill the Lizard","link":"https://stackoverflow.com/users/1288/bill-the-lizard"},"score":30,"creation_date":1310265030},{"owner":{"reputation":187216,"user_id":541686,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/f2d0d2c0f7a83e2f8797a5ae79a324b6?s=128&d=identicon&r=PG","display_name":"user541686","link":"https://stackoverflow.com/users/541686/user541686"},"score":2,"creation_date":1310267680},{"owner":{"reputation":366115,"user_id":1288,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/fc763c6ff6c160ddad05741e87e517b6?s=128&d=identicon&r=PG","display_name":"Bill the Lizard","link":"https://stackoverflow.com/users/1288/bill-the-lizard"},"score":9,"creation_date":1310306999},{"owner":{"reputation":64027,"user_id":8047,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/771d6811baa1b117dd8a5ff0708fc66b?s=128&d=identicon&r=PG","display_name":"Dan Rosenstark","link":"https://stackoverflow.com/users/8047/dan-rosenstark"},"score":1,"creation_date":1310343363},{"owner":{"reputation":2656,"user_id":382780,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/7e2b7c885cfa6c044bd14500052d2060?s=128&d=identicon&r=PG","display_name":"31eee384","link":"https://stackoverflow.com/users/382780/31eee384"},"score":0,"creation_date":1311272520},{"owner":{"reputation":366115,"user_id":1288,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/fc763c6ff6c160ddad05741e87e517b6?s=128&d=identicon&r=PG","display_name":"Bill the Lizard","link":"https://stackoverflow.com/users/1288/bill-the-lizard"},"score":7,"creation_date":1311273008},{"owner":{"reputation":2656,"user_id":382780,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/7e2b7c885cfa6c044bd14500052d2060?s=128&d=identicon&r=PG","display_name":"31eee384","link":"https://stackoverflow.com/users/382780/31eee384"},"score":0,"creation_date":1311274242},{"owner":{"reputation":366115,"user_id":1288,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/fc763c6ff6c160ddad05741e87e517b6?s=128&d=identicon&r=PG","display_name":"Bill the Lizard","link":"https://stackoverflow.com/users/1288/bill-the-lizard"},"score":8,"creation_date":1311275626},{"owner":{"reputation":2656,"user_id":382780,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/7e2b7c885cfa6c044bd14500052d2060?s=128&d=identicon&r=PG","display_name":"31eee384","link":"https://stackoverflow.com/users/382780/31eee384"},"score":0,"creation_date":1311281185},{"owner":{"reputation":2656,"user_id":382780,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/7e2b7c885cfa6c044bd14500052d2060?s=128&d=identicon&r=PG","display_name":"31eee384","link":"https://stackoverflow.com/users/382780/31eee384"},"score":0,"creation_date":1311281641},{"owner":{"reputation":411,"user_id":60624,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/41f66d0289b4f1317755527ba432fd38?s=128&d=identicon&r=PG","display_name":"ehabkost","link":"https://stackoverflow.com/users/60624/ehabkost"},"score":3,"creation_date":1311314959},{"owner":{"reputation":2656,"user_id":382780,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/7e2b7c885cfa6c044bd14500052d2060?s=128&d=identicon&r=PG","display_name":"31eee384","link":"https://stackoverflow.com/users/382780/31eee384"},"score":0,"creation_date":1311346844},{"owner":{"reputation":2656,"user_id":382780,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/7e2b7c885cfa6c044bd14500052d2060?s=128&d=identicon&r=PG","display_name":"31eee384","link":"https://stackoverflow.com/users/382780/31eee384"},"score":0,"creation_date":1311347067},{"owner":{"reputation":411,"user_id":60624,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/41f66d0289b4f1317755527ba432fd38?s=128&d=identicon&r=PG","display_name":"ehabkost","link":"https://stackoverflow.com/users/60624/ehabkost"},"score":0,"creation_date":1311349441},{"owner":{"reputation":411,"user_id":60624,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/41f66d0289b4f1317755527ba432fd38?s=128&d=identicon&r=PG","display_name":"ehabkost","link":"https://stackoverflow.com/users/60624/ehabkost"},"score":0,"creation_date":1311349536},{"owner":{"reputation":411,"user_id":60624,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/41f66d0289b4f1317755527ba432fd38?s=128&d=identicon&r=PG","display_name":"ehabkost","link":"https://stackoverflow.com/users/60624/ehabkost"},"score":0,"creation_date":1311349547},{"owner":{"reputation":366115,"user_id":1288,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/fc763c6ff6c160ddad05741e87e517b6?s=128&d=identicon&r=PG","display_name":"Bill the Lizard","link":"https://stackoverflow.com/users/1288/bill-the-lizard"},"score":0,"creation_date":1311350346},{"owner":{"reputation":2656,"user_id":382780,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/7e2b7c885cfa6c044bd14500052d2060?s=128&d=identicon&r=PG","display_name":"31eee384","link":"https://stackoverflow.com/users/382780/31eee384"},"score":0,"creation_date":1311351762},{"owner":{"reputation":6072,"user_id":200224,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/krcuc.jpg?s=128&g=1","display_name":"Andy","link":"https://stackoverflow.com/users/200224/andy"},"score":1,"creation_date":1612425969}],"owner":{"reputation":366115,"user_id":1288,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/fc763c6ff6c160ddad05741e87e517b6?s=128&d=identicon&r=PG","display_name":"Bill the Lizard","link":"https://stackoverflow.com/users/1288/bill-the-lizard"},"comment_count":20,"score":69,"creation_date":1308932287,"body_markdown":"Any time you keep references around to objects that you no longer need you have a memory leak.  See [Handling memory leaks in Java programs][1] for examples of how memory leaks manifest themselves in Java and what you can do about it.\r\n\r\n\r\n  [1]: http://www.ibm.com/developerworks/library/j-leaks/","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":2743,"user_id":116757,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fcfc36d64bd909df102dc91c961554af?s=128&d=identicon&r=PG","display_name":"Hardwareguy","link":"https://stackoverflow.com/users/116757/hardwareguy"},"score":100,"creation_date":1311265416},{"owner":{"reputation":3938,"user_id":160208,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/642d74a5a6b19dfbf506e5439f6b59b1?s=128&d=identicon&r=PG","display_name":"chotchki","link":"https://stackoverflow.com/users/160208/chotchki"},"score":0,"creation_date":1377014798},{"owner":{"reputation":1712,"user_id":369446,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/zO6tb.jpg?s=128&g=1","display_name":"Michael Shopsin","link":"https://stackoverflow.com/users/369446/michael-shopsin"},"score":0,"creation_date":1398178018},{"owner":{"reputation":6055,"user_id":2235567,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/vtckD.jpg?s=128&g=1","display_name":"Aseem Bansal","link":"https://stackoverflow.com/users/2235567/aseem-bansal"},"score":0,"creation_date":1411410063},{"owner":{"reputation":1152,"user_id":561139,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/a61b08dbab444f68ffbd975bb84695cc?s=128&d=identicon&r=PG","display_name":"Bj&#248;rn Stenfeldt","link":"https://stackoverflow.com/users/561139/bj%c3%b8rn-stenfeldt"},"score":0,"creation_date":1504166853},{"owner":{"reputation":341,"user_id":8133719,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/91c236d00a457c3f11391b586b8a10e6?s=128&d=identicon&r=PG&f=1","display_name":"zero_yu","link":"https://stackoverflow.com/users/8133719/zero-yu"},"score":0,"creation_date":1519512922},{"owner":{"reputation":489,"user_id":2914366,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/afcbaf30790c76e45c2e8fc85b0d6f86?s=128&d=identicon&r=PG&f=1","display_name":"lafual","link":"https://stackoverflow.com/users/2914366/lafual"},"score":0,"creation_date":1604400081}],"owner":{"reputation":72370,"user_id":3916,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4b94715e1349011b0529e81da45b06e7?s=128&d=identicon&r=PG","display_name":"Vineet Reynolds","link":"https://stackoverflow.com/users/3916/vineet-reynolds"},"comment_count":7,"score":133,"creation_date":1308932518,"body_markdown":"The following is a pretty pointless example, if you do not understand [JDBC][1]. Or at least how JDBC expects a developer to close `Connection`, `Statement` and `ResultSet` instances before discarding them or losing references to them, instead of relying on the implementation of `finalize`.\r\n\r\n    void doWork()\r\n    {\r\n       try\r\n       {\r\n           Connection conn = ConnectionFactory.getConnection();\r\n           PreparedStatement stmt = conn.preparedStatement(&quot;some query&quot;); // executes a valid query\r\n           ResultSet rs = stmt.executeQuery();\r\n           while(rs.hasNext())\r\n           {\r\n              ... process the result set\r\n           }\r\n       }\r\n       catch(SQLException sqlEx)\r\n       {\r\n           log(sqlEx);\r\n       }\r\n    }\r\n\r\nThe problem with the above is that the `Connection` object is not closed, and hence the physical connection will remain open, until the garbage collector comes around and sees that it is unreachable. GC will invoke the `finalize` method, but there are JDBC drivers that do not implement the `finalize`, at least not in the same way that `Connection.close` is implemented. The resulting behavior is that while memory will be reclaimed due to unreachable objects being collected, resources (including memory) associated with the `Connection` object might simply not be reclaimed.\r\n\r\nIn such an event where the `Connection`&#39;s `finalize` method does not clean up everything, one might actually find that the physical connection to the database server will last several garbage collection cycles, until the database server eventually figures out that the connection is not alive (if it does), and should be closed.\r\n\r\nEven if the JDBC driver were to implement `finalize`, it is possible for exceptions to be thrown during finalization. The resulting behavior is that any memory associated with the now &quot;dormant&quot; object will not be reclaimed, as `finalize` is guaranteed to be invoked only once.\r\n\r\nThe above scenario of encountering exceptions during object finalization is related to another other scenario that could possibly lead to a memory leak - object resurrection. Object resurrection is often done intentionally by creating a strong reference to the object from being finalized, from another object. When object resurrection is misused it will lead to a memory leak in combination with other sources of memory leaks.\r\n\r\nThere are plenty more examples that you can conjure up - like\r\n\r\n* Managing a `List` instance where you are only adding to the list and not deleting from it (although you should be getting rid of elements you no longer need), or\r\n* Opening `Socket`s or `File`s, but not closing them when they are no longer needed (similar to the above example involving the `Connection` class).\r\n* Not unloading Singletons when bringing down a Java EE application. Apparently, the Classloader that loaded the singleton class will retain a reference to the class, and hence the singleton instance will never be collected. When a new instance of the application is deployed, a new class loader is usually created, and the former class loader will continue to exist due to the singleton.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Java_Database_Connectivity\r\n\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":6504,"user_id":573057,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/f857595894d2c4009a790ebf473a4334?s=128&d=identicon&r=PG","display_name":"earcam","link":"https://stackoverflow.com/users/573057/earcam"},"score":197,"creation_date":1309193716},{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":7,"creation_date":1309463347},{"owner":{"reputation":5159,"user_id":462408,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/74fc366410d9d38a50b7bd28fcc0ed3b?s=128&d=identicon&r=PG","display_name":"Adrian M","link":"https://stackoverflow.com/users/462408/adrian-m"},"score":60,"creation_date":1310116082},{"owner":{"reputation":53926,"user_id":128397,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/22b05e50077230ba919b240af4bc13cd?s=128&d=identicon&r=PG","display_name":"Daniel Pryden","link":"https://stackoverflow.com/users/128397/daniel-pryden"},"score":4,"creation_date":1310403709},{"owner":{"reputation":1667,"user_id":226449,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5f16eec5bd7dc9f27f88997731d15c36?s=128&d=identicon&r=PG","display_name":"Matthijs Bierman","link":"https://stackoverflow.com/users/226449/matthijs-bierman"},"score":6,"creation_date":1330684383},{"owner":{"reputation":4923,"user_id":301650,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/f27c12daaa5e5bbd744fab013c9a3edc?s=128&d=identicon&r=PG","display_name":"Nikem","link":"https://stackoverflow.com/users/301650/nikem"},"score":1,"creation_date":1347343615},{"owner":{"reputation":1829,"user_id":404145,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/d6a64c6cbea7b83cfc703e18c418eb97?s=128&d=identicon&r=PG","display_name":"DiveInto","link":"https://stackoverflow.com/users/404145/diveinto"},"score":0,"creation_date":1352697795},{"owner":{"reputation":1829,"user_id":404145,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/d6a64c6cbea7b83cfc703e18c418eb97?s=128&d=identicon&r=PG","display_name":"DiveInto","link":"https://stackoverflow.com/users/404145/diveinto"},"score":0,"creation_date":1352949882},{"owner":{"reputation":928,"user_id":1839624,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/HTeQF.jpg?s=128&g=1","display_name":"Sid","link":"https://stackoverflow.com/users/1839624/sid"},"score":1,"creation_date":1376326696},{"owner":{"reputation":53926,"user_id":128397,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/22b05e50077230ba919b240af4bc13cd?s=128&d=identicon&r=PG","display_name":"Daniel Pryden","link":"https://stackoverflow.com/users/128397/daniel-pryden"},"score":1,"creation_date":1376439037},{"owner":{"reputation":5356,"user_id":3470841,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/39baa24f1e7778a959522c337ca474b3?s=128&d=identicon&r=PG&f=1","display_name":"Jack","link":"https://stackoverflow.com/users/3470841/jack"},"score":0,"creation_date":1400036040},{"owner":{"reputation":53926,"user_id":128397,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/22b05e50077230ba919b240af4bc13cd?s=128&d=identicon&r=PG","display_name":"Daniel Pryden","link":"https://stackoverflow.com/users/128397/daniel-pryden"},"score":0,"creation_date":1400619205},{"owner":{"reputation":53926,"user_id":128397,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/22b05e50077230ba919b240af4bc13cd?s=128&d=identicon&r=PG","display_name":"Daniel Pryden","link":"https://stackoverflow.com/users/128397/daniel-pryden"},"score":0,"creation_date":1400619544},{"owner":{"reputation":1471,"user_id":2184517,"user_type":"registered","accept_rate":64,"profile_image":"https://www.gravatar.com/avatar/7ec3063dc4e0ca98ab2a4c8bebde43cb?s=128&d=identicon&r=PG","display_name":"AfterWorkGuinness","link":"https://stackoverflow.com/users/2184517/afterworkguinness"},"score":0,"creation_date":1408721516},{"owner":{"reputation":53926,"user_id":128397,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/22b05e50077230ba919b240af4bc13cd?s=128&d=identicon&r=PG","display_name":"Daniel Pryden","link":"https://stackoverflow.com/users/128397/daniel-pryden"},"score":0,"creation_date":1428792192},{"owner":{"reputation":24196,"user_id":5108418,"user_type":"registered","accept_rate":72,"profile_image":"https://i.stack.imgur.com/AN6Pg.png?s=128&g=1","display_name":"Tamas Hegedus","link":"https://stackoverflow.com/users/5108418/tamas-hegedus"},"score":6,"creation_date":1459711027},{"owner":{"reputation":53926,"user_id":128397,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/22b05e50077230ba919b240af4bc13cd?s=128&d=identicon&r=PG","display_name":"Daniel Pryden","link":"https://stackoverflow.com/users/128397/daniel-pryden"},"score":0,"creation_date":1459719689}],"owner":{"reputation":53926,"user_id":128397,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/22b05e50077230ba919b240af4bc13cd?s=128&d=identicon&r=PG","display_name":"Daniel Pryden","link":"https://stackoverflow.com/users/128397/daniel-pryden"},"comment_count":17,"score":2405,"creation_date":1308938710,"body_markdown":"Here&#39;s a good way to create a true memory leak (objects inaccessible by running code but still stored in memory) in pure Java:\r\n\r\n1. The application creates a long-running thread (or use a thread pool to leak even faster).\r\n2. The thread loads a class via an (optionally custom) `ClassLoader`.\r\n3. The class allocates a large chunk of memory (e.g. `new byte[1000000]`), stores a strong reference to it in a static field, and then stores a reference to itself in a `ThreadLocal`.  Allocating the extra memory is optional (leaking the class instance is enough), but it will make the leak work that much faster.\r\n4. The application clears all references to the custom class or the `ClassLoader` it was loaded from.\r\n5. Repeat.\r\n\r\nDue to the way `ThreadLocal` is implemented in Oracle&#39;s JDK, this creates a memory leak:\r\n\r\n - Each `Thread` has a private field `threadLocals`, which actually stores the thread-local values.\r\n - Each _key_ in this map is a weak reference to a `ThreadLocal` object, so after that `ThreadLocal` object is garbage-collected, its entry is removed from the map.\r\n - But each _value_ is a strong reference, so when a value (directly or indirectly) points to the `ThreadLocal` object that is its _key_, that object will neither be garbage-collected nor removed from the map as long as the thread lives.\r\n\r\nIn this example, the chain of strong references looks like this:\r\n\r\n`Thread` object → `threadLocals` map → instance of example class → example class → static `ThreadLocal` field → `ThreadLocal` object.\r\n\r\n(The `ClassLoader` doesn&#39;t really play a role in creating the leak, it just makes the leak worse because of this additional reference chain: example class → `ClassLoader` → all the classes it has loaded. It was even worse in many JVM implementations, especially prior to Java 7, because classes and `ClassLoader`s were allocated straight into permgen and were never garbage-collected at all.)\r\n\r\nA variation on this pattern is why application containers (like Tomcat) can leak memory like a sieve if you frequently redeploy applications which happen to use `ThreadLocal`s that in some way point back to themselves. This can happen for a number of subtle reasons and is often hard to debug and/or fix.\r\n\r\n**Update**: Since lots of people keep asking for it, [here&#39;s some example code that shows this behavior in action](https://gist.github.com/dpryden/b2bb29ee2d146901b4ae).\r\n\r\n&lt;!-- Note to future editors: do NOT add the code from the above Gist into this answer. See this discussion on Meta: https://meta.stackoverflow.com/questions/289814 --&gt;\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":24051,"user_id":94363,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/6017d97591b78ae31e34b6483ee77a33?s=128&d=identicon&r=PG","display_name":"rds","link":"https://stackoverflow.com/users/94363/rds"},"score":5,"creation_date":1311352000},{"owner":{"reputation":61221,"user_id":183406,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/ca03242df77ec2d8f70f2cea0d6209be?s=128&d=identicon&r=PG","display_name":"meriton","link":"https://stackoverflow.com/users/183406/meriton"},"score":30,"creation_date":1311427592},{"owner":{"reputation":20116,"user_id":1173112,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/rtcjY.jpg?s=128&g=1","display_name":"Koray Tugay","link":"https://stackoverflow.com/users/1173112/koray-tugay"},"score":1,"creation_date":1402338982},{"owner":{"reputation":658,"user_id":4101264,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/b0e0945c2ed83d973f412e6e4b9d0141?s=128&d=identicon&r=PG&f=1","display_name":"rents","link":"https://stackoverflow.com/users/4101264/rents"},"score":6,"creation_date":1435371734},{"owner":{"reputation":336,"user_id":9465588,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c47aff6d21c7afd79ed02d054dc94d2b?s=128&d=identicon&r=PG&f=1","display_name":"DGoiko","link":"https://stackoverflow.com/users/9465588/dgoiko"},"score":0,"creation_date":1590848656},{"owner":{"reputation":6072,"user_id":200224,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/krcuc.jpg?s=128&g=1","display_name":"Andy","link":"https://stackoverflow.com/users/200224/andy"},"score":0,"creation_date":1612425736}],"owner":{"reputation":61221,"user_id":183406,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/ca03242df77ec2d8f70f2cea0d6209be?s=128&d=identicon&r=PG","display_name":"meriton","link":"https://stackoverflow.com/users/183406/meriton"},"comment_count":6,"score":121,"creation_date":1308950917,"body_markdown":"Probably one of the simplest examples of a potential memory leak, and how to avoid it, is the implementation of ArrayList.remove(int):\r\n\r\n\r\n\tpublic E remove(int index) {\r\n\t\tRangeCheck(index);\r\n\r\n\t\tmodCount++;\r\n\t\tE oldValue = (E) elementData[index];\r\n\r\n\t\tint numMoved = size - index - 1;\r\n\t\tif (numMoved &gt; 0)\r\n\t\t\tSystem.arraycopy(elementData, index + 1, elementData, index,\r\n\t\t\t\t\tnumMoved);\r\n\t\telementData[--size] = null; // (!) Let gc do its work\r\n\r\n\t\treturn oldValue;\r\n\t}\r\n\r\nIf you were implementing it yourself, would you have thought to clear the array element that is no longer used (`elementData[--size] = null`)? That reference might keep a huge object alive ...\r\n\r\n\r\n\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":24051,"user_id":94363,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/6017d97591b78ae31e34b6483ee77a33?s=128&d=identicon&r=PG","display_name":"rds","link":"https://stackoverflow.com/users/94363/rds"},"score":1,"creation_date":1311352452}],"owner":{"reputation":3098,"user_id":210445,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/a521b7785f1649ac1c56668563039d52?s=128&d=identicon&r=PG","display_name":"pillingworth","link":"https://stackoverflow.com/users/210445/pillingworth"},"comment_count":1,"score":37,"creation_date":1309268843,"body_markdown":"A common example of this in GUI code is when creating a widget/component and adding a listener to some static/application scoped object and then not removing the listener when the widget is destroyed. Not only do you get a memory leak, but also a performance hit as when whatever you are listening to fires events, all your old listeners are called too.\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":67931,"user_id":600500,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/5925786f174975db18cbc83dd85e5c1d?s=128&d=identicon&r=PG","display_name":"Paŭlo Ebermann","link":"https://stackoverflow.com/users/600500/pa%c5%adlo-ebermann"},"score":4,"creation_date":1309652314},{"owner":{"reputation":2568,"user_id":202504,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9e311ecc62a10f9117059aa9bf27ec9e?s=128&d=identicon&r=PG","display_name":"jmiserez","link":"https://stackoverflow.com/users/202504/jmiserez"},"score":0,"creation_date":1492544828},{"owner":{"reputation":536,"user_id":3913051,"user_type":"registered","accept_rate":29,"profile_image":"https://i.stack.imgur.com/6dNOT.jpg?s=128&g=1","display_name":"anubhs","link":"https://stackoverflow.com/users/3913051/anubhs"},"score":0,"creation_date":1591117423}],"owner":{"reputation":682,"user_id":339243,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/628bb0360b010b44601229b0a5e3829f?s=128&d=identicon&r=PG","display_name":"Ron","link":"https://stackoverflow.com/users/339243/ron"},"comment_count":3,"score":32,"creation_date":1309423159,"body_markdown":"I have had a nice &quot;memory leak&quot; in relation to PermGen and XML parsing once.\r\nThe XML parser we used (I can&#39;t remember which one it was) did a String.intern() on tag names, to make comparison faster.\r\nOne of our customers had the great idea to store data values not in XML attributes or text, but as tagnames, so we had a document like:\r\n\r\n    &lt;data&gt;\r\n       &lt;1&gt;bla&lt;/1&gt;\r\n       &lt;2&gt;foo&lt;/&gt;\r\n       ...\r\n    &lt;/data&gt;\r\n\r\nIn fact, they did not use numbers but longer textual IDs (around 20 characters), which were unique and came in at a rate of 10-15 million a day. That makes 200&amp;nbsp;MB of rubbish a day, which is never needed again, and never GCed (since it is in PermGen). We had permgen set to 512&amp;nbsp;MB, so it took around two days for the out-of-memory exception (OOME) to arrive...\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":64329,"user_id":277304,"user_type":"registered","accept_rate":66,"profile_image":"https://www.gravatar.com/avatar/4c90624b2aa9623d5ba30db0e34b2000?s=128&d=identicon&r=PG","display_name":"leonbloy","link":"https://stackoverflow.com/users/277304/leonbloy"},"score":25,"creation_date":1310176480},{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":0,"creation_date":1310194328},{"owner":{"reputation":58646,"user_id":8946,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/8c6e2d5c384c074a893830b34f1c0a9a?s=128&d=identicon&r=PG","display_name":"Lawrence Dol","link":"https://stackoverflow.com/users/8946/lawrence-dol"},"score":0,"creation_date":1510109223},{"owner":{"reputation":58646,"user_id":8946,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/8c6e2d5c384c074a893830b34f1c0a9a?s=128&d=identicon&r=PG","display_name":"Lawrence Dol","link":"https://stackoverflow.com/users/8946/lawrence-dol"},"score":2,"creation_date":1510261774},{"owner":{"reputation":44507,"user_id":106104,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG","display_name":"user253751","link":"https://stackoverflow.com/users/106104/user253751"},"score":1,"creation_date":1599750776},{"owner":{"reputation":58646,"user_id":8946,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/8c6e2d5c384c074a893830b34f1c0a9a?s=128&d=identicon&r=PG","display_name":"Lawrence Dol","link":"https://stackoverflow.com/users/8946/lawrence-dol"},"score":0,"creation_date":1599840538}],"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"comment_count":6,"score":280,"creation_date":1309463113,"body_markdown":"Below there will be a non-obvious case where Java leaks, besides the standard case of forgotten listeners, static references, bogus/modifiable keys in hashmaps, or just threads stuck without any chance to end their life-cycle.\r\n\r\n- `File.deleteOnExit()` - always leaks the string, &lt;del&gt;if the string is a substring, the leak is even worse (the underlying char[] is also leaked)&lt;/del&gt; - *in Java&amp;nbsp;7 substring also copies the `char[]`, so the later doesn&#39;t apply*; @Daniel, no needs for votes, though.\r\n\r\nI&#39;ll concentrate on threads to show the danger of unmanaged threads mostly, don&#39;t wish to even touch swing.\r\n\r\n- `Runtime.addShutdownHook` and not remove... and then even with removeShutdownHook due to a bug in ThreadGroup class regarding unstarted threads it may not get collected, effectively leak the ThreadGroup. JGroup has the leak in GossipRouter.\r\n\r\n- Creating, but not starting, a `Thread` goes into the same category as above.\r\n\r\n- Creating a thread inherits the `ContextClassLoader` and `AccessControlContext`, plus the `ThreadGroup` and any `InheritedThreadLocal`, all those references are potential leaks, along with the entire classes loaded by the classloader and all static references, and ja-ja. The effect is especially visible with the entire j.u.c.Executor framework that features a super simple `ThreadFactory` interface, yet most developers have no clue of the lurking danger. Also a lot of libraries do start threads upon request (way too many industry popular libraries).\r\n\r\n- `ThreadLocal` caches; those are evil in many cases. I am sure everyone has seen quite a bit of simple caches based on ThreadLocal, well the bad news: if the thread keeps going more than expected the life the context ClassLoader, it is a pure nice little leak. Do not use ThreadLocal caches unless really needed.\r\n\r\n- Calling `ThreadGroup.destroy()` when the ThreadGroup has no threads itself, but it still keeps child ThreadGroups. A bad leak that will prevent the ThreadGroup to remove from its parent, but all the children become un-enumerateable.\r\n\r\n- Using WeakHashMap and the value (in)directly references the key. This is a hard one to find without a heap dump. That applies to all extended `Weak/SoftReference` that might keep a hard reference back to the guarded object.\r\n\r\n- Using `java.net.URL` with the HTTP(S) protocol and loading the resource from(!). This one is special, the `KeepAliveCache` creates a new thread in the system ThreadGroup which leaks the current thread&#39;s context classloader. The thread is created upon the first request when no alive thread exists, so either you may get lucky or just leak. *The leak is already fixed in Java&amp;nbsp;7 and the code that creates thread properly removes the context classloader.* There are few more cases (&lt;del&gt;like ImageFetcher&lt;/del&gt;, *also fixed*) of creating similar threads.\r\n\r\n- Using `InflaterInputStream` passing `new java.util.zip.Inflater()` in the constructor (`PNGImageDecoder` for instance) and not calling `end()` of the inflater. Well, if you pass in the constructor with just `new`, no chance... And yes, calling `close()` on the stream does not close the inflater if it&#39;s manually passed as constructor parameter. This is not a true leak since it&#39;d be released by the finalizer... when it deems it necessary. Till that moment it eats native memory so badly it can cause Linux oom_killer to kill the process with impunity. The main issue is that finalization in Java is very unreliable and G1 made it worse till 7.0.2. Moral of the story: release native resources as soon as you can; the finalizer is just too poor.\r\n\r\n- The same case with `java.util.zip.Deflater`. This one is far worse since Deflater is memory hungry in Java, i.e. always uses 15&amp;nbsp;bits (max) and 8&amp;nbsp;memory levels (9 is max) allocating several hundreds KB of native memory. Fortunately, `Deflater` is not widely used and to my knowledge JDK contains no misuses. Always call `end()` if you manually create a `Deflater` or `Inflater`. The best part of the last two: *you can&#39;t find them via normal profiling tools available.*\r\n\r\n*(I can add some more time wasters I have encountered upon request.)*\r\n\r\nGood luck and stay safe; leaks are evil!\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":411,"user_id":60624,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/41f66d0289b4f1317755527ba432fd38?s=128&d=identicon&r=PG","display_name":"ehabkost","link":"https://stackoverflow.com/users/60624/ehabkost"},"score":31,"creation_date":1311315156},{"owner":{"reputation":25958,"user_id":257356,"user_type":"registered","accept_rate":59,"profile_image":"https://www.gravatar.com/avatar/ff30e750ecad4c76dd1fa0c448f15b90?s=128&d=identicon&r=PG","display_name":"SyntaxT3rr0r","link":"https://stackoverflow.com/users/257356/syntaxt3rr0r"},"score":0,"creation_date":1311335358},{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":0,"creation_date":1368117702},{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":0,"creation_date":1368118042},{"owner":{"reputation":20044,"user_id":220060,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/56533d50fdfceb887852bf50be54678b?s=128&d=identicon&r=PG","display_name":"nalply","link":"https://stackoverflow.com/users/220060/nalply"},"score":0,"creation_date":1492517770},{"owner":{"reputation":126,"user_id":8593760,"user_type":"registered","profile_image":"https://i.stack.imgur.com/wbomf.png?s=128&g=1","display_name":"Jim Newpower","link":"https://stackoverflow.com/users/8593760/jim-newpower"},"score":1,"creation_date":1605112692}],"owner":{"reputation":3818,"user_id":564145,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4319b3222d9ea807b60b0bc163dfea41?s=128&d=identicon&r=PG","display_name":"Nicolas Bousquet","link":"https://stackoverflow.com/users/564145/nicolas-bousquet"},"comment_count":6,"score":214,"creation_date":1309506841,"body_markdown":"Most examples here are &quot;too complex&quot;. They are edge cases. With these examples, the programmer made a mistake (like don&#39;t redefining equals/hashcode), or has been bitten by a corner case of the JVM/JAVA (load of class with static...). I think that&#39;s not the type of example an interviewer want or even the most common case.\r\n\r\nBut there are really simpler cases for memory leaks. The garbage collector only frees what is no longer referenced. We as Java developers don&#39;t care about memory. We allocate it when needed and let it be freed automatically. Fine.\r\n\r\nBut any long-lived application tend to have shared state. It can be anything, statics, singletons... Often non-trivial applications tend to make complex objects graphs. Just forgetting to set a reference to null or more often forgetting to remove one object from a collection is enough to make a memory leak.\r\n\r\nOf course all sort of listeners (like UI listeners), caches, or any long-lived shared state tend to produce memory leak if not properly handled. What shall be understood is that this is not a Java corner case, or a problem with the garbage collector. It is a design problem. We design that we add a listener to a long-lived object, but we don&#39;t remove the listener when no longer needed. We cache objects, but we have no strategy to remove them from the cache.\r\n\r\nWe maybe have a complex graph that store the previous state that is needed by a computation. But the previous state is itself linked to the state before and so on.\r\n\r\nLike we have to close SQL connections or files. We need to set proper references to null and remove elements from the collection. We shall have proper caching strategies (maximum memory size, number of elements, or timers). All objects that allow a listener to be notified must provide both a addListener and removeListener method. And when these notifiers are no longer used, they must clear their listener list.\r\n\r\nA memory leak is indeed truly possible and is perfectly predictable. No need for special language features or corner cases. Memory leaks are either an indicator that something is maybe missing or even of design problems.\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":5234,"user_id":18796,"user_type":"registered","profile_image":"https://i.stack.imgur.com/tR2iM.jpg?s=128&g=1","display_name":"Ian McLaird","link":"https://stackoverflow.com/users/18796/ian-mclaird"},"score":189,"creation_date":1310530131},{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":87,"creation_date":1310927905},{"owner":{"reputation":28286,"user_id":176071,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/88b8fe9e9bc03bd33208830fa612dc50?s=128&d=identicon&r=PG","display_name":"mbauman","link":"https://stackoverflow.com/users/176071/mbauman"},"score":37,"creation_date":1311298344},{"owner":{"reputation":16262,"user_id":254477,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/a5f7ff911c368f70c10417b8de5c8c2c?s=128&d=identicon&r=PG","display_name":"Sled","link":"https://stackoverflow.com/users/254477/sled"},"score":0,"creation_date":1311345833},{"owner":{"reputation":16285,"user_id":912319,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/bb15dcf43c8fe4a01b9d16e93690e118?s=128&d=identicon&r=PG","display_name":"Kanagavelu Sugumar","link":"https://stackoverflow.com/users/912319/kanagavelu-sugumar"},"score":45,"creation_date":1347306777},{"owner":{"reputation":3539,"user_id":59724,"user_type":"registered","accept_rate":33,"profile_image":"https://www.gravatar.com/avatar/50954aec029a724824dca5a32a1c00fa?s=128&d=identicon&r=PG","display_name":"Graham","link":"https://stackoverflow.com/users/59724/graham"},"score":2,"creation_date":1360497526},{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"score":0,"creation_date":1362622342},{"owner":{"reputation":1521,"user_id":2536255,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/4932f3a9c83d4d1407b5d8c4c846fa9e?s=128&d=identicon&r=PG","display_name":"Mac","link":"https://stackoverflow.com/users/2536255/mac"},"score":0,"creation_date":1374928299},{"owner":{"reputation":78117,"user_id":319403,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/e92a9af9e53cc8e5af575c4b18b34c21?s=128&d=identicon&r=PG","display_name":"cHao","link":"https://stackoverflow.com/users/319403/chao"},"score":2,"creation_date":1376679289},{"owner":{"reputation":4099,"user_id":1686291,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/73690bab2009bb60aaa8526b1038649f?s=128&d=identicon&r=PG&f=1","display_name":"Not a bug","link":"https://stackoverflow.com/users/1686291/not-a-bug"},"score":1,"creation_date":1392719529},{"owner":{"reputation":487,"user_id":1764994,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/368c76db30124994c444d2ef77bf62b5?s=128&d=identicon&r=PG","display_name":"UrsulRosu","link":"https://stackoverflow.com/users/1764994/ursulrosu"},"score":3,"creation_date":1397218200},{"owner":{"reputation":936,"user_id":1035398,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/bf99c70954ad688fa0930d33211e139b?s=128&d=identicon&r=PG","display_name":"Patrick M","link":"https://stackoverflow.com/users/1035398/patrick-m"},"score":7,"creation_date":1408981058},{"owner":{"reputation":936,"user_id":1035398,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/bf99c70954ad688fa0930d33211e139b?s=128&d=identicon&r=PG","display_name":"Patrick M","link":"https://stackoverflow.com/users/1035398/patrick-m"},"score":0,"creation_date":1408981109},{"owner":{"reputation":78117,"user_id":319403,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/e92a9af9e53cc8e5af575c4b18b34c21?s=128&d=identicon&r=PG","display_name":"cHao","link":"https://stackoverflow.com/users/319403/chao"},"score":1,"creation_date":1409005964},{"owner":{"reputation":936,"user_id":1035398,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/bf99c70954ad688fa0930d33211e139b?s=128&d=identicon&r=PG","display_name":"Patrick M","link":"https://stackoverflow.com/users/1035398/patrick-m"},"score":2,"creation_date":1409010446},{"owner":{"reputation":2653,"user_id":4710417,"user_type":"registered","accept_rate":59,"profile_image":"https://www.gravatar.com/avatar/c53bde1b18195010c7899a03432fdf10?s=128&d=identicon&r=PG&f=1","display_name":"Daniel Newtown","link":"https://stackoverflow.com/users/4710417/daniel-newtown"},"score":0,"creation_date":1435559954},{"owner":{"reputation":16262,"user_id":254477,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/a5f7ff911c368f70c10417b8de5c8c2c?s=128&d=identicon&r=PG","display_name":"Sled","link":"https://stackoverflow.com/users/254477/sled"},"score":1,"creation_date":1456519809},{"owner":{"reputation":6257,"user_id":4451732,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/UQN4l.jpg?s=128&g=1","display_name":"Franklin Yu","link":"https://stackoverflow.com/users/4451732/franklin-yu"},"score":0,"creation_date":1464150325},{"owner":{"reputation":936,"user_id":1035398,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/bf99c70954ad688fa0930d33211e139b?s=128&d=identicon&r=PG","display_name":"Patrick M","link":"https://stackoverflow.com/users/1035398/patrick-m"},"score":0,"creation_date":1464544739},{"owner":{"reputation":345,"user_id":627642,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/61403b0cb70843286b6422d5d7824b33?s=128&d=identicon&r=PG","display_name":"Tejas C","link":"https://stackoverflow.com/users/627642/tejas-c"},"score":0,"creation_date":1488630475},{"owner":{"reputation":816,"user_id":947488,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b99c19bbe166745fc5d29ea09ff2c562?s=128&d=identicon&r=PG","display_name":"Stefan Reich","link":"https://stackoverflow.com/users/947488/stefan-reich"},"score":1,"creation_date":1547142512},{"owner":{"reputation":6072,"user_id":200224,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/krcuc.jpg?s=128&g=1","display_name":"Andy","link":"https://stackoverflow.com/users/200224/andy"},"score":0,"creation_date":1612422919},{"owner":{"reputation":6072,"user_id":200224,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/krcuc.jpg?s=128&g=1","display_name":"Andy","link":"https://stackoverflow.com/users/200224/andy"},"score":0,"creation_date":1612423104},{"owner":{"reputation":6072,"user_id":200224,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/krcuc.jpg?s=128&g=1","display_name":"Andy","link":"https://stackoverflow.com/users/200224/andy"},"score":0,"creation_date":1612425199}],"owner":{"reputation":10030,"user_id":686478,"user_type":"registered","accept_rate":59,"profile_image":"https://www.gravatar.com/avatar/48412d269361f2a2bc20c2af45528681?s=128&d=identicon&r=PG","display_name":"Prashant Bhate","link":"https://stackoverflow.com/users/686478/prashant-bhate"},"comment_count":24,"score":1256,"creation_date":1309527235,"body_markdown":"**Static field holding object reference [esp final field]**\r\n\r\n    class MemorableClass {\r\n        static final ArrayList list = new ArrayList(100);\r\n    }\r\n\r\n**Calling [`String.intern()`][1] on lengthy String**\r\n\r\n    String str=readString(); // read lengthy string any source db,textbox/jsp etc..\r\n    // This will place the string in memory pool from which you can&#39;t remove\r\n    str.intern();\r\n\r\n**(Unclosed) open streams ( file , network etc... )**\r\n\r\n    try {\r\n        BufferedReader br = new BufferedReader(new FileReader(inputFile));\r\n        ...\r\n        ...\r\n    } catch (Exception e) {\r\n        e.printStacktrace();\r\n    }\r\n\r\n**Unclosed connections**\r\n\r\n    try {\r\n        Connection conn = ConnectionFactory.getConnection();\r\n        ...\r\n        ...\r\n    } catch (Exception e) {\r\n        e.printStacktrace();\r\n    }\r\n\r\n**Areas that are unreachable from JVM&#39;s garbage collector**, such as memory allocated through native methods\r\n\r\nIn web applications, some objects are stored in application scope until the application is explicitly stopped or removed.\r\n\r\n    getServletContext().setAttribute(&quot;SOME_MAP&quot;, map);\r\n    \r\n\r\n**Incorrect or inappropriate JVM options**, such as the `noclassgc` option on IBM JDK that prevents unused class garbage collection \r\n\r\nSee [IBM jdk settings][2].\r\n\r\n\r\n  [1]: http://download.oracle.com/javase/6/docs/api/java/lang/String.html#intern%28%29\r\n  [2]: http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/index.jsp?topic=/com.ibm.websphere.express.doc/info/exp/ae/tprf_tunejvm.html","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":1980,"user_id":240581,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0071d920b9116a71c1d2d59b5db4d559?s=128&d=identicon&r=PG","display_name":"DaveC","link":"https://stackoverflow.com/users/240581/davec"},"score":24,"creation_date":1309715957}],"owner":{"reputation":229,"user_id":771769,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2aac653e8260dc573e881f6cabd9b8aa?s=128&d=identicon&r=PG","display_name":"PlayTank","link":"https://stackoverflow.com/users/771769/playtank"},"comment_count":1,"score":169,"creation_date":1309550770,"body_markdown":"The answer depends entirely on what the interviewer thought they were asking. \r\n\r\nIs it possible in practice to make Java leak? Of course it is, and there are plenty of examples in the other answers.\r\n\r\nBut there are multiple meta-questions that may have been being asked?\r\n\r\n- Is a theoretically &quot;perfect&quot; Java implementation vulnerable to leaks?\r\n- Does the candidate understand the difference between theory and reality?\r\n- Does the candidate understand how garbage collection works?\r\n- Or how garbage collection is supposed to work in an ideal case?\r\n- Do they know they can call other languages through native interfaces?\r\n- Do they know to leak memory in those other languages?\r\n- Does the candidate even know what memory management is, and what is going on behind the scene in Java?\r\n\r\nI&#39;m reading your meta-question as &quot;What&#39;s an answer I could have used in this interview situation&quot;. And hence, I&#39;m going to focus on interview skills instead of Java. I believe you&#39;re more likely to repeat the situation of not knowing the answer to a question in an interview than you are to be in a place of needing to know how to make Java leak. So, hopefully, this will help.\r\n\r\nOne of the most important skills you can develop for interviewing is learning to actively listen to the questions and working with the interviewer to extract their intent. Not only does this let you answer their question the way they want, but also shows that you have some vital communication skills. And when it comes down to a choice between many equally talented developers, I&#39;ll hire the one who listens, thinks, and understands before they respond every time.","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":77302,"user_id":32914,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/50facfccdffe2e9cabaa589205959d30?s=128&d=identicon&r=PG","display_name":"Mason Wheeler","link":"https://stackoverflow.com/users/32914/mason-wheeler"},"score":13,"creation_date":1390506870},{"owner":{"reputation":40704,"user_id":607407,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/5a061a72feb5b6580dadd5dcbc92d3b5?s=128&d=identicon&r=PG","display_name":"Tom&#225;š Zato - Reinstate Monica","link":"https://stackoverflow.com/users/607407/tom%c3%a1%c5%a1-zato-reinstate-monica"},"score":1,"creation_date":1451983000},{"owner":{"reputation":32010,"user_id":327301,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/wJlLQ.png?s=128&g=1","display_name":"yankee","link":"https://stackoverflow.com/users/327301/yankee"},"score":1,"creation_date":1451992466},{"owner":{"reputation":14252,"user_id":1989425,"user_type":"registered","accept_rate":38,"profile_image":"https://i.stack.imgur.com/aGyIU.png?s=128&g=1","display_name":"autistic","link":"https://stackoverflow.com/users/1989425/autistic"},"score":0,"creation_date":1481044085},{"owner":{"reputation":608,"user_id":6944068,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/af770f19fffb8ff2e81681f4141c11ea?s=128&d=identicon&r=PG","display_name":"toolforger","link":"https://stackoverflow.com/users/6944068/toolforger"},"score":1,"creation_date":1541288248},{"owner":{"reputation":6072,"user_id":200224,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/krcuc.jpg?s=128&g=1","display_name":"Andy","link":"https://stackoverflow.com/users/200224/andy"},"score":0,"creation_date":1612424569},{"owner":{"reputation":6072,"user_id":200224,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/krcuc.jpg?s=128&g=1","display_name":"Andy","link":"https://stackoverflow.com/users/200224/andy"},"score":0,"creation_date":1612424713}],"owner":{"reputation":32010,"user_id":327301,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/wJlLQ.png?s=128&g=1","display_name":"yankee","link":"https://stackoverflow.com/users/327301/yankee"},"comment_count":7,"score":43,"creation_date":1309602216,"body_markdown":"I can copy my answer from here:\r\nhttps://stackoverflow.com/questions/4948529/easiest-way-to-cause-memory-leak-in-java/4948763\r\n\r\n\t\r\n\r\n&quot;A memory leak, in computer science (or leakage, in this context), occurs when a computer program consumes memory but is unable to release it back to the operating system.&quot; (Wikipedia)\r\n\r\nThe easy answer is: You can&#39;t. Java does automatic memory management and will free resources that are not needed for you. You can&#39;t stop this from happening. It will ALWAYS be able to release the resources. In programs with manual memory management, this is different. You cann get some memory in C using malloc(). To free the memory, you need the pointer that malloc returned and call free() on it. But if you don&#39;t have the pointer anymore (overwritten, or lifetime exceeded), then you are unfortunately incapable of freeing this memory and thus you have a memory leak.\r\n\r\nAll the other answers so far are in my definition not really memory leaks. They all aim at filling the memory with pointless stuff real fast. But at any time you could still dereference the objects you created and thus freeing the memory --&gt; NO LEAK. [acconrad&#39;s answer](https://stackoverflow.com/a/4948560/327301) comes pretty close though as I have to admit since his solution is effectively to just &quot;crash&quot; the garbage collector by forcing it in an endless loop).\r\n\r\nThe long answer is: You can get a memory leak by writing a library for Java using the JNI, which can have manual memory management and thus have memory leaks. If you call this library, your java process will leak memory. Or, you can have bugs in the JVM, so that the JVM looses memory. There are probably bugs in the JVM, there may even be some known ones since garbage collection is not that trivial, but then it&#39;s still a bug. By design this is not possible. You may be asking for some java code that is effected by such a bug. Sorry I don&#39;t know one and it might well not be a bug anymore in the next Java version anyway.","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":7012,"user_id":368544,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/1cd172ae553812ace293c4fe0142850b?s=128&d=identicon&r=PG","display_name":"mschonaker","link":"https://stackoverflow.com/users/368544/mschonaker"},"comment_count":0,"score":10,"creation_date":1309675791,"body_markdown":"I think that a valid example could be using ThreadLocal variables in an environment where threads are pooled. \r\n\r\nFor instance, using ThreadLocal variables in Servlets to communicate with other web components, having the threads being created by the container and maintaining the idle ones in a pool. ThreadLocal variables, if not correctly cleaned up, will live there until, possibly, the same web component overwrites their values.\r\n\r\nOf course, once identified, the problem can be solved easily.","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":10,"creation_date":1309894691},{"owner":{"reputation":14693,"user_id":1665365,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/1ebc8ee701d6a0e0b8a4b0a9294f2c47?s=128&d=identicon&r=PG","display_name":"Tom Cammann","link":"https://stackoverflow.com/users/1665365/tom-cammann"},"score":1,"creation_date":1355916998}],"owner":{"reputation":2180,"user_id":751751,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/879a07113ffcb8d3673abcefc693cde5?s=128&d=identicon&r=PG","display_name":"Ben","link":"https://stackoverflow.com/users/751751/ben"},"comment_count":2,"score":15,"creation_date":1309714618,"body_markdown":"I don&#39;t think anyone has said this yet: you can resurrect an object by overriding the finalize() method such that finalize() stores a reference of this somewhere. The garbage collector will only be called once on the object so after that the object will never destroyed. ","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":1693,"user_id":7341563,"user_type":"registered","profile_image":"https://i.stack.imgur.com/W1iPs.png?s=128&g=1","display_name":"Sven","link":"https://stackoverflow.com/users/7341563/sven"},"score":1,"creation_date":1526966632}],"owner":{"reputation":11638,"user_id":338614,"user_type":"registered","accept_rate":22,"profile_image":"https://www.gravatar.com/avatar/76fa9e029701c45b2bfe4403cc10e290?s=128&d=identicon&r=PG","display_name":"Harald Wellmann","link":"https://stackoverflow.com/users/338614/harald-wellmann"},"comment_count":1,"score":36,"creation_date":1309732877,"body_markdown":"Take any web application running in any servlet container (Tomcat, Jetty, Glassfish, whatever...). Redeploy the app 10 or 20 times in a row (it may be enough to simply touch the WAR in the server&#39;s autodeploy directory.\r\n\r\nUnless anybody has actually tested this, chances are high that you&#39;ll get an OutOfMemoryError after a couple of redeployments, because the application did not take care to clean up after itself. You may even find a bug in your server with this test.\r\n\r\nThe problem is, the lifetime of the container is longer than the lifetime of your application. You have to make sure that all references the container might have to objects or classes of your application can be garbage collected.\r\n\r\nIf there is just one reference surviving the undeployment of your web app, the corresponding classloader and by consequence all classes of your web app cannot be garbage collected.\r\n\r\nThreads started by your application, ThreadLocal variables, logging appenders are some of the usual suspects to cause classloader leaks.","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":13,"creation_date":1309894595},{"owner":{"reputation":4117,"user_id":170196,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/819c08b7776a89bb8ee06eda7e90b2fa?s=128&d=identicon&r=PG","display_name":"Esben Skov Pedersen","link":"https://stackoverflow.com/users/170196/esben-skov-pedersen"},"score":5,"creation_date":1311261315},{"owner":{"reputation":24051,"user_id":94363,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/6017d97591b78ae31e34b6483ee77a33?s=128&d=identicon&r=PG","display_name":"rds","link":"https://stackoverflow.com/users/94363/rds"},"score":2,"creation_date":1311352677},{"owner":{"reputation":2730,"user_id":7212809,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-VlOyJEUeeSc/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-jExBae7iJ2ALFtcMj_6BCoHGTMgw/mo/photo.jpg?sz=128","display_name":"nz_21","link":"https://stackoverflow.com/users/7212809/nz-21"},"score":0,"creation_date":1541519735}],"owner":{"reputation":638,"user_id":17057,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/be4a6389cc571751f2b25828a9749000?s=128&d=identicon&r=PG","display_name":"Wesley Tarle","link":"https://stackoverflow.com/users/17057/wesley-tarle"},"comment_count":4,"score":11,"creation_date":1309792018,"body_markdown":"The interviewer might have be looking for a circular reference solution:\r\n\r\n    \tpublic static void main(String[] args) {\r\n            while (true) {\r\n                Element first = new Element();\r\n                first.next = new Element();\r\n                first.next.next = first;\r\n            }\r\n        }\r\n\r\nThis is a classic problem with reference counting garbage collectors.  You would then politely explain that JVMs use a much more sophisticated algorithm that doesn&#39;t have this limitation.\r\n\r\n-Wes Tarle","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":2,"creation_date":1310194444},{"owner":{"reputation":78117,"user_id":319403,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/e92a9af9e53cc8e5af575c4b18b34c21?s=128&d=identicon&r=PG","display_name":"cHao","link":"https://stackoverflow.com/users/319403/chao"},"score":2,"creation_date":1376685206}],"owner":{"reputation":4155,"user_id":64626,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/5c0d7af14be98818e15b0d6156900de5?s=128&d=identicon&r=PG","display_name":"Suroot","link":"https://stackoverflow.com/users/64626/suroot"},"comment_count":2,"score":22,"creation_date":1310174635,"body_markdown":"I thought it was interesting that no one used the internal class examples.  If you have an internal class; it inherently maintains a reference to the containing class.  Of course it is not technically a memory leak because Java WILL eventually clean it up; but this can cause classes to hang around longer than anticipated.\r\n\r\n    public class Example1 {\r\n      public Example2 getNewExample2() {\r\n        return this.new Example2();\r\n      }\r\n      public class Example2 {\r\n        public Example2() {}\r\n      }\r\n    }\r\n\r\nNow if you call Example1 and get an Example2 discarding Example1, you will inherently still have a link to an Example1 object.\r\n\r\n    public class Referencer {\r\n      public static Example2 GetAnExample2() {\r\n        Example1 ex = new Example1();\r\n        return ex.getNewExample2();\r\n      }\r\n    \r\n      public static void main(String[] args) {\r\n        Example2 ex = Referencer.GetAnExample2();\r\n        // As long as ex is reachable; Example1 will always remain in memory.\r\n      }\r\n    }\r\n\r\nI&#39;ve also heard a rumor that if you have a variable that exists for longer than a specific amount of time; Java assumes that it will always exist and will actually never try to clean it up if cannot be reached in code anymore.  But that is completely unverified.","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":1200,"user_id":778659,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/rKUVi.jpg?s=128&g=1","display_name":"Ben Xu","link":"https://stackoverflow.com/users/778659/ben-xu"},"comment_count":0,"score":10,"creation_date":1310283963,"body_markdown":"there are many different situations memory will leak. One i encountered, which expose a map that should not be exposed and used in other place. \r\n\r\n\r\n \r\n\r\n    \r\n    public class ServiceFactory {\r\n\r\n\tprivate Map&lt;String, Service&gt; services;\r\n\r\n\tprivate static ServiceFactory singleton;\r\n\r\n\tprivate ServiceFactory() {\r\n\t\tservices = new HashMap&lt;String, Service&gt;();\r\n\t}\r\n\r\n\tpublic static synchronized ServiceFactory getDefault() {\r\n\r\n\t\tif (singleton == null) {\r\n\t\t\tsingleton = new ServiceFactory();\r\n\t\t}\r\n\t\treturn singleton;\r\n\t}\r\n\r\n\tpublic void addService(String name, Service serv) {\r\n\t\tservices.put(name, serv);\r\n\t}\r\n\r\n\tpublic void removeService(String name) {\r\n\t\tservices.remove(name);\r\n\t}\r\n\r\n\tpublic Service getService(String name, Service serv) {\r\n\t\treturn services.get(name);\r\n\t}\r\n\r\n\t// the problematic api, which expose the map.\r\n    //and user can do quite a lot of thing from this api.\r\n\t//for example, create service reference and forget to dispose or set it null\r\n\t//in all this is a dangerous api, and should not expose \r\n\tpublic Map&lt;String, Service&gt; getAllServices() {\r\n\t\treturn services;\r\n\t}\r\n\r\n    }\r\n\r\n    // resource class is a heavy class\r\n    class Service {\r\n\r\n    }","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":5711,"user_id":653511,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/3fd33f8f1f1f70d69dc3f77c9d12ecdc?s=128&d=identicon&r=PG&f=1","display_name":"stemm","link":"https://stackoverflow.com/users/653511/stemm"},"score":1,"creation_date":1310398335},{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":4,"creation_date":1310927711},{"owner":{"reputation":11106,"user_id":10522,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/8396048b39279996e7ee6c1acdac2bf7?s=128&d=identicon&r=PG","display_name":"Berlin Brown","link":"https://stackoverflow.com/users/10522/berlin-brown"},"score":0,"creation_date":1311266444},{"owner":{"reputation":5711,"user_id":653511,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/3fd33f8f1f1f70d69dc3f77c9d12ecdc?s=128&d=identicon&r=PG&f=1","display_name":"stemm","link":"https://stackoverflow.com/users/653511/stemm"},"score":0,"creation_date":1311342609},{"owner":{"reputation":60055,"user_id":221955,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG","display_name":"Michael Anderson","link":"https://stackoverflow.com/users/221955/michael-anderson"},"score":2,"creation_date":1464837559},{"owner":{"reputation":60055,"user_id":221955,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG","display_name":"Michael Anderson","link":"https://stackoverflow.com/users/221955/michael-anderson"},"score":3,"creation_date":1464837673},{"owner":{"reputation":3483,"user_id":1679516,"user_type":"registered","profile_image":"https://i.stack.imgur.com/gxfhm.png?s=128&g=1","display_name":"Darrell Teague","link":"https://stackoverflow.com/users/1679516/darrell-teague"},"score":0,"creation_date":1522781898}],"owner":{"reputation":5711,"user_id":653511,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/3fd33f8f1f1f70d69dc3f77c9d12ecdc?s=128&d=identicon&r=PG&f=1","display_name":"stemm","link":"https://stackoverflow.com/users/653511/stemm"},"comment_count":7,"score":52,"creation_date":1310388959,"body_markdown":"You are able to make memory leak with **sun.misc.Unsafe** class. In fact this service class is used in different standard classes (for example in **java.nio** classes). **You can&#39;t create instance of this class directly**, but you may **use reflection to do that**.\r\n\r\nCode doesn&#39;t compile in Eclipse IDE - compile it using command `javac` (during compilation you&#39;ll get warnings)\r\n\r\n    import java.lang.reflect.Constructor;\r\n    import java.lang.reflect.Field;\r\n    import sun.misc.Unsafe;\r\n    \r\n    \r\n    public class TestUnsafe {\r\n    \r\n    \tpublic static void main(String[] args) throws Exception{\r\n    \t\tClass unsafeClass = Class.forName(&quot;sun.misc.Unsafe&quot;);\r\n    \t\tField f = unsafeClass.getDeclaredField(&quot;theUnsafe&quot;);\r\n    \t\tf.setAccessible(true);\r\n    \t\tUnsafe unsafe = (Unsafe) f.get(null);\r\n    \t\tSystem.out.print(&quot;4..3..2..1...&quot;);\r\n    \t\ttry\r\n    \t\t{\r\n    \t\t\tfor(;;)\r\n    \t\t\t\tunsafe.allocateMemory(1024*1024);\r\n    \t\t} catch(Error e) {\r\n    \t\t\tSystem.out.println(&quot;Boom :)&quot;);\r\n    \t\t\te.printStackTrace();\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    }\r\n\r\n","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":2588,"user_id":847333,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/f50c41ad18bd5854d9878385c7eb5a39?s=128&d=identicon&r=PG","display_name":"Gravity","link":"https://stackoverflow.com/users/847333/gravity"},"comment_count":0,"score":6,"creation_date":1310776157,"body_markdown":"One possibility is to create a wrapper for an ArrayList that only provides one method: one that adds things to the ArrayList.  Make the ArrayList itself private.  Now, construct one of these wrapper objects in global scope (as a static object in a class) and qualify it with the **final** keyword (e.g. `public static final ArrayListWrapper wrapperClass = new ArrayListWrapper()`).  So now the reference cannot be altered.  That is, `wrapperClass = null` won&#39;t work and can&#39;t be used to free the memory.  But there&#39;s also no way to do anything with `wrapperClass` other than add objects to it.  Therefore, any objects you do add to `wrapperClass` are impossible to recycle.","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":1,"user_id":856547,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/e75743d020c96e654ffa280a5fdfd61f?s=128&d=identicon&r=PG","display_name":"Scott","link":"https://stackoverflow.com/users/856547/scott"},"comment_count":0,"score":9,"creation_date":1311270098,"body_markdown":"An example I recently fixed is creating new GC and Image objects, but forgetting to call dispose() method.\r\n\r\nGC javadoc snippet:\r\n\r\n&gt; Application code must explicitly invoke the GC.dispose() method to\r\n&gt; release the operating system resources managed by each instance when\r\n&gt; those instances are no longer required. This is particularly important\r\n&gt; on Windows95 and Windows98 where the operating system has a limited\r\n&gt; number of device contexts available.\r\n\r\nImage javadoc snippet:\r\n\r\n&gt; Application code must explicitly invoke the Image.dispose() method to\r\n&gt; release the operating system resources managed by each instance when\r\n&gt; those instances are no longer required.\r\n\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":24051,"user_id":94363,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/6017d97591b78ae31e34b6483ee77a33?s=128&d=identicon&r=PG","display_name":"rds","link":"https://stackoverflow.com/users/94363/rds"},"score":4,"creation_date":1311353108},{"owner":{"reputation":594,"user_id":443572,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/3ef125d5b0913a7af197dc0028574c85?s=128&d=identicon&r=PG","display_name":"Jon Chambers","link":"https://stackoverflow.com/users/443572/jon-chambers"},"score":2,"creation_date":1311360163},{"owner":{"reputation":6932,"user_id":1057218,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/281bdb57345c7c4af04d983ce7d207d0?s=128&d=identicon&r=PG","display_name":"anstarovoyt","link":"https://stackoverflow.com/users/1057218/anstarovoyt"},"score":17,"creation_date":1363956226},{"owner":{"reputation":20877,"user_id":44089,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/f300c9887f4486fce09a63c9267dfc3c?s=128&d=identicon&r=PG","display_name":"Bananeweizen","link":"https://stackoverflow.com/users/44089/bananeweizen"},"score":0,"creation_date":1507135576}],"owner":{"reputation":594,"user_id":443572,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/3ef125d5b0913a7af197dc0028574c85?s=128&d=identicon&r=PG","display_name":"Jon Chambers","link":"https://stackoverflow.com/users/443572/jon-chambers"},"comment_count":4,"score":39,"creation_date":1311270700,"body_markdown":"Here&#39;s a simple/sinister one via http://wiki.eclipse.org/Performance_Bloopers#String.substring.28.29.\r\n\r\n    public class StringLeaker\r\n    {\r\n        private final String muchSmallerString;\r\n    \r\n        public StringLeaker()\r\n        {\r\n            // Imagine the whole Declaration of Independence here\r\n            String veryLongString = &quot;We hold these truths to be self-evident...&quot;;\r\n        \r\n            // The substring here maintains a reference to the internal char[]\r\n            // representation of the original string.\r\n            this.muchSmallerString = veryLongString.substring(0, 1);\r\n        }\r\n    }\r\n\r\nBecause the substring refers to the internal representation of the original, much longer string, the original stays in memory. Thus, as long as you have a StringLeaker in play, you have the whole original string in memory, too, even though you might think you&#39;re just holding on to a single-character string.\r\n\r\nThe way to avoid storing an unwanted reference to the original string is to do something like this:\r\n\r\n    ...\r\n    this.muchSmallerString = new String(veryLongString.substring(0, 1));\r\n    ...\r\n\r\nFor added badness, you might also `.intern()` the substring:\r\n\r\n    ...\r\n    this.muchSmallerString = veryLongString.substring(0, 1).intern();\r\n    ...\r\n\r\nDoing so will keep both the original long string and the derived substring in memory even after the StringLeaker instance has been discarded.","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":294197,"user_id":829571,"user_type":"registered","accept_rate":94,"profile_image":"https://i.stack.imgur.com/zflGZ.png?s=128&g=1","display_name":"assylias","link":"https://stackoverflow.com/users/829571/assylias"},"score":7,"creation_date":1371769288}],"owner":{"reputation":3539,"user_id":59724,"user_type":"registered","accept_rate":33,"profile_image":"https://www.gravatar.com/avatar/50954aec029a724824dca5a32a1c00fa?s=128&d=identicon&r=PG","display_name":"Graham","link":"https://stackoverflow.com/users/59724/graham"},"comment_count":1,"score":14,"creation_date":1311270951,"body_markdown":"As a lot of people have suggested, Resource Leaks are fairly easy to cause - like the JDBC examples. Actual Memory leaks are a bit harder - especially if you aren&#39;t relying on broken bits of the JVM to do it for you...\r\n\r\nThe ideas of creating objects that have a very large footprint and then not being able to access them aren&#39;t real memory leaks either. If nothing can access it then it will be garbage collected, and if something can access it then it&#39;s not a leak...\r\n\r\nOne way that *used* to work though - and I don&#39;t know if it still does - is to have a three-deep circular chain. As in Object A has a reference to Object B, Object B has a reference to Object C and Object C has a reference to Object A. The GC was clever enough to know that a two deep chain - as in A &lt;--&gt; B - can safely be collected if A and B aren&#39;t accessible by anything else, but couldn&#39;t handle the three-way chain...","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":5899,"user_id":124708,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/950cd0d34a9943729a4065ee4add6965?s=128&d=identicon&r=PG","display_name":"TraderJoeChicago","link":"https://stackoverflow.com/users/124708/traderjoechicago"},"score":0,"creation_date":1316560242},{"owner":{"reputation":9291,"user_id":717481,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/0292aeefc5c774d3acd0ca14914c5db2?s=128&d=identicon&r=PG","display_name":"sparc_spread","link":"https://stackoverflow.com/users/717481/sparc-spread"},"score":0,"creation_date":1404337249}],"owner":{"reputation":676,"user_id":148631,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/46962245c2f486e7452d8e446e7f3774?s=128&d=identicon&r=PG","display_name":"Puneet","link":"https://stackoverflow.com/users/148631/puneet"},"comment_count":2,"score":22,"creation_date":1311277172,"body_markdown":"I recently encountered a memory leak situation caused in a way by log4j.\r\n\r\nLog4j has this mechanism called [Nested Diagnostic Context(NDC)](http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/NDC.html)  which is an instrument to distinguish interleaved log output from different sources. The granularity at which NDC works is threads, so it distinguishes log outputs from different threads separately.\r\n\r\nIn order to store thread specific tags, log4j&#39;s NDC class uses a Hashtable which is keyed by the Thread object itself (as opposed to say the thread id), and thus till the NDC tag stays in memory all the objects that hang off of the thread object also stay in memory. In our web application we use NDC to tag logoutputs with a request id to distinguish logs from a single request separately. The container that associates the NDC tag with a thread, also removes it while returning the response from a request. The problem occurred when during the course of processing a request, a child thread was spawned, something like the following code:\r\n\r\n    pubclic class RequestProcessor {\r\n        private static final Logger logger = Logger.getLogger(RequestProcessor.class);\r\n        public void doSomething()  {\r\n            ....\r\n            final List&lt;String&gt; hugeList = new ArrayList&lt;String&gt;(10000);\r\n            new Thread() {\r\n               public void run() {\r\n                   logger.info(&quot;Child thread spawned&quot;)\r\n                   for(String s:hugeList) {\r\n                       ....\r\n                   }\r\n               }\r\n            }.start();\r\n        }\r\n    }    \r\n\r\nSo an NDC context was associated with inline thread that was spawned. The thread object that was the key for this NDC context, is the inline thread which has the hugeList object hanging off of it. Hence even after the thread finished doing what it was doing, the reference to the hugeList was kept alive by the NDC context Hastable, thus causing a memory leak.","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":9538,"user_id":1169349,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/12190e569661586c67fb666370343c80?s=128&d=identicon&r=PG","display_name":"Reg","link":"https://stackoverflow.com/users/1169349/reg"},"score":1,"creation_date":1441187506}],"owner":{"reputation":14510,"user_id":73274,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/f22abfd0e934eac307239b636357ada8?s=128&d=identicon&r=PG","display_name":"Paul Morie","link":"https://stackoverflow.com/users/73274/paul-morie"},"comment_count":1,"score":19,"creation_date":1311281560,"body_markdown":"Everyone always forgets the native code route.  Here&#39;s a simple formula for a leak:\r\n\r\n1. Declare native method.\r\n2. In native method, call `malloc`.  Don&#39;t call `free`.\r\n3. Call the native method.\r\n\r\nRemember, memory allocations in native code come from the JVM heap.  \r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":2,"creation_date":1377925448}],"owner":{"reputation":21,"user_id":477534,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/100f8041558a5e7d0e08bb410d588539?s=128&d=identicon&r=PG","display_name":"Artur Ventura","link":"https://stackoverflow.com/users/477534/artur-ventura"},"comment_count":1,"score":8,"creation_date":1311289629,"body_markdown":"Theoretically you can&#39;t. Java memory model prevents it. However, because Java has to be implemented, there are some caveats you can use. Depends on what you can use:\r\n\r\n- If you can use native, you can allocate memory that you don not relinquish later. \r\n\r\n- If that is not available, there is a dirty little secret about java that not much people know. You can ask for a direct access array that is not managed by GC, and therefor can be easily used to make a memory leak. This is provided by DirectByteBuffer (http://download.oracle.com/javase/1.5.0/docs/api/java/nio/ByteBuffer.html#allocateDirect(int)). \r\n\r\n- If you can&#39;t use any of those, you still can make a memory leak by tricking the GC. The JVM is implemented using a Generational garbage collection. What this means is that the heap is divided into areas: young, adults and elders. An object when its created starts at the young area. As he is used more and more, he progresses into adults up to elders. An object that reaches the eldery area most likely will not be garbaged collected. You cannot be sure that an object is leaked and if you ask for a stop and clean GC it may clean it but for a long period of time he will be leaked. More info at (http://java.sun.com/docs/hotspot/gc1.4.2/faq.html) \r\n\r\n- Also, class objects are not required to be GC&#39;ed. Might me a way to do it.\r\n\r\n","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":939,"user_id":839379,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/58dad12faff240f3fe8e4074f6025a57?s=128&d=identicon&r=PG","display_name":"sethobrien","link":"https://stackoverflow.com/users/839379/sethobrien"},"comment_count":0,"score":16,"creation_date":1311321907,"body_markdown":"You can create a moving memory leak by creating a new instance of a class in that class&#39;s finalize method. Bonus points if the finalizer creates multiple instances. Here&#39;s a simple program that leaks the entire heap in sometime between a few seconds and a few minutes depending on your heap size:\r\n\r\n\tclass Leakee {\r\n\t\tpublic void check() {\r\n\t\t\tif (depth &gt; 2) {\r\n\t\t\t\tLeaker.done();\r\n\t\t\t}\r\n\t\t}\r\n\t\tprivate int depth;\r\n\t\tpublic Leakee(int d) {\r\n\t\t\tdepth = d;\r\n\t\t}\r\n\t\tprotected void finalize() {\r\n\t\t\tnew Leakee(depth + 1).check();\r\n\t\t\tnew Leakee(depth + 1).check();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic class Leaker {\r\n\t\tprivate static boolean makeMore = true;\r\n\t\tpublic static void done() {\r\n\t\t\tmakeMore = false;\r\n\t\t}\r\n\t\tpublic static void main(String[] args) throws InterruptedException {\r\n\t\t\t// make a bunch of them until the garbage collector gets active\r\n\t\t\twhile (makeMore) {\r\n\t\t\t\tnew Leakee(0).check();\r\n\t\t\t}\r\n\t\t\t// sit back and watch the finalizers chew through memory\r\n\t\t\twhile (true) {\r\n\t\t\t\tThread.sleep(1000);\r\n\t\t\t\tSystem.out.println(&quot;memory=&quot; +\r\n\t\t\t\t\t\tRuntime.getRuntime().freeMemory() + &quot; / &quot; +\r\n\t\t\t\t\t\tRuntime.getRuntime().totalMemory());\r\n\t\t\t}\r\n\t\t}\r\n\t}","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":6883,"user_id":857727,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3772f7ef99bd17c1e77d77edbf76c13d?s=128&d=identicon&r=PG&f=1","display_name":"arnt","link":"https://stackoverflow.com/users/857727/arnt"},"comment_count":0,"score":7,"creation_date":1311330284,"body_markdown":"Most of the memory leaks I&#39;ve seen in java concern processes getting out of sync.\r\n\r\nProcess A talks to B via TCP, and tells process B to create something. B issues the resource an ID, say 432423, which A stores in an object and uses while talking to B. At some point the object in A is reclaimed by garbage collection (maybe due to a bug), but A never tells B that (maybe another bug).\r\n\r\nNow A doesn&#39;t have the ID of the object it&#39;s created in B&#39;s RAM any more, and B doesn&#39;t know that A has no more reference to the object. In effect, the object is leaked.\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":1074,"user_id":698121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/979130d85abf3d9036ce495ee89edbb2?s=128&d=identicon&r=PG","display_name":"Peter","link":"https://stackoverflow.com/users/698121/peter"},"score":0,"creation_date":1311347150},{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":0,"creation_date":1324948620},{"owner":{"reputation":1074,"user_id":698121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/979130d85abf3d9036ce495ee89edbb2?s=128&d=identicon&r=PG","display_name":"Peter","link":"https://stackoverflow.com/users/698121/peter"},"score":0,"creation_date":1328182780},{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":0,"creation_date":1328195080}],"owner":{"reputation":1074,"user_id":698121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/979130d85abf3d9036ce495ee89edbb2?s=128&d=identicon&r=PG","display_name":"Peter","link":"https://stackoverflow.com/users/698121/peter"},"comment_count":4,"score":7,"creation_date":1311345525,"body_markdown":"A few suggestions:\r\n\r\n - use commons-logging in a servlet container (a bit provocative perhaps)\r\n - start a thread in a servlet container and don&#39;t return from it&#39;s run method\r\n - load animated gifs in a servlet container (this will start an animation thread)\r\n\r\nThe above effects could be &#39;improved&#39; by redeploying the application ;)\r\n\r\nRecently stumbled upon this: \r\n\r\n - Calling &quot;new java.util.zip.Inflater();&quot; without calling &quot;Inflater.end()&quot; ever\r\n\r\nRead [http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5072161][1] and linked issues for an in-depth-discussion.\r\n\r\n\r\n  [1]: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5072161","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":2913,"user_id":132565,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/a6a87aaf5ff12989a79f7b9ef821b993?s=128&d=identicon&r=PG","display_name":"Chase","link":"https://stackoverflow.com/users/132565/chase"},"comment_count":0,"score":5,"creation_date":1338504647,"body_markdown":"In Java a &quot;memory leak&quot; is primarily just you using too much memory which is different than in C where you are no longer using the memory but forget to return (free) it. When an interviewer asks about Java memory leaks they are asking about JVM memory usage just appearing to keep going up and they determined that restarting the JVM on a regular basis is the best fix. (unless the interviewer is *extremely* technically savvy)\r\n\r\nSo answer this question as if they asked what makes JVM memory usage grow over time. Good answers would be storing too much data in a HttpSessions with overly long timeout or a poorly implemented in-memory cache (Singleton) that never flushes old entries. Another potential answer is having lots of JSPs or dynamically generated classes. Classes are loaded into an area of memory called PermGen that is usually small and most JVMs don&#39;t implement class unloading.","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":11,"user_id":469070,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3d91ec3ebcd63f9d25748dca7aca3e96?s=128&d=identicon&r=PG","display_name":"Jay","link":"https://stackoverflow.com/users/469070/jay"},"comment_count":0,"score":15,"creation_date":1347480457,"body_markdown":"I came across a more subtle kind of resource leak recently.\r\nWe open resources via class loader&#39;s getResourceAsStream and it happened that the input stream handles were not closed.\r\n\r\nUhm, you might say, what an idiot. \r\n\r\nWell, what makes this interesting is: this way, you can leak heap memory of the underlying process, rather than from JVM&#39;s heap.\r\n\r\nAll you need is a jar file with a file inside which will be referenced from Java code. The bigger the jar file, the quicker memory gets allocated.\r\n\r\nYou can easily create such a jar with the following class:\r\n\r\n    import java.io.File;\r\n    import java.io.FileOutputStream;\r\n    import java.io.IOException;\r\n    import java.util.zip.ZipEntry;\r\n    import java.util.zip.ZipOutputStream;\r\n\r\n    public class BigJarCreator {\r\n        public static void main(String[] args) throws IOException {\r\n            ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(new File(&quot;big.jar&quot;)));\r\n            zos.putNextEntry(new ZipEntry(&quot;resource.txt&quot;));\r\n            zos.write(&quot;not too much in here&quot;.getBytes());\r\n            zos.closeEntry();\r\n            zos.putNextEntry(new ZipEntry(&quot;largeFile.out&quot;));\r\n            for (int i=0 ; i&lt;10000000 ; i++) {\r\n                zos.write((int) (Math.round(Math.random()*100)+20));\r\n            }\r\n            zos.closeEntry();\r\n            zos.close();\r\n        }\r\n    }\r\n\r\nJust paste into a file named BigJarCreator.java, compile and run it from command line: \r\n\r\n    javac BigJarCreator.java\r\n    java -cp . BigJarCreator\r\n\r\nEt voil&#224;: you find a jar archive in your current working directory with two files inside.\r\n\r\nLet&#39;s create a second class:\r\n\r\n    public class MemLeak {\r\n        public static void main(String[] args) throws InterruptedException {\r\n            int ITERATIONS=100000;\r\n            for (int i=0 ; i&lt;ITERATIONS ; i++) {\r\n                MemLeak.class.getClassLoader().getResourceAsStream(&quot;resource.txt&quot;);\r\n            }\r\n            System.out.println(&quot;finished creation of streams, now waiting to be killed&quot;);\r\n    \r\n            Thread.sleep(Long.MAX_VALUE);\r\n        }\r\n    \r\n    }\r\n\r\nThis class basically does nothing, but create unreferenced InputStream objects. Those objects will be garbage collected immediately and thus, do not contribute to heap size.\r\nIt is important for our example to load an existing resource from a jar file, and size does matter here!\r\n\r\nIf you&#39;re doubtful, try to compile and start the class above, but make sure to chose a decent heap size (2 MB):\r\n\r\n    javac MemLeak.java\r\n    java -Xmx2m -classpath .:big.jar MemLeak\r\n\r\nYou will not encounter an OOM error here, as no references are kept, the application will keep running no matter how large you chose ITERATIONS in the above example.\r\nThe memory consumption of your process (visible in top (RES/RSS) or process explorer) grows unless the application gets to the wait command. In the setup above, it will allocate around 150 MB in memory.\r\n\r\nIf you want the application to play safe, close the input stream right where it&#39;s created:\r\n\r\n    MemLeak.class.getClassLoader().getResourceAsStream(&quot;resource.txt&quot;).close();\r\n\r\nand your process will not exceed 35 MB, independent of the iteration count.\r\n\r\nQuite simple and surprising.","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":669,"user_id":466250,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/dc492e1bdec1ee598989734013b08058?s=128&d=identicon&r=PG","display_name":"jorgeu","link":"https://stackoverflow.com/users/466250/jorgeu"},"comment_count":0,"score":5,"creation_date":1348778734,"body_markdown":"Swing has it very easy with dialogs. Create a JDialog, show it, the user closes it, leak!\r\nYou have to call `dispose()` or configure `setDefaultCloseOperation(DISPOSE_ON_CLOSE)`","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":6786,"user_id":1564766,"user_type":"registered","accept_rate":15,"profile_image":"https://i.stack.imgur.com/00n8a.jpg?s=128&g=1","display_name":"abishkar bhattarai","link":"https://stackoverflow.com/users/1564766/abishkar-bhattarai"},"comment_count":0,"score":7,"creation_date":1354519089,"body_markdown":"If Max heap size is X.  Y1....Yn  no of instances  So,total memory= number of instances X Bytes per instance.If X1......Xn is bytes per instances.Then total memory(M)=Y1 * X1+.....+Yn *Xn. So,if M&gt;X  it exceeds heap space .  following can be  the   problems in code \r\n1.Use of more instances variable then local one.\r\n2.Creating instances every time instead of pooling object.\r\n3.Not Creating the object on demand.\r\n4.Making the object reference null after the completion of operation.Again ,recreating when it is demanded in program.","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":24051,"user_id":94363,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/6017d97591b78ae31e34b6483ee77a33?s=128&d=identicon&r=PG","display_name":"rds","link":"https://stackoverflow.com/users/94363/rds"},"score":35,"creation_date":1358420359},{"owner":{"reputation":15823,"user_id":347508,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d0552df3ae8cb4abb34baaf22bb493dc?s=128&d=identicon&r=PG","display_name":"kritzikratzi","link":"https://stackoverflow.com/users/347508/kritzikratzi"},"score":3,"creation_date":1364846685}],"owner":{"reputation":7538,"user_id":989857,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/4c2069752c78a37a40291865b26e2343?s=128&d=identicon&r=PG","display_name":"stones333","link":"https://stackoverflow.com/users/989857/stones333"},"comment_count":2,"score":-5,"creation_date":1357276935,"body_markdown":"Here is a very simple Java program that will run out of space\r\n\r\n    public class OutOfMemory {\r\n    \t\r\n    \tpublic static void main(String[] arg) {\r\n    \t\t\r\n    \t    List&lt;Long&gt; mem = new LinkedList&lt;Long&gt;();\r\n    \t    while (true) {\r\n    \t        mem.add(new Long(Long.MAX_VALUE));\r\n    \t    }\r\n    \t}\r\n    }\r\n\r\n","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"comment_count":0,"score":4,"creation_date":1362622503,"body_markdown":"If you don&#39;t use a compacting garbage collector, you can have some sort of a memory leak due to heap fragmentation.","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":8400,"user_id":990750,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/nIvmG.jpg?s=128&g=1","display_name":"Tarik","link":"https://stackoverflow.com/users/990750/tarik"},"comment_count":0,"score":4,"creation_date":1373352321,"body_markdown":"Lapsed Listerners is a good example of memory leaks: Object is added as a Listener. All references to the object are nulled when the object is not needed anymore. However, forgetting to remove the object from the Listener list keeps the object alive and even responding to events, thereby wasting both memory and CPU. See http://www.drdobbs.com/jvm/java-qa/184404011","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":5476,"user_id":747320,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a779b8db0d92e47023b5ce31fa64e3c3?s=128&d=identicon&r=PG","display_name":"Basanth Roy","link":"https://stackoverflow.com/users/747320/basanth-roy"},"comment_count":0,"score":7,"creation_date":1377778239,"body_markdown":"Throw an unhandled exception from the finalize method.","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":1,"creation_date":1380238779},{"owner":{"reputation":2238,"user_id":131326,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/dd716b02472e9b21c17e62b289af01f7?s=128&d=identicon&r=PG","display_name":"Spidey","link":"https://stackoverflow.com/users/131326/spidey"},"score":1,"creation_date":1380245082},{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":1,"creation_date":1380245998},{"owner":{"reputation":2238,"user_id":131326,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/dd716b02472e9b21c17e62b289af01f7?s=128&d=identicon&r=PG","display_name":"Spidey","link":"https://stackoverflow.com/users/131326/spidey"},"score":0,"creation_date":1380297070},{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":3,"creation_date":1380304838},{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":1,"creation_date":1380304858},{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":0,"creation_date":1380651464},{"owner":{"reputation":2238,"user_id":131326,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/dd716b02472e9b21c17e62b289af01f7?s=128&d=identicon&r=PG","display_name":"Spidey","link":"https://stackoverflow.com/users/131326/spidey"},"score":0,"creation_date":1380722818},{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":0,"creation_date":1380723765},{"owner":{"reputation":2238,"user_id":131326,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/dd716b02472e9b21c17e62b289af01f7?s=128&d=identicon&r=PG","display_name":"Spidey","link":"https://stackoverflow.com/users/131326/spidey"},"score":0,"creation_date":1380737235},{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":0,"creation_date":1380742604},{"owner":{"reputation":2238,"user_id":131326,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/dd716b02472e9b21c17e62b289af01f7?s=128&d=identicon&r=PG","display_name":"Spidey","link":"https://stackoverflow.com/users/131326/spidey"},"score":0,"creation_date":1380755998},{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":0,"creation_date":1380816890},{"owner":{"reputation":2238,"user_id":131326,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/dd716b02472e9b21c17e62b289af01f7?s=128&d=identicon&r=PG","display_name":"Spidey","link":"https://stackoverflow.com/users/131326/spidey"},"score":0,"creation_date":1380821037},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":0,"creation_date":1380837724},{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":1,"creation_date":1380861014},{"owner":{"reputation":13182,"user_id":290340,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/9798931483c6fe5af55ec68698ffd0a0?s=128&d=identicon&r=PG","display_name":"Evan Plaice","link":"https://stackoverflow.com/users/290340/evan-plaice"},"score":0,"creation_date":1393236521}],"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"comment_count":17,"score":11,"creation_date":1377925827,"body_markdown":"Threads are not collected until they terminate. They serve as [roots](https://stackoverflow.com/questions/6366211/what-are-the-roots) of garbage collection. They are one of the few objects that won&#39;t be reclaimed simply by forgetting about them or clearing references to them.\r\n\r\nConsider: the basic pattern to terminate a worker thread is to set some condition variable seen by the thread. The thread can check the variable periodically and use that as a signal to terminate. If the variable is not declared `volatile`, then the change to the variable might not be seen by the thread, so it won&#39;t know to terminate. Or imagine if some threads want to update a shared object, but deadlock while trying to lock on it.\r\n\r\nIf you only have a handful of threads these bugs will probably be obvious because your program will stop working properly. If you have a thread pool that creates more threads as needed, then the obsolete/stuck threads might not be noticed, and will accumulate indefinitely, causing a memory leak. Threads are likely to use other data in your application, so will also prevent anything they directly reference from ever being collected.\r\n\r\nAs a toy example:\r\n\r\n\tstatic void leakMe(final Object object) {\r\n\t\tnew Thread() {\r\n\t\t\tpublic void run() {\r\n\t\t\t\tObject o = object;\r\n\t\t\t\tfor (;;) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tsleep(Long.MAX_VALUE);\r\n\t\t\t\t\t} catch (InterruptedException e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}.start();\r\n\t}\r\n\r\nCall `System.gc()` all you like, but the object passed to `leakMe` will never die.\r\n\r\n(\\*edited\\*)","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":18038,"user_id":1439305,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/gNHmR.jpg?s=128&g=1","display_name":"Audrius Meskauskas","link":"https://stackoverflow.com/users/1439305/audrius-meskauskas"},"comment_count":0,"score":8,"creation_date":1389099397,"body_markdown":"A thread that does not terminate (say sleeps indefinitely in its run method). It will not be garbage collected even if we loose a reference to it. You can add fields to make the thread object is a big as you want.\r\n\r\nThe currently top answer lists more tricks around this but these seem redundant.\r\n","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":28757,"user_id":2344584,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/dcecdcb0f6089de0a693c97c05cdb4ca?s=128&d=identicon&r=PG","display_name":"Stefano Sanfilippo","link":"https://stackoverflow.com/users/2344584/stefano-sanfilippo"},"score":0,"creation_date":1434904848}],"owner":{"reputation":7584,"user_id":919710,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/fl1Jg.jpg?s=128&g=1","display_name":"Alexandre Santos","link":"https://stackoverflow.com/users/919710/alexandre-santos"},"comment_count":1,"score":7,"creation_date":1402005281,"body_markdown":"There are many answers on how to create a memory leak in Java, but please note the point asked during the interview.\r\n\r\n&quot;how to create a memory leak with Java?&quot; is an open-ended question, whose purpose is to evaluate the degree of experience a developer has.\r\n\r\nIf I ask you &quot;Do you have experience troubleshooting memory leaks in Java?&quot;, your answer would be a simple &quot;Yes&quot;.\r\nI would have then to follow up with &quot;Could you give me examples where you hat to troubleshoot memory leaks?&quot;, to which you would give me one or two examples.\r\n\r\nHowever, when the interviewer asks &quot;how to create a memory leak with Java?&quot; the expected answer should follow alongs these lines:\r\n\r\n- I&#39;ve encountered a memory leak ... (say when) [that shows me experience]\r\n- The code that was causing it was... (explain code) [you fixed it yourself]\r\n- The fix I applied was based on ... (explain fix) [this gives me a chance to ask specifics about the fix]\r\n- The test I did was ... [gives me the chance of asking other testing methodologies]\r\n- I documented it this way ... [extra points. Good if you documented it]\r\n- So, it is reasonable to think that, if we follow this in reverse order, which is, get the code I fixed, and remove my fix, that we would have a memory leak.\r\n\r\n\r\n\r\nWhen the developer fails to follow this line of thought I try to guide him/her asking &quot;Could you give me an example of how could Java leak memory?&quot;, followed by &quot;Did you ever have to fix any memory leak in Java?&quot;\r\n\r\nNote that I am **not** asking for an example on how to leak memory in Java. That would be silly. Who would be interested in a developer who can effectively write code that leaks memory?\r\n\r\n","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":4093,"user_id":1817435,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/3JaIM.jpg?s=128&g=1","display_name":"Viraj","link":"https://stackoverflow.com/users/1817435/viraj"},"comment_count":0,"score":7,"creation_date":1403092394,"body_markdown":"String.substring method in java 1.6 create a memory leak. This blog post explains it.\r\n\r\nhttp://javarevisited.blogspot.com/2011/10/how-substring-in-java-works.html","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":14558,"user_id":1833961,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/WzG31.png?s=128&g=1","display_name":"bvdb","link":"https://stackoverflow.com/users/1833961/bvdb"},"comment_count":0,"score":24,"creation_date":1405711476,"body_markdown":"What&#39;s a memory leak:\r\n\r\n - It&#39;s caused by a **bug** or **bad design.**\r\n - It&#39;s a waste of memory.\r\n - **It gets worse over time.**\r\n - **The garbage collector cannot clean it.**\r\n\r\n*Typical example:*\r\n\r\nA cache of objects is a good starting point to mess things up.\r\n\r\n    private static final Map&lt;String, Info&gt; myCache = new HashMap&lt;&gt;();\r\n    \r\n    public void getInfo(String key)\r\n    {\r\n        // uses cache\r\n        Info info = myCache.get(key);\r\n        if (info != null) return info;\r\n        \r\n        // if it&#39;s not in cache, then fetch it from the database\r\n        info = Database.fetch(key);\r\n        if (info == null) return null;\r\n\r\n        // and store it in the cache\r\n        myCache.put(key, info);\r\n        return info;\r\n    }\r\n\r\nYour cache grows and grows. And pretty soon the entire database gets sucked into memory. A better design uses an LRUMap (Only keeps recently used objects in cache).\r\n\r\nSure, you can make things a lot more complicated: \r\n\r\n - using **ThreadLocal** constructions.\r\n - adding more **complex reference trees**. \r\n - or leaks caused by **3rd party libraries**.\r\n\r\n*What often happens:* \r\n\r\nIf this Info object has references to other objects, which again have references to other objects. In a way you could also consider this to be some kind of memory leak, (caused by bad design).","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":15063,"user_id":1617737,"user_type":"registered","accept_rate":53,"profile_image":"https://i.stack.imgur.com/BSCrn.jpg?s=128&g=1","display_name":"ban-geoengineering","link":"https://stackoverflow.com/users/1617737/ban-geoengineering"},"score":0,"creation_date":1435151311},{"owner":{"reputation":13114,"user_id":2087628,"user_type":"registered","accept_rate":42,"profile_image":"https://www.gravatar.com/avatar/698fddc9acccb5115122e3150f6019fd?s=128&d=identicon&r=PG&f=1","display_name":"JaskeyLam","link":"https://stackoverflow.com/users/2087628/jaskeylam"},"score":1,"creation_date":1435198816}],"owner":{"reputation":13114,"user_id":2087628,"user_type":"registered","accept_rate":42,"profile_image":"https://www.gravatar.com/avatar/698fddc9acccb5115122e3150f6019fd?s=128&d=identicon&r=PG&f=1","display_name":"JaskeyLam","link":"https://stackoverflow.com/users/2087628/jaskeylam"},"comment_count":2,"score":4,"creation_date":1408418421,"body_markdown":"**Carelessly Using a non-static inner Class inside a class who has its own life cycle.**\r\n\r\nIn Java, **non-static inner and anonymous classes** hold an **implicit reference** to their outer class. Static inner classes, on the other hand, **do not**.\r\n\r\nHere is a common example to have memory leak in Android,which is not obvious though:\r\n\r\n    public class SampleActivity extends Activity {\r\n     \r\n      private final Handler mLeakyHandler = new Handler() { //non-static inner class, holds the reference to the SampleActivity outter class\r\n        @Override\r\n        public void handleMessage(Message msg) {\r\n          // ...\r\n        }\r\n      }\r\n     \r\n      @Override\r\n      protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n     \r\n        // Post a message and delay its execution for a long time.\r\n        mLeakyHandler.postDelayed(new Runnable() {//here, the anonymous inner class holds the reference to the SampleActivity class too\r\n          @Override\r\n          public void run() {\r\n         //.... \r\n          }\r\n        }, SOME_TOME_TIME);\r\n     \r\n        // Go back to the previous Activity.\r\n        finish();\r\n      }}\r\n\r\nThis will prevent the activity context from being garbage collected. \r\n","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":27,"user_id":4658182,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/57bd513a1bf3912510987d24a72068e9?s=128&d=identicon&r=PG&f=1","display_name":"TV Trailers","link":"https://stackoverflow.com/users/4658182/tv-trailers"},"comment_count":0,"score":-5,"creation_date":1426084687,"body_markdown":"There&#39;s no such thing as a memory leak in Java. Memory leak is a phrase borrowed from C et al. Java deals with memory allocation internally with the help of the GC. There&#39;s *memory wastefulness* (ie. leaving stranded objects), but not *memory leak*.","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":2923,"user_id":504060,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/e24394b30584fff8f4968c3713c68fbc?s=128&d=identicon&r=PG","display_name":"kiltek","link":"https://stackoverflow.com/users/504060/kiltek"},"score":0,"creation_date":1533194364},{"owner":{"reputation":2358,"user_id":3275754,"user_type":"registered","profile_image":"https://i.stack.imgur.com/3lIzi.gif?s=128&g=1","display_name":"0xDEADC0DE","link":"https://stackoverflow.com/users/3275754/0xdeadc0de"},"score":0,"creation_date":1545918746}],"owner":{"reputation":969,"user_id":2896382,"user_type":"registered","profile_image":"https://i.stack.imgur.com/mFZYD.jpg?s=128&g=1","display_name":"gurubelli","link":"https://stackoverflow.com/users/2896382/gurubelli"},"comment_count":2,"score":-4,"creation_date":1485114053,"body_markdown":"From effective java book \r\n\r\n 1. **whenever a class manages its own memory, the programmer should be\r\n    alert for memory leaks**\r\n\r\n.\r\n\r\n    public class Stack {\r\n\tprivate Object[] elements;\r\n\tprivate int size = 0;\r\n\tprivate static final int DEFAULT_INITIAL_CAPACITY = 16;\r\n\r\n\tpublic Stack() {\r\n\t\telements = new Object[DEFAULT_INITIAL_CAPACITY];\r\n\t}\r\n\r\n\tpublic void push(Object e) {\r\n\t\tensureCapacity();\r\n\t\telements[size++] = e;\r\n\t}\r\n\r\n\tpublic Object pop() {\r\n\t\tif (size == 0)\r\n\t\t\tthrow new EmptyStackException();\r\n\t\treturn elements[--size];\r\n\t}\r\n\r\n\t/**\r\n\t * Ensure space for at least one more element, roughly doubling the capacity\r\n\t * each time the array needs to grow.\r\n\t */\r\n\tprivate void ensureCapacity() {\r\n\t\tif (elements.length == size)\r\n\t\t\telements = Arrays.copyOf(elements, 2 * size + 1);\r\n\t}\r\n}\r\n\r\n   \r\nCan you spot the memory leak?\r\nSo where is the memory leak? If a stack grows and then shrinks, the objects\r\nthat were popped off the stack will not be garbage collected, even if the program\r\nusing the stack has no more references to them. This is because the stack maintains\r\nobsolete references to these objects. An obsolete reference is simply a reference\r\nthat will never be dereferenced again. In this case, any references outside of\r\nthe “active portion” of the element array are obsolete. The active portion consists\r\nof the elements whose index is less than size.","title":"How can I create a memory leak in Java?"},{"owner":{"user_type":"does_not_exist","display_name":"user1529891"},"comment_count":0,"score":6,"creation_date":1492531917,"body_markdown":"A memory leak in java is not your typical C/C++ memory leak.\r\n\r\nTo understand how the JVM works, read the [Understanding Memory Management][1].\r\n\r\nBasically, the important part is:\r\n\r\n&gt; The Mark and Sweep Model\r\n&gt; \r\n&gt; The JRockit JVM uses the mark and sweep garbage collection model for\r\n&gt; performing garbage collections of the whole heap. A mark and sweep\r\n&gt; garbage collection consists of two phases, the mark phase and the\r\n&gt; sweep phase.\r\n&gt; \r\n&gt; During the mark phase **all objects that are reachable from Java\r\n&gt; threads, native handles and other root sources are marked as alive**, as\r\n&gt; well as the objects that are reachable from these objects and so\r\n&gt; forth. **This process identifies and marks all objects that are still\r\n&gt; used, and the rest can be considered garbage.**\r\n&gt; \r\n&gt; During the sweep phase the heap is traversed to find the gaps between\r\n&gt; the live objects. These gaps are recorded in a free list and are made\r\n&gt; available for new object allocation.\r\n&gt; \r\n&gt; The JRockit JVM uses two improved versions of the mark and sweep\r\n&gt; model. One is mostly concurrent mark and sweep and the other is\r\n&gt; parallel mark and sweep. You can also mix the two strategies, running\r\n&gt; for example mostly concurrent mark and parallel sweep.\r\n\r\nSo, to create a memory leak in Java; the easiest way to do that is to create a database connection, do some work, and simply not `Close()` it; then generate a new database connection while staying in scope. This isn&#39;t hard to do in a loop for example. If you have a worker that pulls from a queue and pushes to a database you can easily create a memory leak by forgetting to `Close()` connections or opening them when not necessary, and so forth.\r\n\r\nEventually, you&#39;ll consume the heap that has been allocated to the JVM by forgetting to `Close()` the connection. This will result in the JVM garbage collecting like crazy; eventually resulting in `java.lang.OutOfMemoryError: Java heap space` errors. It should be noted that the error may not mean there is a memory leak; it could just mean you don&#39;t have enough memory; databases like Cassandra and ElasticSearch for example can throw that error because they don&#39;t have enough heap space.\r\n\r\nIts worth noting that this is true for all GC languages. Below, are some examples I&#39;ve seen working as an SRE:\r\n\r\n - Node using Redis as a queue; the development team created new connections every 12 hours and forgot to close the old ones. Eventually node was OOMd because it consumed all the memory.\r\n - Golang (I&#39;m guilty of this one); parsing large json files with `json.Unmarshal` and then passing the results by reference and keeping them open. Eventually, this resulted in the entire heap being consumed by accidental refs I kept open to decode json.\r\n\r\n  [1]: https://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/geninfo/diagnos/garbage_collect.html","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":482,"user_id":2292492,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/CD9c7.jpg?s=128&g=1","display_name":"deltamind106","link":"https://stackoverflow.com/users/2292492/deltamind106"},"comment_count":0,"score":22,"creation_date":1507921764,"body_markdown":"The interviewer was probably looking for a circular reference like the code below (which incidentally only leak memory in very old JVMs that used reference counting, which isn&#39;t the case any more).  But it&#39;s a pretty vague question, so it&#39;s a prime opportunity to show off your understanding of JVM memory management.\r\n\r\n    class A {\r\n        B bRef;\r\n    }\r\n\r\n    class B {\r\n        A aRef;\r\n    }\r\n\r\n    public class Main {\r\n        public static void main(String args[]) {\r\n            A myA = new A();\r\n            B myB = new B();\r\n            myA.bRef = myB;\r\n            myB.aRef = myA;\r\n            myA=null;\r\n            myB=null;\r\n            /* at this point, there is no access to the myA and myB objects, */\r\n            /* even though both objects still have active references. */\r\n        } /* main */\r\n    }\r\n\r\nThen you can explain that with reference counting, the above code would leak memory.  But most modern JVMs don&#39;t use reference counting any longer, most use a sweep garbage collector, which will in fact collect this memory.\r\n\r\nNext you might explain creating an Object that has an underlying native resource, like this:\r\n\r\n    public class Main {\r\n        public static void main(String args[]) {\r\n            Socket s = new Socket(InetAddress.getByName(&quot;google.com&quot;),80);\r\n            s=null;\r\n            /* at this point, because you didn&#39;t close the socket properly, */\r\n            /* you have a leak of a native descriptor, which uses memory. */\r\n        }\r\n    }\r\n\r\nThen you can explain this is technically a memory leak, but really the leak is caused by native code in the JVM allocating underlying native resources, which weren&#39;t freed by your Java code.\r\n\r\nAt the end of the day, with a modern JVM, you need to write some Java code that allocates a native resource outside the normal scope of the JVM&#39;s awareness.","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":1357,"user_id":4958332,"user_type":"registered","accept_rate":38,"profile_image":"https://i.stack.imgur.com/kvGxB.png?s=128&g=1","display_name":"Karan Khanna","link":"https://stackoverflow.com/users/4958332/karan-khanna"},"score":9,"creation_date":1524128139}],"owner":{"reputation":65,"user_id":4738608,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4890e0ad3c0a0d15fa99d96059b4c58c?s=128&d=identicon&r=PG&f=1","display_name":"akhambir","link":"https://stackoverflow.com/users/4738608/akhambir"},"comment_count":1,"score":-7,"creation_date":1511794285,"body_markdown":"Just like this!\r\n\r\n    public static void main(String[] args) {\r\n        List&lt;Object&gt; objects = new ArrayList&lt;&gt;();\r\n        while(true) {\r\n            objects.add(new Object());\r\n        }\r\n    }","title":"How can I create a memory leak in Java?"},{"comments":[{"owner":{"reputation":1357,"user_id":4958332,"user_type":"registered","accept_rate":38,"profile_image":"https://i.stack.imgur.com/kvGxB.png?s=128&g=1","display_name":"Karan Khanna","link":"https://stackoverflow.com/users/4958332/karan-khanna"},"score":0,"creation_date":1524129147},{"owner":{"reputation":15,"user_id":4268603,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d49a992154cf10f1fae58f796da5e5c7?s=128&d=identicon&r=PG&f=1","display_name":"Praveen Kumar","link":"https://stackoverflow.com/users/4268603/praveen-kumar"},"score":1,"creation_date":1524130056},{"owner":{"reputation":1357,"user_id":4958332,"user_type":"registered","accept_rate":38,"profile_image":"https://i.stack.imgur.com/kvGxB.png?s=128&g=1","display_name":"Karan Khanna","link":"https://stackoverflow.com/users/4958332/karan-khanna"},"score":0,"creation_date":1524130704}],"owner":{"reputation":15,"user_id":4268603,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d49a992154cf10f1fae58f796da5e5c7?s=128&d=identicon&r=PG&f=1","display_name":"Praveen Kumar","link":"https://stackoverflow.com/users/4268603/praveen-kumar"},"comment_count":3,"score":0,"creation_date":1517913829,"body_markdown":"A real time example of memory leak before JDK 1.7\r\n\r\nsuppose you read a file of 1000 lines of text and keep in String object\r\n\r\n    String fileText = 1000 characters from file\r\n    \r\n    fileText = fileText.subString(900, fileText.length());\r\n\r\nIn above code I initially read 1000 char and then did substring to get only 100 last characters. Now fileText should only refer to 100 chars and all other characters should get garbage collected as I lost the reference but before JDK 1.7 substring function indirectly refer to original string of last 100 chars and prevents whole string from garbage collection and whole 1000 chars will be there in memory until you loose reference of substring.\r\n\r\nyou can create memory leak example like the above","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":3321,"user_id":8524301,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/RlSIc.jpg?s=128&g=1","display_name":"Marko Pacak","link":"https://stackoverflow.com/users/8524301/marko-pacak"},"comment_count":0,"score":13,"creation_date":1524745313,"body_markdown":"Another way to create potentially huge memory leaks is to hold references to `Map.Entry&lt;K,V&gt;` of a `TreeMap`.\r\n\r\nIt is hard to asses why this applies only to `TreeMap`s, but by looking at the implementation the reason might be that: a `TreeMap.Entry` stores references to its siblings, therefore if a `TreeMap` is ready to be collected, but some other class holds a reference to any of its `Map.Entry`, then the **entire** Map will be retained into memory.\r\n\r\n\r\n----------\r\n\r\n\r\n**Real-life scenario:**\r\n\r\nImagine having a db query that returns a big `TreeMap` data structure. People usually use `TreeMap`s as the element insertion order is retained.\r\n\r\n    public static Map&lt;String, Integer&gt; pseudoQueryDatabase();\r\n\r\nIf the query was called lots of times and, for each query (so, for each `Map` returned) you save an `Entry` somewhere, the memory would constantly keep growing.\r\n\r\nConsider the following wrapper class:\r\n\r\n    class EntryHolder {\r\n        Map.Entry&lt;String, Integer&gt; entry;\r\n\r\n        EntryHolder(Map.Entry&lt;String, Integer&gt; entry) {\r\n            this.entry = entry;\r\n        }\r\n    }\r\n\r\n\r\nApplication:\r\n\r\n    public class LeakTest {\r\n\r\n        private final List&lt;EntryHolder&gt; holdersCache = new ArrayList&lt;&gt;();\r\n        private static final int MAP_SIZE = 100_000;\r\n\r\n        public void run() {\r\n            // create 500 entries each holding a reference to an Entry of a TreeMap\r\n            IntStream.range(0, 500).forEach(value -&gt; {\r\n                // create map\r\n                final Map&lt;String, Integer&gt; map = pseudoQueryDatabase();\r\n\r\n                final int index = new Random().nextInt(MAP_SIZE);\r\n\r\n                // get random entry from map\r\n                for (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) {\r\n                    if (entry.getValue().equals(index)) {\r\n                        holdersCache.add(new EntryHolder(entry));\r\n                        break;\r\n                    }\r\n                }\r\n                // to observe behavior in visualvm\r\n                try {\r\n                    Thread.sleep(500);\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        public static Map&lt;String, Integer&gt; pseudoQueryDatabase() {\r\n            final Map&lt;String, Integer&gt; map = new TreeMap&lt;&gt;();\r\n            IntStream.range(0, MAP_SIZE).forEach(i -&gt; map.put(String.valueOf(i), i));\r\n            return map;\r\n        }\r\n\r\n        public static void main(String[] args) throws Exception {\r\n            new LeakTest().run();\r\n        }\r\n    }\r\n\r\n\r\nAfter each `pseudoQueryDatabase()` call, the `map` instances should be ready for collection, but it won&#39;t happen, as at least one `Entry` is stored somewhere else.\r\n\r\nDepending on your `jvm` settings, the application may crash in the early stage due to a `OutOfMemoryError`.\r\n\r\nYou can see from this `visualvm` graph how the memory keeps growing.\r\n\r\n[![Memory dump - TreeMap][1]][1]\r\n\r\n\r\n\r\nThe same does not happen with a hashed data-structure (`HashMap`).\r\n\r\nThis is the graph when using a `HashMap`.\r\n\r\n[![Memory dump - HashMap][2]][2]\r\n\r\n\r\n\r\n**The solution?** Just directly save the key / value (as you probably already do) rather than saving the `Map.Entry`.\r\n\r\n----------\r\n\r\n\r\nI have written a more extensive benchmark [here][3].\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/Byiwn.png\r\n  [2]: https://i.stack.imgur.com/Yr3eC.png\r\n  [3]: https://stackoverflow.com/a/49430255/8524301","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":1854,"user_id":545353,"user_type":"registered","profile_image":"https://i.stack.imgur.com/o0daF.png?s=128&g=1","display_name":"Pavel Molchanov","link":"https://stackoverflow.com/users/545353/pavel-molchanov"},"comment_count":0,"score":8,"creation_date":1529614032,"body_markdown":"I want to give an advice on how to monitor application for the memory leaks with the tools that are available in JVM. It doesn&#39;t show how to generate the memory leak but explains how to detect it with minimum tools available.\r\n\r\nYou need to monitor Java memory consumption first.\r\n\r\nThe simplest way to do this is to use jstat utility that comes with JVM.\r\n\r\n    jstat -gcutil &lt;process_id&gt; &lt;timeout&gt;\r\n\r\nIt will report memory consumption for each generation (Young, Eldery and Old) and garbage collection times (Young and Full).\r\n\r\nAs soon as you spot that Full Garbage Collection is executed too often and takes too much time, you can assume that application is leaking memory.\r\n\r\nThen you need to create a memory dump using jmap utility:\r\n\r\n    jmap -dump:live,format=b,file=heap.bin &lt;process_id&gt;\r\n\r\nThen you need to analyse heap.bin file with Memory Analyser, Eclipse Memory Analyzer (MAT) for example.\r\n\r\nMAT will analyze the memory and provide you suspect information about memory leaks.","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":5843,"user_id":2361308,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/99484dc9d142352778e01ac0c4948c1d?s=128&d=identicon&r=PG","display_name":"Hearen","link":"https://stackoverflow.com/users/2361308/hearen"},"comment_count":0,"score":1,"creation_date":1553757930,"body_markdown":"&gt; a memory leak is a type of resource leak that occurs when a computer program incorrectly manages memory allocations in such a way that memory which is **no longer needed is not released** =&gt; [wiki definition](https://en.wikipedia.org/wiki/Memory_leak) \r\n\r\n\r\n&lt;sub&gt; It&#39;s kind of relatively context-based topic, you can just create one based on your taste as long as the unused references will never be used by clients but still stay alive.&lt;/sub&gt;\r\n\r\nThe first example should be a custom stack without *nulling* the obsolete references in [effective java item 6](https://www.codeproject.com/Articles/30593/Effective-Java#pre30076).\r\n\r\nOf course there are many more as long as you want, but if we just take look at the java built-in classes, it could be some as\r\n\r\n[`subList()`](https://docs.oracle.com/javase/8/docs/api/java/util/List.html#subList-int-int-)\r\n\r\nLet&#39;s check some *super silly* code to produce the leak. \r\n\r\n    public class MemoryLeak {\r\n        private static final int HUGE_SIZE = 10_000;\r\n    \r\n        public static void main(String... args) {\r\n            letsLeakNow();\r\n        }\r\n    \r\n        private static void letsLeakNow() {\r\n            Map&lt;Integer, Object&gt; leakMap = new HashMap&lt;&gt;();\r\n            for (int i = 0; i &lt; HUGE_SIZE; ++i) {\r\n                leakMap.put(i * 2, getListWithRandomNumber());\r\n            }\r\n        }\r\n    \r\n\r\n    \r\n        private static List&lt;Integer&gt; getListWithRandomNumber() {\r\n            List&lt;Integer&gt; originalHugeIntList = new ArrayList&lt;&gt;();\r\n            for (int i = 0; i &lt; HUGE_SIZE; ++i) {\r\n                originalHugeIntList.add(new Random().nextInt());\r\n            }\r\n            return originalHugeIntList.subList(0, 1);\r\n        }\r\n    }\r\n\r\n\r\nActually there is another trick we can cause memory leak using [HashMap](https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html) by taking advantage of its looking process. There are actually two types:\r\n\r\n- `hashCode()` is always the same but `equals()` are different;\r\n- use *random* `hashCode()` and `equals()` always true;\r\n\r\nWhy?\r\n\r\n[**`hashCode()` -&gt; bucket =&gt; `equals()` to locate the pair**][1]\r\n\r\n---- \r\n\r\nI was about to mention [`substring()`](https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#substring-int-int-) first and then `subList()` but it seems this issue is already fixed as its source presents in JDK 8. \r\n\r\n    public String substring(int beginIndex, int endIndex) {\r\n        if (beginIndex &lt; 0) {\r\n            throw new StringIndexOutOfBoundsException(beginIndex);\r\n        }\r\n        if (endIndex &gt; value.length) {\r\n            throw new StringIndexOutOfBoundsException(endIndex);\r\n        }\r\n        int subLen = endIndex - beginIndex;\r\n        if (subLen &lt; 0) {\r\n            throw new StringIndexOutOfBoundsException(subLen);\r\n        }\r\n        return ((beginIndex == 0) &amp;&amp; (endIndex == value.length)) ? this\r\n                : new String(value, beginIndex, subLen);\r\n    }\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/6493946/2361308","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":2848,"user_id":7580839,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/ae5334c16d2cc03e6a3bc294a962b578?s=128&d=identicon&r=PG&f=1","display_name":"Amir Fo","link":"https://stackoverflow.com/users/7580839/amir-fo"},"comment_count":0,"score":0,"creation_date":1568820272,"body_markdown":"One of the java memory leakings examples is [MySQLs memory leaking bug][1] resulting when ResultSets close method is forgotten to be called. For example:\r\n\r\n    while(true) {\r\n        ResultSet rs = database.select(query);\r\n        ...\r\n        // going to next step of loop and leaving resultset without calling rs.close();\r\n    }\r\n\r\n\r\n  [1]: https://bugs.mysql.com/bug.php?id=5022","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":1062,"user_id":11714860,"user_type":"registered","profile_image":"https://i.stack.imgur.com/e6Xo3.png?s=128&g=1","display_name":"Sapphire_Brick","link":"https://stackoverflow.com/users/11714860/sapphire-brick"},"comment_count":0,"score":2,"creation_date":1588555342,"body_markdown":"```Java\r\n\r\nimport sun.misc.Unsafe;\r\nimport java.lang.reflect.Field;\r\n\r\npublic class Main {\r\n    public static void main(String args[]) {\r\n        try {\r\n            Field f = Unsafe.class.getDeclaredField(&quot;theUnsafe&quot;);\r\n            f.setAccessible(true);\r\n            ((Unsafe) f.get(null)).allocateMemory(2000000000);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":595,"user_id":10831193,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-YMUXc-47d0g/AAAAAAAAAAI/AAAAAAAAAAc/3wehOv-MqYE/photo.jpg?sz=128","display_name":"Jessie Lesbian","link":"https://stackoverflow.com/users/10831193/jessie-lesbian"},"comment_count":0,"score":0,"creation_date":1589621250,"body_markdown":"Create a JNI function containing just a while-true loop and call it with a large object from another thread. The GC doesn&#39;t like JNI very much and is going to keep the object in memory forever.","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":37,"user_id":10556375,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-ohpmAePpLOo/AAAAAAAAAAI/AAAAAAAAAA0/6vhp0g4vq0M/photo.jpg?sz=128","display_name":"Jimmy lau","link":"https://stackoverflow.com/users/10556375/jimmy-lau"},"comment_count":0,"score":-1,"creation_date":1591417457,"body_markdown":"One of the easiest way to implement memory leak sample is to use static method.\r\n\r\nFor example\r\n```\r\nstatic List&lt;int&gt; list = new ArrayList&lt;&gt;();\r\nfor (int i = 0; i &lt; 10000; i++) {\r\n    list.add(i);\r\n}\r\n\r\nsystem.sleep();\r\n```\r\n\r\nIn this case, jvm can&#39;t release the memory of list, cuz it&#39;s a static class and it always remains memory on heap.","title":"How can I create a memory leak in Java?"},{"owner":{"reputation":1598,"user_id":12867091,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Qa0nK.jpg?s=128&g=1","display_name":"Tashkhisi","link":"https://stackoverflow.com/users/12867091/tashkhisi"},"comment_count":0,"score":2,"creation_date":1598637860,"body_markdown":"There are many good examples of memory leaks in Java, and I will mention two of them in this answer.\r\n\r\n**Example 1:**\r\n\r\nHere is a good example of a memory leak from the book *Effective Java, Third Edition* (item 7: Eliminate obsolete object references):\r\n\r\n    // Can you spot the &quot;memory leak&quot;?\r\n    public class Stack {\r\n        private static final int DEFAULT_INITIAL_CAPACITY = 16;\r\n        private Object[] elements;\r\n        private int size = 0;\r\n\r\n        public Stack() {\r\n            elements = new Object[DEFAULT_INITIAL_CAPACITY];\r\n        }\r\n\r\n        public void push(Object e) {\r\n            ensureCapacity();\r\n            elements[size++] = e;\r\n        }\r\n\r\n        public Object pop() {\r\n            if (size == 0) throw new EmptyStackException();\r\n            return elements[--size];\r\n        }\r\n\r\n        /*** Ensure space for at least one more element, roughly* doubling the capacity each time the array needs to grow.*/\r\n        private void ensureCapacity() {\r\n            if (elements.length == size) elements = Arrays.copyOf(elements, 2 * size + 1);\r\n        }\r\n    }\r\n\r\nThis is the paragraph of the book that describe why this implementation will cause a memory leak:\r\n\r\n&gt; If a stack grows and then shrinks, the objects that were popped off the\r\n&gt; stack will not be garbage collected, even if the program using  the\r\n&gt; stack  has  no  more  references  to  them.  This  is  because  the\r\n&gt; stack  maintains obsolete references to these objects. An obsolete\r\n&gt; reference is simply a reference that will never be dereferenced\r\n&gt; again. In this case, any references outside of the “active portion” of\r\n&gt; the element array are obsolete. The active portion consists of the\r\n&gt; elements whose index is less than size\r\n\r\nHere is the solution of the book to tackle this memory leak:\r\n\r\n&gt; The  fix  for  this  sort  of  problem  is  simple:  null  out\r\n&gt; references  once  they become obsolete. In the case of our Stack class,\r\n&gt; the reference to an item becomes obsolete  as  soon  as  it’s  popped\r\n&gt; off  the  stack. The  corrected  version  of  the  pop method looks like this:\r\n\r\n    public Object pop() {\r\n        if (size == 0) throw new EmptyStackException();\r\n        Object result = elements[--size];\r\n        elements[size] = null; // Eliminate obsolete reference\r\n        return result;\r\n    }\r\n\r\nBut how can we prevent a memory leak from happening? This is a good caveat from the book:\r\n\r\n&gt; Generally  speaking,  whenever  a  class  manages  its  own  memory,\r\n&gt; the  programmer should be alert for memory leaks. Whenever an element\r\n&gt; is freed, any object references contained in the element should be\r\n&gt; nulled out.\r\n\r\n**Example 2:**\r\n\r\nThe [observer pattern][1] also can cause a memory leak. You can read about this pattern in the following link: [Observer pattern][1].\r\n\r\nThis is one implementation of `Observer` pattern:\r\n\r\n    class EventSource {\r\n        public interface Observer {\r\n            void update(String event);\r\n        }\r\n\r\n        private final List&lt;Observer&gt; observers = new ArrayList&lt;&gt;();\r\n\r\n        private void notifyObservers(String event) {\r\n            observers.forEach(observer -&gt; observer.update(event)); //alternative lambda expression: observers.forEach(Observer::update);\r\n        }\r\n\r\n        public void addObserver(Observer observer) {\r\n            observers.add(observer);\r\n        }\r\n\r\n        public void scanSystemIn() {\r\n            Scanner scanner = new Scanner(System.in);\r\n            while (scanner.hasNextLine()) {\r\n                String line = scanner.nextLine();\r\n                notifyObservers(line);\r\n            }\r\n        }\r\n    }\r\n\r\nIn this implementation, `EventSource`, which is Observable in `Observer` design pattern, can hold link to `Obeserver` objects, but this link is never removed from the `observers` field in `EventSource`. So they will never be collected by the garbage collector. One solution to tackle this problem is providing another method to client for removing the aforementioned observers from `observers` field when they don&#39;t need those observers any more:\r\n\r\n    public void removeObserver(Observer observer) {\r\n        observers.remove(observer);\r\n    }\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Observer_pattern\r\n\r\n\r\n","title":"How can I create a memory leak in Java?"}],"owner":{"reputation":23898,"user_id":465179,"user_type":"registered","accept_rate":99,"profile_image":"https://www.gravatar.com/avatar/a2fa6a84c0fa7de188a4777dd2bce022?s=128&d=identicon&r=PG&f=1","display_name":"MatBanik","link":"https://stackoverflow.com/users/465179/matbanik"},"comment_count":0,"is_answered":true,"answer_count":59,"score":3384,"creation_date":1308931912,"question_id":6470651,"body_markdown":"I just had an interview, and I was asked to create a ***memory leak*** with Java.  \r\n\r\nNeedless to say, I felt pretty dumb having no clue on how to even start creating one.\r\n\r\nWhat would an example be?\r\n","link":"https://stackoverflow.com/questions/6470651/how-can-i-create-a-memory-leak-in-java","title":"How can I create a memory leak in Java?"},{"tags":["java","private","public","protected","access-modifiers"],"comments":[{"owner":{"reputation":5589,"user_id":827280,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/1c39ecec1f8d62bf8b6b27ba05904990?s=128&d=identicon&r=PG","display_name":"Museful","link":"https://stackoverflow.com/users/827280/museful"},"score":167,"creation_date":1360749413},{"owner":{"reputation":1479,"user_id":1824094,"user_type":"registered","accept_rate":20,"profile_image":"https://www.gravatar.com/avatar/dee334d11391632e5c2ba4709d942c96?s=128&d=identicon&r=PG","display_name":"Nicolas Barbulesco","link":"https://stackoverflow.com/users/1824094/nicolas-barbulesco"},"score":91,"creation_date":1377078709},{"owner":{"reputation":5589,"user_id":827280,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/1c39ecec1f8d62bf8b6b27ba05904990?s=128&d=identicon&r=PG","display_name":"Museful","link":"https://stackoverflow.com/users/827280/museful"},"score":38,"creation_date":1394794776},{"owner":{"reputation":9688,"user_id":201722,"user_type":"registered","accept_rate":95,"profile_image":"https://i.stack.imgur.com/z5MSO.jpg?s=128&g=1","display_name":"luis.espinal","link":"https://stackoverflow.com/users/201722/luis-espinal"},"score":16,"creation_date":1396878338},{"owner":{"reputation":9688,"user_id":201722,"user_type":"registered","accept_rate":95,"profile_image":"https://i.stack.imgur.com/z5MSO.jpg?s=128&g=1","display_name":"luis.espinal","link":"https://stackoverflow.com/users/201722/luis-espinal"},"score":13,"creation_date":1396878814},{"owner":{"reputation":5589,"user_id":827280,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/1c39ecec1f8d62bf8b6b27ba05904990?s=128&d=identicon&r=PG","display_name":"Museful","link":"https://stackoverflow.com/users/827280/museful"},"score":8,"creation_date":1422387828},{"owner":{"reputation":28387,"user_id":639520,"user_type":"registered","accept_rate":72,"profile_image":"https://i.stack.imgur.com/KzMc4.jpg?s=128&g=1","display_name":"E-Riz","link":"https://stackoverflow.com/users/639520/e-riz"},"score":1,"creation_date":1441121282},{"owner":{"reputation":38484,"user_id":45668,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/d4288118e4836464de401d53b60466dd?s=128&d=identicon&r=PG","display_name":"Malcolm","link":"https://stackoverflow.com/users/45668/malcolm"},"score":3,"creation_date":1446741577},{"owner":{"reputation":1479,"user_id":1824094,"user_type":"registered","accept_rate":20,"profile_image":"https://www.gravatar.com/avatar/dee334d11391632e5c2ba4709d942c96?s=128&d=identicon&r=PG","display_name":"Nicolas Barbulesco","link":"https://stackoverflow.com/users/1824094/nicolas-barbulesco"},"score":1,"creation_date":1448013742},{"owner":{"reputation":38484,"user_id":45668,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/d4288118e4836464de401d53b60466dd?s=128&d=identicon&r=PG","display_name":"Malcolm","link":"https://stackoverflow.com/users/45668/malcolm"},"score":1,"creation_date":1448013989},{"owner":{"reputation":7659,"user_id":2619038,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/ec0034cda843c9fffd6fcccb5ec689bc?s=128&d=identicon&r=PG","display_name":"NoName","link":"https://stackoverflow.com/users/2619038/noname"},"score":2,"creation_date":1498207379},{"owner":{"reputation":580,"user_id":2892515,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/e3574ef2bd4047860a03bc73b4702bbc?s=128&d=identicon&r=PG&f=1","display_name":"Enerccio","link":"https://stackoverflow.com/users/2892515/enerccio"},"score":0,"creation_date":1526627553},{"owner":{"reputation":38484,"user_id":45668,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/d4288118e4836464de401d53b60466dd?s=128&d=identicon&r=PG","display_name":"Malcolm","link":"https://stackoverflow.com/users/45668/malcolm"},"score":0,"creation_date":1526650122},{"owner":{"reputation":580,"user_id":2892515,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/e3574ef2bd4047860a03bc73b4702bbc?s=128&d=identicon&r=PG&f=1","display_name":"Enerccio","link":"https://stackoverflow.com/users/2892515/enerccio"},"score":0,"creation_date":1526738464},{"owner":{"reputation":38484,"user_id":45668,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/d4288118e4836464de401d53b60466dd?s=128&d=identicon&r=PG","display_name":"Malcolm","link":"https://stackoverflow.com/users/45668/malcolm"},"score":0,"creation_date":1526765556},{"owner":{"reputation":580,"user_id":2892515,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/e3574ef2bd4047860a03bc73b4702bbc?s=128&d=identicon&r=PG&f=1","display_name":"Enerccio","link":"https://stackoverflow.com/users/2892515/enerccio"},"score":0,"creation_date":1526880432},{"owner":{"reputation":38484,"user_id":45668,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/d4288118e4836464de401d53b60466dd?s=128&d=identicon&r=PG","display_name":"Malcolm","link":"https://stackoverflow.com/users/45668/malcolm"},"score":0,"creation_date":1526895689}],"answers":[{"comments":[{"owner":{"reputation":993,"user_id":2105539,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/3fb69f5c0744cb4e01c78c60bae497f8?s=128&d=identicon&r=PG","display_name":"niks","link":"https://stackoverflow.com/users/2105539/niks"},"score":23,"creation_date":1504254922},{"owner":{"reputation":132,"user_id":7310028,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/60ad15b84b315288035387aad18c2d9f?s=128&d=identicon&r=PG&f=1","display_name":"Deepak","link":"https://stackoverflow.com/users/7310028/deepak"},"score":2,"creation_date":1524659143},{"owner":{"reputation":1817,"user_id":1572834,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/e86142d5ef74f593fe63c44e11d2bf33?s=128&d=identicon&r=PG","display_name":"adprocas","link":"https://stackoverflow.com/users/1572834/adprocas"},"score":1,"creation_date":1525352352},{"owner":{"reputation":1817,"user_id":1572834,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/e86142d5ef74f593fe63c44e11d2bf33?s=128&d=identicon&r=PG","display_name":"adprocas","link":"https://stackoverflow.com/users/1572834/adprocas"},"score":5,"creation_date":1525352569},{"owner":{"reputation":132,"user_id":7310028,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/60ad15b84b315288035387aad18c2d9f?s=128&d=identicon&r=PG&f=1","display_name":"Deepak","link":"https://stackoverflow.com/users/7310028/deepak"},"score":1,"creation_date":1525414988},{"owner":{"reputation":1817,"user_id":1572834,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/e86142d5ef74f593fe63c44e11d2bf33?s=128&d=identicon&r=PG","display_name":"adprocas","link":"https://stackoverflow.com/users/1572834/adprocas"},"score":1,"creation_date":1525436538},{"owner":{"reputation":1817,"user_id":1572834,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/e86142d5ef74f593fe63c44e11d2bf33?s=128&d=identicon&r=PG","display_name":"adprocas","link":"https://stackoverflow.com/users/1572834/adprocas"},"score":5,"creation_date":1525436736},{"owner":{"reputation":67931,"user_id":1081110,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Fp4Pm.jpg?s=128&g=1","display_name":"Dawood ibn Kareem","link":"https://stackoverflow.com/users/1081110/dawood-ibn-kareem"},"score":7,"creation_date":1531290371},{"owner":{"reputation":2028,"user_id":4685486,"user_type":"registered","accept_rate":100,"profile_image":"https://graph.facebook.com/450173618467947/picture?type=large","display_name":"Anatolii Stepaniuk","link":"https://stackoverflow.com/users/4685486/anatolii-stepaniuk"},"score":1,"creation_date":1536217445},{"owner":{"reputation":443,"user_id":2767662,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/aa50246b5f5923f90731f6df0ed744c4?s=128&d=identicon&r=PG&f=1","display_name":"Heinzlmaen","link":"https://stackoverflow.com/users/2767662/heinzlmaen"},"score":1,"creation_date":1581001113},{"owner":{"reputation":387,"user_id":9898251,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e795cc299ab4b7e5d4fbe4a2853ce2e7?s=128&d=identicon&r=PG&f=1","display_name":"Badri Paudel","link":"https://stackoverflow.com/users/9898251/badri-paudel"},"score":2,"creation_date":1588933126},{"owner":{"reputation":101,"user_id":1315510,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1284ebb54009c4d745fa5f1bc8727b4a?s=128&d=identicon&r=PG","display_name":"jayjay","link":"https://stackoverflow.com/users/1315510/jayjay"},"score":1,"creation_date":1596062657},{"owner":{"reputation":101,"user_id":1315510,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1284ebb54009c4d745fa5f1bc8727b4a?s=128&d=identicon&r=PG","display_name":"jayjay","link":"https://stackoverflow.com/users/1315510/jayjay"},"score":2,"creation_date":1596062777},{"owner":{"reputation":3529,"user_id":8170714,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/OqwAS.jpg?s=128&g=1","display_name":"Jack","link":"https://stackoverflow.com/users/8170714/jack"},"score":4,"creation_date":1602765028},{"owner":{"reputation":3006,"user_id":2241463,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/JBAia.png?s=128&g=1","display_name":"Piovezan","link":"https://stackoverflow.com/users/2241463/piovezan"},"score":1,"creation_date":1612493839},{"owner":{"reputation":4328,"user_id":1108305,"user_type":"registered","accept_rate":47,"profile_image":"https://www.gravatar.com/avatar/4c16849c5f9444a685f62cdc2a15c3ac?s=128&d=identicon&r=PG","display_name":"M. Justin","link":"https://stackoverflow.com/users/1108305/m-justin"},"score":1,"creation_date":1613547486}],"owner":{"reputation":77634,"user_id":13673,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/167099d07f9f55d6ed7e66d911eab025?s=128&d=identicon&r=PG","display_name":"David Segonds","link":"https://stackoverflow.com/users/13673/david-segonds"},"comment_count":16,"score":5859,"creation_date":1224359870,"body_markdown":"[The official tutorial][1] may be of some use to you.\r\n\r\n----------------------------------------------------------------\r\n|               | Class | Package | Subclass&lt;br/&gt;(same pkg) | Subclass&lt;br/&gt;(diff pkg) | World  |\r\n|---------------|-------|---------|----------|----------|--------|\r\n| `public`      |   +   |    +    |    +     |     +    |   +    | \r\n| `protected`   |   +   |    +    |    +     |     +    |        | \r\n| _no modifier_ |   +   |    +    |    +     |          |        | \r\n| `private`     |   +   |         |          |          |        |\r\n\r\n\\+ : accessible&lt;br/&gt;\r\nblank : not accessible\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":8152,"user_id":2786733,"user_type":"registered","accept_rate":95,"profile_image":"https://graph.facebook.com/1183370386/picture?type=large","display_name":"Andrejs","link":"https://stackoverflow.com/users/2786733/andrejs"},"score":4,"creation_date":1456513933}],"owner":{"reputation":15961,"user_id":24243,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/78443e56a77d9c3328197ee5c952c3d7?s=128&d=identicon&r=PG","display_name":"John Nilsson","link":"https://stackoverflow.com/users/24243/john-nilsson"},"comment_count":1,"score":168,"creation_date":1224360033,"body_markdown":"Easy rule. Start with declaring everything private. And then progress towards the public as the needs arise and design warrants it.\r\n\r\nWhen exposing members ask yourself if you are exposing representation choices or abstraction choices. The first is something you want to avoid as it will introduce too many dependencies on the actual representation rather than on its observable behavior.\r\n\r\nAs a general rule I try to avoid overriding method implementations by subclassing; it&#39;s too easy to screw up the logic. Declare abstract protected methods if you intend for it to be overridden.\r\n\r\nAlso, use the @Override annotation when overriding to keep things from breaking when you refactor.","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":44020,"user_id":20471,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/35b5e9e9ccf3bfe5ff8d22b64a5234d3?s=128&d=identicon&r=PG","display_name":"Joe Phillips","link":"https://stackoverflow.com/users/20471/joe-phillips"},"comment_count":0,"score":21,"creation_date":1224360034,"body_markdown":"The difference can be found in the links already provided but which one to use usually comes down to the &quot;Principle of Least Knowledge&quot;. Only allow the least visibility that is needed.","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":35690,"user_id":76722,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/4baed26d9b00bbc7c0c706515aeb596e?s=128&d=identicon&r=PG","display_name":"Sebastian Mach","link":"https://stackoverflow.com/users/76722/sebastian-mach"},"score":26,"creation_date":1307441619},{"owner":{"reputation":2686,"user_id":317135,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/3548e17f91b81a5e134589afcabdf51a?s=128&d=identicon&r=PG","display_name":"Rhys van der Waerden","link":"https://stackoverflow.com/users/317135/rhys-van-der-waerden"},"score":30,"creation_date":1317558863},{"owner":{"reputation":7570,"user_id":168719,"user_type":"registered","accept_rate":74,"profile_image":"https://i.stack.imgur.com/QWRhg.jpg?s=128&g=1","display_name":"Konrad Morawski","link":"https://stackoverflow.com/users/168719/konrad-morawski"},"score":9,"creation_date":1381858561},{"owner":{"reputation":4043,"user_id":309334,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/ccb6132ce896551124c59844c306c632?s=128&d=identicon&r=PG","display_name":"Eponymous","link":"https://stackoverflow.com/users/309334/eponymous"},"score":15,"creation_date":1400791059},{"owner":{"reputation":5498,"user_id":2128327,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fdb32ecba89326d1528dbf8673e68b20?s=128&d=identicon&r=PG","display_name":"Khaled.K","link":"https://stackoverflow.com/users/2128327/khaled-k"},"score":1,"creation_date":1401255383},{"owner":{"reputation":3528,"user_id":509614,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/f541aec9a9f53fed5b470a31a1112418?s=128&d=identicon&r=PG","display_name":"Dennis","link":"https://stackoverflow.com/users/509614/dennis"},"score":2,"creation_date":1418033129},{"owner":{"reputation":1236,"user_id":2100584,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/236ecbd2033b1620c2ae79a0877e1bba?s=128&d=identicon&r=PG","display_name":"Tomas","link":"https://stackoverflow.com/users/2100584/tomas"},"score":0,"creation_date":1446115549},{"owner":{"reputation":293,"user_id":2691118,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/b0f8795a50219fee9de80f9f33891e10?s=128&d=identicon&r=PG&f=1","display_name":"User","link":"https://stackoverflow.com/users/2691118/user"},"score":0,"creation_date":1475920113},{"owner":{"reputation":40481,"user_id":581205,"user_type":"registered","accept_rate":72,"profile_image":"https://www.gravatar.com/avatar/2be517e3b51c48a1c514627a87a1dd53?s=128&d=identicon&r=PG&f=1","display_name":"maaartinus","link":"https://stackoverflow.com/users/581205/maaartinus"},"score":0,"creation_date":1497086647}],"owner":{"reputation":124859,"user_id":14660,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG","display_name":"Schwern","link":"https://stackoverflow.com/users/14660/schwern"},"comment_count":9,"score":512,"creation_date":1224364647,"body_markdown":"(Caveat:  I am not a Java programmer, I am a Perl programmer.  Perl has no formal protections which is perhaps why I understand the problem so well :) )\r\n\r\nPrivate\r\n-------\r\n\r\nLike you&#39;d think, only the **class** in which it is declared can see it.\r\n\r\nPackage Private\r\n---------------\r\n\r\nIt can only be seen and used by the **package** in which it was declared.  This is the default in Java (which some see as a mistake).\r\n\r\nProtected\r\n---------\r\n\r\nPackage Private + can be seen by subclasses or package members.\r\n\r\nPublic\r\n------\r\n\r\nEveryone can see it.\r\n\r\n[Published][1]\r\n--------------\r\n\r\nVisible outside the code I control.  (While not Java syntax, it is important for this discussion).\r\n\r\nC++ defines an additional level called &quot;friend&quot; and the less you know about that the better.\r\n\r\n\r\nWhen should you use what?  The whole idea is encapsulation to hide information.  As much as possible you want to hide the detail of how something is done from your users.  Why?  Because then you can change them later and not break anybody&#39;s code.  This lets you optimize, refactor, redesign, and fix bugs without worry that someone was using that code you just overhauled.\r\n\r\nSo, the rule of thumb is to make things only as visible as they have to be.  Start with private and only add more visibility as needed.  Only make public that which is absolutely necessary for the user to know, every detail you make public cramps your ability to redesign the system.\r\n\r\nIf you want users to be able to customize behaviors, rather than making internals public so they can override them, it&#39;s often a better idea to shove those guts into an object and make that interface public.  That way they can simply plug in a new object.  For example, if you were writing a CD player and wanted the &quot;go find info about this CD&quot; bit customizable, rather than make those methods public you&#39;d put all that functionality into its own object and make just your object getter/setter public.  In this way being stingy about exposing your guts encourages good composition and separation of concerns\r\n\r\nPersonally, I stick with just &quot;private&quot; and &quot;public&quot;.  Many OO languages just have that.  &quot;Protected&quot; can be handy, but it&#39;s really a cheat.  Once an interface is more than private it&#39;s outside of your control and you have to go looking in other people&#39;s code to find uses.\r\n\r\nThis is where the idea of &quot;published&quot; comes in.  Changing an interface (refactoring it) requires that you find all the code which is using it and change that, too.  If the interface is private, well no problem.  If it&#39;s protected you have to go find all your subclasses.  If it&#39;s public you have to go find all the code which uses your code.  Sometimes this is possible, for example, if you&#39;re working on corporate code that&#39;s for internal use only it doesn&#39;t matter if an interface is public.  You can grab all the code out of the corporate repository.  But if an interface is &quot;published&quot;, if there is code using it outside your control, then you&#39;re hosed.  You must support that interface or risk breaking code.  Even protected interfaces can be considered published (which is why I don&#39;t bother with protected).\r\n\r\nMany languages find the hierarchical nature of public/protected/private to be too limiting and not in line with reality.  To that end, there is the concept of a [trait class][2], but that&#39;s another show.\r\n\r\n\r\n  [1]: http://martinfowler.com/ieeeSoftware/published.pdf\r\n  [2]: http://en.wikipedia.org/wiki/Trait_class","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":2526,"user_id":26010,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/14ef739d471d306d7ff10fc0ccfd0120?s=128&d=identicon&r=PG","display_name":"Dov Wasserman","link":"https://stackoverflow.com/users/26010/dov-wasserman"},"comment_count":0,"score":9,"creation_date":1224386287,"body_markdown":"David&#39;s answer provides the meaning of each access modifier. As for when to use each, I&#39;d suggest making public all classes and the methods of each class that are meant for external use (its API), and everything else private.\r\n\r\nOver time you&#39;ll develop a sense for when to make some classes package-private and when to declare certain methods protected for use in subclasses.\r\n","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":18132,"user_id":1152500,"user_type":"registered","accept_rate":47,"profile_image":"https://www.gravatar.com/avatar/52c9add307127619573e855576ed833c?s=128&d=identicon&r=PG","display_name":"Anand","link":"https://stackoverflow.com/users/1152500/anand"},"score":0,"creation_date":1351364136}],"owner":{"reputation":470,"user_id":1081454,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fe1c6e6929241d03061c837e3621225f?s=128&d=identicon&r=PG","display_name":"dameng","link":"https://stackoverflow.com/users/1081454/dameng"},"comment_count":1,"score":12,"creation_date":1331812430,"body_markdown":"[This page writes well about the protected &amp; default access modifier][1]\r\n\r\n....\r\nProtected: Protected access modifier is the a little tricky and you can say is a superset of the default access modifier. Protected members are same as the default members as far as the access in the same package is concerned. The difference is that, the protected members are also accessible to the subclasses of the class in which the member is declared which are outside the package in which the parent class is present.\r\n\r\nBut these protected members are “accessible outside the package only through inheritance“. i.e you can access a protected member of a class in its subclass present in some other package directly as if the member is present in the subclass itself. But that protected member will not be accessible in the subclass outside the package by using parent class’s reference. \r\n....\r\n\r\n  [1]: http://sanjusoftware.wordpress.com/2007/11/06/protected-and-default-java-keyword/\r\n\r\n","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":16837,"user_id":507738,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/7ghSp.jpg?s=128&g=1","display_name":"MC Emperor","link":"https://stackoverflow.com/users/507738/mc-emperor"},"score":1,"creation_date":1535229292}],"owner":{"reputation":26139,"user_id":319931,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/KPUcH.png?s=128&g=1","display_name":"Mechanical snail","link":"https://stackoverflow.com/users/319931/mechanical-snail"},"comment_count":1,"score":117,"creation_date":1347521932,"body_markdown":"It&#39;s actually a bit more complicated than a simple grid shows. The grid tells you whether an access is allowed, but what exactly constitutes an access? Also, access levels interact with nested classes and inheritance in complex ways.\r\n\r\nThe &quot;default&quot; access (specified by the absence of a keyword) is also called [**package-private**](https://stackoverflow.com/questions/5416074/java-package-private-terminology). Exception: in an interface, no modifier means public access; modifiers other than public are forbidden. Enum constants are always public.\r\n\r\n## Summary\r\nIs an access to a member with this access specifier allowed?\r\n\r\n* Member is `private`: Only if member is defined within the same class as calling code.\r\n* Member is package private: Only if the calling code is within the member&#39;s immediately enclosing package.\r\n* Member is `protected`: Same package, or if member is defined in a superclass of the class containing the calling code.\r\n* Member is `public`: Yes.\r\n\r\n## What access specifiers apply to\r\n\r\nLocal variables and formal parameters cannot take access specifiers. Since they are inherently inaccessible to the outside according to scoping rules, they are effectively private.\r\n\r\nFor classes in the top scope, only `public` and package-private are permitted. This design choice is presumably because `protected` and `private` would be redundant at the package level (there is no inheritance of packages).\r\n\r\nAll the access specifiers are possible on class members (constructors, methods and static member functions, nested classes).\r\n\r\nRelated: https://stackoverflow.com/questions/267781/java-class-accessibility\r\n\r\n## Order\r\nThe access specifiers can be strictly ordered\r\n\r\n&gt; public &gt; protected &gt; package-private &gt; private\r\n\r\nmeaning that `public` provides the most access, `private` the least. Any reference possible on a private member is also valid for a package-private member; any reference to a package-private member is valid on a protected member, and so on. (Giving access to protected members to other classes in the same package was considered a mistake.)\r\n\r\n## Notes\r\n\r\n* [A class&#39;s methods *are* allowed to access private members of other objects of the same class.](https://stackoverflow.com/questions/676930/private-member-access-java) More precisely, a method of class C can access private members of C on objects of any subclass of C. Java doesn&#39;t support restricting access by instance, only by class. (Compare with Scala, which does support it using `private[this]`.)\r\n* You need access to a constructor to construct an object. Thus if all constructors are private, the class can only be constructed by code living within the class (typically static factory methods or static variable initializers). Similarly for package-private or protected constructors.\r\n  * Only having private constructors also means that the class cannot be subclassed externally, since Java requires a subclass&#39;s constructors to implicitly or explicitly call a superclass constructor. (It can, however, contain a nested class that subclasses it.)\r\n\r\n## Inner classes\r\nYou also have to consider *nested* scopes, such as inner classes. An example of the complexity is that inner classes have members, which themselves can take access modifiers. So you can have a private inner class with a public member; can the member be accessed? (See below.) The general rule is to look at scope and think recursively to see whether you can access each level.\r\n\r\nHowever, this is quite complicated, and for full details, [consult the Java Language Specification](http://docs.oracle.com/javase/specs/jls/se7/html/jls-6.html#jls-6.6). (Yes, there have been compiler bugs in the past.)\r\n\r\nFor a taste of how these interact, consider this example. It is possible to &quot;leak&quot; private inner classes; this is usually a warning:\r\n\r\n    class Test {\r\n        public static void main(final String ... args) {\r\n            System.out.println(Example.leakPrivateClass()); // OK\r\n            Example.leakPrivateClass().secretMethod(); // error\r\n        }\r\n    }\r\n    \r\n    class Example {\r\n        private static class NestedClass {\r\n            public void secretMethod() {\r\n                System.out.println(&quot;Hello&quot;);\r\n            }\r\n        }\r\n        public static NestedClass leakPrivateClass() {\r\n            return new NestedClass();\r\n        }\r\n    }\r\n\r\nCompiler output:\r\n\r\n    Test.java:4: secretMethod() in Example.NestedClass is defined in an inaccessible class or interface\r\n            Example.leakPrivateClass().secretMethod(); // error\r\n                                      ^\r\n    1 error\r\n\r\nSome related questions:\r\n\r\n* https://stackoverflow.com/questions/1350171/java-method-accessibility-inside-package-private-class\r\n","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":28267,"user_id":1162620,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/f8bd1c472fe5832e125fd4008578608a?s=128&d=identicon&r=PG","display_name":"Ravi","link":"https://stackoverflow.com/users/1162620/ravi"},"comment_count":0,"score":55,"creation_date":1351360160,"body_markdown":"In very short\r\n\r\n - `public`: accessible from everywhere. \r\n - `protected`: accessible by the classes of the same package and the subclasses residing in any package.\r\n - default (no modifier specified): accessible by the classes of the same package.\r\n - `private`: accessible within the same class only.","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":10624,"user_id":619860,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/6vm1N.jpg?s=128&g=1","display_name":"Hoa Nguyen","link":"https://stackoverflow.com/users/619860/hoa-nguyen"},"comment_count":0,"score":96,"creation_date":1355853689,"body_markdown":"As a rule of thumb: \r\n\r\n - `private`: class scope.\r\n - `default` (or `package-private`): package scope.\r\n - `protected`: `package scope + child` (like package, but we can subclass it from different packages). The protected modifier always keeps the &quot;parent-child&quot; relationship.\r\n - `public`: everywhere.\r\n\r\nAs a result, if we divide access right into three rights: \r\n\r\n - **(D)irect** (invoke from a method inside the same class, or via &quot;this&quot; syntax).\r\n - **(R)eference** (invoke a method using a reference to the class, or via &quot;dot&quot; syntax).\r\n - **(I)nheritance** (via subclassing).\r\n\r\nthen we have this simple table:\r\n \r\n\r\n    +—-———————————————+————————————+———————————+\r\n    |                 |    Same    | Different |\r\n    |                 |   Package  | Packages  |\r\n    +—————————————————+————————————+———————————+\r\n    | private         |   D        |           |\r\n    +—————————————————+————————————+———————————+\r\n    | package-private |            |           |\r\n    | (no modifier)   |   D R I    |           |\r\n    +—————————————————+————————————+———————————+\r\n    | protected       |   D R I    |       I   |\r\n    +—————————————————+————————————+———————————+\r\n    | public          |   D R I    |    R  I   |\r\n    +—————————————————+————————————+———————————+","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":810,"user_id":3774976,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/mww4d.jpg?s=128&g=1","display_name":"vanguard69","link":"https://stackoverflow.com/users/3774976/vanguard69"},"score":2,"creation_date":1471280004},{"owner":{"reputation":22711,"user_id":923560,"user_type":"registered","accept_rate":47,"profile_image":"https://www.gravatar.com/avatar/739dfa7b7b4580406c6e45fc8b3e3520?s=128&d=identicon&r=PG","display_name":"Abdull","link":"https://stackoverflow.com/users/923560/abdull"},"score":2,"creation_date":1471284840},{"owner":{"reputation":322577,"user_id":85371,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/6d52c235ec6dd15f30bab444103e7af2?s=128&d=identicon&r=PG","display_name":"sehe","link":"https://stackoverflow.com/users/85371/sehe"},"score":0,"creation_date":1512908649},{"owner":{"reputation":322577,"user_id":85371,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/6d52c235ec6dd15f30bab444103e7af2?s=128&d=identicon&r=PG","display_name":"sehe","link":"https://stackoverflow.com/users/85371/sehe"},"score":0,"creation_date":1512908948},{"owner":{"reputation":18006,"user_id":165071,"user_type":"registered","accept_rate":96,"profile_image":"https://i.stack.imgur.com/EWdkL.jpg?s=128&g=1","display_name":"Alexander Farber","link":"https://stackoverflow.com/users/165071/alexander-farber"},"score":0,"creation_date":1512915986},{"owner":{"reputation":2623,"user_id":1740154,"user_type":"registered","profile_image":"https://i.stack.imgur.com/keyyz.jpg?s=128&g=1","display_name":"twitchdotcom slash KANJICODER","link":"https://stackoverflow.com/users/1740154/twitchdotcom-slash-kanjicoder"},"score":0,"creation_date":1531717715}],"owner":{"reputation":22711,"user_id":923560,"user_type":"registered","accept_rate":47,"profile_image":"https://www.gravatar.com/avatar/739dfa7b7b4580406c6e45fc8b3e3520?s=128&d=identicon&r=PG","display_name":"Abdull","link":"https://stackoverflow.com/users/923560/abdull"},"comment_count":6,"score":210,"creation_date":1357767760,"body_markdown":"    ____________________________________________________________________\r\n                    | highest precedence &lt;---------&gt; lowest precedence\r\n    *———————————————+———————————————+———————————+———————————————+———————\r\n     \\ xCanBeSeenBy | this          | any class | this subclass | any\r\n      \\__________   | class         | in same   | in another    | class\r\n                 \\  | nonsubbed     | package   | package       |    \r\n    Modifier of x \\ |               |           |               |       \r\n    ————————————————*———————————————+———————————+———————————————+———————\r\n    public          |       ✔       |     ✔     |       ✔       |   ✔  \r\n    ————————————————+———————————————+———————————+———————————————+———————\r\n    protected       |       ✔       |     ✔     |       ✔       |   ✘   \r\n    ————————————————+———————————————+———————————+———————————————+———————\r\n    package-private |               |           |               |\r\n    (no modifier)   |       ✔       |     ✔     |       ✘       |   ✘   \r\n    ————————————————+———————————————+———————————+———————————————+———————\r\n    private         |       ✔       |     ✘     |       ✘       |   ✘    \r\n    ____________________________________________________________________","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":105922,"user_id":597657,"user_type":"registered","accept_rate":99,"profile_image":"https://i.stack.imgur.com/0h5ec.jpg?s=128&g=1","display_name":"Eng.Fouad","link":"https://stackoverflow.com/users/597657/eng-fouad"},"score":0,"creation_date":1384546093},{"owner":{"reputation":2249,"user_id":4037019,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/nveNe.jpg?s=128&g=1","display_name":"cst1992","link":"https://stackoverflow.com/users/4037019/cst1992"},"score":0,"creation_date":1509182294},{"owner":{"reputation":12146,"user_id":2985643,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/eaacaf1426f7e6d02914fcf99dc0a33b?s=128&d=identicon&r=PG&f=1","display_name":"skomisa","link":"https://stackoverflow.com/users/2985643/skomisa"},"score":1,"creation_date":1517334917},{"owner":{"reputation":67931,"user_id":1081110,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Fp4Pm.jpg?s=128&g=1","display_name":"Dawood ibn Kareem","link":"https://stackoverflow.com/users/1081110/dawood-ibn-kareem"},"score":1,"creation_date":1531290057}],"owner":{"reputation":105922,"user_id":597657,"user_type":"registered","accept_rate":99,"profile_image":"https://i.stack.imgur.com/0h5ec.jpg?s=128&g=1","display_name":"Eng.Fouad","link":"https://stackoverflow.com/users/597657/eng-fouad"},"comment_count":4,"score":48,"creation_date":1384546016,"body_markdown":"The most misunderstood access modifier in Java is `protected`. We know that it&#39;s similar to the default modifier with one exception in which subclasses can see it. But how? Here is an example which hopefully clarifies the confusion:\r\n\r\n - Assume that we have 2 classes; `Father` and `Son`, each in its own package:\r\n        \r\n        package fatherpackage;\r\n        \r\n        public class Father\r\n        {\r\n            \r\n        }\r\n        \r\n        -------------------------------------------\r\n        \r\n        package sonpackage;\r\n        \r\n        public class Son extends Father\r\n        {\r\n            \r\n        }\r\n\r\n - Let&#39;s add a protected method `foo()` to `Father`.\r\n        \r\n        package fatherpackage;\r\n        \r\n        public class Father\r\n        {\r\n            protected void foo(){}\r\n        }\r\n\r\n - The method `foo()` can be called in 4 contexts:\r\n\r\n  1. Inside a class that is located in the same package where `foo()` is defined (`fatherpackage`):\r\n            \r\n            package fatherpackage;\r\n            \r\n            public class SomeClass\r\n            {\r\n                public void someMethod(Father f, Son s)\r\n                {\r\n                    f.foo();\r\n                    s.foo();\r\n                }\r\n            }\r\n\r\n 2. Inside a subclass, on the current instance via `this` or `super`:\r\n            \r\n            package sonpackage;\r\n            \r\n            public class Son extends Father\r\n            {\r\n                public void sonMethod()\r\n                {\r\n                    this.foo();\r\n                    super.foo();\r\n                }\r\n            }\r\n\r\n 3. On an reference whose type is the same class:\r\n\r\n            package fatherpackage;\r\n            \r\n            public class Father\r\n            {\r\n                public void fatherMethod(Father f)\r\n                {\r\n                    f.foo(); // valid even if foo() is private\r\n                }\r\n            }\r\n            \r\n            -------------------------------------------\r\n            \r\n            package sonpackage;\r\n            \r\n            public class Son extends Father\r\n            {\r\n                public void sonMethod(Son s)\r\n                {\r\n                    s.foo();\r\n                }\r\n            }\r\n\r\n  4. On an reference whose type is the parent class and it is *inside* the package where `foo()` is defined (`fatherpackage`) [This can be included inside context no. 1]:\r\n            \r\n            package fatherpackage;\r\n            \r\n            public class Son extends Father\r\n            {\r\n                public void sonMethod(Father f)\r\n                {\r\n                    f.foo();\r\n                }\r\n            }\r\n\r\n - The following situations are not valid.\r\n\r\n  1. On an reference whose type is the parent class and it is *outside* the package where `foo()` is defined (`fatherpackage`):\r\n            \r\n            package sonpackage;\r\n            \r\n            public class Son extends Father\r\n            {\r\n                public void sonMethod(Father f)\r\n                {\r\n                    f.foo(); // compilation error\r\n                }\r\n            }\r\n\r\n   2. A non-subclass inside a package of a subclass (A subclass inherits the protected members from its parent, and it makes them private to non-subclasses):\r\n            \r\n            package sonpackage;\r\n            \r\n            public class SomeClass\r\n            {\r\n                public void someMethod(Son s) throws Exception\r\n                {\r\n                    s.foo(); // compilation error\r\n                }\r\n            }","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":11314,"user_id":2675669,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/f2327502011281008ec6ec6dec6b7873?s=128&d=identicon&r=PG&f=1","display_name":"Nambi","link":"https://stackoverflow.com/users/2675669/nambi"},"comment_count":0,"score":30,"creation_date":1390396136,"body_markdown":"**Private**\r\n----------\r\n \r\n\r\n - Methods,Variables and Constructors\r\n\r\n*Methods, Variables and Constructors that are declared private can only be accessed within the declared class itself.*\r\n\r\n - Class and Interface\r\n\r\n*Private access modifier is the most restrictive access level. Class and interfaces cannot be private.*\r\n\r\n***Note***\r\n\r\n*Variables that are declared private can be accessed outside the class if public getter methods are present in the class.\r\nVariables, methods and constructors which are declared protected in a superclass can be accessed only by the subclasses in other package or any class within the package of the protected members&#39; class.*\r\n&lt;B&gt;&lt;hr/&gt;&lt;/B&gt;\r\n**Protected**\r\n-------------\r\n\r\n - *Class and Interface*\r\n\r\n*The protected access modifier cannot be applied to class and interfaces.*\r\n\r\n\r\n *Methods, fields can be declared protected, however methods and fields in a interface cannot be declared protected.*\r\n\r\n***Note***\r\n\r\n*Protected access gives the subclass a chance to use the helper method or variable, while preventing a nonrelated class from trying to use it.*\r\n\r\n&lt;B&gt;&lt;hr/&gt;&lt;/B&gt;\r\n**Public**\r\n-----------\r\n\r\n*A class, method, constructor, interface etc declared public can be accessed from any other class.* \r\n\r\n*Therefore fields, methods, blocks declared inside a public class can be accessed from any class belonging to the Java Universe.*\r\n\r\n - *Different Packages*\r\n\r\n*However if the public class we are trying to access is in a different package, then the public class still need to be imported.*\r\n\r\n*Because of class inheritance, all public methods and variables of a class are inherited by its subclasses.*\r\n\r\n&lt;B&gt;&lt;hr/&gt;&lt;/B&gt;\r\n**Default -No keyword:**\r\n-----------------------\r\n\r\n*Default access modifier means we do not explicitly declare an access modifier for a class, field, method, etc.*\r\n\r\n - *Within the same Packages*\r\n\r\n*A variable or method declared without any access control modifier is available to any other class in the same package. The fields in an interface are implicitly public static final and the methods in an interface are by default public.*\r\n\r\n***Note***\r\n\r\nWe cannot Override the Static fields.if you try to override it does not show any error \r\nbut it doesnot work what we except.\r\n\r\n\r\nRelated Answers\r\n---------------\r\n\r\n - [**Overriding static methods in java**][1]\r\n\r\n\r\nReferences links\r\n----------------\r\n\r\n[http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html][2]\r\n[http://www.tutorialspoint.com/java/java_access_modifiers.htm][3] \r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/16617408/overriding-static-methods-in-java\r\n  [2]: http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html\r\n  [3]: http://www.tutorialspoint.com/java/java_access_modifiers.htm","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":631,"user_id":1142548,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/ce15808d3c378b33f5be35fc063f9d96?s=128&d=identicon&r=PG","display_name":"samkit shah","link":"https://stackoverflow.com/users/1142548/samkit-shah"},"comment_count":0,"score":20,"creation_date":1403075582,"body_markdown":"**Private**: Limited access to class only&lt;/br&gt;\r\n\r\n**Default (no modifier)**: Limited access to class and package&lt;/br&gt;\r\n\r\n**Protected**: Limited access to class, package and subclasses (both inside and outside package)\r\n\r\n**Public**: Accessible to class, package (all), and subclasses... In short, everywhere.\r\n\r\n","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1474686829}],"owner":{"reputation":111,"user_id":2310069,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1153b54701b10e9c70c02ccc770ed011?s=128&d=identicon&r=PG","display_name":"richa_v","link":"https://stackoverflow.com/users/2310069/richa-v"},"comment_count":1,"score":5,"creation_date":1406692300,"body_markdown":"Public Protected Default and private are access modifiers.\r\n\r\nThey are meant for encapsulation, or hiding and showing contents of the class.\r\n\r\n1. Class can be public or default\r\n2. Class members can be public, protected, default or private.\r\n\r\nPrivate is not accessible outside the class\r\nDefault is accessible only in the package.\r\nProtected in package as well as any class which extends it.\r\nPublic is open for all.\r\n\r\nNormally, member variables are defined private, but member methods are public.","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":2488,"user_id":2987706,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/5Q9zt.jpg?s=128&g=1","display_name":"Prashant","link":"https://stackoverflow.com/users/2987706/prashant"},"comment_count":0,"score":17,"creation_date":1418797744,"body_markdown":"Access modifiers are there to restrict access at several levels.\r\n\r\n**Public:** It is basically as simple as you can access from any class whether that is in same package or not.\r\n\r\nTo access if you are in same package you can access directly, but if you are in another package then you can create an object of the class.\r\n\r\n**Default:** It is accessible in the same package from any of the class of package.\r\n\r\nTo access you can create an object of the class. But you can not access this variable outside of the package.\r\n\r\n\r\n\r\n**Protected:** you can access variables in same package as well as subclass in any other package.\r\nso basically it is **default + Inherited** behavior.\r\n\r\nTo access protected field defined in base class you can create object of child class.\r\n\r\n**Private:**  it can be access in same class.\r\n\r\nIn non-static methods you can access directly because of **this** reference (also in constructors)but to access in static methods you need to create object of the class.\r\n\r\n","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":952,"user_id":4395148,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B1SrS.jpg?s=128&g=1","display_name":"amila isura","link":"https://stackoverflow.com/users/4395148/amila-isura"},"comment_count":0,"score":14,"creation_date":1432652066,"body_markdown":"Visible to the package. The default. No modifiers are needed.\r\n\r\nVisible to the class only (**private**).\r\n\r\nVisible to the world (**public**).\r\n\r\nVisible to the package and all subclasses (**protected**).\r\n\r\n\r\nVariables and methods can be declared without any modifiers that are called. Default examples:\r\n\r\n    String name = &quot;john&quot;;\r\n\r\n    public int age(){\r\n        return age;\r\n    }\r\n\r\nPrivate access modifier - private:\r\n\r\nMethods, variables and constructors that are declared private can only be accessed within the declared class itself. The private access modifier is the most restrictive access level. Class and interfaces cannot be private.\r\n\r\nVariables that are declared private can be accessed outside the class if public getter methods are present in the class.\r\n\r\nUsing the private modifier is the main way that an object encapsulates itself and hides data from the outside world.\r\n\r\nExamples:\r\n\r\n    Public class Details{\r\n\r\n        private String name;\r\n\r\n        public void setName(String n){\r\n            this.name = n;\r\n        }\r\n\r\n        public String getName(){\r\n            return this.name;\r\n        }\r\n    }\r\n\r\nPublic access modifier - public:\r\n\r\nA class, method, constructor, interface, etc. declared public can be accessed from any other class. Therefore fields, methods, blocks declared inside a public class can be accessed from any class belonging to the Java universe.\r\n\r\nHowever, if the public class we are trying to access is in a different package, then the public class still need to be imported.\r\n\r\nBecause of class inheritance, all public methods and variables of a class are inherited by its subclasses.\r\n\r\nExample:\r\n\r\n    public void cal(){\r\n\r\n    }\r\n\r\nProtected access modifier - protected:\r\n\r\nVariables, methods and constructors which are declared protected in a superclass can be accessed only by the subclasses in another package or any class within the package of the protected members&#39; class.\r\n\r\nThe protected access modifier cannot be applied to class and interfaces. Methods, fields can be declared protected, however methods and fields in a interface cannot be declared protected.\r\n\r\nProtected access gives the subclass a chance to use the helper method or variable, while preventing a nonrelated class from trying to use it.\r\n\r\n    class Van{\r\n\r\n        protected boolean speed(){\r\n\r\n        }\r\n    }\r\n\r\n    class Car{\r\n        boolean speed(){\r\n        }\r\n\r\n    }\r\n","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":417,"user_id":2550410,"user_type":"registered","profile_image":"https://i.stack.imgur.com/mT92n.jpg?s=128&g=1","display_name":"Shailendra Singh","link":"https://stackoverflow.com/users/2550410/shailendra-singh"},"comment_count":0,"score":14,"creation_date":1440832533,"body_markdown":" - **public** - accessible from anywhere in the application.\r\n\r\n - **default** - accessible from package.\r\n\r\n - **protected** - accessible from package and sub-classes in other package.\r\n   as well\r\n\r\n - **private** - accessible from its class only.\r\n","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":125668,"user_id":1531124,"user_type":"registered","accept_rate":96,"profile_image":"https://i.stack.imgur.com/zw18i.png?s=128&g=1","display_name":"GhostCat","link":"https://stackoverflow.com/users/1531124/ghostcat"},"score":14,"creation_date":1539255055},{"owner":{"reputation":379194,"user_id":276052,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/UcrhR.jpg?s=128&g=1","display_name":"aioobe","link":"https://stackoverflow.com/users/276052/aioobe"},"score":5,"creation_date":1542204601},{"owner":{"reputation":125668,"user_id":1531124,"user_type":"registered","accept_rate":96,"profile_image":"https://i.stack.imgur.com/zw18i.png?s=128&g=1","display_name":"GhostCat","link":"https://stackoverflow.com/users/1531124/ghostcat"},"score":8,"creation_date":1542204781},{"owner":{"reputation":379194,"user_id":276052,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/UcrhR.jpg?s=128&g=1","display_name":"aioobe","link":"https://stackoverflow.com/users/276052/aioobe"},"score":7,"creation_date":1542205971},{"owner":{"reputation":125668,"user_id":1531124,"user_type":"registered","accept_rate":96,"profile_image":"https://i.stack.imgur.com/zw18i.png?s=128&g=1","display_name":"GhostCat","link":"https://stackoverflow.com/users/1531124/ghostcat"},"score":4,"creation_date":1542206426},{"owner":{"reputation":330,"user_id":8094897,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3ebed1a42fc693cacc097c7f567cebe6?s=128&d=identicon&r=PG&f=1","display_name":"RMati","link":"https://stackoverflow.com/users/8094897/rmati"},"score":1,"creation_date":1561354004},{"owner":{"reputation":538,"user_id":10030693,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-ZIG43NDeCwE/AAAAAAAAAAI/AAAAAAAAAVc/QImMCtmMqy8/photo.jpg?sz=128","display_name":"Gilboot","link":"https://stackoverflow.com/users/10030693/gilboot"},"score":0,"creation_date":1593286990}],"owner":{"reputation":379194,"user_id":276052,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/UcrhR.jpg?s=128&g=1","display_name":"aioobe","link":"https://stackoverflow.com/users/276052/aioobe"},"comment_count":7,"score":455,"creation_date":1447151220,"body_markdown":"Here&#39;s a better version of the table, that also includes a column for modules.\r\n&lt;br /&gt;\r\n\r\n[![Java Access Modifiers][1]][1]\r\n\r\n&lt;!-- SVG: https://gist.github.com/aioobe/6de46982f859b30fc849819718d6ae64 --&gt;\r\n----------\r\n\r\n\r\nExplanations\r\n--\r\n\r\n- A **private** member (`i`) is *only* accessible within the same class as it is declared.\r\n\r\n- A member with **no access modifier** (`j`) is only accessible within classes in the same package.\r\n\r\n- A **protected** member (`k`) is accessible within all classes in the same package *and* within subclasses in other packages.\r\n\r\n- A **public** member (`l`) is accessible to all classes (unless it resides in a [module](http://openjdk.java.net/projects/jigsaw/spec/sotms/) that does not export the package it is declared in).\r\n\r\n\r\n----------\r\n\r\n\r\nWhich modifier to choose?\r\n--\r\nAccess modifiers is a tool to help you to prevent accidentally breaking encapsulation&lt;sup&gt;(*)&lt;/sup&gt;. Ask yourself if you intend the member to be something that&#39;s internal to the class, package, class hierarchy or not internal at all, and choose access level accordingly.\r\n\r\n**Examples:**\r\n\r\n- A field `long internalCounter` should probably be private since it&#39;s mutable and an implementation detail.\r\n- A class that should only be instantiated in a factory class (in the same package) should have a package restricted constructor, since it shouldn&#39;t be possible to call it directly from outside the package.\r\n- An internal `void beforeRender()` method called right before rendering and used as a hook in subclasses should be protected.\r\n- A `void saveGame(File dst)` method which is called from the GUI code should be public.\r\n\r\n&lt;sup&gt;(*) https://stackoverflow.com/questions/28612420/what-is-encapsulation-exactly&lt;/sup&gt;\r\n\r\n  [1]: https://i.stack.imgur.com/hzv3z.png","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":2315,"user_id":1599792,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/3b6ab26200351bbab5646c58c1daddc4?s=128&d=identicon&r=PG&f=1","display_name":"Affy","link":"https://stackoverflow.com/users/1599792/affy"},"comment_count":0,"score":17,"creation_date":1470579416,"body_markdown":"**Access modifiers in Java.**\n\nJava access modifiers are used to provide access control in Java.\n\n**1. Default:**\n\nAccessible to the classes in the same package only.\n\nFor example,\n\n    // Saved in file A.java\n    package pack;\n\n    class A{\n      void msg(){System.out.println(&quot;Hello&quot;);}\n    }\n\n    // Saved in file B.java\n    package mypack;\n    import pack.*;\n\n    class B{\n      public static void main(String args[]){\n       A obj = new A(); // Compile Time Error\n       obj.msg(); // Compile Time Error\n      }\n    }\n\n\nThis access is more restricted than public and protected, but less restricted than private.\n\n**2. Public**\n\n  Can be accessed from anywhere. (Global Access)\n\nFor example,\n\n    // Saved in file A.java\n\n    package pack;\n    public class A{\n      public void msg(){System.out.println(&quot;Hello&quot;);}\n    }\n\n    // Saved in file B.java\n\n    package mypack;\n    import pack.*;\n\n    class B{\n      public static void main(String args[]){\n        A obj = new A();\n        obj.msg();\n      }\n    }\n\n&gt; Output:Hello\n\n\n**3. Private**\n\nAccessible only inside the same class.\n\nIf you try to access private members on one class in another will throw compile error. For example,\n\n    class A{\n      private int data = 40;\n      private void msg(){System.out.println(&quot;Hello java&quot;);}\n    }\n\n    public class Simple{\n      public static void main(String args[]){\n        A obj = new A();\n        System.out.println(obj.data); // Compile Time Error\n        obj.msg(); // Compile Time Error\n      }\n    }\n\n**4. Protected**\n\nAccessible only to the classes in the same package and to the subclasses\n\nFor example,\n\n    // Saved in file A.java\n    package pack;\n    public class A{\n      protected void msg(){System.out.println(&quot;Hello&quot;);}\n    }\n\n    // Saved in file B.java\n    package mypack;\n    import pack.*;\n\n    class B extends A{\n      public static void main(String args[]){\n        B obj = new B();\n        obj.msg();\n      }\n    }\n\n&gt; Output: Hello\n\n[![Enter image description here][1]][1]\n\n  [1]: http://i.stack.imgur.com/E5c6l.png\n","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":322577,"user_id":85371,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/6d52c235ec6dd15f30bab444103e7af2?s=128&d=identicon&r=PG","display_name":"sehe","link":"https://stackoverflow.com/users/85371/sehe"},"score":1,"creation_date":1479397171},{"owner":{"reputation":21754,"user_id":4758255,"user_type":"registered","profile_image":"https://i.stack.imgur.com/SBvf3.jpg?s=128&g=1","display_name":"ישו אוהב אותך","link":"https://stackoverflow.com/users/4758255/%d7%99%d7%a9%d7%95-%d7%90%d7%95%d7%94%d7%91-%d7%90%d7%95%d7%aa%d7%9a"},"score":0,"creation_date":1479435925}],"owner":{"reputation":21754,"user_id":4758255,"user_type":"registered","profile_image":"https://i.stack.imgur.com/SBvf3.jpg?s=128&g=1","display_name":"ישו אוהב אותך","link":"https://stackoverflow.com/users/4758255/%d7%99%d7%a9%d7%95-%d7%90%d7%95%d7%94%d7%91-%d7%90%d7%95%d7%aa%d7%9a"},"comment_count":2,"score":6,"creation_date":1479359101,"body_markdown":"Note: *This is just a **supplement** for the accepted answer.*\r\n\r\nThis is related to Java [Access Modifiers](https://en.wikipedia.org/wiki/Access_modifiers).\r\n\r\nFrom [Java Access Modifiers](http://tutorials.jenkov.com/java/access-modifiers.html):  \r\n\r\n&gt; A Java access modifier specifies which classes can access a given\r\n&gt; class and its fields, constructors and methods. Access modifiers can\r\n&gt; be specified separately for a class, its constructors, fields and\r\n&gt; methods. Java access modifiers are also sometimes referred to in daily\r\n&gt; speech as Java access specifiers, but the correct name is Java access\r\n&gt; modifiers. Classes, fields, constructors and methods can have one of\r\n&gt; four different Java access modifiers:\r\n&gt; \r\n&gt;  - List item\r\n&gt;  - private\r\n&gt;  - default (package)\r\n&gt;  - protected\r\n&gt;  - public\r\n\r\nFrom [Controlling Access to Members of a Class](https://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html) tutorials:\r\n\r\n&gt; Access level modifiers determine whether other classes can use a\r\n&gt; particular field or invoke a particular method. There are two levels\r\n&gt; of access control:\r\n&gt; \r\n&gt;  - At the top level—public, or package-private (no explicit modifier).\r\n&gt;  - At the member level—public, private, protected, or package-private (no explicit modifier).  \r\n&gt; \r\n&gt; A class may be declared with the modifier public, in which case that\r\n&gt; class is visible to all classes everywhere. If a class has no modifier\r\n&gt; (the default, also known as package-private), it is visible only\r\n&gt; within its own package\r\n&gt; \r\n&gt; The following table shows the access to members permitted by each\r\n&gt; modifier.\r\n&gt; \r\n&gt;     ╔═════════════╦═══════╦═════════╦══════════╦═══════╗\r\n&gt;     ║ Modifier    ║ Class ║ Package ║ Subclass ║ World ║\r\n&gt;     ╠═════════════╬═══════╬═════════╬══════════╬═══════╣\r\n&gt;     ║ public      ║ Y     ║ Y       ║ Y        ║ Y     ║\r\n&gt;     ║ protected   ║ Y     ║ Y       ║ Y        ║ N     ║\r\n&gt;     ║ no modifier ║ Y     ║ Y       ║ N        ║ N     ║\r\n&gt;     ║ private     ║ Y     ║ N       ║ N        ║ N     ║\r\n&gt;     ╚═════════════╩═══════╩═════════╩══════════╩═══════╝\r\n&gt; \r\n&gt; The first data column indicates whether the class itself has access to\r\n&gt; the member defined by the access level. As you can see, a class always\r\n&gt; has access to its own members. The second column indicates whether\r\n&gt; classes in the same package as the class (regardless of their\r\n&gt; parentage) have access to the member. The third column indicates\r\n&gt; whether subclasses of the class declared outside this package have\r\n&gt; access to the member. The fourth column indicates whether all classes\r\n&gt; have access to the member.\r\n&gt; \r\n&gt; Access levels affect you in two ways. First, when you use classes that\r\n&gt; come from another source, such as the classes in the Java platform,\r\n&gt; access levels determine which members of those classes your own\r\n&gt; classes can use. Second, when you write a class, you need to decide\r\n&gt; what access level every member variable and every method in your class\r\n&gt; should have.","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":71,"user_id":7696246,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/cec0a890fd3849e73474091473059d87?s=128&d=identicon&r=PG&f=1","display_name":"Greedy Coder","link":"https://stackoverflow.com/users/7696246/greedy-coder"},"comment_count":0,"score":5,"creation_date":1491451762,"body_markdown":"Often times I&#39;ve realized that remembering the basic concepts of any language can made possible by creating real-world analogies. Here is my analogy for understanding access modifiers in Java:\r\n\r\nLet&#39;s assume that you&#39;re a student at a university and you have a friend who&#39;s coming to visit you over the weekend. Suppose there exists a big statue of the university&#39;s founder in the middle of the campus.\r\n\r\n- When you bring him to the campus, the first thing that you and your friend sees is this statue. This means that anyone who walks in the campus can look at the statue without the university&#39;s permission. This makes the statue as **PUBLIC**.\r\n\r\n- Next, you want to take your friend to your dorm, but for that you need to register him as a visitor. This means that he gets an access pass (which is the same as yours) to get into various buildings on campus. This would make his access card as **PROTECTED**.\r\n\r\n- Your friend wants to login to the campus WiFi but doesn&#39;t have the any credentials to do so. The only way he can get online is if you share your login with him. (Remember, every student who goes to the university also possesses these login credentials). This would make your login credentials as **NO MODIFIER**.\r\n\r\n- Finally, your friend wants to read your progress report for the semester which is posted on the website. However, every student has their own personal login to access this section of the campus website. This would make these credentials as **PRIVATE**.\r\n\r\nHope this helps!","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":15019,"user_id":1475228,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/TgQ5O.png?s=128&g=1","display_name":"Pritam Banerjee","link":"https://stackoverflow.com/users/1475228/pritam-banerjee"},"comment_count":0,"score":4,"creation_date":1498530796,"body_markdown":"When you are thinking of access modifiers just think of it in this way (applies to both **variables** and **methods**):\r\n\r\n`public` --&gt; accessible from every where  \r\n`private` --&gt; accessible only within the same class where it is declared\r\n\r\nNow the confusion arises when it comes to `default` and `protected`\r\n\r\n`default` --&gt; No access modifier keyword is present. This means it is available strictly within the package of the class. **Nowhere** outside that package it can be accessed.\r\n\r\n`protected` --&gt; Slightly less stricter than `default` and apart from the same package classes it can be accessed by sub classes outside the *package* it is declared. ","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":13302,"user_id":657427,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/dd071a6a7c97ba637c558c5e71137c7b?s=128&d=identicon&r=PG","display_name":"Christophe Roussy","link":"https://stackoverflow.com/users/657427/christophe-roussy"},"comment_count":0,"score":2,"creation_date":1518602128,"body_markdown":"It is all about **encapsulation** (or as Joe Phillips stated, *least knowledge*).\r\n\r\nStart with the most restrictive (private) and see if you need less restrictive modifiers later on.\r\n\r\nWe all use method and member modifiers like private, public, ... but one thing too few developers do is use packages to **organize** code logically.\r\n\r\nFor example:\r\nYou may put sensitive security methods in a &#39;security&#39; package.\r\nThen put a public class which accesses some of the security related code in this package but keep other security classes **package private**.\r\nThus other developers will only be able to use the publicly available class from outside of this package (unless they change the modifier).\r\nThis is not a security feature, but will **guide** usage.\r\n\r\n    Outside world -&gt; Package (SecurityEntryClass ---&gt; Package private classes)\r\n\r\nAnother thing is that classes which depend a lot on each other may end up in the same package and could eventually be refactored or merged if the dependency is too strong.\r\n\r\nIf on the contrary you set everything as **public** it will not be clear what should or should not be accessed, which may lead to writing a lot of javadoc (which does not enforce anything via the compiler...).\r\n","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":93,"user_id":9858025,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b0032c4ccf8f16f8aa33e366f1c833a2?s=128&d=identicon&r=PG","display_name":"Vipul Verma","link":"https://stackoverflow.com/users/9858025/vipul-verma"},"comment_count":0,"score":1,"creation_date":1568932452,"body_markdown":" - public\r\n\r\n If a class member is declared with public then it can be accessed from anywhere\r\n\r\n - protected\r\n\r\n    If a class member is declared with keyword protected then it can be accessed from same class members, outside class members within the same package and inherited class members. If a class member is protected then it can NOT be accessed from outside package class unless the outside packaged class is inherited i.e. extends the other package superclass. But a protected class member is always available to same package classes it does NOT matter weather the same package class is inherited or NOT\r\n\r\n\r\n - default\r\n\r\n    In Java default is NOT an access modifier keyword. If a class member is declared without any access modifier keyword then in this case it is considered as default member. The default class member is always available to same package class members. But outside package class member can NOT access default class members even if outside classes are subclasses unlike protected members\r\n\r\n - private\r\n\r\n  If a class member is declared with keyword protected then in this case it is available ONLY to same class members","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":4255,"user_id":6271180,"user_type":"registered","profile_image":"https://i.stack.imgur.com/TEiRn.png?s=128&g=1","display_name":"Benoit","link":"https://stackoverflow.com/users/6271180/benoit"},"score":1,"creation_date":1568969873},{"owner":{"reputation":654,"user_id":6461839,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7d5df1ab8186ea7627323566e0763aac?s=128&d=identicon&r=PG&f=1","display_name":"leonidaa","link":"https://stackoverflow.com/users/6461839/leonidaa"},"score":1,"creation_date":1569148298},{"owner":{"reputation":4255,"user_id":6271180,"user_type":"registered","profile_image":"https://i.stack.imgur.com/TEiRn.png?s=128&g=1","display_name":"Benoit","link":"https://stackoverflow.com/users/6271180/benoit"},"score":2,"creation_date":1569230124},{"owner":{"reputation":1222,"user_id":7551092,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1a0e2bab392d96de1d0c26a683e8ff78?s=128&d=identicon&r=PG&f=1","display_name":"mss","link":"https://stackoverflow.com/users/7551092/mss"},"score":1,"creation_date":1578045286},{"owner":{"reputation":1221,"user_id":4026629,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ca5c39c55fcfd19ca376038abf68a908?s=128&d=identicon&r=PG&f=1","display_name":"JL_SO","link":"https://stackoverflow.com/users/4026629/jl-so"},"score":1,"creation_date":1586466021}],"owner":{"reputation":654,"user_id":6461839,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7d5df1ab8186ea7627323566e0763aac?s=128&d=identicon&r=PG&f=1","display_name":"leonidaa","link":"https://stackoverflow.com/users/6461839/leonidaa"},"comment_count":5,"score":2,"creation_date":1568964530,"body_markdown":"[![private-protected-public-perfect-analogy-for-the-variable-data-types][2]][2]\r\n\r\nFollowing block diagram explain how data members of **base class** are **inherited** when **derived class** access mode is **private**.\r\n\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\nNote: Declaring data members with private access specifier is known as **data hiding.**\r\n\r\n\r\nSource : [ Access Specifiers – Private, Public and Protected\r\n][3]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/HZ5MN.jpg\r\n  [2]: https://i.stack.imgur.com/RtZLf.png\r\n  [3]: http://www.trytoprogram.com/cplusplus-programming/access-specifiers/","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":1458,"user_id":528459,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/940e457011ed350f1ced2736a6cde982?s=128&d=identicon&r=PG","display_name":"Mudassar","link":"https://stackoverflow.com/users/528459/mudassar"},"comment_count":0,"score":3,"creation_date":1571195400,"body_markdown":"My two cents :)\r\n\r\n**private:**\r\n\r\n*class -&gt;* a top level class cannot be private. inner classes can be private which are accessible from same class.\r\n\r\n*instance variable -&gt;* accessible only in the class. Cannot access outside the class.\r\n\r\n**package-private:**\r\n\r\n*class -&gt;* a top level class can be package-private. It can only be accessible from same package. Not from sub package, not from outside package.\r\n\r\n*instance variable -&gt;* accessible from same package. Not from sub package, not from outside package.\r\n\r\n\r\n**protected:**\r\n\r\n*class -&gt;* a top level class cannot be protected.\r\n\r\n*instance variable -&gt;* Only accessible in same package or subpackage. Can only be access outside the package while extending class.\r\n\r\n\r\n\r\n**public:**\r\n\r\n*class -&gt;* accessible from package/subpackage/another package\r\n\r\n*instance variable -&gt;* accessible from package/subpackage/another package\r\n\r\n\r\nHere is detailed answer\r\n\r\nhttps://github.com/junto06/java-4-beginners/blob/master/basics/access-modifier.md","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":11921,"user_id":4770877,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/cccebea2d190bf8f2054c1949ffa8677?s=128&d=identicon&r=PG&f=1","display_name":"yoAlex5","link":"https://stackoverflow.com/users/4770877/yoalex5"},"comment_count":0,"score":9,"creation_date":1575664955,"body_markdown":"Java access modifies which you can use \r\n\r\n\r\n[![enter image description here][1]][1]\r\n\r\nAccess modifier can be applicable for `class`, `field`[&lt;sup&gt;\\[About\\]&lt;/sup&gt;][2], `method`. Try to access, subclass or override this. \r\n\r\n - Access to `field` or `method` is through a `class`.\r\n - Inheritance and **Open Closed Principle**. \r\n   - Successor `class`(subclass) access modifier can be **any**. \r\n   - Successor `method`(override) access modifier should be the **same or expand it**\r\n\r\nTop level class(first level scope) can be `public` and `default`. `Nested class`[&lt;sup&gt;\\[About\\]&lt;/sup&gt;][3] can have any of them\r\n\r\n`package` is not applying for package hierarchy \r\n\r\n\r\n[[Swift access modifiers]][4]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/JqGNs.png\r\n  [2]: https://stackoverflow.com/a/60907642/4770877\r\n  [3]: https://stackoverflow.com/a/59220181/4770877\r\n  [4]: https://stackoverflow.com/a/60905233/4770877","title":"What is the difference between public, protected, package-private and private in Java?"},{"owner":{"reputation":115,"user_id":3417107,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/501090aba145d417193fd9d786f8eb2d?s=128&d=identicon&r=PG&f=1","display_name":"Tushar Baviskar","link":"https://stackoverflow.com/users/3417107/tushar-baviskar"},"comment_count":0,"score":-1,"creation_date":1577111162,"body_markdown":"Access Specifiers in Java:\r\nThere are 4 access specifiers in java, namely private, package-private (default), protected and public in increasing access order.\r\n\r\n**Private**:\r\nWhen you are developing some class and you want member of this class not to be exposed outside this class then you should declare it as private. private members can be accessed only in class where they are defined i.e. enclosing class. **private members can be accessed on &#39;this&#39; reference and also on other instances of class enclosing these members, but only within the definition of this class.**\r\n\r\n\r\n**Package-private (default)**:\r\nThis access specifier will provide access specified by private access specifier in addition to access described below.\r\n\r\nWhen you are developing some package and hence some class (say Class1) within it, you may use default (need not be mentioned explicitly) access specifier, to expose member within class, to other classes within your (same) package. In these other classes (within same package), you can access these default members on instance of Class1. Also you can access these default members within subclasses of Class1, say Class2 (on this reference or on instance of Class1 or on instance of Class2). \r\n\r\n**Basically, within same package you can access default members on instance of class directly or on &#39;this&#39; reference in subclasses.**\r\n\t\r\n\r\n**protected**:\r\nThis access specifier will provide access specified by package-private access specifier in addition to access described below.\r\n\r\nWhen you are developing some package and hence some class (say Class1) within it, then you should use protected access specifier for data member within Class1 if you don&#39;t want this member to be accessed outside your package (say in package of consumer of your package i.e. client who is using your APIs) in general, but you want to make an exception and allow access to this member only if client writes class say Class2 that extends Class1. So, in general, protected members will be accessible on &#39;this&#39; reference in derived classes i.e. Class2 and also on explicit instances of Class2.\r\n\r\nPlease note:\r\n\r\n 1. You won&#39;t be able to access inherited protected member of Class1 in\r\n    Class2, if you attempt to access it on explicit instance of Class1,\r\n    although it is inherited in it.\r\n 2. When you write another class Class3 within same/different package\r\n    that extends Class2, protected member from Class1 will be accessible\r\n    on this reference and also on explicit instance of Class3. This will\r\n    be true for any hierarchy that is extended i.e. protected member\r\n    will still be accessible on this reference or instance of extended\r\n    class. Note that in Class3, if you create instance of Class2 then\r\n    you will not be able to access protected member from Class1 though\r\n    it is inherited.\r\n\r\n\t\r\nSo bottom line is, **protected members can be accessed in other packages, only if some class from this other package, extends class enclosing this protected member and protected member is accessed on &#39;this&#39; reference or explicit instances of extended class, within definition of extended class.**\r\n\t\r\n\t\r\n**public**: This access specifier will provide access specified by protected access specifier in addition to access described below.\r\n\r\nWhen you are developing some package and hence some class (say Class1) within it, then you should use public access specifier for data member within Class1 if you want this member to be accessible in other packages on instance of Class1 created in some class of other package. **Basically this access specifier should be used when you intent to expose your data member to world without any condition.**\r\n","title":"What is the difference between public, protected, package-private and private in Java?"},{"comments":[{"owner":{"reputation":12853,"user_id":1824361,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/Qo7Ur.jpg?s=128&g=1","display_name":"ahmednabil88","link":"https://stackoverflow.com/users/1824361/ahmednabil88"},"score":0,"creation_date":1608325011}],"owner":{"reputation":145,"user_id":13353813,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/a-/AOh14Gh6l25zm7Rwn0GxmP_MDM1CLKaQHKvYPf8xapQbtcQ=k-s128","display_name":"Mushfiqur Rahman Abir","link":"https://stackoverflow.com/users/13353813/mushfiqur-rahman-abir"},"comment_count":1,"score":5,"creation_date":1599895990,"body_markdown":"[![Differences between public, private, default and protected access modifiers][1]][1]\r\n\r\nThis image will make you understand easily about the basic differences between public, private, protected and default access modifiers. The default modifier takes place automatically when you don&#39;t declare ant access modifiers in your code. \r\n\r\n\r\n  [1]: https://i.stack.imgur.com/nAtpl.png","title":"What is the difference between public, protected, package-private and private in Java?"}],"owner":{"reputation":34599,"user_id":625,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/8f2a8ae3a27197376573647811f96901?s=128&d=identicon&r=PG","display_name":"intrepion","link":"https://stackoverflow.com/users/625/intrepion"},"comment_count":17,"is_answered":true,"answer_count":29,"score":3312,"creation_date":1224359592,"question_id":215497,"body_markdown":"In Java, are there clear rules on when to use each of access modifiers, namely the default (package private), `public`, `protected` and `private`, while making `class` and `interface` and dealing with inheritance?","link":"https://stackoverflow.com/questions/215497/what-is-the-difference-between-public-protected-package-private-and-private-in","title":"What is the difference between public, protected, package-private and private in Java?"},{"tags":["java","arraylist","collections","linked-list"],"comments":[{"owner":{"reputation":5212,"user_id":99717,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/lVoCX.jpg?s=128&g=1","display_name":"Hawkeye Parker","link":"https://stackoverflow.com/users/99717/hawkeye-parker"},"score":6,"creation_date":1476244709},{"owner":{"reputation":2055,"user_id":2032701,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/0abc2879537f0c8fbbd8d97dc72f5ae0?s=128&d=identicon&r=PG","display_name":"Ruslan","link":"https://stackoverflow.com/users/2032701/ruslan"},"score":3,"creation_date":1514315879}],"answers":[{"comments":[{"owner":{"reputation":2517,"user_id":5908433,"user_type":"registered","accept_rate":100,"profile_image":"https://lh3.googleusercontent.com/-Z7z3juhMtXY/AAAAAAAAAAI/AAAAAAAAABw/Ua09V1L6sYc/photo.jpg?sz=128","display_name":"Dmitriy Fialkovskiy","link":"https://stackoverflow.com/users/5908433/dmitriy-fialkovskiy"},"score":1,"creation_date":1607594564}],"owner":{"reputation":2596,"user_id":34450,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9363c84442cc60a0a84fdbe3db87425f?s=128&d=identicon&r=PG","display_name":"dgtized","link":"https://stackoverflow.com/users/34450/dgtized"},"comment_count":1,"score":74,"creation_date":1227749999,"body_markdown":"It&#39;s an efficiency question. `LinkedList` is fast for adding and deleting elements, but slow to access a specific element. `ArrayList` is fast for accessing a specific element but can be slow to add to either end, and especially slow to delete in the middle.\r\n\r\n[Array vs ArrayList vs LinkedList vs Vector][1] goes more in depth, as does \r\n[Linked List][2].\r\n\r\n  [1]: https://web.archive.org/web/20090204031044/http://www.javafaq.nu/java-article1111.html\r\n  [2]: http://en.wikipedia.org/wiki/Linked_list","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":1139,"user_id":247447,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e99aa9c9f3742cf48986fbe46e71e976?s=128&d=identicon&r=PG","display_name":"Porculus","link":"https://stackoverflow.com/users/247447/porculus"},"score":17,"creation_date":1284139312},{"owner":{"reputation":80392,"user_id":39975,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/995543cb35c3b92a2eb43275116815a7?s=128&d=identicon&r=PG","display_name":"Dustin","link":"https://stackoverflow.com/users/39975/dustin"},"score":10,"creation_date":1284159784},{"owner":{"reputation":2408,"user_id":191995,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/aa5140e5f2744c0659e727c2a0f5f8f2?s=128&d=identicon&r=PG","display_name":"kachanov","link":"https://stackoverflow.com/users/191995/kachanov"},"score":4,"creation_date":1336919769},{"owner":{"reputation":80392,"user_id":39975,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/995543cb35c3b92a2eb43275116815a7?s=128&d=identicon&r=PG","display_name":"Dustin","link":"https://stackoverflow.com/users/39975/dustin"},"score":0,"creation_date":1336975055},{"owner":{"reputation":2408,"user_id":191995,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/aa5140e5f2744c0659e727c2a0f5f8f2?s=128&d=identicon&r=PG","display_name":"kachanov","link":"https://stackoverflow.com/users/191995/kachanov"},"score":0,"creation_date":1337005540},{"owner":{"reputation":14341,"user_id":119929,"user_type":"registered","profile_image":"https://i.stack.imgur.com/uMReY.jpg?s=128&g=1","display_name":"Stan R.","link":"https://stackoverflow.com/users/119929/stan-r"},"score":6,"creation_date":1363643499},{"owner":{"reputation":2408,"user_id":191995,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/aa5140e5f2744c0659e727c2a0f5f8f2?s=128&d=identicon&r=PG","display_name":"kachanov","link":"https://stackoverflow.com/users/191995/kachanov"},"score":0,"creation_date":1365639828},{"owner":{"reputation":8209,"user_id":3850730,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/vdJq0.jpg?s=128&g=1","display_name":"Sabir Khan","link":"https://stackoverflow.com/users/3850730/sabir-khan"},"score":0,"creation_date":1520853451},{"owner":{"reputation":1146,"user_id":1725151,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/3dd74df7a1b246d669fd7618d9c8083c?s=128&d=identicon&r=PG","display_name":"Guildenstern","link":"https://stackoverflow.com/users/1725151/guildenstern"},"score":0,"creation_date":1614111041}],"owner":{"reputation":80392,"user_id":39975,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/995543cb35c3b92a2eb43275116815a7?s=128&d=identicon&r=PG","display_name":"Dustin","link":"https://stackoverflow.com/users/39975/dustin"},"comment_count":9,"score":35,"creation_date":1227750107,"body_markdown":"`ArrayList` is randomly accessible, while `LinkedList` is really cheap to expand and remove elements from. For most cases, `ArrayList` is fine.\r\n\r\nUnless you&#39;ve created large lists and measured a bottleneck, you&#39;ll probably never need to worry about the difference.","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":2408,"user_id":191995,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/aa5140e5f2744c0659e727c2a0f5f8f2?s=128&d=identicon&r=PG","display_name":"kachanov","link":"https://stackoverflow.com/users/191995/kachanov"},"score":2,"creation_date":1337309616}],"owner":{"reputation":32048,"user_id":188,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/833bfbcc9940cfcf0af6def751c23b05?s=128&d=identicon&r=PG","display_name":"Matthew Schinckel","link":"https://stackoverflow.com/users/188/matthew-schinckel"},"comment_count":1,"score":11,"creation_date":1227750123,"body_markdown":"It depends upon what operations you will be doing more on the List.\r\n\r\n`ArrayList` is faster to access an indexed value. It is much worse when inserting or deleting objects.\r\n\r\nTo find out more, read any article that talks about the difference between arrays and linked lists.","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":38425,"user_id":15459,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/29daf7e795b7ee51a16a7345151ba65e?s=128&d=identicon&r=PG","display_name":"PhiLho","link":"https://stackoverflow.com/users/15459/philho"},"comment_count":0,"score":15,"creation_date":1227750454,"body_markdown":"In addition to the other good arguments above, you should notice `ArrayList` implements `RandomAccess` interface, while `LinkedList` implements `Queue`.\r\n\r\nSo, somehow they address slightly different problems, with difference of efficiency and behavior (see their list of methods).","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":14484,"user_id":12887,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/fc24fe007c2d362897829bf8302d29eb?s=128&d=identicon&r=PG","display_name":"Jonathan Tran","link":"https://stackoverflow.com/users/12887/jonathan-tran"},"comment_count":0,"score":3532,"creation_date":1227750582,"body_markdown":"**Summary** `ArrayList` with `ArrayDeque` are preferable in *many* more use-cases than `LinkedList`. If you&#39;re not sure&amp;nbsp;&amp;mdash; just start with `ArrayList`.\r\n\r\n---\r\n\r\nTLDR, in ArrayList accessing an element takes constant time [O(1)] and adding an element takes O(n) time [worst case]. In LinkedList adding an element takes O(n) time and accessing also takes O(n) time but LinkedList uses more memory than ArrayList.\r\n\r\n`LinkedList` and `ArrayList` are two different implementations of the List interface. `LinkedList` implements it with a doubly-linked list. `ArrayList` implements it with a dynamically re-sizing array.\r\n\r\nAs with standard linked list and array operations, the various methods will have different algorithmic runtimes.\r\n\r\nFor [`LinkedList&lt;E&gt;`][1]\r\n\r\n* `get(int index)` is *O(n)* (with *n/4* steps on average), but *O(1)* when `index = 0` or `index = list.size() - 1` (in this case, you can also use `getFirst()` and `getLast()`). **One of the main benefits of** `LinkedList&lt;E&gt;`\r\n* `add(int index, E element)` is *O(n)* (with *n/4* steps on average), but *O(1)* when `index = 0` or `index = list.size() - 1` (in this case, you can also use `addFirst()` and `addLast()`/`add()`). **One of the main benefits of** `LinkedList&lt;E&gt;`\r\n* `remove(int index)` is *O(n)* (with *n/4* steps on average), but *O(1)* when `index = 0` or `index = list.size() - 1` (in this case, you can also use `removeFirst()` and `removeLast()`). **One of the main benefits of** `LinkedList&lt;E&gt;`\r\n* `Iterator.remove()` is *O(1)*. **One of the main benefits of** `LinkedList&lt;E&gt;`\r\n* `ListIterator.add(E element)` is *O(1)*. **One of the main benefits of** `LinkedList&lt;E&gt;`\r\n\r\n&lt;sup&gt;Note: Many of the operations need *n/4* steps on average, *constant* number of steps in the best case (e.g. index = 0), and *n/2* steps in worst case (middle of list)&lt;/sup&gt;\r\n\r\nFor [`ArrayList&lt;E&gt;`][2]\r\n\r\n* `get(int index)` is *O(1)*. **Main benefit of** `ArrayList&lt;E&gt;`\r\n* `add(E element)` is *O(1)* amortized, but *O(n)* worst-case since the array must be resized and copied\r\n* `add(int index, E element)` is *O(n)* (with *n/2* steps on average)\r\n* `remove(int index)` is *O(n)* (with *n/2* steps on average)\r\n* `Iterator.remove()` is *O(n)* (with *n/2* steps on average)\r\n* `ListIterator.add(E element)` is *O(n)* (with *n/2* steps on average)\r\n\r\n&lt;sup&gt;Note: Many of the operations need *n/2* steps on average, *constant* number of steps in the best case (end of list), *n* steps in the worst case (start of list)&lt;/sup&gt;\r\n\r\n`LinkedList&lt;E&gt;` allows for constant-time insertions or removals *using iterators*, but only sequential access of elements. In other words, you can walk the list forwards or backwards, but finding a position in the list takes time proportional to the size of the list. Javadoc says *&quot;operations that index into the list will traverse the list from the beginning or the end, whichever is closer&quot;*, so those methods are *O(n)* (*n/4* steps) on average, though *O(1)* for `index = 0`.\r\n\r\n`ArrayList&lt;E&gt;`, on the other hand, allow fast random read access, so you can grab any element in constant time. But adding or removing from anywhere but the end requires shifting all the latter elements over, either to make an opening or fill the gap. Also, if you add more elements than the capacity of the underlying array, a new array (1.5 times the size) is allocated, and the old array is copied to the new one, so adding to an `ArrayList` is *O(n)* in the worst case but constant on average.\r\n\r\nSo depending on the operations you intend to do, you should choose the implementations accordingly. Iterating over either kind of List is practically equally cheap. (Iterating over an `ArrayList` is technically faster, but unless you&#39;re doing something really performance-sensitive, you shouldn&#39;t worry about this -- they&#39;re both constants.)\r\n\r\nThe main benefits of using a `LinkedList` arise when you re-use existing iterators to insert and remove elements. These operations can then be done in *O(1)* by changing the list locally only. In an array list, the remainder of the array needs to be *moved* (i.e. copied). On the other side, seeking in a `LinkedList` means following the links in *O(n)* (*n/2* steps) for worst case, whereas in an `ArrayList` the desired position can be computed mathematically and accessed in *O(1)*.\r\n\r\nAnother benefit of using a `LinkedList` arise when you add or remove from the head of the list, since those operations are *O(1)*, while they are *O(n)* for `ArrayList`. Note that `ArrayDeque` may be a good alternative to `LinkedList` for adding and removing from the head, but it is not a `List`.\r\n\r\nAlso, if you have large lists, keep in mind that memory usage is also different. Each element of a `LinkedList` has more overhead since pointers to the next and previous elements are also stored. `ArrayLists` don&#39;t have this overhead. However, `ArrayLists` take up as much memory as is allocated for the capacity, regardless of whether elements have actually been added.\r\n\r\nThe default initial capacity of an `ArrayList` is pretty small (10 from Java 1.4 - 1.8). But since the underlying implementation is an array, the array must be resized if you add a lot of elements. To avoid the high cost of resizing when you know you&#39;re going to add a lot of elements, construct the `ArrayList` with a higher initial capacity.\r\n\r\n [1]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedList.html\r\n [2]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html\r\n\r\nIf the data structures perspective is used to understand the two structures, a LinkedList is basically a sequential data structure which contains a head Node. The Node is a wrapper for two components : a value of type T [accepted through generics] and another reference to the Node linked to it. So, we can assert it is a recursive data structure (a Node contains another Node which has another Node and so on...). Addition of elements takes linear time in LinkedList as stated above.\r\n\r\nAn ArrayList, is a growable array. It is just like a regular array. Under the hood, when an element is added at index i, it creates another array with a size which is 1 greater than previous size (So in general, when n elements are to be added to an ArrayList, a new array of size previous size plus n is created). The elements are then copied from previous array to new one and the elements that are to be added are also placed at the specified indices. \r\n\r\n","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"comment_count":0,"score":264,"creation_date":1227795616,"body_markdown":"`ArrayList` is what you want. `LinkedList` is almost always a (performance) bug.\r\n\r\nWhy `LinkedList` sucks:\r\n\r\n  - It uses lots of small memory objects, and therefore impacts performance across the process.\r\n  - Lots of small objects are bad for cache-locality.\r\n  - Any indexed operation requires a traversal, i.e. has O(n) performance. This is not obvious in the source code, leading to algorithms O(n) slower than if `ArrayList` was used.\r\n  - Getting good performance is tricky.\r\n  - Even when big-O performance is the same as `ArrayList`, it is probably going to be significantly slower anyway.\r\n  - It&#39;s jarring to see `LinkedList` in source because it is probably the wrong choice.","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":1139,"user_id":247447,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e99aa9c9f3742cf48986fbe46e71e976?s=128&d=identicon&r=PG","display_name":"Porculus","link":"https://stackoverflow.com/users/247447/porculus"},"score":3,"creation_date":1284139232},{"owner":{"reputation":4305,"user_id":3151415,"user_type":"registered","accept_rate":65,"profile_image":"https://i.stack.imgur.com/2cHKh.jpg?s=128&g=1","display_name":"garg10may","link":"https://stackoverflow.com/users/3151415/garg10may"},"score":1,"creation_date":1474373228},{"owner":{"reputation":32686,"user_id":40013,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/92c80ad799d0788de9ec7a4e3a26f98d?s=128&d=identicon&r=PG","display_name":"Jesse Wilson","link":"https://stackoverflow.com/users/40013/jesse-wilson"},"score":1,"creation_date":1474469592},{"owner":{"reputation":1851,"user_id":1502439,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/67c216ca182451567e17c2098d47f26d?s=128&d=identicon&r=PG","display_name":"Janac Meena","link":"https://stackoverflow.com/users/1502439/janac-meena"},"score":0,"creation_date":1583255226}],"owner":{"reputation":32686,"user_id":40013,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/92c80ad799d0788de9ec7a4e3a26f98d?s=128&d=identicon&r=PG","display_name":"Jesse Wilson","link":"https://stackoverflow.com/users/40013/jesse-wilson"},"comment_count":4,"score":25,"creation_date":1227837855,"body_markdown":"If your code has `add(0)` and `remove(0)`, use a `LinkedList` and it&#39;s prettier `addFirst()` and `removeFirst()` methods. Otherwise, use `ArrayList`.\r\n\r\nAnd of course, [Guava][1]&#39;s [ImmutableList][2] is your best friend.\r\n\r\n  [1]: https://github.com/google/guava\r\n  [2]: https://google.github.io/guava/releases/21.0/api/docs/com/google/common/collect/ImmutableList.html","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":27707,"user_id":205521,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/HkbYt.png?s=128&g=1","display_name":"Thomas Ahle","link":"https://stackoverflow.com/users/205521/thomas-ahle"},"score":40,"creation_date":1325257292},{"owner":{"reputation":1706,"user_id":1840613,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG","display_name":"Jeremy List","link":"https://stackoverflow.com/users/1840613/jeremy-list"},"score":1,"creation_date":1430359947},{"owner":{"reputation":1377,"user_id":593533,"user_type":"registered","accept_rate":17,"profile_image":"https://i.stack.imgur.com/ekxqx.jpg?s=128&g=1","display_name":"Henno Vermeulen","link":"https://stackoverflow.com/users/593533/henno-vermeulen"},"score":2,"creation_date":1432289938},{"owner":{"reputation":1377,"user_id":593533,"user_type":"registered","accept_rate":17,"profile_image":"https://i.stack.imgur.com/ekxqx.jpg?s=128&g=1","display_name":"Henno Vermeulen","link":"https://stackoverflow.com/users/593533/henno-vermeulen"},"score":0,"creation_date":1432290518},{"owner":{"reputation":18327,"user_id":1216775,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/gX53v.jpg?s=128&g=1","display_name":"akhil_mittal","link":"https://stackoverflow.com/users/1216775/akhil-mittal"},"score":6,"creation_date":1434555887},{"owner":{"reputation":108964,"user_id":1441122,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XM5u8.jpg?s=128&g=1","display_name":"Stuart Marks","link":"https://stackoverflow.com/users/1441122/stuart-marks"},"score":5,"creation_date":1448750875}],"owner":{"reputation":21509,"user_id":107331,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/cf6d0868b2b4c69bac3e6f265a32b6a7?s=128&d=identicon&r=PG","display_name":"Daniel Martin","link":"https://stackoverflow.com/users/107331/daniel-martin"},"comment_count":6,"score":113,"creation_date":1242732080,"body_markdown":"Yeah, I know, this is an ancient question, but I&#39;ll throw in my two cents:\r\n\r\nLinkedList is *almost always* the wrong choice, performance-wise.  There are some very specific algorithms where a LinkedList is called for, but those are very, very rare and the algorithm will usually specifically depend on LinkedList&#39;s ability to insert and delete elements in the middle of the list relatively quickly, once you&#39;ve navigated there with a ListIterator.\r\n\r\nThere is one common use case in which LinkedList outperforms ArrayList: that of a queue.  However, if your goal is performance, instead of LinkedList you should also consider using an ArrayBlockingQueue (if you can determine an upper bound on your queue size ahead of time, and can afford to allocate all the memory up front), or this [CircularArrayList implementation][1].  (Yes, it&#39;s from 2001, so you&#39;ll need to generify it, but I got comparable performance ratios to what&#39;s quoted in the article just now in a recent JVM)\r\n\r\n  [1]: http://www.javaspecialists.eu/archive/Issue027.html\r\n\r\n","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":8429,"user_id":219394,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/be6af8c75baccb49c9f0e6158c505973?s=128&d=identicon&r=PG","display_name":"Kevin Brock","link":"https://stackoverflow.com/users/219394/kevin-brock"},"score":2,"creation_date":1269304951},{"owner":{"reputation":16203,"user_id":194609,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/c7bw7.png?s=128&g=1","display_name":"Karussell","link":"https://stackoverflow.com/users/194609/karussell"},"score":0,"creation_date":1269348466}],"owner":{"reputation":16203,"user_id":194609,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/c7bw7.png?s=128&g=1","display_name":"Karussell","link":"https://stackoverflow.com/users/194609/karussell"},"comment_count":2,"score":8,"creation_date":1269297151,"body_markdown":"An important feature of a linked list (which I didn&#39;t read in another answer) is the concatenation of two lists. With an array this is O(n) (+ overhead of some reallocations) with a linked list this is only O(1) or O(2) ;-)\r\n\r\n**Important**: For Java its `LinkedList` this is not true! See https://stackoverflow.com/q/2494031/587642","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":1139,"user_id":247447,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e99aa9c9f3742cf48986fbe46e71e976?s=128&d=identicon&r=PG","display_name":"Porculus","link":"https://stackoverflow.com/users/247447/porculus"},"score":44,"creation_date":1284139395},{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":5,"creation_date":1313685334},{"owner":{"reputation":27707,"user_id":205521,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/HkbYt.png?s=128&g=1","display_name":"Thomas Ahle","link":"https://stackoverflow.com/users/205521/thomas-ahle"},"score":48,"creation_date":1325257376},{"owner":{"reputation":2408,"user_id":191995,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/aa5140e5f2744c0659e727c2a0f5f8f2?s=128&d=identicon&r=PG","display_name":"kachanov","link":"https://stackoverflow.com/users/191995/kachanov"},"score":8,"creation_date":1336919352},{"owner":{"reputation":3096,"user_id":284830,"user_type":"registered","accept_rate":20,"profile_image":"https://www.gravatar.com/avatar/85b2990d6af7cd96dc7b32b84776c375?s=128&d=identicon&r=PG","display_name":"Michael Munsey","link":"https://stackoverflow.com/users/284830/michael-munsey"},"score":0,"creation_date":1337640222},{"owner":{"reputation":69944,"user_id":1060350,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/XCkw7.jpg?s=128&g=1","display_name":"Has QUIT--Anony-Mousse","link":"https://stackoverflow.com/users/1060350/has-quit-anony-mousse"},"score":16,"creation_date":1376813587},{"owner":{"reputation":2408,"user_id":191995,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/aa5140e5f2744c0659e727c2a0f5f8f2?s=128&d=identicon&r=PG","display_name":"kachanov","link":"https://stackoverflow.com/users/191995/kachanov"},"score":0,"creation_date":1379319696},{"owner":{"reputation":69944,"user_id":1060350,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/XCkw7.jpg?s=128&g=1","display_name":"Has QUIT--Anony-Mousse","link":"https://stackoverflow.com/users/1060350/has-quit-anony-mousse"},"score":0,"creation_date":1379324423},{"owner":{"reputation":3096,"user_id":284830,"user_type":"registered","accept_rate":20,"profile_image":"https://www.gravatar.com/avatar/85b2990d6af7cd96dc7b32b84776c375?s=128&d=identicon&r=PG","display_name":"Michael Munsey","link":"https://stackoverflow.com/users/284830/michael-munsey"},"score":0,"creation_date":1380576080},{"owner":{"reputation":18761,"user_id":1796,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/S32m4.jpg?s=128&g=1","display_name":"Andrei R&#238;nea","link":"https://stackoverflow.com/users/1796/andrei-r%c3%aenea"},"score":2,"creation_date":1422536929},{"owner":{"reputation":3096,"user_id":284830,"user_type":"registered","accept_rate":20,"profile_image":"https://www.gravatar.com/avatar/85b2990d6af7cd96dc7b32b84776c375?s=128&d=identicon&r=PG","display_name":"Michael Munsey","link":"https://stackoverflow.com/users/284830/michael-munsey"},"score":2,"creation_date":1423008033},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":1,"creation_date":1557852769},{"owner":{"reputation":69944,"user_id":1060350,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/XCkw7.jpg?s=128&g=1","display_name":"Has QUIT--Anony-Mousse","link":"https://stackoverflow.com/users/1060350/has-quit-anony-mousse"},"score":0,"creation_date":1557859708},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":2,"creation_date":1557916637}],"owner":{"reputation":3096,"user_id":284830,"user_type":"registered","accept_rate":20,"profile_image":"https://www.gravatar.com/avatar/85b2990d6af7cd96dc7b32b84776c375?s=128&d=identicon&r=PG","display_name":"Michael Munsey","link":"https://stackoverflow.com/users/284830/michael-munsey"},"comment_count":14,"score":140,"creation_date":1270758815,"body_markdown":"    Algorithm\t        ArrayList   LinkedList\r\n    seek front            O(1)         O(1)\r\n    seek back\t          O(1)         O(1)\r\n    seek to index         O(1)         O(N)\r\n    insert at front       O(N)         O(1)\r\n    insert at back        O(1)         O(1)\r\n    insert after an item  O(N)         O(1)\r\n\r\n[Algorithms: Big-Oh Notation](https://web.archive.org/web/20180729155145/http://leepoint.net/algorithms/big-oh/bigoh.html) (archived)\r\n\r\nArrayLists are good for write-once-read-many or appenders, but bad at add/remove from the front or middle.","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":106823,"user_id":1942,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/de6acc2ce773724e9329a67056f2a3d2?s=128&d=identicon&r=PG","display_name":"kemiller2002","link":"https://stackoverflow.com/users/1942/kemiller2002"},"comment_count":0,"score":9,"creation_date":1271777521,"body_markdown":"An array list is essentially an array with methods to add items etc. (and you should use a generic list instead). It is a collection of items which can be accessed through an indexer  (for example [0]). It implies a progression from one item to the next.\r\n\r\nA linked list specifies a progression from one item to the next (Item a -&gt; item b).  You can get the same effect with an array list, but a linked list absolutely says what item is supposed to follow the previous one. ","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":8408,"user_id":325452,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/60ff43e8632a20984515ac2e2c8c2c24?s=128&d=identicon&r=PG","display_name":"ingyhere","link":"https://stackoverflow.com/users/325452/ingyhere"},"score":9,"creation_date":1351575227},{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":23,"creation_date":1418847347},{"owner":{"reputation":4342,"user_id":3430807,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/4724eb95e279c937e4fb6dd033b35192?s=128&d=identicon&r=PG&f=1","display_name":"Andreas","link":"https://stackoverflow.com/users/3430807/andreas"},"score":1,"creation_date":1434492361},{"owner":{"reputation":1169,"user_id":2166594,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1c837edb252a805570c348f18c9ea3a6?s=128&d=identicon&r=PG","display_name":"Philip Devine","link":"https://stackoverflow.com/users/2166594/philip-devine"},"score":5,"creation_date":1434722594},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":2,"creation_date":1467627648},{"owner":{"reputation":4342,"user_id":3430807,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/4724eb95e279c937e4fb6dd033b35192?s=128&d=identicon&r=PG&f=1","display_name":"Andreas","link":"https://stackoverflow.com/users/3430807/andreas"},"score":1,"creation_date":1467690407},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":6,"creation_date":1467709492}],"owner":{"reputation":3462,"user_id":506908,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/84c874984f69ef596764255efcd79113?s=128&d=identicon&r=PG","display_name":"lamont","link":"https://stackoverflow.com/users/506908/lamont"},"comment_count":7,"score":144,"creation_date":1293913432,"body_markdown":"As someone who has been doing operational performance engineering on very large scale SOA web services for about a decade, I would prefer the behavior of LinkedList over ArrayList.  While the steady-state throughput of LinkedList is worse and therefore might lead to buying more hardware -- the behavior of ArrayList under pressure could lead to apps in a cluster expanding their arrays in near synchronicity and for large array sizes could lead to lack of responsiveness in the app and an outage, while under pressure, which is catastrophic behavior.\r\n\r\nSimilarly, you can get better throughput in an app from the default throughput tenured garbage collector, but once you get java apps with 10GB heaps you can wind up locking up the app for 25 seconds during a Full GCs which causes timeouts and failures in SOA apps and blows your SLAs if it occurs too often.  Even though the CMS collector takes more resources and does not achieve the same raw throughput, it is a much better choice because it has more predictable and smaller latency.\r\n\r\nArrayList is only a better choice for performance if all you mean by performance is throughput and you can ignore latency.  In my experience at my job I cannot ignore worst-case latency.\r\n","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"user_type":"does_not_exist","display_name":"user8898216"},"score":2,"creation_date":1510639702}],"owner":{"reputation":6062,"user_id":877703,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/251b6194131d9d190face48e1b400ae4?s=128&d=identicon&r=PG&f=1","display_name":"chharvey","link":"https://stackoverflow.com/users/877703/chharvey"},"comment_count":1,"score":9,"creation_date":1315204432,"body_markdown":"See [the Java Tutorials - List Implementations][1].\r\n\r\n\r\n  [1]: http://download.oracle.com/javase/tutorial/collections/implementations/list.html","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":21365,"user_id":531954,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/a3d6efc1f694ea517af91b8cbba15e3a?s=128&d=identicon&r=PG&f=1","display_name":"Danubian Sailor","link":"https://stackoverflow.com/users/531954/danubian-sailor"},"score":1,"creation_date":1367851249},{"owner":{"reputation":2204,"user_id":1063961,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/s9gRK.png?s=128&g=1","display_name":"Centril","link":"https://stackoverflow.com/users/1063961/centril"},"score":0,"creation_date":1408614010},{"owner":{"reputation":2204,"user_id":1063961,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/s9gRK.png?s=128&g=1","display_name":"Centril","link":"https://stackoverflow.com/users/1063961/centril"},"score":0,"creation_date":1408614365},{"owner":{"reputation":9820,"user_id":452775,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG","display_name":"Lii","link":"https://stackoverflow.com/users/452775/lii"},"score":3,"creation_date":1442310820},{"owner":{"reputation":18716,"user_id":95122,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/53edd8e9c033a8a0ec7f4483d52ae62a?s=128&d=identicon&r=PG","display_name":"BobMcGee","link":"https://stackoverflow.com/users/95122/bobmcgee"},"score":1,"creation_date":1457635734},{"owner":{"reputation":1371,"user_id":6723250,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/84a0e8aa370e949feeaa7c5c153a3be9?s=128&d=identicon&r=PG","display_name":"Xerus","link":"https://stackoverflow.com/users/6723250/xerus"},"score":0,"creation_date":1527452414},{"owner":{"reputation":1371,"user_id":6723250,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/84a0e8aa370e949feeaa7c5c153a3be9?s=128&d=identicon&r=PG","display_name":"Xerus","link":"https://stackoverflow.com/users/6723250/xerus"},"score":0,"creation_date":1527452516},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":0,"creation_date":1537459882},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":4,"creation_date":1557853554}],"owner":{"reputation":1953,"user_id":890381,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f7e0ff40ac7948b0f236962acbc9d68f?s=128&d=identicon&r=PG","display_name":"Ash","link":"https://stackoverflow.com/users/890381/ash"},"comment_count":9,"score":56,"creation_date":1316645963,"body_markdown":"Correct or Incorrect: Please execute test locally and decide for yourself!\r\n\r\nEdit/Remove is faster in `LinkedList` than `ArrayList`.\r\n\r\n`ArrayList`, backed by `Array`, which needs to be double the size, is worse in large volume application.\r\n\r\nBelow is the unit test result for each operation.Timing is given in Nanoseconds.\r\n \r\n---\r\n\r\n    Operation                       ArrayList                      LinkedList  \r\n\r\n    AddAll   (Insert)               101,16719                      2623,29291 \r\n\r\n    Add      (Insert-Sequentially)  152,46840                      966,62216\r\n\r\n    Add      (insert-randomly)      36527                          29193\r\n\r\n    remove   (Delete)               20,56,9095                     20,45,4904\r\n\r\n    contains (Search)               186,15,704                     189,64,981\r\n\r\n---                \r\n   \r\nHere&#39;s the code:\r\n\r\n    import org.junit.Assert;\r\n    import org.junit.Test;\r\n    \r\n    import java.util.*;\r\n    \r\n    public class ArrayListVsLinkedList {\r\n        private static final int MAX = 500000;\r\n        String[] strings = maxArray();\r\n    \r\n        ////////////// ADD ALL ////////////////////////////////////////\r\n        @Test\r\n        public void arrayListAddAll() {\r\n            Watch watch = new Watch();\r\n            List&lt;String&gt; stringList = Arrays.asList(strings);\r\n            List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;(MAX);\r\n    \r\n            watch.start();\r\n            arrayList.addAll(stringList);\r\n            watch.totalTime(&quot;Array List addAll() = &quot;);//101,16719 Nanoseconds\r\n        }\r\n    \r\n        @Test\r\n        public void linkedListAddAll() throws Exception {\r\n            Watch watch = new Watch();\r\n            List&lt;String&gt; stringList = Arrays.asList(strings);\r\n    \r\n            watch.start();\r\n            List&lt;String&gt; linkedList = new LinkedList&lt;String&gt;();\r\n            linkedList.addAll(stringList);\r\n            watch.totalTime(&quot;Linked List addAll() = &quot;);  //2623,29291 Nanoseconds\r\n        }\r\n    \r\n        //Note: ArrayList is 26 time faster here than LinkedList for addAll()\r\n    \r\n        ///////////////// INSERT /////////////////////////////////////////////\r\n        @Test\r\n        public void arrayListAdd() {\r\n            Watch watch = new Watch();\r\n            List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;(MAX);\r\n    \r\n            watch.start();\r\n            for (String string : strings)\r\n                arrayList.add(string);\r\n            watch.totalTime(&quot;Array List add() = &quot;);//152,46840 Nanoseconds\r\n        }\r\n    \r\n        @Test\r\n        public void linkedListAdd() {\r\n            Watch watch = new Watch();\r\n    \r\n            List&lt;String&gt; linkedList = new LinkedList&lt;String&gt;();\r\n            watch.start();\r\n            for (String string : strings)\r\n                linkedList.add(string);\r\n            watch.totalTime(&quot;Linked List add() = &quot;);  //966,62216 Nanoseconds\r\n        }\r\n    \r\n        //Note: ArrayList is 9 times faster than LinkedList for add sequentially\r\n    \r\n        /////////////////// INSERT IN BETWEEN ///////////////////////////////////////\r\n    \r\n        @Test\r\n        public void arrayListInsertOne() {\r\n            Watch watch = new Watch();\r\n            List&lt;String&gt; stringList = Arrays.asList(strings);\r\n            List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;(MAX + MAX / 10);\r\n            arrayList.addAll(stringList);\r\n    \r\n            String insertString0 = getString(true, MAX / 2 + 10);\r\n            String insertString1 = getString(true, MAX / 2 + 20);\r\n            String insertString2 = getString(true, MAX / 2 + 30);\r\n            String insertString3 = getString(true, MAX / 2 + 40);\r\n    \r\n            watch.start();\r\n    \r\n            arrayList.add(insertString0);\r\n            arrayList.add(insertString1);\r\n            arrayList.add(insertString2);\r\n            arrayList.add(insertString3);\r\n    \r\n            watch.totalTime(&quot;Array List add() = &quot;);//36527\r\n        }\r\n    \r\n        @Test\r\n        public void linkedListInsertOne() {\r\n            Watch watch = new Watch();\r\n            List&lt;String&gt; stringList = Arrays.asList(strings);\r\n            List&lt;String&gt; linkedList = new LinkedList&lt;String&gt;();\r\n            linkedList.addAll(stringList);\r\n    \r\n            String insertString0 = getString(true, MAX / 2 + 10);\r\n            String insertString1 = getString(true, MAX / 2 + 20);\r\n            String insertString2 = getString(true, MAX / 2 + 30);\r\n            String insertString3 = getString(true, MAX / 2 + 40);\r\n    \r\n            watch.start();\r\n    \r\n            linkedList.add(insertString0);\r\n            linkedList.add(insertString1);\r\n            linkedList.add(insertString2);\r\n            linkedList.add(insertString3);\r\n    \r\n            watch.totalTime(&quot;Linked List add = &quot;);//29193\r\n        }\r\n    \r\n    \r\n        //Note: LinkedList is 3000 nanosecond faster than ArrayList for insert randomly.\r\n    \r\n        ////////////////// DELETE //////////////////////////////////////////////////////\r\n        @Test\r\n        public void arrayListRemove() throws Exception {\r\n            Watch watch = new Watch();\r\n            List&lt;String&gt; stringList = Arrays.asList(strings);\r\n            List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;(MAX);\r\n    \r\n            arrayList.addAll(stringList);\r\n            String searchString0 = getString(true, MAX / 2 + 10);\r\n            String searchString1 = getString(true, MAX / 2 + 20);\r\n    \r\n            watch.start();\r\n            arrayList.remove(searchString0);\r\n            arrayList.remove(searchString1);\r\n            watch.totalTime(&quot;Array List remove() = &quot;);//20,56,9095 Nanoseconds\r\n        }\r\n    \r\n        @Test\r\n        public void linkedListRemove() throws Exception {\r\n            Watch watch = new Watch();\r\n            List&lt;String&gt; linkedList = new LinkedList&lt;String&gt;();\r\n            linkedList.addAll(Arrays.asList(strings));\r\n    \r\n            String searchString0 = getString(true, MAX / 2 + 10);\r\n            String searchString1 = getString(true, MAX / 2 + 20);\r\n    \r\n            watch.start();\r\n            linkedList.remove(searchString0);\r\n            linkedList.remove(searchString1);\r\n            watch.totalTime(&quot;Linked List remove = &quot;);//20,45,4904 Nanoseconds\r\n        }\r\n    \r\n        //Note: LinkedList is 10 millisecond faster than ArrayList while removing item.\r\n    \r\n        ///////////////////// SEARCH ///////////////////////////////////////////\r\n        @Test\r\n        public void arrayListSearch() throws Exception {\r\n            Watch watch = new Watch();\r\n            List&lt;String&gt; stringList = Arrays.asList(strings);\r\n            List&lt;String&gt; arrayList = new ArrayList&lt;String&gt;(MAX);\r\n    \r\n            arrayList.addAll(stringList);\r\n            String searchString0 = getString(true, MAX / 2 + 10);\r\n            String searchString1 = getString(true, MAX / 2 + 20);\r\n    \r\n            watch.start();\r\n            arrayList.contains(searchString0);\r\n            arrayList.contains(searchString1);\r\n            watch.totalTime(&quot;Array List addAll() time = &quot;);//186,15,704\r\n        }\r\n    \r\n        @Test\r\n        public void linkedListSearch() throws Exception {\r\n            Watch watch = new Watch();\r\n            List&lt;String&gt; linkedList = new LinkedList&lt;String&gt;();\r\n            linkedList.addAll(Arrays.asList(strings));\r\n    \r\n            String searchString0 = getString(true, MAX / 2 + 10);\r\n            String searchString1 = getString(true, MAX / 2 + 20);\r\n    \r\n            watch.start();\r\n            linkedList.contains(searchString0);\r\n            linkedList.contains(searchString1);\r\n            watch.totalTime(&quot;Linked List addAll() time = &quot;);//189,64,981\r\n        }\r\n    \r\n        //Note: Linked List is 500 Milliseconds faster than ArrayList\r\n    \r\n        class Watch {\r\n            private long startTime;\r\n            private long endTime;\r\n    \r\n            public void start() {\r\n                startTime = System.nanoTime();\r\n            }\r\n    \r\n            private void stop() {\r\n                endTime = System.nanoTime();\r\n            }\r\n    \r\n            public void totalTime(String s) {\r\n                stop();\r\n                System.out.println(s + (endTime - startTime));\r\n            }\r\n        }\r\n    \r\n    \r\n        private String[] maxArray() {\r\n            String[] strings = new String[MAX];\r\n            Boolean result = Boolean.TRUE;\r\n            for (int i = 0; i &lt; MAX; i++) {\r\n                strings[i] = getString(result, i);\r\n                result = !result;\r\n            }\r\n            return strings;\r\n        }\r\n    \r\n        private String getString(Boolean result, int i) {\r\n            return String.valueOf(result) + i + String.valueOf(!result);\r\n        }\r\n    }","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":2040,"user_id":487117,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/e60bd8fc53ad3a51b0f4a94a44906ea1?s=128&d=identicon&r=PG","display_name":"gaijinco","link":"https://stackoverflow.com/users/487117/gaijinco"},"comment_count":0,"score":6,"creation_date":1317684180,"body_markdown":"I have read the responses, but there is one scenario where I always use a LinkedList over an ArrayList that I want to share to hear opinions:\r\n\r\nEvery time I had a method that returns a list of data obtained from a DB I always use a LinkedList.\r\n\r\nMy rationale was that because it is impossible to know exactly how many results am I getting, there will be not memory wasted (as in ArrayList with the difference between the capacity and actual number of elements), and there would be no time wasted trying to duplicate the capacity.\r\n\r\nAs far a ArrayList, I agree that at least you should always use the constructor with the initial capacity, to minimize the duplication of the arrays as much as possible.\r\n\r\n","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":16865,"user_id":188704,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b3499592f2c9d48d68eb861845a83888?s=128&d=identicon&r=PG","display_name":"Heath Hunnicutt","link":"https://stackoverflow.com/users/188704/heath-hunnicutt"},"score":242,"creation_date":1378426693}],"owner":{"reputation":8251,"user_id":707399,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/0USRq.png?s=128&g=1","display_name":"Numeron","link":"https://stackoverflow.com/users/707399/numeron"},"comment_count":1,"score":653,"creation_date":1317883605,"body_markdown":"Thus far, nobody seems to have addressed the memory footprint of each of these lists besides the general consensus that a `LinkedList` is &quot;lots more&quot; than an `ArrayList` so I did some number crunching to demonstrate exactly how much both lists take up for N null references.\r\n\r\nSince references are either 32 or 64 bits (even when null) on their relative systems, I have included 4 sets of data for 32 and 64 bit `LinkedLists` and `ArrayLists`.\r\n\r\n**Note:** The sizes shown for the `ArrayList` lines are for *trimmed lists* - In practice, the capacity of the backing array in an `ArrayList` is generally larger than its current element count.\r\n\r\n**Note 2:** *(thanks BeeOnRope)* As CompressedOops is default now from mid JDK6 and up, the values below for 64-bit machines will basically match their 32-bit counterparts, unless of course you specifically turn it off.\r\n\r\n\r\n----------\r\n\r\n\r\n\r\n![Graph of LinkedList and ArrayList No. of Elements x Bytes][2]\r\n\r\n\r\n----------\r\n\r\n\r\nThe result clearly shows that `LinkedList` is a whole lot more than `ArrayList`, especially with a very high element count. If memory is a factor, steer clear of `LinkedLists`.\r\n\r\nThe formulas I used follow, let me know if I have done anything wrong and I will fix it up. &#39;b&#39; is either 4 or 8 for 32 or 64 bit systems, and &#39;n&#39; is the number of elements. Note the reason for the mods is because all objects in java will take up a multiple of 8 bytes space regardless of whether it is all used or not.\r\n\r\n**ArrayList:**\r\n\r\n`ArrayList object header + size integer + modCount integer + array reference + (array oject header + b * n) + MOD(array oject, 8) + MOD(ArrayList object, 8) == 8 + 4 + 4 + b + (12 + b * n) + MOD(12 + b * n, 8) + MOD(8 + 4 + 4 + b + (12 + b * n) + MOD(12 + b * n, 8), 8)`\r\n\r\n**LinkedList:**\r\n\r\n`LinkedList object header + size integer + modCount integer + reference to header + reference to footer + (node object overhead + reference to previous element + reference to next element + reference to element) * n) + MOD(node object, 8) * n + MOD(LinkedList object, 8) == 8 + 4 + 4 + 2 * b + (8 + 3 * b) * n + MOD(8 + 3 * b, 8) * n + MOD(8 + 4 + 4 + 2 * b + (8 + 3 * b) * n + MOD(8 + 3 * b, 8) * n, 8)`\r\n\r\n\r\n  [1]: http://creativecommons.org/licenses/by-sa/3.0/\r\n  [2]: http://i.imgur.com/f83xDyz.png","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":8251,"user_id":707399,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/0USRq.png?s=128&g=1","display_name":"Numeron","link":"https://stackoverflow.com/users/707399/numeron"},"score":4,"creation_date":1375080010},{"owner":{"reputation":27189,"user_id":1129332,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/KcrPN.jpg?s=128&g=1","display_name":"Ilya Gazman","link":"https://stackoverflow.com/users/1129332/ilya-gazman"},"score":1,"creation_date":1380783483}],"owner":{"reputation":27189,"user_id":1129332,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/KcrPN.jpg?s=128&g=1","display_name":"Ilya Gazman","link":"https://stackoverflow.com/users/1129332/ilya-gazman"},"comment_count":2,"score":-2,"creation_date":1339405686,"body_markdown":"When should I use `LinkedList`? When working with stacks mostly, or when working with buffers.\r\nWhen should I use `ArrayList`? Only when working with indexes,  otherwise you can use HashTable with linked list, then you get:\r\n\r\nHash table + linked list\r\n------------------------\r\n\r\n - Access by key **O(1),**\r\n - Insert by key **O(1),**\r\n - Remove by key **O(1)**\r\n - and there is a trick to implement RemoveAll / SetAll with O(1) when using versioning\r\n\r\nIt seems like a good solution, and in most of the cases it is, how ever you should know:\r\nHashTable takes a lot of disc space, so when you need to manage 1,000,000 elements list it can become a thing that matters. This can happen in server implementations, in clients it is rarely the case.\r\n\r\nAlso take a look at [Red-Black-Tree][1]\r\n\r\n - Random access **Log(n),**\r\n - Insert **Log(n),**\r\n - Remove **Log(n)**\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Red%E2%80%93black_tree","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":2408,"user_id":191995,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/aa5140e5f2744c0659e727c2a0f5f8f2?s=128&d=identicon&r=PG","display_name":"kachanov","link":"https://stackoverflow.com/users/191995/kachanov"},"score":10,"creation_date":1360284845},{"owner":{"reputation":4305,"user_id":3151415,"user_type":"registered","accept_rate":65,"profile_image":"https://i.stack.imgur.com/2cHKh.jpg?s=128&g=1","display_name":"garg10may","link":"https://stackoverflow.com/users/3151415/garg10may"},"score":1,"creation_date":1474373151},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1570651018}],"owner":{"reputation":693,"user_id":1490555,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/fd35a17b085c0ba6ee3c5fcf0431f48a?s=128&d=identicon&r=PG","display_name":"Rajith Delantha","link":"https://stackoverflow.com/users/1490555/rajith-delantha"},"comment_count":3,"score":20,"creation_date":1352212328,"body_markdown":"Here is the Big-O notation in both `ArrayList` and `LinkedList` and also `CopyOnWrite-ArrayList`:\r\n\r\n**ArrayList**\r\n\r\n    get                 O(1)\r\n    add                 O(1)\r\n    contains            O(n)\r\n    next                O(1)\r\n    remove              O(n)\r\n    iterator.remove     O(n)\r\n\r\n**LinkedList**\r\n\r\n    get                 O(n)\r\n    add                 O(1)\r\n    contains            O(n)\r\n    next                O(1)\r\n    remove              O(1)\r\n    iterator.remove     O(1)\r\n\r\n**CopyOnWrite-ArrayList**\r\n\r\n    get                 O(1)\r\n    add                 O(n)\r\n    contains            O(n)\r\n    next                O(1)\r\n    remove              O(n)\r\n    iterator.remove     O(n)\r\n\r\nBased on these you have to decide what to choose. :)","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":2181,"user_id":1218010,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/61c7418e7f42a1f86872a46d9f57b384?s=128&d=identicon&r=PG","display_name":"Ajax","link":"https://stackoverflow.com/users/1218010/ajax"},"comment_count":0,"score":22,"creation_date":1366356408,"body_markdown":"I know this is an old post, but I honestly can&#39;t believe nobody mentioned that `LinkedList` implements `Deque`.  Just look at the methods in `Deque` (and `Queue`); if you want a fair comparison, try running `LinkedList` against `ArrayDeque` and do a feature-for-feature comparison. ","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":12880,"user_id":638670,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/b575bbc504d73c3407b2926b0c6a1b98?s=128&d=identicon&r=PG","display_name":"Nerrve","link":"https://stackoverflow.com/users/638670/nerrve"},"score":3,"creation_date":1383645600}],"owner":{"reputation":2679,"user_id":127859,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/XQrlZ.jpg?s=128&g=1","display_name":"Ryan","link":"https://stackoverflow.com/users/127859/ryan"},"comment_count":1,"score":54,"creation_date":1366502627,"body_markdown":"`ArrayList` is essentially an array. `LinkedList` is implemented as a double linked list. \r\n\r\nThe `get` is pretty clear. O(1) for `ArrayList`, because `ArrayList` allow random access by using index. O(n) for `LinkedList`, because it needs to find the index first. Note: there are different versions of `add` and `remove`. \r\n\r\n`LinkedList` is faster in add and remove, but slower in get. In brief, `LinkedList` should be preferred if: \r\n\r\n 1. there are no large number of random access of element \r\n 2. there are a large number of add/remove operations\r\n\r\n=== **ArrayList** ===\r\n\r\n* add(E e) \t\t\r\n      - add at the end of ArrayList\r\n      - require memory resizing cost.  \r\n      - O(n) worst, O(1) amortized\r\n* add(int index, E element) \r\n      - add to a specific index position\r\n      - require shifting &amp; possible memory resizing cost\r\n      - O(n)\r\n* remove(int index)\r\n      - remove a specified element\r\n      - require shifting &amp; possible memory resizing cost\r\n      - O(n)\r\n* remove(Object o) \r\n      - remove the first occurrence of the specified element from this list\r\n      - need to search the element first, and then shifting &amp; possible memory resizing cost\r\n      - O(n)\r\n\r\n=== **LinkedList** ===\r\n\r\n* add(E e)\r\n      - add to the end of the list\r\n      - O(1)\r\n\r\n\r\n* add(int index, E element)\r\n      - insert at specified position\r\n      - need to find the position first\r\n      - O(n)\r\n* remove()\r\n      - remove first element of the list\r\n      - O(1)\r\n* remove(int index)\r\n      - remove element with specified index\r\n      - need to find the element first\r\n      - O(n)\r\n* remove(Object o)\r\n      - remove the first occurrence of the specified element\r\n      - need to find the element first\r\n      - O(n)\r\n\r\nHere is a figure from [programcreek.com][1] (`add` and `remove` are the first type, i.e., add an element at the end of the list and remove the element at the specified position in the list.):\r\n\r\n![enter image description here][2]\r\n\r\n\r\n  [1]: http://www.programcreek.com/2013/03/arraylist-vs-linkedlist-vs-vector/\r\n  [2]: http://i.stack.imgur.com/pdKaZ.png","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":3201,"user_id":2245634,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/OHoy2.jpg?s=128&g=1","display_name":"Amitābha","link":"https://stackoverflow.com/users/2245634/amit%c4%81bha"},"comment_count":0,"score":5,"creation_date":1366876658,"body_markdown":"Operation get(i) in ArrayList is faster than LinkedList, because:   \r\n**ArrayList:** Resizable-array implementation of the List interface  \r\n**LinkedList:** Doubly-linked list implementation of the List and Deque interfaces\r\n  \r\nOperations that index into the list will traverse the list from the beginning or the end, whichever is closer to the specified index. ","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":1276,"user_id":5197034,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/55947b72a5972c1daecceb9c23a1107c?s=128&d=identicon&r=PG&f=1","display_name":"pietz","link":"https://stackoverflow.com/users/5197034/pietz"},"comment_count":0,"score":2,"creation_date":1465677629,"body_markdown":"Both `remove()` and `insert()` have a runtime efficiency of O(n) for both ArrayLists and LinkedLists. However, the reason behind the linear processing time comes from two very different reasons:\r\n\r\nIn an ArrayList, you get to the element in O(1), but actually removing or inserting something makes it O(n) because all the following elements need to be changed.\r\n\r\nIn a LinkedList, it takes O(n) to actually get to the desired element, because we have to start at the very beginning until we reach the desired index. Actually removing or inserting is constant, because we only have to change 1 reference for `remove()` and 2 references for `insert()`.\r\n\r\nWhich of the two is faster for inserting and removing depends on where it happens. If we are closer to the beginning the LinkedList will be faster, because we have to go through relatively few elements. If we are closer to the end an ArrayList will be faster, because we get there in constant time and only have to change the few remaining elements that follow it. When done precisely in the middle the LinkedList will be faster because going through n elements is quicker than moving n values.\r\n\r\nBonus: While there is no way of making these two methods O(1) for an ArrayList, there actually is a way to do this in LinkedLists. Let&#39;s say we want to go through the entire List removing and inserting elements on our way. Usually, you would start from the very beginning for each element using the LinkedList, we could also &quot;save&quot; the current element we&#39;re working on with an Iterator. With the help of the Iterator, we get an O(1) efficiency for `remove()` and `insert()` when working in a LinkedList. Making it the only performance benefit I&#39;m aware of where a LinkedList is always better than an ArrayList.","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":480,"user_id":6168802,"user_type":"registered","profile_image":"https://i.stack.imgur.com/jG8Kj.jpg?s=128&g=1","display_name":"Real73","link":"https://stackoverflow.com/users/6168802/real73"},"comment_count":0,"score":5,"creation_date":1478077223,"body_markdown":"`ArrayList` and `LinkedList` both implements `List interface`  and their methods and results are almost identical. However there are few differences between them which make one better over another depending on the requirement.\r\n\r\n## ArrayList Vs LinkedList ##\r\n\r\n\r\n1) `Search:` `ArrayList` search operation is pretty fast compared to the `LinkedList` search operation. `get(int index)` in `ArrayList` gives the performance of `O(1)` while `LinkedList` performance is `O(n)`.\r\n\r\n`Reason:` `ArrayList` maintains index based system for its elements as it uses array data structure implicitly which makes it faster for searching an element in the list. On the other side `LinkedList` implements doubly linked list which requires the traversal through all the elements for searching an element.\r\n\r\n2) `Deletion:` `LinkedList` remove operation gives `O(1)` performance while `ArrayList` gives variable performance: `O(n)` in worst case (while removing first element) and `O(1)` in best case (While removing last element).\r\n\r\n&gt; Conclusion: LinkedList element deletion is faster compared to\r\n&gt; ArrayList.\r\n\r\nReason: LinkedList’s each element maintains two pointers (addresses) which points to the both neighbor elements in the list. Hence removal only requires change in the pointer location in the two neighbor nodes (elements) of the node which is going to be removed. While In ArrayList all the elements need to be shifted to fill out the space created by removed element.\r\n\r\n3) `Inserts Performance:` `LinkedList` add method gives `O(1)` performance while `ArrayList` gives `O(n)` in worst case. Reason is same as explained for remove.\r\n\r\n4) `Memory Overhead:` `ArrayList` maintains indexes and element data while `LinkedList` maintains element data and two pointers for neighbor nodes \r\n\r\n&gt; hence the memory consumption is high in LinkedList comparatively.\r\n\r\n## There are few similarities between these classes which are as follows: ##\r\n\r\n \r\n\r\n - Both ArrayList and LinkedList are implementation of List interface.\r\n - They both maintain the elements insertion order which means while displaying ArrayList and LinkedList elements the result set would be having the same order in which the elements got inserted into the List.\r\n - Both these classes are non-synchronized and can be made synchronized explicitly by using Collections.synchronizedList method.\r\n - The `iterator` and `listIterator` returned by these classes are `fail-fast` (if list is structurally modified at any time after the iterator is created, in any way except through the `iterator’s` own remove or add methods, the iterator will `throw` a `ConcurrentModificationException`).\r\n\r\n## When to use LinkedList and when to use ArrayList? ##\r\n\r\n - As explained above the insert and remove operations give good performance `(O(1))` in `LinkedList` compared to `ArrayList(O(n))`.\r\n&gt; Hence if there is a requirement of frequent addition and deletion in application then LinkedList is a best choice.\r\n - Search (`get method`) operations are fast in `Arraylist (O(1))` but not in `LinkedList (O(n))` \r\n&gt;so If there are less add and remove operations and more search operations requirement, ArrayList would be your best bet.\r\n\r\n","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":2291,"user_id":1428052,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/3b2b0ab451ccd36f1a2ddb6d8aff3481?s=128&d=identicon&r=PG","display_name":"Abhijeet Ashok Muneshwar","link":"https://stackoverflow.com/users/1428052/abhijeet-ashok-muneshwar"},"comment_count":0,"score":21,"creation_date":1486739642,"body_markdown":"Let&#39;s compare LinkedList and ArrayList w.r.t. below parameters:\r\n\r\n## 1. Implementation ##\r\n&gt; *ArrayList* is the resizable array implementation of list interface , while \r\n&gt; \r\n&gt; *LinkedList* is the Doubly-linked list implementation of the list interface.\r\n\r\n\r\n----------\r\n## 2. Performance ##\r\n\r\n - &lt;h3&gt;get(int index) or search operation&lt;/h3&gt;\r\n\r\n    &gt; *ArrayList* get(int index) operation runs in constant time i.e O(1)  while \r\n    &gt; \r\n    &gt; *LinkedList* get(int index) operation run time is O(n) .\r\n\r\n    The reason behind *ArrayList* being faster than LinkedList is that ArrayList uses an index based system for its elements as it internally uses an array data structure, on the other hand,\r\n\r\n    *LinkedList* does not provide index-based access for its elements as it iterates either from the beginning or end (whichever is closer) to retrieve the node at the specified element index.\r\n\r\n - &lt;h3&gt;insert() or add(Object) operation&lt;/h3&gt;\r\n\r\n    &gt; Insertions in *LinkedList* are generally fast as compare to ArrayList. In LinkedList adding or insertion is O(1) operation . \r\n    &gt; \r\n    &gt; While in *ArrayList*, if the array is the full i.e worst case,  there is an extra cost of resizing array and copying elements to the new array, which makes runtime of add operation in ArrayList O(n), otherwise it is O(1).\r\n\r\n - &lt;h3&gt;remove(int) operation&lt;/h3&gt;\r\n\r\n     Remove operation in LinkedList is generally the same as ArrayList i.e. O(n).\r\n\r\n    &gt; In *LinkedList*, there are two overloaded remove methods. one is remove() without any parameter which removes the head of the list and runs in constant time O(1). The other overloaded remove method in LinkedList is remove(int) or remove(Object) which removes the Object or int passed as a parameter. This method traverses the LinkedList until it found the Object and unlink it from the original list. Hence this method runtime is O(n). \r\n    &gt; \r\n    &gt; While in *ArrayList* remove(int) method involves copying elements from the old array to new updated array, hence its runtime is O(n).\r\n\r\n\r\n\r\n----------\r\n\r\n## 3. Reverse  Iterator ##\r\n&gt; *LinkedList* can be iterated in reverse direction using descendingIterator() while \r\n&gt; \r\n&gt; there is no descendingIterator() in *ArrayList* , so we need to write our own code to iterate over the ArrayList in reverse direction.\r\n\r\n\r\n----------\r\n\r\n\r\n## 4. Initial Capacity  ##\r\n&gt; If the constructor  is not overloaded, then *ArrayList* creates an empty list of initial capacity 10, while \r\n&gt; \r\n&gt; *LinkedList*  only constructs the empty list without any initial capacity.\r\n\r\n\r\n----------\r\n\r\n\r\n## 5. Memory Overhead  ##\r\n&gt; Memory overhead in *LinkedList* is more as compared to ArrayList as a node in LinkedList needs to maintain the addresses of the next and previous node. While \r\n&gt; \r\n&gt; In *ArrayList*  each index only holds the actual object(data).\r\n\r\n\r\n\r\n\r\n\r\n----------\r\n\r\n\r\n[Source][1]\r\n\r\n\r\n  [1]: http://javahungry.blogspot.com/2015/04/difference-between-arraylist-and-linkedlist-in-java-example.html","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":2055,"user_id":2032701,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/0abc2879537f0c8fbbd8d97dc72f5ae0?s=128&d=identicon&r=PG","display_name":"Ruslan","link":"https://stackoverflow.com/users/2032701/ruslan"},"comment_count":0,"score":65,"creation_date":1488365263,"body_markdown":"Joshua Bloch, the author of LinkedList:\r\n\r\n&gt; Does anyone actually use LinkedList?  I wrote it, and I never use it.\r\n\r\nLink: https://twitter.com/joshbloch/status/583813919019573248\r\n\r\nI&#39;m sorry for the answer for being not that informative as the other answers, but I thought it would be the most interesting and self-explanatory.","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":1289,"user_id":5974780,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/db181de522cb3dcfcddaeb95fa2925a3?s=128&d=identicon&r=PG&f=1","display_name":"Nesan Mano","link":"https://stackoverflow.com/users/5974780/nesan-mano"},"comment_count":0,"score":8,"creation_date":1494871590,"body_markdown":"ArrayList and LinkedList have their own pros and cons.\r\n\r\nArrayList uses contiguous memory address compared to LinkedList which uses pointers toward the next node. So when you want to look up an element in an ArrayList is faster than doing n iterations with LinkedList.\r\n\r\nOn the other hand, insertion and deletion in a LinkedList are much easier because you just have to change the pointers whereas an ArrayList implies the use of shift operation for any insertion or deletion.\r\n\r\nIf you have frequent retrieval operations in your app use an ArrayList. If you have frequent insertion and deletion use a LinkedList. ","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":206,"user_id":8638323,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/409519eecd1e72d7c5bfee75f29681bc?s=128&d=identicon&r=PG&f=1","display_name":"Randhawa","link":"https://stackoverflow.com/users/8638323/randhawa"},"comment_count":0,"score":1,"creation_date":1519163479,"body_markdown":"ArrayList extends AbstractList and implements the List Interface. ArrayList is dynamic array.&lt;br&gt;It can be said that it was basically created to overcome the drawbacks of arrays&lt;br&gt;&lt;br&gt;\r\nThe LinkedList class extends AbstractSequentialList and implements List,Deque, and Queue interface.\r\n&lt;br&gt;Performance&lt;br&gt;\r\n`arraylist.get()` is  O(1) whereas `linkedlist.get()` is O(n) &lt;br&gt;\r\n`arraylist.add()` is  O(1) and `linkedlist.add()` is 0(1)&lt;br&gt;\r\n`arraylist.contains()` is O(n) and`linkedlist.contains()` is O(n) &lt;br&gt;\r\n`arraylist.next()` is O(1) and `linkedlist.next()` is O(1)&lt;br&gt;\r\n`arraylist.remove()` is O(n) whereas `linkedlist.remove()` is O(1)&lt;br&gt;\r\nIn arraylist&lt;br&gt;`iterator.remove()` is O(n)&lt;br&gt; whereas In linkedlist &lt;br&gt;`iterator.remove()`is O(1) \r\n\r\n","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":1,"creation_date":1546021984}],"owner":{"reputation":71,"user_id":9902873,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-9uc1Jw304fQ/AAAAAAAAAAI/AAAAAAAAAAc/aB1FR8K019w/photo.jpg?sz=128","display_name":"Anjali Suman","link":"https://stackoverflow.com/users/9902873/anjali-suman"},"comment_count":1,"score":5,"creation_date":1528367621,"body_markdown":"**1) Underlying Data Structure** \r\n\r\nThe first difference between ArrayList and LinkedList comes with the fact that ArrayList is backed by Array while LinkedList is backed by LinkedList. This will lead to further differences in performance.\r\n\r\n**2) LinkedList implements Deque** \r\n\r\nAnother difference between ArrayList and LinkedList is that apart from the List interface, LinkedList also implements Deque interface, which provides first in first out operations for `add()` and `poll()` and several other Deque functions. 3) Adding elements in ArrayList Adding element in ArrayList is O(1) operation if it doesn&#39;t trigger re-size of Array, in which case it becomes O(log(n)), On the other hand, appending an element in LinkedList is O(1) operation, as it doesn&#39;t require any navigation.\r\n\r\n**4) Removing an element from a position** \r\n\r\nIn order to remove an element from a particular index e.g. by calling `remove(index)`, ArrayList performs a copy operation which makes it close to O(n) while LinkedList needs to traverse to that point which also makes it O(n/2), as it can traverse from either direction based upon proximity.\r\n\r\n**5) Iterating over ArrayList or LinkedList** \r\n\r\nIteration is the O(n) operation for both LinkedList and ArrayList where n is a number of an element.\r\n\r\n**6) Retrieving element from a position** \r\n\r\nThe `get(index)` operation is O(1) in ArrayList while its O(n/2) in LinkedList, as it needs to traverse till that entry. Though, in Big O notation O(n/2) is just O(n) because we ignore constants there.\r\n\r\n**7) Memory** \r\n\r\nLinkedList uses a wrapper object, Entry, which is a static nested class for storing data and two nodes next and previous while ArrayList just stores data in Array.\r\n\r\nSo memory requirement seems less in the case of ArrayList than LinkedList except for the case where Array performs the re-size operation when it copies content from one Array to another.\r\n\r\nIf Array is large enough it may take a lot of memory at that point and trigger Garbage collection, which can slow response time.\r\n\r\nFrom all the above differences between ArrayList vs LinkedList, It looks ArrayList is the better choice than LinkedList in almost all cases, except when you do a frequent `add()` operation than `remove()`, or `get()`.\r\n\r\nIt&#39;s easier to modify a linked list than ArrayList, especially if you are adding or removing elements from start or end because linked list internally keeps references of those positions and they are accessible in O(1) time.\r\n\r\nIn other words, you don&#39;t need to traverse through the linked list to reach the position where you want to add elements, in that case, addition becomes O(n) operation. For example, inserting or deleting an element in the middle of a linked list.\r\n\r\nIn my opinion, use ArrayList over LinkedList for most of the practical purpose in Java.","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":9708,"user_id":1490322,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/xeCew.png?s=128&g=1","display_name":"Jose Martinez","link":"https://stackoverflow.com/users/1490322/jose-martinez"},"comment_count":0,"score":3,"creation_date":1533408726,"body_markdown":"One of the tests I saw on here only conducts the test once.  But what I have noticed is that you need to run these tests many times and eventually their times will converge.  Basically the JVM needs to warm up.  For my particular use case I needed to add/remove items to a list that grows to about 500 items.  In my tests `LinkedList` came out faster, with `LinkedList` coming in around 50,000 NS and `ArrayList` coming in at around 90,000 NS... give or take.  See the code below.\r\n\r\n\r\n\r\n    public static void main(String[] args) {\r\n        List&lt;Long&gt; times = new ArrayList&lt;&gt;();\r\n        for (int i = 0; i &lt; 100; i++) {\r\n            times.add(doIt());\r\n        }\r\n        System.out.println(&quot;avg = &quot; + (times.stream().mapToLong(x -&gt; x).average()));\r\n    }\r\n\r\n    static long doIt() {\r\n        long start = System.nanoTime();\r\n        List&lt;Object&gt; list = new LinkedList&lt;&gt;();\r\n        //uncomment line below to test with ArrayList\r\n        //list = new ArrayList&lt;&gt;();\r\n        for (int i = 0; i &lt; 500; i++) {\r\n            list.add(i);\r\n        }\r\n\r\n        Iterator it = list.iterator();\r\n        while (it.hasNext()) {\r\n            it.next();\r\n            it.remove();\r\n        }\r\n        long end = System.nanoTime();\r\n        long diff = end - start;\r\n        //uncomment to see the JVM warmup and get faster for the first few iterations\r\n        //System.out.println(diff)\r\n        return diff;\r\n    }\r\n\r\n\r\n","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":0,"creation_date":1546021606},{"owner":{"reputation":4955,"user_id":329496,"user_type":"registered","accept_rate":66,"profile_image":"https://www.gravatar.com/avatar/92ab9af5b2597efeee9eab0f0d782409?s=128&d=identicon&r=PG","display_name":"simbo1905","link":"https://stackoverflow.com/users/329496/simbo1905"},"score":1,"creation_date":1613824246}],"owner":{"reputation":7770,"user_id":3834036,"user_type":"registered","profile_image":"https://i.stack.imgur.com/PEZNI.png?s=128&g=1","display_name":"Lior Bar-On","link":"https://stackoverflow.com/users/3834036/lior-bar-on"},"comment_count":2,"score":40,"creation_date":1539917596,"body_markdown":"**TL;DR** due to modern computer architecture, `ArrayList` will be significantly more efficient for nearly any possible use-case - and therefore `LinkedList` should be avoided except some very unique and extreme cases.\r\n\r\n-----\r\n\r\n\r\nIn theory, LinkedList has an O(1) for the `add(E element)`\r\n\r\nAlso adding an element in the mid of a list should be very efficient.\r\n\r\n\r\nPractice is very different, as LinkedList is a **Cache Hostile** Data structure. From performance POV - there are very little cases where `LinkedList` could be better performing than the *Cache-friendly* `ArrayList`.\r\n\r\nHere are results of a benchmark testing inserting elements in random locations. As you can see - the array list if much more efficient, although in theory each insert in the middle of the list will require &quot;move&quot; the *n* later elements of the array (lower values are better):\r\n\r\n[![enter image description here][1]][1]\r\n\r\nWorking on a later generation hardware (bigger, more efficient caches) - the results are even more conclusive:\r\n\r\n[![enter image description here][2]][2]\r\n\r\nLinkedList takes much more time to accomplish the same job. [source](https://kjellkod.wordpress.com/2012/08/08/java-galore-linkedlist-vs-arraylist-vs-dynamicintarray/) [Source Code](https://ideone.com/JOJ05)\r\n\r\nThere are two main reasons for this:\r\n\r\n 1. **Mainly** - that the nodes of the `LinkedList` are scattered randomly across the memory. RAM (&quot;Random Access Memory&quot;) isn&#39;t really random and blocks of memory need to be fetched to cache. This operation takes time, and when such fetches happen frequently - the memory pages in the cache need to be replaced all the time -&gt; Cache misses -&gt; Cache is not efficient.\r\n`ArrayList` elements are stored on continuous memory - which is exactly what the modern CPU architecture is optimizing for.\r\n\r\n 2. **Secondary** `LinkedList` required to hold back/forward pointers, which means 3 times the memory consumption per value stored compared to `ArrayList`.\r\n\r\n[DynamicIntArray](https://github.com/apache/orc/blob/master/java/core/src/java/org/apache/orc/impl/DynamicIntArray.java), btw, is a custom ArrayList implementation holding `Int` (primitive type) and not Objects - hence all data is really stored adjacently - hence even more efficient.\r\n\r\nA key elements to remember is that the cost of fetching memory block, is more significant than the cost accessing a single memory cell. That&#39;s why reader 1MB of sequential memory is up to x400 times faster than reading this amount of data from different blocks of memory:\r\n\r\n\r\n    Latency Comparison Numbers (~2012)\r\n    ----------------------------------\r\n    L1 cache reference                           0.5 ns\r\n    Branch mispredict                            5   ns\r\n    L2 cache reference                           7   ns                      14x L1 cache\r\n    Mutex lock/unlock                           25   ns\r\n    Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache\r\n    Compress 1K bytes with Zippy             3,000   ns        3 us\r\n    Send 1K bytes over 1 Gbps network       10,000   ns       10 us\r\n    Read 4K randomly from SSD*             150,000   ns      150 us          ~1GB/sec SSD\r\n    Read 1 MB sequentially from memory     250,000   ns      250 us\r\n    Round trip within same datacenter      500,000   ns      500 us\r\n    Read 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\r\n    Disk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\r\n    Read 1 MB sequentially from disk    20,000,000   ns   20,000 us   20 ms  80x memory, 20X SSD\r\n    Send packet CA-&gt;Netherlands-&gt;CA    150,000,000   ns  150,000 us  150 ms\r\n\r\nSource: [Latency Numbers Every Programmer Should Know](https://gist.github.com/jboner/2841832)\r\n\r\n\r\nJust to make the point even clearer, please check the benchmark of adding elements to the beginning of the list. This is a use-case where, in-theory, the `LinkedList` should really shine, and `ArrayList` should present poor or even worse-case results:\r\n\r\n[![enter image description here][3]][3]\r\n\r\nNote: this is a benchmark of the C++ Std lib, but my previous experience shown the C++ and Java results are very similar. [Source Code](https://ideone.com/DDEJF)\r\n\r\nCopying a sequential bulk of memory is an operation optimized by the modern CPUs - changing theory and actually making, again, `ArrayList`/`Vector` much more efficient\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/edAd8.png\r\n  [2]: https://i.stack.imgur.com/XtdBP.png\r\n  [3]: https://i.stack.imgur.com/2EygL.png\r\n\r\n----\r\n\r\nCredits: All benchmarks posted here are created by [Kjell Hedstr&#246;m](https://www.linkedin.com/in/kjellkod/). Even more data can be found on [his blog](https://kjellkod.wordpress.com/)","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":1,"creation_date":1550773499}],"owner":{"reputation":6424,"user_id":3647002,"user_type":"registered","accept_rate":47,"profile_image":"https://i.stack.imgur.com/raqLI.png?s=128&g=1","display_name":"Gayan Weerakutti","link":"https://stackoverflow.com/users/3647002/gayan-weerakutti"},"comment_count":1,"score":23,"creation_date":1547470452,"body_markdown":"I usually use one over the other based on the time complexities of the operations that I&#39;d perform on that particular List.                                                                  \r\n\r\n    |---------------------|---------------------|--------------------|------------|\r\n    |      Operation      |     ArrayList       |     LinkedList     |   Winner   |\r\n    |---------------------|---------------------|--------------------|------------|\r\n    |     get(index)      |       O(1)          |         O(n)       | ArrayList  |\r\n    |                     |                     |  n/4 steps in avg  |            |\r\n    |---------------------|---------------------|--------------------|------------|\r\n    |      add(E)         |       O(1)          |         O(1)       | LinkedList |\r\n    |                     |---------------------|--------------------|            |\r\n    |                     | O(n) in worst case  |                    |            |\r\n    |---------------------|---------------------|--------------------|------------|\r\n    |    add(index, E)    |       O(n)          |         O(n)       | LinkedList |\r\n    |                     |     n/2 steps       |      n/4 steps     |            |\r\n    |                     |---------------------|--------------------|            |\r\n    |                     |                     |  O(1) if index = 0 |            |\r\n    |---------------------|---------------------|--------------------|------------|\r\n    |  remove(index, E)   |       O(n)          |         O(n)       | LinkedList |\r\n    |                     |---------------------|--------------------|            |\r\n    |                     |     n/2 steps       |      n/4 steps     |            |\r\n    |---------------------|---------------------|--------------------|------------|\r\n    |  Iterator.remove()  |       O(n)          |         O(1)       | LinkedList |\r\n    |  ListIterator.add() |                     |                    |            |\r\n    |---------------------|---------------------|--------------------|------------|\r\n\r\n\r\n    |--------------------------------------|-----------------------------------|\r\n    |              ArrayList               |            LinkedList             |\r\n    |--------------------------------------|-----------------------------------|\r\n    |     Allows fast read access          |   Retrieving element takes O(n)   |\r\n    |--------------------------------------|-----------------------------------|\r\n    |   Adding an element require shifting | o(1) [but traversing takes time]  |\r\n    |       all the later elements         |                                   |\r\n    |--------------------------------------|-----------------------------------|\r\n    |   To add more elements than capacity |\r\n    |    new array need to be allocated    |\r\n    |--------------------------------------|\r\n\r\n","title":"When to use LinkedList over ArrayList in Java?"},{"owner":{"reputation":1027,"user_id":5870336,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/21a411552aec6db6c9f636258ced2d4c?s=128&d=identicon&r=PG&f=1","display_name":"Sina Madani","link":"https://stackoverflow.com/users/5870336/sina-madani"},"comment_count":0,"score":1,"creation_date":1570666147,"body_markdown":"My rule of thumb is if I need a `Collection` (i.e. doesn&#39;t need to be a `List`) then use `ArrayList` if you know the size in advance, or can know the size confidently, or know that it won&#39;t vary much. If you need random access (i.e. you use `get(index)`) then avoid `LinkedList`. Basically, use `LinkedList` only if you don&#39;t need index access and don&#39;t know the (approximate) size of the collection you&#39;re allocating. Also if you&#39;re going to be making lots of additions and removals (again through the `Collection` interface) then LinkedList may be preferable.","title":"When to use LinkedList over ArrayList in Java?"},{"comments":[{"owner":{"reputation":327,"user_id":9451867,"user_type":"registered","profile_image":"https://i.stack.imgur.com/NZmtJ.jpg?s=128&g=1","display_name":"Doga Oruc","link":"https://stackoverflow.com/users/9451867/doga-oruc"},"score":0,"creation_date":1602145790}],"owner":{"reputation":15,"user_id":5047682,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/95b503d71430c6cba89c2e817a4db518?s=128&d=identicon&r=PG&f=1","display_name":"Boris Fain","link":"https://stackoverflow.com/users/5047682/boris-fain"},"comment_count":1,"score":-3,"creation_date":1591613469,"body_markdown":"First of all use Vector instead ArrayList because you can overrite insureCapasity method ,\r\nin ArrayList is private and add 1.5 size of current array https://docs.oracle.com/javase/8/docs/api/java/util/Vector.html#ensureCapacity-int-\r\n\r\nin many case it can be better that linkedList, the las has big advantage one you insert data with high freqency so size of you list changes very fast and you can&#39;t allocate size for number elements. \r\nIn the theory you can get error like not &quot;enough memory&quot;  but  in modern computers you have 16G and swaping disk, so if you list is billoins elements you can fail, comparing 15-20 years ago.  ","title":"When to use LinkedList over ArrayList in Java?"}],"owner":{"reputation":35611,"user_id":41200,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/625c890e8df6e3310dc357810eab83e8?s=128&d=identicon&r=PG","display_name":"sdellysse","link":"https://stackoverflow.com/users/41200/sdellysse"},"comment_count":2,"is_answered":true,"answer_count":33,"score":3262,"creation_date":1227749795,"question_id":322715,"body_markdown":"I&#39;ve always been one to simply use:\r\n\r\n    List&lt;String&gt; names = new ArrayList&lt;&gt;();\r\n\r\nI use the interface as the type name for _portability_, so that when I ask questions such as these I can rework my code.  \r\n  \r\nWhen should [`LinkedList`][1] be used over [`ArrayList`][2] and vice-versa?\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/9/docs/api/java/util/LinkedList.html\r\n  [2]: https://docs.oracle.com/javase/9/docs/api/java/util/ArrayList.html","link":"https://stackoverflow.com/questions/322715/when-to-use-linkedlist-over-arraylist-in-java","title":"When to use LinkedList over ArrayList in Java?"},{"tags":["java","string","int","type-conversion"],"comments":[{"owner":{"reputation":1854,"user_id":545353,"user_type":"registered","profile_image":"https://i.stack.imgur.com/o0daF.png?s=128&g=1","display_name":"Pavel Molchanov","link":"https://stackoverflow.com/users/545353/pavel-molchanov"},"score":2,"creation_date":1529529984},{"owner":{"reputation":136336,"user_id":415448,"user_type":"registered","accept_rate":33,"profile_image":"https://i.stack.imgur.com/P2vVZ.png?s=128&g=1","display_name":"Michael Kay","link":"https://stackoverflow.com/users/415448/michael-kay"},"score":7,"creation_date":1565087362}],"answers":[{"comments":[{"owner":{"reputation":1045,"user_id":4024628,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Xc5J8.jpg?s=128&g=1","display_name":"Allison","link":"https://stackoverflow.com/users/4024628/allison"},"score":30,"creation_date":1516181860},{"owner":{"reputation":1131,"user_id":682107,"user_type":"registered","accept_rate":97,"profile_image":"https://www.gravatar.com/avatar/3255cbb2aa0d949de9f1da8c82ead4b3?s=128&d=identicon&r=PG&f=1","display_name":"Letholdrus","link":"https://stackoverflow.com/users/682107/letholdrus"},"score":6,"creation_date":1516648706},{"owner":{"reputation":639,"user_id":3293515,"user_type":"registered","profile_image":"https://i.stack.imgur.com/wi11m.jpg?s=128&g=1","display_name":"JPRLCol","link":"https://stackoverflow.com/users/3293515/jprlcol"},"score":7,"creation_date":1516911434},{"owner":{"reputation":439,"user_id":820345,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c3d8b7eaf9dd1e1e56faaffe79517350?s=128&d=identicon&r=PG","display_name":"lokesh","link":"https://stackoverflow.com/users/820345/lokesh"},"score":0,"creation_date":1533726055},{"owner":{"reputation":303,"user_id":5670939,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5a898828c0490facb1bf69c2e78bb8e6?s=128&d=identicon&r=PG&f=1","display_name":"Radioactive","link":"https://stackoverflow.com/users/5670939/radioactive"},"score":0,"creation_date":1540569003},{"owner":{"reputation":381,"user_id":1997399,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/62b6a8b075d843b55d494d09fe1e0543?s=128&d=identicon&r=PG","display_name":"Kunda","link":"https://stackoverflow.com/users/1997399/kunda"},"score":1,"creation_date":1574085906},{"owner":{"reputation":381,"user_id":1997399,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/62b6a8b075d843b55d494d09fe1e0543?s=128&d=identicon&r=PG","display_name":"Kunda","link":"https://stackoverflow.com/users/1997399/kunda"},"score":2,"creation_date":1574086508},{"owner":{"reputation":259,"user_id":6278133,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-UAc4wivY8S8/AAAAAAAAAAI/AAAAAAAAD5g/qPFS_fsRglA/photo.jpg?sz=128","display_name":"Firzok Nadeem","link":"https://stackoverflow.com/users/6278133/firzok-nadeem"},"score":0,"creation_date":1592244658},{"owner":{"reputation":226,"user_id":2526181,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5c7b68d27cd1b5f3aeee15876eaae7d2?s=128&d=identicon&r=PG","display_name":"bdsl","link":"https://stackoverflow.com/users/2526181/bdsl"},"score":0,"creation_date":1596654711},{"owner":{"reputation":107659,"user_id":179850,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/6b2c535fac79e482b71f15de561f55ca?s=128&d=identicon&r=PG","display_name":"Gray","link":"https://stackoverflow.com/users/179850/gray"},"score":1,"creation_date":1609706706},{"owner":{"reputation":63,"user_id":7563004,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/218fe30ef22362effac4b32e33d06f4b?s=128&d=identicon&r=PG","display_name":"Emerald Cottet","link":"https://stackoverflow.com/users/7563004/emerald-cottet"},"score":0,"creation_date":1611134330}],"owner":{"reputation":110312,"user_id":29995,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/ffffa52ae8108fdeb2559d804051556e?s=128&d=identicon&r=PG","display_name":"Rob Hruska","link":"https://stackoverflow.com/users/29995/rob-hruska"},"comment_count":11,"score":4245,"creation_date":1302200981,"body_markdown":"    String myString = &quot;1234&quot;;\r\n    int foo = Integer.parseInt(myString);\r\n\r\nIf you look at the [Java documentation][1] you&#39;ll notice the &quot;catch&quot; is that this function can throw a `NumberFormatException`, which of course you have to handle:\r\n\r\n    int foo;\r\n    try {\r\n       foo = Integer.parseInt(myString);\r\n    }\r\n    catch (NumberFormatException e)\r\n    {\r\n       foo = 0;\r\n    }\r\n\r\n(This treatment defaults a malformed number to `0`, but you can do something else if you like.)\r\n\r\nAlternatively, you can use an `Ints` method from the Guava library, which in combination with Java 8&#39;s `Optional`, makes for a powerful and concise way to convert a string into an int:\r\n\r\n    import com.google.common.primitives.Ints;\r\n\r\n    int foo = Optional.ofNullable(myString)\r\n     .map(Ints::tryParse)\r\n     .orElse(0)\r\n\r\n  [1]: https://docs.oracle.com/en/java/javase/12/docs/api/java.base/java/lang/Integer.html#parseInt(java.lang.String)\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":7654,"user_id":150884,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/5vmQJ.jpg?s=128&g=1","display_name":"hertzsprung","link":"https://stackoverflow.com/users/150884/hertzsprung"},"score":81,"creation_date":1368952700},{"owner":{"reputation":51630,"user_id":482717,"user_type":"registered","accept_rate":66,"profile_image":"https://www.gravatar.com/avatar/82a1f0fb2478f517c945a53b697dd290?s=128&d=identicon&r=PG","display_name":"Paul Verest","link":"https://stackoverflow.com/users/482717/paul-verest"},"score":21,"creation_date":1414486544},{"owner":{"reputation":59437,"user_id":4117728,"user_type":"registered","accept_rate":91,"profile_image":"https://www.gravatar.com/avatar/66831ed13ffd9c497541220ec45c15c3?s=128&d=identicon&r=PG&f=1","display_name":"largest_prime_is_463035818","link":"https://stackoverflow.com/users/4117728/largest-prime-is-463035818"},"score":0,"creation_date":1535978645},{"owner":{"reputation":779,"user_id":5318121,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/65bccf833e50238aec64044e252f7676?s=128&d=identicon&r=PG&f=1","display_name":"PhilipRoman","link":"https://stackoverflow.com/users/5318121/philiproman"},"score":2,"creation_date":1541004315}],"owner":{"reputation":23682,"user_id":574799,"user_type":"registered","accept_rate":74,"profile_image":"https://i.stack.imgur.com/9jy55.jpg?s=128&g=1","display_name":"lukastymo","link":"https://stackoverflow.com/users/574799/lukastymo"},"comment_count":4,"score":716,"creation_date":1302201400,"body_markdown":"For example, here are two ways:\r\n\r\n    Integer x = Integer.valueOf(str);\r\n    // or\r\n    int y = Integer.parseInt(str);\r\n\r\nThere is a slight difference between these methods: \r\n\r\n- `valueOf` returns a new or cached instance of `java.lang.Integer`\r\n- `parseInt` returns primitive `int`. \r\n\r\nThe same is for all cases: `Short.valueOf`/`parseShort`, `Long.valueOf`/`parseLong`, etc.\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":59437,"user_id":4117728,"user_type":"registered","accept_rate":91,"profile_image":"https://www.gravatar.com/avatar/66831ed13ffd9c497541220ec45c15c3?s=128&d=identicon&r=PG&f=1","display_name":"largest_prime_is_463035818","link":"https://stackoverflow.com/users/4117728/largest-prime-is-463035818"},"score":0,"creation_date":1526457687},{"owner":{"reputation":1949,"user_id":4178262,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-MVZ9ZR1BFos/AAAAAAAAAAI/AAAAAAAAAAA/aEP8yOumPbw/photo.jpg?sz=128","display_name":"Mark Stewart","link":"https://stackoverflow.com/users/4178262/mark-stewart"},"score":1,"creation_date":1528474613}],"owner":{"reputation":3491,"user_id":306711,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1056d852b1a848d4fe3fee601b059da7?s=128&d=identicon&r=PG","display_name":"Ali Akdurak","link":"https://stackoverflow.com/users/306711/ali-akdurak"},"comment_count":2,"score":251,"creation_date":1367304895,"body_markdown":"Well, a very important point to consider is that the Integer parser throws NumberFormatException as stated in [Javadoc][1]. \r\n\r\n    int foo;\r\n    String StringThatCouldBeANumberOrNot = &quot;26263Hello&quot;; //will throw exception\r\n    String StringThatCouldBeANumberOrNot2 = &quot;26263&quot;; //will not throw exception\r\n    try {\r\n          foo = Integer.parseInt(StringThatCouldBeANumberOrNot);\r\n    } catch (NumberFormatException e) {\r\n          //Will Throw exception!\r\n          //do something! anything to handle the exception.\r\n    }\r\n\r\n    try {\r\n          foo = Integer.parseInt(StringThatCouldBeANumberOrNot2);\r\n    } catch (NumberFormatException e) {\r\n          //No problem this time, but still it is good practice to care about exceptions.\r\n          //Never trust user input :)\r\n          //Do something! Anything to handle the exception.\r\n    }\r\n\r\nIt is important to handle this exception when trying to get integer values from split arguments or dynamically parsing something.\r\n\r\n  [1]: http://docs.oracle.com/javase/6/docs/api/java/lang/Integer.html#parseInt%28java.lang.String%29","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":434,"user_id":1365879,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/0161c7599073ce4de07dc6603469540a?s=128&d=identicon&r=PG","display_name":"yohm","link":"https://stackoverflow.com/users/1365879/yohm"},"score":23,"creation_date":1413949396},{"owner":{"reputation":67931,"user_id":1081110,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Fp4Pm.jpg?s=128&g=1","display_name":"Dawood ibn Kareem","link":"https://stackoverflow.com/users/1081110/dawood-ibn-kareem"},"score":89,"creation_date":1451621777},{"owner":{"reputation":6951,"user_id":1290668,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/7S0Hp.jpg?s=128&g=1","display_name":"Billz","link":"https://stackoverflow.com/users/1290668/billz"},"score":0,"creation_date":1451625509},{"owner":{"reputation":1473,"user_id":5851520,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1050ad350ce5bed47c2db205b54c3f16?s=128&d=identicon&r=PG&f=1","display_name":"SusanW","link":"https://stackoverflow.com/users/5851520/susanw"},"score":45,"creation_date":1469726823},{"owner":{"reputation":1189,"user_id":3649372,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e1960e9fe76af8d9b3e3160d9512a114?s=128&d=identicon&r=PG&f=1","display_name":"Nathan Adams","link":"https://stackoverflow.com/users/3649372/nathan-adams"},"score":1,"creation_date":1556734626},{"owner":{"reputation":28448,"user_id":12299000,"user_type":"registered","profile_image":"https://i.stack.imgur.com/0pja9.png?s=128&g=1","display_name":"kaya3","link":"https://stackoverflow.com/users/12299000/kaya3"},"score":2,"creation_date":1572475278}],"owner":{"reputation":6951,"user_id":1290668,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/7S0Hp.jpg?s=128&g=1","display_name":"Billz","link":"https://stackoverflow.com/users/1290668/billz"},"comment_count":6,"score":87,"creation_date":1378865304,"body_markdown":"Do it manually:\r\n\r\n    public static int strToInt(String str){\r\n        int i = 0;\r\n        int num = 0;\r\n        boolean isNeg = false;\r\n\r\n        // Check for negative sign; if it&#39;s there, set the isNeg flag\r\n        if (str.charAt(0) == &#39;-&#39;) {\r\n            isNeg = true;\r\n            i = 1;\r\n        }\r\n\r\n        // Process each character of the string;\r\n        while( i &lt; str.length()) {\r\n            num *= 10;\r\n            num += str.charAt(i++) - &#39;0&#39;; // Minus the ASCII code of &#39;0&#39; to get the value of the charAt(i++).\r\n        }\r\n\r\n        if (isNeg)\r\n            num = -num;\r\n        return num;\r\n    }\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"user_type":"does_not_exist","display_name":"user289086"},"score":18,"creation_date":1413036014},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":11,"creation_date":1457089306},{"owner":{"reputation":445,"user_id":2982121,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/b80348e8c1bad85077d608bb1e2f048d?s=128&d=identicon&r=PG&f=1","display_name":"apm","link":"https://stackoverflow.com/users/2982121/apm"},"score":0,"creation_date":1471604226}],"owner":{"reputation":2296,"user_id":1930011,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/L09ta.jpg?s=128&g=1","display_name":"Thijser","link":"https://stackoverflow.com/users/1930011/thijser"},"comment_count":3,"score":17,"creation_date":1382274709,"body_markdown":"You can also begin by removing all non-numerical characters and then parsing the integer:\r\n\r\n    String mystr = mystr.replaceAll(&quot;[^\\\\d]&quot;, &quot;&quot;);\r\n    int number = Integer.parseInt(mystr);\r\n\r\nBut be warned that this only works for non-negative numbers. \r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":1473,"user_id":5851520,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1050ad350ce5bed47c2db205b54c3f16?s=128&d=identicon&r=PG&f=1","display_name":"SusanW","link":"https://stackoverflow.com/users/5851520/susanw"},"score":1,"creation_date":1475707959}],"owner":{"reputation":939,"user_id":1149248,"user_type":"registered","profile_image":"https://i.stack.imgur.com/ynaA0.jpg?s=128&g=1","display_name":"Dennis Ahaus","link":"https://stackoverflow.com/users/1149248/dennis-ahaus"},"comment_count":1,"score":24,"creation_date":1382275132,"body_markdown":"Converting a string to an int is more complicated than just converting a number. You have think about the following issues:\r\n\r\n- Does the string only contain numbers **0-9**?\r\n- What&#39;s up with **-/+** before or after the string? Is that possible (referring to accounting numbers)?\r\n- What&#39;s up with **MAX_-/MIN_INFINITY?** What will happen if the string is 99999999999999999999? Can the machine treat this string as an int?\r\n\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":1098,"user_id":2086234,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Xq0ZY.jpg?s=128&g=1","display_name":"ChrisB","link":"https://stackoverflow.com/users/2086234/chrisb"},"score":8,"creation_date":1439562234},{"owner":{"reputation":235281,"user_id":2711488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FhkI9.jpg?s=128&g=1","display_name":"Holger","link":"https://stackoverflow.com/users/2711488/holger"},"score":10,"creation_date":1457088461},{"owner":{"reputation":647,"user_id":3126359,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/05d919ef26ce6e423395c5fe329d9482?s=128&d=identicon&r=PG&f=1","display_name":"Oak","link":"https://stackoverflow.com/users/3126359/oak"},"score":2,"creation_date":1462178992},{"owner":{"reputation":1189,"user_id":3649372,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e1960e9fe76af8d9b3e3160d9512a114?s=128&d=identicon&r=PG&f=1","display_name":"Nathan Adams","link":"https://stackoverflow.com/users/3649372/nathan-adams"},"score":0,"creation_date":1556734761},{"owner":{"reputation":4302,"user_id":201891,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/3798fee71522049317927bc8053c0599?s=128&d=identicon&r=PG","display_name":"DavidS","link":"https://stackoverflow.com/users/201891/davids"},"score":4,"creation_date":1574808169},{"owner":{"reputation":12146,"user_id":2985643,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/eaacaf1426f7e6d02914fcf99dc0a33b?s=128&d=identicon&r=PG&f=1","display_name":"skomisa","link":"https://stackoverflow.com/users/2985643/skomisa"},"score":1,"creation_date":1586658481}],"owner":{"reputation":647,"user_id":3126359,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/05d919ef26ce6e423395c5fe329d9482?s=128&d=identicon&r=PG&f=1","display_name":"Oak","link":"https://stackoverflow.com/users/3126359/oak"},"comment_count":6,"score":43,"creation_date":1395359479,"body_markdown":"Currently I&#39;m doing an assignment for college, where I can&#39;t use certain expressions, such as the ones above, and by looking at the ASCII table, I managed to do it. It&#39;s a far more complex code, but it could help others that are restricted like I was.\r\n\r\nThe first thing to do is to receive the input, in this case, a string of digits; I&#39;ll call it `String number`, and in this case, I&#39;ll exemplify it using the number 12, therefore `String number = &quot;12&quot;;`\r\n\r\nAnother limitation was the fact that I couldn&#39;t use repetitive cycles, therefore, a `for` cycle (which would have been perfect) can&#39;t be used either. This limits us a bit, but then again, that&#39;s the goal. Since I only needed two digits (taking the last two digits), a simple `charAt`solved it:\r\n\r\n     // Obtaining the integer values of the char 1 and 2 in ASCII\r\n     int semilastdigitASCII = number.charAt(number.length() - 2);\r\n     int lastdigitASCII = number.charAt(number.length() - 1);\r\n\r\nHaving the codes, we just need to look up at the table, and make the necessary adjustments:\r\n\r\n     double semilastdigit = semilastdigitASCII - 48;  // A quick look, and -48 is the key\r\n     double lastdigit = lastdigitASCII - 48;\r\n\r\nNow, why double? Well, because of a really &quot;weird&quot; step. Currently we have two doubles, 1 and 2, but we need to turn it into 12, there isn&#39;t any mathematic operation that we can do.\r\n\r\nWe&#39;re dividing the latter (lastdigit) by 10 in the fashion ` 2/10 = 0.2 ` (hence why double) like this:\r\n\r\n     lastdigit = lastdigit / 10;\r\n\r\nThis is merely playing with numbers. We were turning the last digit into a decimal. But now, look at what happens:\r\n\r\n     double jointdigits = semilastdigit + lastdigit; // 1.0 + 0.2 = 1.2\r\n\r\nWithout getting too into the math, we&#39;re simply isolating units the digits of a number. You see, since we only consider 0-9, dividing by a multiple of 10 is like creating a &quot;box&quot; where you store it (think back at when your first grade teacher explained you what a unit and a hundred were). So:\r\n\r\n     int finalnumber = (int) (jointdigits*10); // Be sure to use parentheses &quot;()&quot;\r\n\r\nAnd there you go. You turned a String of digits (in this case, two digits), into an integer composed of those two digits, considering the following limitations:\r\n\r\n- No repetitive cycles\r\n- No &quot;Magic&quot; Expressions such as parseInt\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":3248,"user_id":3948862,"user_type":"registered","accept_rate":57,"profile_image":"https://i.stack.imgur.com/pXuEe.jpg?s=128&g=1","display_name":"D&#225;vid Horv&#225;th","link":"https://stackoverflow.com/users/3948862/d%c3%a1vid-horv%c3%a1th"},"score":0,"creation_date":1542102802}],"owner":{"reputation":912,"user_id":2172026,"user_type":"registered","profile_image":"https://i.stack.imgur.com/TXyda.png?s=128&g=1","display_name":"fitorec","link":"https://stackoverflow.com/users/2172026/fitorec"},"comment_count":1,"score":19,"creation_date":1400859481,"body_markdown":"I&#39;m have a solution, but I do not know how effective it is. But it works well, and I think you could improve it. On the other hand, I did a couple of tests with [JUnit][1] which step correctly. I attached the function and testing:\r\n\r\n    static public Integer str2Int(String str) {\r\n        Integer result = null;\r\n        if (null == str || 0 == str.length()) {\r\n            return null;\r\n        }\r\n        try {\r\n            result = Integer.parseInt(str);\r\n        } \r\n        catch (NumberFormatException e) {\r\n            String negativeMode = &quot;&quot;;\r\n            if(str.indexOf(&#39;-&#39;) != -1)\r\n                negativeMode = &quot;-&quot;;\r\n            str = str.replaceAll(&quot;-&quot;, &quot;&quot; );\r\n            if (str.indexOf(&#39;.&#39;) != -1) {\r\n                str = str.substring(0, str.indexOf(&#39;.&#39;));\r\n                if (str.length() == 0) {\r\n                    return (Integer)0;\r\n                }\r\n            }\r\n            String strNum = str.replaceAll(&quot;[^\\\\d]&quot;, &quot;&quot; );\r\n            if (0 == strNum.length()) {\r\n                return null;\r\n            }\r\n            result = Integer.parseInt(negativeMode + strNum);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\nTesting with JUnit:\r\n\r\n    @Test\r\n    public void testStr2Int() {\r\n        assertEquals(&quot;is numeric&quot;, (Integer)(-5), Helper.str2Int(&quot;-5&quot;));\r\n        assertEquals(&quot;is numeric&quot;, (Integer)50, Helper.str2Int(&quot;50.00&quot;));\r\n        assertEquals(&quot;is numeric&quot;, (Integer)20, Helper.str2Int(&quot;$ 20.90&quot;));\r\n        assertEquals(&quot;is numeric&quot;, (Integer)5, Helper.str2Int(&quot; 5.321&quot;));\r\n        assertEquals(&quot;is numeric&quot;, (Integer)1000, Helper.str2Int(&quot;1,000.50&quot;));\r\n        assertEquals(&quot;is numeric&quot;, (Integer)0, Helper.str2Int(&quot;0.50&quot;));\r\n        assertEquals(&quot;is numeric&quot;, (Integer)0, Helper.str2Int(&quot;.50&quot;));\r\n        assertEquals(&quot;is numeric&quot;, (Integer)0, Helper.str2Int(&quot;-.10&quot;));\r\n        assertEquals(&quot;is numeric&quot;, (Integer)Integer.MAX_VALUE, Helper.str2Int(&quot;&quot;+Integer.MAX_VALUE));\r\n        assertEquals(&quot;is numeric&quot;, (Integer)Integer.MIN_VALUE, Helper.str2Int(&quot;&quot;+Integer.MIN_VALUE));\r\n        assertEquals(&quot;Not\r\n         is numeric&quot;, null, Helper.str2Int(&quot;czv.,xcvsa&quot;));\r\n        /**\r\n         * Dynamic test\r\n         */\r\n        for(Integer num = 0; num &lt; 1000; num++) {\r\n            for(int spaces = 1; spaces &lt; 6; spaces++) {\r\n                String numStr = String.format(&quot;%0&quot;+spaces+&quot;d&quot;, num);\r\n                Integer numNeg = num * -1;\r\n                assertEquals(numStr + &quot;: is numeric&quot;, num, Helper.str2Int(numStr));\r\n                assertEquals(numNeg + &quot;: is numeric&quot;, numNeg, Helper.str2Int(&quot;- &quot; + numStr));\r\n            }\r\n        }\r\n    }\r\n\r\n  [1]: http://en.wikipedia.org/wiki/JUnit\r\n\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":9300,"user_id":15464,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c8c949d9223d9daaa34fd151b78979c0?s=128&d=identicon&r=PG","display_name":"wnoise","link":"https://stackoverflow.com/users/15464/wnoise"},"score":35,"creation_date":1458659898},{"owner":{"reputation":679,"user_id":3224854,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5308ca9c8de8a41b9fd7dc36a03406f8?s=128&d=identicon&r=PG","display_name":"etherous","link":"https://stackoverflow.com/users/3224854/etherous"},"score":15,"creation_date":1496355945}],"owner":{"reputation":711,"user_id":2344115,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/eb2078464d417c2074b00b1d85ca5a39?s=128&d=identicon&r=PG","display_name":"Ryboflavin","link":"https://stackoverflow.com/users/2344115/ryboflavin"},"comment_count":2,"score":58,"creation_date":1440677269,"body_markdown":"An alternate solution is to use [Apache Commons&#39;][1] NumberUtils:\r\n\r\n    int num = NumberUtils.toInt(&quot;1234&quot;);\r\n\r\nThe Apache utility is nice because if the string is an invalid number format then 0 is always returned. Hence saving you the try catch block.\r\n\r\n[Apache NumberUtils API Version 3.4][2]\r\n\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Apache_Commons\r\n  [2]: https://commons.apache.org/proper/commons-lang/javadocs/api-3.4/org/apache/commons/lang3/math/NumberUtils.html#toInt(java.lang.String)","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":559,"user_id":3760904,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/Do5Yd.jpg?s=128&g=1","display_name":"Giridhar Kumar","link":"https://stackoverflow.com/users/3760904/giridhar-kumar"},"comment_count":0,"score":22,"creation_date":1445334695,"body_markdown":"We can use the `parseInt(String str)` method of the `Integer` wrapper class for converting a String value to an integer value.\r\n\r\nFor example:\r\n\r\n    String strValue = &quot;12345&quot;;\r\n    Integer intValue = Integer.parseInt(strVal);\r\n\r\nThe `Integer` class also provides the `valueOf(String str)` method:\r\n\r\n    String strValue = &quot;12345&quot;;\r\n    Integer intValue = Integer.valueOf(strValue);\r\n\r\nWe can also use `toInt(String strValue)` of [NumberUtils Utility Class](https://commons.apache.org/proper/commons-lang/javadocs/api-3.4/org/apache/commons/lang3/math/NumberUtils.html) for the conversion:\r\n\r\n    String strValue = &quot;12345&quot;;\r\n    Integer intValue = NumberUtils.toInt(strValue);","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":8612,"user_id":2040863,"user_type":"registered","accept_rate":96,"profile_image":"https://i.stack.imgur.com/IspsC.jpg?s=128&g=1","display_name":"John Hascall","link":"https://stackoverflow.com/users/2040863/john-hascall"},"score":4,"creation_date":1457129114},{"owner":{"reputation":193,"user_id":3809625,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2a6c2bbe9ea3121b216a3db4f29a6c37?s=128&d=identicon&r=PG&f=1","display_name":"php_coder_3809625","link":"https://stackoverflow.com/users/3809625/php-coder-3809625"},"score":2,"creation_date":1461714872}],"owner":{"reputation":3069,"user_id":2837359,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/9B4kt.jpg?s=128&g=1","display_name":"manikant gautam","link":"https://stackoverflow.com/users/2837359/manikant-gautam"},"comment_count":2,"score":9,"creation_date":1451539728,"body_markdown":"You can use this code also, with some precautions.\r\n\r\n* Option #1: Handle the exception explicitly, for example, showing a message dialog and then stop the execution of the current workflow. For example:\r\n\r\n\r\n        try\r\n            {\r\n                String stringValue = &quot;1234&quot;;\r\n\r\n                // From String to Integer\r\n                int integerValue = Integer.valueOf(stringValue);\r\n\r\n                // Or\r\n                int integerValue = Integer.ParseInt(stringValue);\r\n\r\n                // Now from integer to back into string\r\n                stringValue = String.valueOf(integerValue);\r\n            }\r\n        catch (NumberFormatException ex) {\r\n            //JOptionPane.showMessageDialog(frame, &quot;Invalid input string!&quot;);\r\n            System.out.println(&quot;Invalid input string!&quot;);\r\n            return;\r\n        }\r\n* Option #2: Reset the affected variable if the execution flow can continue in case of an exception. For example, with some modifications in the catch block\r\n\r\n        catch (NumberFormatException ex) {\r\n            integerValue = 0;\r\n        }\r\n\r\nUsing a string constant for comparison or any sort of computing is always a good idea, because a constant never returns a null value.\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":9646,"user_id":1147688,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/c76a3f29c105a73c4060b3d1934ccd9a?s=128&d=identicon&r=PG","display_name":"not2qubit","link":"https://stackoverflow.com/users/1147688/not2qubit"},"score":0,"creation_date":1493293349}],"owner":{"reputation":46744,"user_id":3885376,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/XgeJ5.png?s=128&g=1","display_name":"ROMANIA_engineer","link":"https://stackoverflow.com/users/3885376/romania-engineer"},"comment_count":1,"score":38,"creation_date":1457311369,"body_markdown":"### [`Integer.decode`][1]\r\n\r\nYou can also use `public static Integer decode(String nm) throws NumberFormatException`.\r\n\r\nIt also works for base 8 and 16:\r\n\r\n    // base 10\r\n    Integer.parseInt(&quot;12&quot;);     // 12 - int\r\n    Integer.valueOf(&quot;12&quot;);      // 12 - Integer\r\n    Integer.decode(&quot;12&quot;);       // 12 - Integer\r\n    // base 8\r\n    // 10 (0,1,...,7,10,11,12)\r\n    Integer.parseInt(&quot;12&quot;, 8);  // 10 - int\r\n    Integer.valueOf(&quot;12&quot;, 8);   // 10 - Integer\r\n    Integer.decode(&quot;012&quot;);      // 10 - Integer\r\n    // base 16\r\n    // 18 (0,1,...,F,10,11,12)\r\n    Integer.parseInt(&quot;12&quot;,16);  // 18 - int\r\n    Integer.valueOf(&quot;12&quot;,16);   // 18 - Integer\r\n    Integer.decode(&quot;#12&quot;);      // 18 - Integer\r\n    Integer.decode(&quot;0x12&quot;);     // 18 - Integer\r\n    Integer.decode(&quot;0X12&quot;);     // 18 - Integer\r\n    // base 2\r\n    Integer.parseInt(&quot;11&quot;,2);   // 3 - int\r\n    Integer.valueOf(&quot;11&quot;,2);    // 3 - Integer\r\n\r\nIf you want to get `int` instead of `Integer` you can use:\r\n\r\n1. Unboxing:\r\n\r\n        int val = Integer.decode(&quot;12&quot;); \r\n\r\n2. `intValue()`:\r\n\r\n        Integer.decode(&quot;12&quot;).intValue();\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html#decode-java.lang.String-","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":4054,"user_id":3888450,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/8941584d8e7dd4925b21d7bb79a62b18?s=128&d=identicon&r=PG&f=1","display_name":"Stefan Dollase","link":"https://stackoverflow.com/users/3888450/stefan-dollase"},"comment_count":0,"score":29,"creation_date":1459739588,"body_markdown":"Whenever there is the slightest possibility that the given String does not contain an Integer, you have to handle this special case. Sadly, the standard Java methods `Integer::parseInt` and `Integer::valueOf` throw a `NumberFormatException` to signal this special case. Thus, you have to use exceptions for flow control, which is generally considered bad coding style.\r\n\r\nIn my opinion, this special case should be handled by returning an empty `Optional&lt;Integer&gt;`. Since Java does not offer such a method, I use the following wrapper:\r\n\r\n\tprivate Optional&lt;Integer&gt; tryParseInteger(String string) {\r\n\t\ttry {\r\n\t\t\treturn Optional.of(Integer.valueOf(string));\r\n\t\t} catch (NumberFormatException e) {\r\n\t\t\treturn Optional.empty();\r\n\t\t}\r\n\t}\r\n\r\nExample usage:\r\n\r\n\t// prints &quot;12&quot;\r\n\tSystem.out.println(tryParseInteger(&quot;12&quot;).map(i -&gt; i.toString()).orElse(&quot;invalid&quot;));\r\n\t// prints &quot;-1&quot;\r\n\tSystem.out.println(tryParseInteger(&quot;-1&quot;).map(i -&gt; i.toString()).orElse(&quot;invalid&quot;));\r\n\t// prints &quot;invalid&quot;\r\n\tSystem.out.println(tryParseInteger(&quot;ab&quot;).map(i -&gt; i.toString()).orElse(&quot;invalid&quot;));\r\n\r\nWhile this is still using exceptions for flow control internally, the usage code becomes very clean. Also, you can clearly distinguish the case where `-1` is parsed as a valid value and the case where an invalid String could not be parsed.","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":2001,"user_id":1551685,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4db3932926e0d73a94e94db75649454a?s=128&d=identicon&r=PG","display_name":"Steve Smith","link":"https://stackoverflow.com/users/1551685/steve-smith"},"score":5,"creation_date":1497438923},{"owner":{"reputation":67931,"user_id":1081110,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Fp4Pm.jpg?s=128&g=1","display_name":"Dawood ibn Kareem","link":"https://stackoverflow.com/users/1081110/dawood-ibn-kareem"},"score":6,"creation_date":1509301714},{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1567465721}],"owner":{"reputation":599,"user_id":3641329,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/ca48c94892e78dcfa80f9cfee4ce4f45?s=128&d=identicon&r=PG&f=1","display_name":"iKing","link":"https://stackoverflow.com/users/3641329/iking"},"comment_count":3,"score":5,"creation_date":1461146079,"body_markdown":"    int foo = Integer.parseInt(&quot;1234&quot;);\r\n\r\nMake sure there is no non-numeric data in the string.\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":32609,"user_id":2648077,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/fd10f51a1b9acf80448616c0a03cd261?s=128&d=identicon&r=PG&f=1","display_name":"Alireza Fattahi","link":"https://stackoverflow.com/users/2648077/alireza-fattahi"},"comment_count":0,"score":10,"creation_date":1469510787,"body_markdown":"As mentioned, Apache Commons&#39; `NumberUtils` can do it. It returns `0` if it cannot convert a string to an int.\r\n\r\nYou can also define your own default value:\r\n\r\n    NumberUtils.toInt(String str, int defaultValue)\r\n\r\nExample:\r\n\r\n    NumberUtils.toInt(&quot;3244&quot;, 1) = 3244\r\n    NumberUtils.toInt(&quot;&quot;, 1)     = 1\r\n    NumberUtils.toInt(null, 5)   = 5\r\n    NumberUtils.toInt(&quot;Hi&quot;, 6)   = 6\r\n    NumberUtils.toInt(&quot; 32 &quot;, 1) = 1 // Space in numbers are not allowed\r\n    NumberUtils.toInt(StringUtils.trimToEmpty(&quot;  32 &quot;, 1)) = 32;\r\n\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":10624,"user_id":619860,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/6vm1N.jpg?s=128&g=1","display_name":"Hoa Nguyen","link":"https://stackoverflow.com/users/619860/hoa-nguyen"},"comment_count":0,"score":13,"creation_date":1470062648,"body_markdown":"Apart from the previous answers, I would like to add several functions. These are results while you use them:\r\n\r\n    public static void main(String[] args) {\r\n      System.out.println(parseIntOrDefault(&quot;123&quot;, 0)); // 123\r\n      System.out.println(parseIntOrDefault(&quot;aaa&quot;, 0)); // 0\r\n      System.out.println(parseIntOrDefault(&quot;aaa456&quot;, 3, 0)); // 456\r\n      System.out.println(parseIntOrDefault(&quot;aaa789bbb&quot;, 3, 6, 0)); // 789\r\n    }\r\n\r\nImplementation:\r\n\r\n    public static int parseIntOrDefault(String value, int defaultValue) {\r\n      int result = defaultValue;\r\n      try {\r\n        result = Integer.parseInt(value);\r\n      }\r\n      catch (Exception e) {\r\n      }\r\n      return result;\r\n    }\r\n\r\n    public static int parseIntOrDefault(String value, int beginIndex, int defaultValue) {\r\n      int result = defaultValue;\r\n      try {\r\n        String stringValue = value.substring(beginIndex);\r\n        result = Integer.parseInt(stringValue);\r\n      }\r\n      catch (Exception e) {\r\n      }\r\n      return result;\r\n    }\r\n\r\n    public static int parseIntOrDefault(String value, int beginIndex, int endIndex, int defaultValue) {\r\n      int result = defaultValue;\r\n      try {\r\n        String stringValue = value.substring(beginIndex, endIndex);\r\n        result = Integer.parseInt(stringValue);\r\n      }\r\n      catch (Exception e) {\r\n      }\r\n      return result;\r\n    }\r\n\r\n\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":95367,"user_id":288671,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/65f66029eed1093e5c7e3214b4774d8f?s=128&d=identicon&r=PG&f=1","display_name":"Vitalii Fedorenko","link":"https://stackoverflow.com/users/288671/vitalii-fedorenko"},"comment_count":0,"score":18,"creation_date":1470506189,"body_markdown":"[Google Guava][1] has [tryParse(String)][2], which returns `null` if the string couldn&#39;t be parsed, for example:\r\n\r\n    Integer fooInt = Ints.tryParse(fooString);\r\n    if (fooInt != null) {\r\n      ...\r\n    }\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Google_Guava\r\n  [2]: https://google.github.io/guava/releases/19.0/api/docs/com/google/common/primitives/Ints.html#tryParse(java.lang.String)\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":496,"user_id":3280682,"user_type":"registered","accept_rate":100,"profile_image":"https://lh6.googleusercontent.com/-HMPjDJYZXLY/AAAAAAAAAAI/AAAAAAAAAmw/JUTi4kFxo6A/photo.jpg?sz=128","display_name":"Aditya","link":"https://stackoverflow.com/users/3280682/aditya"},"comment_count":0,"score":7,"creation_date":1471504044,"body_markdown":"For a normal string you can use:\r\n\r\n    int number = Integer.parseInt(&quot;1234&quot;);\r\n\r\nFor a String builder and String buffer you can use:\r\n\r\n    Integer.parseInt(myBuilderOrBuffer.toString());\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1567465316}],"owner":{"reputation":1288,"user_id":5340833,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FbzRg.jpg?s=128&g=1","display_name":"Shivanandam","link":"https://stackoverflow.com/users/5340833/shivanandam"},"comment_count":1,"score":4,"creation_date":1479615845,"body_markdown":"Here we go\r\n\r\n    String str = &quot;1234&quot;;\r\n    int number = Integer.parseInt(str);\r\n    print number; // 1234","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":1098,"user_id":388317,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/3a9ab9582a9dbb8455882f4a4b2229ae?s=128&d=identicon&r=PG","display_name":"Christian Ullenboom","link":"https://stackoverflow.com/users/388317/christian-ullenboom"},"comment_count":0,"score":9,"creation_date":1488314200,"body_markdown":"You can use `new Scanner(&quot;1244&quot;).nextInt()`. Or ask if even an int exists: `new Scanner(&quot;1244&quot;).hasNextInt()`","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":24255,"user_id":2815219,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d10432298a6eacf6be2f263d8fc3776b?s=128&d=identicon&r=PG","display_name":"Raman Sahasi","link":"https://stackoverflow.com/users/2815219/raman-sahasi"},"comment_count":0,"score":9,"creation_date":1493012179,"body_markdown":"In programming competitions, where you&#39;re assured that number will always be a valid integer, then you can write your own method to parse input. This will skip all validation related code (since you don&#39;t need any of that) and will be a bit more efficient.\r\n\r\n 1. For valid positive integer:\r\n\r\n        private static int parseInt(String str) {\r\n            int i, n = 0;\r\n\r\n            for (i = 0; i &lt; str.length(); i++) {\r\n                n *= 10;\r\n                n += str.charAt(i) - 48;\r\n            }\r\n            return n;\r\n        }\r\n\r\n 2. For both positive and negative integers:\r\n\r\n        private static int parseInt(String str) {\r\n            int i=0, n=0, sign=1;\r\n            if (str.charAt(0) == &#39;-&#39;) {\r\n                i = 1;\r\n                sign = -1;\r\n            }\r\n            for(; i&lt;str.length(); i++) {\r\n                n* = 10;\r\n                n += str.charAt(i) - 48;\r\n            }\r\n            return sign*n;\r\n        }\r\n\r\n 3. If you are expecting a whitespace before or after these numbers,\r\n    then make sure to do a `str = str.trim()` before processing further.\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":4777,"user_id":1970832,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/74a51ccbe8e8fa185b782c6d64ee65e9?s=128&d=identicon&r=PG&f=1","display_name":"Rahul Sharma","link":"https://stackoverflow.com/users/1970832/rahul-sharma"},"score":11,"creation_date":1493400444},{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1567465094}],"owner":{"reputation":341,"user_id":4226914,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9800dbafaba6194ea3168086213253ec?s=128&d=identicon&r=PG&f=1","display_name":"KIBOU Hassan","link":"https://stackoverflow.com/users/4226914/kibou-hassan"},"comment_count":2,"score":-7,"creation_date":1493398784,"body_markdown":"Alternatively, you can use `Integer.valueOf()`. It will return an `Integer` object.\r\n\r\n    String numberStringFormat = &quot;10&quot;;\r\n    Integer resultIntFormat = Integer.valueOf(numberStringFormat);\r\n    LOG.info(&quot;result:&quot; + resultIntFormat);\r\n\r\n**Output: 10**\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1567464986}],"owner":{"reputation":470,"user_id":4180464,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/25ffa2d296c309b676b23ae2eb74b19d?s=128&d=identicon&r=PG&f=1","display_name":"Pankaj Mandale","link":"https://stackoverflow.com/users/4180464/pankaj-mandale"},"comment_count":1,"score":4,"creation_date":1502547951,"body_markdown":"One method is parseInt(String). It returns a primitive int:\r\n\r\n    String number = &quot;10&quot;;\r\n    int result = Integer.parseInt(number);\r\n    System.out.println(result);\r\n\r\nThe second method is valueOf(String), and it returns a new Integer() object:\r\n\r\n    String number = &quot;10&quot;;\r\n    Integer result = Integer.valueOf(number);\r\n    System.out.println(result);\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":2568,"user_id":6790326,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/--0W1SyomlMg/AAAAAAAAAAI/AAAAAAAAAGY/w5Ja9a3U4zE/photo.jpg?sz=128","display_name":"Dorian Gray","link":"https://stackoverflow.com/users/6790326/dorian-gray"},"score":2,"creation_date":1510313903},{"owner":{"reputation":1526,"user_id":5855888,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/5f269345d928d7415cbe68bca72be848?s=128&d=identicon&r=PG","display_name":"Anup Gupta","link":"https://stackoverflow.com/users/5855888/anup-gupta"},"score":0,"creation_date":1510378726},{"owner":{"reputation":1526,"user_id":5855888,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/5f269345d928d7415cbe68bca72be848?s=128&d=identicon&r=PG","display_name":"Anup Gupta","link":"https://stackoverflow.com/users/5855888/anup-gupta"},"score":0,"creation_date":1510410403},{"owner":{"reputation":2568,"user_id":6790326,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/--0W1SyomlMg/AAAAAAAAAAI/AAAAAAAAAGY/w5Ja9a3U4zE/photo.jpg?sz=128","display_name":"Dorian Gray","link":"https://stackoverflow.com/users/6790326/dorian-gray"},"score":5,"creation_date":1510412406}],"owner":{"reputation":1526,"user_id":5855888,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/5f269345d928d7415cbe68bca72be848?s=128&d=identicon&r=PG","display_name":"Anup Gupta","link":"https://stackoverflow.com/users/5855888/anup-gupta"},"comment_count":4,"score":4,"creation_date":1504248819,"body_markdown":"**This is a *complete* program with all conditions positive and negative without using a library**\r\n\r\n    import java.util.Scanner;\r\n\r\n\r\n    public class StringToInt {\r\n\r\n        public static void main(String args[]) {\r\n            String inputString;\r\n            Scanner s = new Scanner(System.in);\r\n            inputString = s.nextLine();\r\n\r\n            if (!inputString.matches(&quot;([+-]?([0-9]*[.])?[0-9]+)&quot;)) {\r\n                System.out.println(&quot;Not a Number&quot;);\r\n            }\r\n            else {\r\n                Double result2 = getNumber(inputString);\r\n                System.out.println(&quot;result = &quot; + result2);\r\n            }\r\n        }\r\n\r\n\r\n        public static Double getNumber(String number) {\r\n            Double result = 0.0;\r\n            Double beforeDecimal = 0.0;\r\n            Double afterDecimal = 0.0;\r\n            Double afterDecimalCount = 0.0;\r\n            int signBit = 1;\r\n            boolean flag = false;\r\n\r\n            int count = number.length();\r\n            if (number.charAt(0) == &#39;-&#39;) {\r\n                signBit = -1;\r\n                flag = true;\r\n            }\r\n            else if (number.charAt(0) == &#39;+&#39;) {\r\n                flag = true;\r\n            }\r\n            for (int i = 0; i &lt; count; i++) {\r\n                if (flag &amp;&amp; i == 0) {\r\n                    continue;\r\n                }\r\n                if (afterDecimalCount == 0.0) {\r\n                    if (number.charAt(i) - &#39;.&#39; == 0) {\r\n                        afterDecimalCount++;\r\n                    }\r\n                    else {\r\n                        beforeDecimal = beforeDecimal * 10 + (number.charAt(i) - &#39;0&#39;);\r\n                    }\r\n                }\r\n                else {\r\n                    afterDecimal = afterDecimal * 10 + number.charAt(i) - (&#39;0&#39;);\r\n                    afterDecimalCount = afterDecimalCount * 10;\r\n                }\r\n            }\r\n            if (afterDecimalCount != 0.0) {\r\n                afterDecimal = afterDecimal / afterDecimalCount;\r\n                result = beforeDecimal + afterDecimal;\r\n            }\r\n            else {\r\n                result = beforeDecimal;\r\n            }\r\n            return result * signBit;\r\n        }\r\n    }\r\n\r\n\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":50351,"user_id":1711796,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/6pRI7.png?s=128&g=1","display_name":"Bernhard Barker","link":"https://stackoverflow.com/users/1711796/bernhard-barker"},"score":0,"creation_date":1514663006}],"owner":{"reputation":951,"user_id":7826803,"user_type":"registered","accept_rate":80,"profile_image":"https://lh6.googleusercontent.com/-YoxlEOPGR-M/AAAAAAAAAAI/AAAAAAAAATo/7liCqCmHJVA/photo.jpg?sz=128","display_name":"Vishal Yadav","link":"https://stackoverflow.com/users/7826803/vishal-yadav"},"comment_count":1,"score":7,"creation_date":1505418341,"body_markdown":"Simply you can try this:\n\n - Use `Integer.parseInt(your_string);` to convert a `String` to `int`\n - Use `Double.parseDouble(your_string);` to convert a `String` to `double`\n\n### Example\n\n    String str = &quot;8955&quot;;\n    int q = Integer.parseInt(str);\n    System.out.println(&quot;Output&gt;&gt;&gt; &quot; + q); // Output: 8955\n\n----------\n\n    String str = &quot;89.55&quot;;\n    double q = Double.parseDouble(str);\n    System.out.println(&quot;Output&gt;&gt;&gt; &quot; + q); // Output: 89.55\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":490,"user_id":1970059,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/b72e4b4fff42b926e2b3aab32bcc6b43?s=128&d=identicon&r=PG","display_name":"Dmytro Shvechikov","link":"https://stackoverflow.com/users/1970059/dmytro-shvechikov"},"comment_count":0,"score":26,"creation_date":1507058166,"body_markdown":"Methods to do that:\r\n\r\n 1. `Integer.parseInt(s)`\r\n 2. `Integer.parseInt(s, radix)`\r\n 3. `Integer.parseInt(s, beginIndex, endIndex, radix)`\r\n 4. `Integer.parseUnsignedInt(s)`\r\n 5. `Integer.parseUnsignedInt(s, radix)`\r\n 6. `Integer.parseUnsignedInt(s, beginIndex, endIndex, radix)`\r\n 7. `Integer.valueOf(s)`\r\n 8. `Integer.valueOf(s, radix)`\r\n 9. `Integer.decode(s)`\r\n 10. `NumberUtils.toInt(s)`\r\n 11. `NumberUtils.toInt(s, defaultValue)`\r\n\r\nInteger.valueOf produces an Integer object and all other methods a primitive int.\r\n\r\nThe last two methods are from [commons-lang3][1] and a big article about converting [here][2].\r\n\r\n  [1]: http://mvnrepository.com/artifact/org.apache.commons/commons-lang3\r\n  [2]: https://explainjava.com/convert-string-int-java/\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":760,"user_id":4798397,"user_type":"registered","accept_rate":90,"profile_image":"https://lh4.googleusercontent.com/-RbvyOI92KHs/AAAAAAAAAAI/AAAAAAAAAEk/B4Yg7W9lXAk/photo.jpg?sz=128","display_name":"The Coding Wombat","link":"https://stackoverflow.com/users/4798397/the-coding-wombat"},"score":0,"creation_date":1540396970},{"owner":{"reputation":369,"user_id":8697391,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/56d7d3a1db321f13736b982d4f1fdf05?s=128&d=identicon&r=PG&f=1","display_name":"Lukas Bauer","link":"https://stackoverflow.com/users/8697391/lukas-bauer"},"score":0,"creation_date":1543071733},{"owner":{"reputation":103,"user_id":7741106,"user_type":"registered","profile_image":"https://graph.facebook.com/1887359028175773/picture?type=large","display_name":"Umesh Chakradhar","link":"https://stackoverflow.com/users/7741106/umesh-chakradhar"},"score":0,"creation_date":1610345440}],"owner":{"reputation":369,"user_id":8697391,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/56d7d3a1db321f13736b982d4f1fdf05?s=128&d=identicon&r=PG&f=1","display_name":"Lukas Bauer","link":"https://stackoverflow.com/users/8697391/lukas-bauer"},"comment_count":3,"score":22,"creation_date":1507316422,"body_markdown":"Use [`Integer.parseInt(yourString)`][1].\r\n\r\n**Remember the following things:**\r\n\r\n`Integer.parseInt(&quot;1&quot;);`      // ok\r\n\r\n`Integer.parseInt(&quot;-1&quot;);`     // ok\r\n\r\n`Integer.parseInt(&quot;+1&quot;);`     // ok\r\n\r\n`Integer.parseInt(&quot; 1&quot;);`     // Exception (blank space)\r\n\r\n`Integer.parseInt(&quot;2147483648&quot;);` // Exception (Integer is limited to a [maximum value][2] of 2,147,483,647)\r\n\r\n`Integer.parseInt(&quot;1.1&quot;);` // Exception (**.** or **,** or whatever is not allowed)\r\n\r\n`Integer.parseInt(&quot;&quot;);` // Exception (not 0 or something)\r\n\r\nThere is only one type of exception: [`NumberFormatException`][3]\r\n\r\n  [1]: http://docs.oracle.com/javase/9/docs/api/java/lang/Integer.html#parseInt-java.lang.String-\r\n  [2]: http://docs.oracle.com/javase/9/docs/api/java/lang/Integer.html#MAX_VALUE\r\n  [3]: http://docs.oracle.com/javase/9/docs/api/java/lang/NumberFormatException.html\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":483,"user_id":5693350,"user_type":"registered","accept_rate":44,"profile_image":"https://www.gravatar.com/avatar/3ac191a00d3f68a2c6bd33f2f52ed547?s=128&d=identicon&r=PG&f=1","display_name":"David","link":"https://stackoverflow.com/users/5693350/david"},"comment_count":0,"score":5,"creation_date":1510365497,"body_markdown":"Use Integer.parseInt() and put it inside a `try...catch` block to handle any errors just in case a non-numeric character is entered, for example,\r\n\r\n    private void ConvertToInt(){\r\n        String string = txtString.getText();\r\n        try{\r\n            int integerValue=Integer.parseInt(string);\r\n            System.out.println(integerValue);\r\n        }\r\n        catch(Exception e){\r\n           JOptionPane.showMessageDialog(\r\n             &quot;Error converting string to integer\\n&quot; + e.toString,\r\n             &quot;Error&quot;,\r\n             JOptionPane.ERROR_MESSAGE);\r\n        }\r\n     }\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":18131,"user_id":125562,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/SdIqA.png?s=128&g=1","display_name":"Basilevs","link":"https://stackoverflow.com/users/125562/basilevs"},"score":1,"creation_date":1598548786}],"owner":{"reputation":2633,"user_id":2564509,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7ee271c732af6e0cfb7ae33d2c277b4d?s=128&d=identicon&r=PG","display_name":"djm.im","link":"https://stackoverflow.com/users/2564509/djm-im"},"comment_count":1,"score":7,"creation_date":1524516550,"body_markdown":"I am a little bit surprised that nobody mentioned the Integer constructor that takes String as a parameter.\r\n\r\nSo, here it is:\r\n\r\n    String myString = &quot;1234&quot;;\r\n    int i1 = new Integer(myString);\r\n\r\n[Java 8 - Integer(String)][1].\r\n\r\nOf course, the constructor will return type `Integer`, and an unboxing operation converts the value to `int`.\r\n\r\n---\r\n_Note 1: It&#39;s important to mention_: This constructor calls the `parseInt` method.\r\n\r\n    public Integer(String var1) throws NumberFormatException {\r\n        this.value = parseInt(var1, 10);\r\n    }\r\n\r\n_Note 2: It&#39;s deprecated_: `@Deprecated(since=&quot;9&quot;)` - [JavaDoc][2].\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html#Integer-java.lang.String-\r\n  [2]: https://docs.oracle.com/javase/9/docs/api/java/lang/Integer.html#Integer-java.lang.String-","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":1170,"user_id":8111997,"user_type":"registered","profile_image":"https://i.stack.imgur.com/9g7aA.jpg?s=128&g=1","display_name":"Poorna Senani Gamage","link":"https://stackoverflow.com/users/8111997/poorna-senani-gamage"},"comment_count":0,"score":2,"creation_date":1532681103,"body_markdown":"**public static int parseInt(String s)throws NumberFormatException**\r\n\r\nYou can use `Integer.parseInt()` to convert a String to an int.\r\n\r\nConvert a String, &quot;20&quot;, to a primitive int:\r\n\r\n    String n = &quot;20&quot;;\r\n    int r = Integer.parseInt(n); // Returns a primitive int\r\n    System.out.println(r);\r\n\r\n&gt; Output-20\r\n\r\nIf the string does not contain a parsable integer, it will throw `NumberFormatException`:\r\n\r\n    String n = &quot;20I&quot;; // Throws NumberFormatException\r\n    int r = Integer.parseInt(n);\r\n    System.out.println(r);\r\n\r\n**public static Integer valueOf(String s)throws NumberFormatException**\r\n\r\nYou can use `Integer.valueOf()`. In this it will return an `Integer` object.\r\n\r\n    String n = &quot;20&quot;;\r\n    Integer r = Integer.valueOf(n); // Returns a new Integer() object.\r\n    System.out.println(r);\r\n\r\n&gt; Output-20\r\n\r\nReferences\r\nhttps://docs.oracle.com/en/\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":197,"user_id":9487096,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-yBBSS4EZOOM/AAAAAAAAAAI/AAAAAAAAACg/5LXUu5AuclQ/photo.jpg?sz=128","display_name":"Ram Chhabra","link":"https://stackoverflow.com/users/9487096/ram-chhabra"},"comment_count":0,"score":1,"creation_date":1536314384,"body_markdown":"Try this code with different inputs of `String`:\r\n\r\n    String a = &quot;10&quot;;  \r\n    String a = &quot;10ssda&quot;;  \r\n    String a = null; \r\n    String a = &quot;12102&quot;;\r\n\r\n    if(null != a) {\r\n        try {\r\n            int x = Integer.ParseInt(a.trim()); \r\n            Integer y = Integer.valueOf(a.trim());\r\n\t\t\t//  It will throw a NumberFormatException in case of invalid string like (&quot;10ssda&quot; or &quot;123 212&quot;) so, put this code into try catch\r\n        } catch(NumberFormatException ex) {\r\n            // ex.getMessage();\r\n        }\r\n    }","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":6962,"user_id":1401019,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/bD72E.jpg?s=128&g=1","display_name":"Sundararaj Govindasamy","link":"https://stackoverflow.com/users/1401019/sundararaj-govindasamy"},"score":0,"creation_date":1549383854}],"owner":{"reputation":1281,"user_id":3805521,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/vcpS8.jpg?s=128&g=1","display_name":"Santosh Jadi","link":"https://stackoverflow.com/users/3805521/santosh-jadi"},"comment_count":1,"score":5,"creation_date":1536743224,"body_markdown":"**It can be done in seven ways:**\r\n\r\n    import com.google.common.primitives.Ints;\r\n    import org.apache.commons.lang.math.NumberUtils;\r\n\r\n    String number = &quot;999&quot;;\r\n\r\n1) `Ints.tryParse`:\r\n\r\n    int result = Ints.tryParse(number);\r\n\r\n2) `NumberUtils.createInteger`:\r\n\r\n    Integer result = NumberUtils.createInteger(number);\r\n\r\n3) `NumberUtils.toInt`:\r\n\r\n    int result = NumberUtils.toInt(number);\r\n\r\n4) `Integer.valueOf`:\r\n\r\n    Integer result = Integer.valueOf(number);\r\n\r\n5) `Integer.parseInt`:\r\n\r\n    int result = Integer.parseInt(number);\r\n\r\n6) `Integer.decode`:\r\n\r\n    int result = Integer.decode(number);\r\n\r\n7) `Integer.parseUnsignedInt`:\r\n\r\n    int result = Integer.parseUnsignedInt(number);\r\n\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1567464199}],"owner":{"reputation":1569,"user_id":5517435,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8af58c63aea05edd701ebaa666ad5c92?s=128&d=identicon&r=PG&f=1","display_name":"Nisarg","link":"https://stackoverflow.com/users/5517435/nisarg"},"comment_count":1,"score":1,"creation_date":1541777052,"body_markdown":"Convert a string to an integer with the `parseInt` method of the Java Integer class. The `parseInt` method is to convert the String to an int and throws a `NumberFormatException` if the string cannot be converted to an int type.\r\n\r\nOverlooking the exception it can throw, use this:\r\n\r\n    int i = Integer.parseInt(myString);\r\n\r\nIf the String signified by the variable `myString` is a valid integer like `“1234”, “200”, “1”,` and it will be converted to a Java int. If it fails for any reason, the change can throw a `NumberFormatException`, so the code should be a little longer to account for this.\r\n\r\nFor example, Java `String` to `int` conversion method, control for a possible `NumberFormatException`\r\n\r\n    public class JavaStringToIntExample\r\n    {\r\n      public static void main (String[] args)\r\n      {\r\n        // String s = &quot;test&quot;;  // Use this if you want to test the exception below\r\n        String s = &quot;1234&quot;;\r\n\r\n        try\r\n        {\r\n          // The String to int conversion happens here\r\n          int i = Integer.parseInt(s.trim());\r\n\r\n          // Print out the value after the conversion\r\n          System.out.println(&quot;int i = &quot; + i);\r\n        }\r\n        catch (NumberFormatException nfe)\r\n        {\r\n          System.out.println(&quot;NumberFormatException: &quot; + nfe.getMessage());\r\n        }\r\n      }\r\n    }\r\n\r\nIf the change attempt fails – in this case, if you can try to convert the Java String test to an int — the Integer `parseInt` process will throw a `NumberFormatException`, which you must handle in a try/catch block.\r\n\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":1,"creation_date":1567463704}],"owner":{"reputation":227,"user_id":4464360,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/ME9CE.jpg?s=128&g=1","display_name":"Abhijeet Kale","link":"https://stackoverflow.com/users/4464360/abhijeet-kale"},"comment_count":1,"score":2,"creation_date":1545733985,"body_markdown":"    import java.util.*;\r\n\r\n    public class strToint {\r\n\r\n        public static void main(String[] args) {\r\n\r\n            String str = &quot;123&quot;;\r\n            byte barr[] = str.getBytes();\r\n\r\n            System.out.println(Arrays.toString(barr));\r\n            int result = 0;\r\n\r\n            for(int i = 0; i &lt; barr.length; i++) {\r\n                //System.out.print(barr[i]+&quot; &quot;);\r\n                int ii = barr[i];\r\n                char a = (char) ii;\r\n                int no = Character.getNumericValue(a);\r\n                result = result * 10 + no;\r\n                System.out.println(result);\r\n            }\r\n\r\n            System.out.println(&quot;result:&quot;+result);\r\n        }\r\n    }\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":2030,"user_id":7449706,"user_type":"registered","profile_image":"https://graph.facebook.com/1302265936460934/picture?type=large","display_name":"Kevin Ng","link":"https://stackoverflow.com/users/7449706/kevin-ng"},"score":0,"creation_date":1567836691},{"owner":{"reputation":2030,"user_id":7449706,"user_type":"registered","profile_image":"https://graph.facebook.com/1302265936460934/picture?type=large","display_name":"Kevin Ng","link":"https://stackoverflow.com/users/7449706/kevin-ng"},"score":0,"creation_date":1567836850}],"owner":{"reputation":2030,"user_id":7449706,"user_type":"registered","profile_image":"https://graph.facebook.com/1302265936460934/picture?type=large","display_name":"Kevin Ng","link":"https://stackoverflow.com/users/7449706/kevin-ng"},"comment_count":2,"score":0,"creation_date":1548039520,"body_markdown":"I wrote this fast method to parse a string input into int or long. It is faster than the current JDK 11 Integer.parseInt or Long.parseLong. Although, you only asked for int, I also included the long parser. The code parser below requires that the parser&#39;s method must be small for it to operate quickly. An alternative version is below the test code. The alternative version is pretty quick and it does not depend on the size of the class.\r\n\r\nThis class checks for overflow, and you could customize the code to adapt to your needs. An empty string will yield 0 with my method but that is intentional. You can change that to adapt your case or use as is.\r\n\r\nThis is only the part of the class where parseInt and parseLong are needed. Note that this only deals with base 10 numbers.\r\n\r\nThe test code for the int parser is below the code below.\r\n\r\n    /*\r\n     * Copyright 2019 Khang Hoang Nguyen\r\n     * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions\r\n     * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n     * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n     * @author: Khang Hoang Nguyen - kevin@fai.host.\r\n     **/\r\n    final class faiNumber{\r\n        private static final long[] longpow = {0L, 1L, 10L, 100L, 1000L, 10000L, 100000L, 1000000L, 10000000L, 100000000L, 1000000000L,\r\n                                               10000000000L, 100000000000L, 1000000000000L, 10000000000000L, 100000000000000L,\r\n                                               1000000000000000L, 10000000000000000L, 100000000000000000L, 1000000000000000000L,\r\n                                              };\r\n\r\n        private static final int[] intpow = { 0, 1, 10, 100, 1000, 10000,\r\n                                              100000, 1000000, 10000000, 100000000, 1000000000\r\n                                            };\r\n\r\n        /**\r\n         * parseLong(String str) parse a String into Long.\r\n         * All errors throw by this method is NumberFormatException.\r\n         * Better errors can be made to tailor to each use case.\r\n         **/\r\n        public static long parseLong(final String str) {\r\n            final int length = str.length();\r\n            if (length == 0)\r\n                return 0L;\r\n\r\n            char c1 = str.charAt(0);\r\n            int start;\r\n\r\n            if (c1 == &#39;-&#39; || c1 == &#39;+&#39;) {\r\n                if (length == 1)\r\n                    throw new NumberFormatException(String.format(&quot;Not a valid long value. Input &#39;%s&#39;.&quot;, str));\r\n                start = 1;\r\n            } else {\r\n                start = 0;\r\n            }\r\n\r\n            /*\r\n             * Note: if length &gt; 19, possible scenario is to run through the string\r\n             * to check whether the string contains only valid digits.\r\n             * If the check had only valid digits then a negative sign meant underflow, else, overflow.\r\n             */\r\n            if (length - start &gt; 19)\r\n                throw new NumberFormatException(String.format(&quot;Not a valid long value. Input &#39;%s&#39;.&quot;, str));\r\n\r\n            long c;\r\n            long out = 0L;\r\n\r\n            for ( ; start &lt; length; start++) {\r\n                c = (str.charAt(start) ^ &#39;0&#39;);\r\n                if (c &gt; 9L)\r\n                    throw new NumberFormatException( String.format(&quot;Not a valid long value. Input &#39;%s&#39;.&quot;, str) );\r\n                out += c * longpow[length - start];\r\n            }\r\n\r\n            if (c1 == &#39;-&#39;) {\r\n                out = ~out + 1L;\r\n                // If out &gt; 0 number underflow(supposed to be negative).\r\n                if (out &gt; 0L)\r\n                    throw new NumberFormatException(String.format(&quot;Not a valid long value. Input &#39;%s&#39;.&quot;, str));\r\n                return out;\r\n            }\r\n            // If out &lt; 0 number overflow (supposed to be positive).\r\n            if (out &lt; 0L)\r\n                throw new NumberFormatException(String.format(&quot;Not a valid long value. Input &#39;%s&#39;.&quot;, str));\r\n            return out;\r\n        }\r\n\r\n        /**\r\n         * parseInt(String str) parse a string into an int.\r\n         * return 0 if string is empty.\r\n         **/\r\n        public static int parseInt(final String str) {\r\n            final int length = str.length();\r\n            if (length == 0)\r\n                return 0;\r\n\r\n            char c1 = str.charAt(0);\r\n            int start;\r\n\r\n            if (c1 == &#39;-&#39; || c1 == &#39;+&#39;) {\r\n                if (length == 1)\r\n                    throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input &#39;%s&#39;.&quot;, str));\r\n                start = 1;\r\n            } else {\r\n                start = 0;\r\n            }\r\n\r\n            int out = 0; int c;\r\n            int runlen = length - start;\r\n\r\n            if (runlen &gt; 9) {\r\n                if (runlen &gt; 10)\r\n                    throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n\r\n                c = (str.charAt(start) ^ &#39;0&#39;); // &lt;- Any number from 0 - 255 ^ 48 will yield greater than 9 except 48 - 57\r\n                if (c &gt; 9)\r\n                    throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n                if (c &gt; 2)\r\n                    throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n                out += c * intpow[length - start++];\r\n            }\r\n\r\n            for ( ; start &lt; length; start++) {\r\n                c = (str.charAt(start) ^ &#39;0&#39;);\r\n                if (c &gt; 9)\r\n                    throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n                out += c * intpow[length - start];\r\n            }\r\n\r\n            if (c1 == &#39;-&#39;) {\r\n                out = ~out + 1;\r\n                if (out &gt; 0)\r\n                    throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n                return out;\r\n            }\r\n\r\n            if (out &lt; 0)\r\n                throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n            return out;\r\n        }\r\n    }\r\n\r\nTest Code Section. This should take around 200 seconds or so.\r\n\r\n    // Int Number Parser Test;\r\n    long start = System.currentTimeMillis();\r\n    System.out.println(&quot;INT PARSER TEST&quot;);\r\n    for (int i = Integer.MIN_VALUE; i != Integer.MAX_VALUE; i++){\r\n       if (faiNumber.parseInt(&quot;&quot;+i) != i)\r\n           System.out.println(&quot;Wrong&quot;);\r\n       if (i == 0)\r\n           System.out.println(&quot;HalfWay Done&quot;);\r\n    }\r\n\r\n    if (faiNumber.parseInt(&quot;&quot; + Integer.MAX_VALUE) != Integer.MAX_VALUE)\r\n        System.out.println(&quot;Wrong&quot;);\r\n    long end = System.currentTimeMillis();\r\n    long result = (end - start);\r\n    System.out.println(result);\r\n    // INT PARSER END */\r\n\r\nAn alternative method which is also very fast. Note that array of int pow is not used, but a mathematical optimization of multiply by 10 by bit shifting.\r\n\r\n    public static int parseInt(final String str) {\r\n        final int length = str.length();\r\n        if (length == 0)\r\n            return 0;\r\n\r\n        char c1 = str.charAt(0);\r\n        int start;\r\n\r\n        if (c1 == &#39;-&#39; || c1 == &#39;+&#39;) {\r\n            if (length == 1)\r\n                throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input &#39;%s&#39;.&quot;, str));\r\n            start = 1;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        int out = 0;\r\n        int c;\r\n        while (start &lt; length &amp;&amp; str.charAt(start) == &#39;0&#39;)\r\n            start++; // &lt;-- This to disregard leading 0. It can be\r\n                     // removed if you know exactly your source\r\n                     // does not have leading zeroes.\r\n        int runlen = length - start;\r\n\r\n        if (runlen &gt; 9) {\r\n            if (runlen &gt; 10)\r\n                throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n\r\n            c = (str.charAt(start++) ^ &#39;0&#39;);  // &lt;- Any number from 0 - 255 ^ 48 will yield greater than 9 except 48 - 57\r\n            if (c &gt; 9)\r\n                throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n            if (c &gt; 2)\r\n                throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n            out = (out &lt;&lt; 1) + (out &lt;&lt; 3) + c; // &lt;- Alternatively this can just be out = c or c above can just be out;\r\n        }\r\n\r\n        for ( ; start &lt; length; start++) {\r\n            c = (str.charAt(start) ^ &#39;0&#39;);\r\n            if (c &gt; 9)\r\n                throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n            out = (out &lt;&lt; 1) + (out &lt;&lt; 3) + c;\r\n        }\r\n\r\n        if (c1 == &#39;-&#39;) {\r\n            out = ~out + 1;\r\n            if (out &gt; 0)\r\n                throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n            return out;\r\n        }\r\n\r\n        if (out &lt; 0)\r\n            throw new NumberFormatException(String.format(&quot;Not a valid integer value. Input: &#39;%s&#39;.&quot;, str));\r\n        return out;\r\n    }\r\n\r\n\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":7589,"user_id":1364007,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2d106de3dec9586b56ed7f110497689e?s=128&d=identicon&r=PG","display_name":"Wai Ha Lee","link":"https://stackoverflow.com/users/1364007/wai-ha-lee"},"score":0,"creation_date":1560590124}],"owner":{"reputation":13,"user_id":8082751,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7ae66e7f3c72f846622c7f4eb31e5f30?s=128&d=identicon&r=PG&f=1","display_name":"ishant kulshreshtha","link":"https://stackoverflow.com/users/8082751/ishant-kulshreshtha"},"comment_count":1,"score":0,"creation_date":1549484031,"body_markdown":"Some of the ways to convert `String` into `Int` are as follows:\r\n\r\n 1. You can use `Integer.parseInt()`:\r\n\r\n        String test = &quot;4568&quot;;\r\n        int new = Integer.parseInt(test);\r\n\r\n 2. Also you can use `Integer.valueOf()`:\r\n\r\n        String test = &quot;4568&quot;;\r\n        int new = Integer.valueOf(test);\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1598025512}],"owner":{"reputation":424,"user_id":6224955,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-NLuzffYg0lw/AAAAAAAAAAI/AAAAAAAAAmY/7q2McwtkGRA/photo.jpg?sz=128","display_name":"Rajeev Ranjan","link":"https://stackoverflow.com/users/6224955/rajeev-ranjan"},"comment_count":1,"score":4,"creation_date":1549890950,"body_markdown":"You could use any of the following:\r\n\r\n1. `Integer.parseInt(s)`\r\n2. `Integer.parseInt(s, radix)`\r\n3. `Integer.parseInt(s, beginIndex, endIndex, radix)`\r\n4. `Integer.parseUnsignedInt(s)`\r\n5. `Integer.parseUnsignedInt(s, radix)`\r\n6. `Integer.parseUnsignedInt(s, beginIndex, endIndex, radix) `\r\n7. `Integer.valueOf(s)`\r\n8. `Integer.valueOf(s, radix)`\r\n9. `Integer.decode(s)`\r\n10. `NumberUtils.toInt(s)`\r\n11. `NumberUtils.toInt(s, defaultValue)`\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":304,"user_id":8258208,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4c5ccebc6005d7974048fc9e98984e1a?s=128&d=identicon&r=PG&f=1","display_name":"mohamad sheikhi","link":"https://stackoverflow.com/users/8258208/mohamad-sheikhi"},"comment_count":0,"score":0,"creation_date":1550481781,"body_markdown":"Use this method:\r\n\r\n    public int ConvertStringToInt(String number) {\r\n        int num = 0;\r\n\r\n        try {\r\n            int newNumber = Integer.ParseInt(number);\r\n            num = newNumber;\r\n        } catch(Exception ex) {\r\n            num = 0;\r\n            Log.i(&quot;Console&quot;, ex.toString);\r\n        }\r\n        return num;\r\n    }\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":574,"user_id":4314962,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/10497d83b5b8895a34c1d19b0e5f448e?s=128&d=identicon&r=PG","display_name":"nabeghe","link":"https://stackoverflow.com/users/4314962/nabeghe"},"comment_count":0,"score":0,"creation_date":1553476462,"body_markdown":"**Custom algorithm:**\r\n\r\n    public static int toInt(String value) {\r\n      int output = 0;\r\n      boolean isFirstCharacter = true;\r\n      boolean isNegativeNumber = false;\r\n      byte bytes[] = value.getBytes();\r\n      for (int i = 0; i &lt; bytes.length; i++) {\r\n        char c = (char) bytes[i];\r\n        if (!Character.isDigit(c)) {\r\n          isNegativeNumber = (c == &#39;-&#39;);\r\n          if (!(isFirstCharacter &amp;&amp; (isNegativeNumber || c == &#39;+&#39;))) {\r\n            throw new NumberFormatException(&quot;For input string \\&quot;&quot; + value + &quot;\\&quot;&quot;);\r\n          }\r\n        } else {\r\n          int number = Character.getNumericValue(c);\r\n          output = output * 10 + number;\r\n        }\r\n        isFirstCharacter = false;\r\n      }\r\n      if (isNegativeNumber)\r\n        output *= -1;\r\n      return output;\r\n    }\r\n\r\n**Another solution:**\r\n\r\n(Use the string *charAt* method instead of convert string to byte array)\r\n\r\n    public static int toInt(String value) {\r\n      int output = 0;\r\n      boolean isFirstCharacter = true;\r\n      boolean isNegativeNumber = false;\r\n      for (int i = 0; i &lt; value.length(); i++) {\r\n        char c = value.charAt(i);\r\n        if (!Character.isDigit(c)) {\r\n          isNegativeNumber = (c == &#39;-&#39;);\r\n          if (!(isFirstCharacter &amp;&amp; (isNegativeNumber || c == &#39;+&#39;))) {\r\n            throw new NumberFormatException(&quot;For input string \\&quot;&quot; + value + &quot;\\&quot;&quot;);\r\n          }\r\n        } else {\r\n          int number = Character.getNumericValue(c);\r\n          output = output * 10 + number;\r\n        }\r\n        isFirstCharacter = false;\r\n      }\r\n      if (isNegativeNumber)\r\n        output *= -1;\r\n      return output;\r\n    }\r\n\r\n**Examples:**\r\n\r\n    int number1 = toInt(&quot;20&quot;);\r\n    int number2 = toInt(&quot;-20&quot;);\r\n    int number3 = toInt(&quot;+20&quot;);\r\n    System.out.println(&quot;Numbers = &quot; + number1 + &quot;, &quot; + number2 + &quot;, &quot; + number3);\r\n\r\n    try {\r\n      toInt(&quot;20 Hadi&quot;);\r\n    } catch (NumberFormatException e) {\r\n      System.out.println(&quot;Error: &quot; + e.getMessage());\r\n    }\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":2615,"user_id":9106684,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b7572f2a571bd2336bbf07564476721b?s=128&d=identicon&r=PG","display_name":"shellhub","link":"https://stackoverflow.com/users/9106684/shellhub"},"comment_count":0,"score":1,"creation_date":1571747528,"body_markdown":"[As I write on GitHub][1]:\r\n\r\n    public class StringToInteger {\r\n        public static void main(String[] args) {\r\n            assert parseInt(&quot;123&quot;) == Integer.parseInt(&quot;123&quot;);\r\n            assert parseInt(&quot;-123&quot;) == Integer.parseInt(&quot;-123&quot;);\r\n            assert parseInt(&quot;0123&quot;) == Integer.parseInt(&quot;0123&quot;);\r\n            assert parseInt(&quot;+123&quot;) == Integer.parseInt(&quot;+123&quot;);\r\n        }\r\n\r\n        /**\r\n         * Parse a string to integer\r\n         *\r\n         * @param s the string\r\n         * @return the integer value represented by the argument in decimal.\r\n         * @throws NumberFormatException if the {@code string} does not contain a parsable integer.\r\n         */\r\n        public static int parseInt(String s) {\r\n            if (s == null) {\r\n                throw new NumberFormatException(&quot;null&quot;);\r\n            }\r\n            boolean isNegative = s.charAt(0) == &#39;-&#39;;\r\n            boolean isPositive = s.charAt(0) == &#39;+&#39;;\r\n            int number = 0;\r\n            for (int i = isNegative ? 1 : isPositive ? 1 : 0, length = s.length(); i &lt; length; ++i) {\r\n                if (!Character.isDigit(s.charAt(i))) {\r\n                    throw new NumberFormatException(&quot;s=&quot; + s);\r\n                }\r\n                number = number * 10 + s.charAt(i) - &#39;0&#39;;\r\n            }\r\n            return isNegative ? -number : number;\r\n        }\r\n    }\r\n\r\n  [1]: https://github.com/shellhub/Algorithms-Java/blob/master/src/main/java/maths/StringToInteger.java\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1598025654},{"owner":{"reputation":96,"user_id":12563335,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0e295212d524c1d4bb54278a4a8b4fe4?s=128&d=identicon&r=PG&f=1","display_name":"Sachini Witharana","link":"https://stackoverflow.com/users/12563335/sachini-witharana"},"score":0,"creation_date":1598329163}],"owner":{"reputation":96,"user_id":12563335,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0e295212d524c1d4bb54278a4a8b4fe4?s=128&d=identicon&r=PG&f=1","display_name":"Sachini Witharana","link":"https://stackoverflow.com/users/12563335/sachini-witharana"},"comment_count":2,"score":1,"creation_date":1583945026,"body_markdown":"By using this method you can avoid errors.\r\n\r\n    String myString = &quot;1234&quot;;\r\n    int myInt;\r\n    if(Integer.parseInt(myString), out myInt){};","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":12146,"user_id":2985643,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/eaacaf1426f7e6d02914fcf99dc0a33b?s=128&d=identicon&r=PG&f=1","display_name":"skomisa","link":"https://stackoverflow.com/users/2985643/skomisa"},"score":1,"creation_date":1586662464}],"owner":{"reputation":747,"user_id":11983766,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9f2baed8c6bcf1a7b3923e9311a7ed9f?s=128&d=identicon&r=PG&f=1","display_name":"Rohan Shah","link":"https://stackoverflow.com/users/11983766/rohan-shah"},"comment_count":1,"score":2,"creation_date":1584618053,"body_markdown":"The two main ways to do this are using the method `valueOf()` and method `parseInt()` of the `Integer` class.\r\n\r\nSuppose you are given a String like this\r\n\r\n    String numberInString = &quot;999&quot;;\r\n\r\nThen you can convert it into integer by using\r\n\r\n    int numberInInteger = Integer.parseInt(numberInString);\r\n\r\nAnd alternatively, you can use\r\n\r\n    int numberInInteger = Integer.valueOf(numberInString);\r\n\r\nBut the thing here is, the method `Integer.valueOf()` has the following implementation in `Integer` class:\r\n\r\n    public static Integer valueOf(String var0, int var1) throws NumberFormatException {\r\n        return parseInt(var0, var1);\r\n    }\r\n\r\nAs you can see, the `Integer.valueOf()` internally calls `Integer.parseInt()` itself.\r\nAlso, `parseInt()` returns an `int`, and `valueOf()` returns an `Integer`\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1598025979}],"owner":{"reputation":137,"user_id":10852356,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-50NUH-GavqY/AAAAAAAAAAI/AAAAAAAAAII/vOleDtZoOgc/photo.jpg?sz=128","display_name":"garima garg","link":"https://stackoverflow.com/users/10852356/garima-garg"},"comment_count":1,"score":0,"creation_date":1588151691,"body_markdown":"There are different ways of converting a string int value into an Integer data type value. You need to handle NumberFormatException for the string value issue.\r\n\r\n1. Integer.parseInt\r\n\r\n        foo = Integer.parseInt(myString);\r\n\r\n2. Integer.valueOf\r\n\r\n        foo = Integer.valueOf(myString);\r\n\r\n3. Using Java 8 Optional API\r\n\r\n        foo = Optional.of(myString).map(Integer::parseInt).get();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1598026261}],"owner":{"reputation":37,"user_id":5788729,"user_type":"registered","profile_image":"https://i.stack.imgur.com/4D973.jpg?s=128&g=1","display_name":"Ajay Singh Meena","link":"https://stackoverflow.com/users/5788729/ajay-singh-meena"},"comment_count":1,"score":0,"creation_date":1594626691,"body_markdown":"You can have your own implementations for this, like:\r\n\r\n    public class NumericStringToInt {\r\n    \r\n        public static void main(String[] args) {\r\n            String str = &quot;123459&quot;;\r\n    \r\n            int num = stringToNumber(str);\r\n            System.out.println(&quot;Number of &quot; + str + &quot; is: &quot; + num);\r\n        }\r\n    \r\n        private static int stringToNumber(String str) {\r\n    \r\n            int num = 0;\r\n            int i = 0;\r\n            while (i &lt; str.length()) {\r\n                char ch = str.charAt(i);\r\n                if (ch &lt; 48 || ch &gt; 57)\r\n                    throw new NumberFormatException(&quot;&quot; + ch);\r\n                num = num * 10 + Character.getNumericValue(ch);\r\n                i++;\r\n            }\r\n            return num;\r\n        }\r\n    }\r\n\r\n\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":5159,"user_id":4797289,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/52b438826818a6987f6b7239e3fffd1a?s=128&d=identicon&r=PG&f=1","display_name":"Rasoul Miri","link":"https://stackoverflow.com/users/4797289/rasoul-miri"},"comment_count":0,"score":-1,"creation_date":1599463579,"body_markdown":"you can use their wayes:\r\n\r\n    String stringNumber = &quot;0123456789&quot;;\r\n\r\n1- Use parseInt\r\n\r\n    try {\r\n       int number = Integer.parseInt(stringNumber);\r\n    }catch (NumberFormatException e){\r\n       // Handel exception, mybe has space or alphabet \r\n    }\r\n\r\n2- Use valueOf\r\n\r\n    try {\r\n       int number = Integer.valueOf(stringNumber);\r\n    }catch (NumberFormatException e){\r\n       // Handel exception, mybe has space or alphabet \r\n    }\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":130,"user_id":9363081,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/090477ff046c0a1d81e6cc76a345532a?s=128&d=identicon&r=PG&f=1","display_name":"Dubstep","link":"https://stackoverflow.com/users/9363081/dubstep"},"comment_count":0,"score":1,"creation_date":1600210734,"body_markdown":"This can work,\r\n```\r\nInteger.parseInt(yourString);\r\n```","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":59,"user_id":6336491,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-08rOO1btHiQ/AAAAAAAAAAI/AAAAAAAAAIM/HSsILk28ewk/photo.jpg?sz=128","display_name":"Yogesh","link":"https://stackoverflow.com/users/6336491/yogesh"},"comment_count":0,"score":0,"creation_date":1606915500,"body_markdown":"Apart from all these answer i found one new way, although it uses internally `Integer.parseInt()`,\r\n\r\nBy using\r\n```java\r\nimport javafx.util.converter.IntegerStringConverter;\r\n\r\nnew IntegerStringConverter().fromString(&quot;1234&quot;).intValue()\r\n```\r\nor\r\n```java\r\nnew IntegerStringConverter().fromString(&quot;1234&quot;)\r\n```\r\n\r\nAlthough it is a little bit costly as new objects get created, I just wanted to add as I learned a new way.\r\n\r\nJust go through `javafx.util.StringConverter&lt;T&gt;` class it helps to convert any wrapper class value to a string or vice versa.\r\n","title":"How do I convert a String to an int in Java?"},{"owner":{"reputation":579,"user_id":6693783,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-6mGP5R993ak/AAAAAAAAAAI/AAAAAAAAGqo/BANYLiTzdds/photo.jpg?sz=128","display_name":"Bathri Nathan","link":"https://stackoverflow.com/users/6693783/bathri-nathan"},"comment_count":0,"score":0,"creation_date":1611926214,"body_markdown":"Kindly use **NumberUtils** to parse integers from a string.\r\n\r\n - This function could also handle the exception **when the given string is too long.**\r\n - We could also **give default values**.\r\n\r\nHere is the example code.\r\n\r\n    NumberUtils.toInt(&quot;00450&quot;);\r\n    NumberUtils.toInt(&quot;45464646545645400000&quot;);\r\n    NumberUtils.toInt(&quot;45464646545645400000&quot;, 0); // Where 0 is the default value.\r\n\r\n    output:\r\n    450\r\n    0\r\n    0\r\n","title":"How do I convert a String to an int in Java?"}],"owner":{"reputation":40257,"user_id":537967,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/fd0de9b7a6fdcd9368f37e71484440fb?s=128&d=identicon&r=PG","display_name":"Unknown user","link":"https://stackoverflow.com/users/537967/unknown-user"},"comment_count":2,"is_answered":true,"answer_count":48,"score":3173,"creation_date":1302200874,"question_id":5585779,"body_markdown":"How can I convert a `String` to an `int` in Java?\r\n\r\nMy String contains only numbers, and I want to return the number it represents.\r\n\r\nFor example, given the string `&quot;1234&quot;` the result should be the number `1234`.\r\n","link":"https://stackoverflow.com/questions/5585779/how-do-i-convert-a-string-to-an-int-in-java","title":"How do I convert a String to an int in Java?"},{"tags":["java","serialization","serialversionuid"],"comments":[{"owner":{"reputation":173,"user_id":2319364,"user_type":"registered","accept_rate":17,"profile_image":"https://www.gravatar.com/avatar/27255950392b1629e8ed7ae93b36e84f?s=128&d=identicon&r=PG","display_name":"ceyun","link":"https://stackoverflow.com/users/2319364/ceyun"},"score":2,"creation_date":1572866914}],"answers":[{"comments":[{"owner":{"reputation":20138,"user_id":29182,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/af3daf5de4ebd0531d978fad803a46a0?s=128&d=identicon&r=PG","display_name":"Ziggy","link":"https://stackoverflow.com/users/29182/ziggy"},"score":345,"creation_date":1230794830},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":375,"creation_date":1230841566},{"owner":{"reputation":3682,"user_id":1392690,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/9c5Wg.png?s=128&g=1","display_name":"JohnMerlino","link":"https://stackoverflow.com/users/1392690/johnmerlino"},"score":17,"creation_date":1402852359},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":22,"creation_date":1402857803},{"owner":{"reputation":1288,"user_id":235635,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/62d78ca0ea3a49693d38df790554fddc?s=128&d=identicon&r=PG","display_name":"zpon","link":"https://stackoverflow.com/users/235635/zpon"},"score":16,"creation_date":1412768932},{"owner":{"reputation":51654,"user_id":264052,"user_type":"registered","accept_rate":66,"profile_image":"https://www.gravatar.com/avatar/8ccbe08a132ba61eae9ff8984ca44e81?s=128&d=identicon&r=PG","display_name":"smwikipedia","link":"https://stackoverflow.com/users/264052/smwikipedia"},"score":1,"creation_date":1419252910},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":7,"creation_date":1419252975},{"owner":{"reputation":1089,"user_id":294214,"user_type":"registered","accept_rate":58,"profile_image":"https://www.gravatar.com/avatar/56fc4c400bd45ba8121b7897b389361d?s=128&d=identicon&r=PG","display_name":"amertkara","link":"https://stackoverflow.com/users/294214/amertkara"},"score":2,"creation_date":1436545062},{"owner":{"reputation":3060,"user_id":4762502,"user_type":"registered","accept_rate":73,"profile_image":"https://lh3.googleusercontent.com/-JBluz4YbEjk/AAAAAAAAAAI/AAAAAAAAAKM/0RsG_lxMbLs/photo.jpg?sz=128","display_name":"notescrew","link":"https://stackoverflow.com/users/4762502/notescrew"},"score":1,"creation_date":1449219787},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":2,"creation_date":1449219865},{"owner":{"reputation":3060,"user_id":4762502,"user_type":"registered","accept_rate":73,"profile_image":"https://lh3.googleusercontent.com/-JBluz4YbEjk/AAAAAAAAAAI/AAAAAAAAAKM/0RsG_lxMbLs/photo.jpg?sz=128","display_name":"notescrew","link":"https://stackoverflow.com/users/4762502/notescrew"},"score":0,"creation_date":1449219980},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":1,"creation_date":1449220349},{"owner":{"reputation":1153,"user_id":3255525,"user_type":"registered","accept_rate":93,"profile_image":"https://i.stack.imgur.com/frDd0.jpg?s=128&g=1","display_name":"JimLohse","link":"https://stackoverflow.com/users/3255525/jimlohse"},"score":2,"creation_date":1450631860},{"owner":{"reputation":2874,"user_id":2769917,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/78c9b4e2e2a18d5c74468629bcd1c3ec?s=128&d=identicon&r=PG&f=1","display_name":"Asif Mushtaq","link":"https://stackoverflow.com/users/2769917/asif-mushtaq"},"score":1,"creation_date":1467142174},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":1,"creation_date":1467142633},{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"score":1,"creation_date":1497209802},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":4,"creation_date":1497216565},{"owner":{"reputation":9247,"user_id":1050755,"user_type":"registered","accept_rate":51,"profile_image":"https://www.gravatar.com/avatar/c944828c87e2f4809621a6087beaa8b1?s=128&d=identicon&r=PG","display_name":"user1050755","link":"https://stackoverflow.com/users/1050755/user1050755"},"score":1,"creation_date":1497231955},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":5,"creation_date":1497246462},{"owner":{"reputation":107021,"user_id":878126,"user_type":"registered","accept_rate":51,"profile_image":"https://i.stack.imgur.com/D5dZW.jpg?s=128&g=1","display_name":"android developer","link":"https://stackoverflow.com/users/878126/android-developer"},"score":2,"creation_date":1528101192},{"owner":{"reputation":3483,"user_id":1679516,"user_type":"registered","profile_image":"https://i.stack.imgur.com/gxfhm.png?s=128&g=1","display_name":"Darrell Teague","link":"https://stackoverflow.com/users/1679516/darrell-teague"},"score":1,"creation_date":1531158267},{"owner":{"reputation":12414,"user_id":2039482,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/4EPA6.png?s=128&g=1","display_name":"bpoiss","link":"https://stackoverflow.com/users/2039482/bpoiss"},"score":2,"creation_date":1566217984},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":5,"creation_date":1566218279}],"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"comment_count":23,"score":2392,"creation_date":1226532615,"body_markdown":"The docs for [`java.io.Serializable`][1] are probably about as good an explanation as you&#39;ll get:\r\n\r\n&gt; The serialization runtime associates with each serializable class a version number, called a `serialVersionUID`, which is used during deserialization to verify that the sender and receiver of a serialized object have loaded classes for that object that are compatible with respect to serialization. If the receiver has loaded a class for the object that has a different `serialVersionUID` than that of the corresponding sender&#39;s class, then deserialization will result in an \r\n[`InvalidClassException`][2]. A serializable class can declare its own `serialVersionUID` explicitly by declaring a field named `serialVersionUID` that must be static, final, and of type `long`:\r\n\r\n&gt;     ANY-ACCESS-MODIFIER static final long serialVersionUID = 42L;\r\n\r\n&gt; If a serializable class does not explicitly declare a `serialVersionUID`, then the serialization runtime will calculate a default `serialVersionUID` value for that class based on various aspects of the class, as described in the Java(TM) Object Serialization Specification. However, it is *strongly recommended* that all serializable classes explicitly declare `serialVersionUID` values, since the default `serialVersionUID` computation is highly sensitive to class details that may vary depending on compiler implementations, and can thus result in unexpected `InvalidClassExceptions` during deserialization. Therefore, to guarantee a consistent `serialVersionUID` value across different java compiler implementations, a serializable class must declare an explicit `serialVersionUID` value. It is also strongly advised that explicit `serialVersionUID` declarations use the private modifier where possible, since such declarations apply only to the immediately declaring class — `serialVersionUID` fields are not useful as inherited members.\r\n\r\n  [1]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/Serializable.html\r\n  [2]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/InvalidClassException.html","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":247550,"user_id":3474,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/ffbf4e85b8ffbae4e9039b9c0cf07bc8?s=128&d=identicon&r=PG","display_name":"erickson","link":"https://stackoverflow.com/users/3474/erickson"},"score":10,"creation_date":1226554491},{"owner":{"reputation":27299,"user_id":8026,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/60929e8e0445f0070e501f5ded8ad348?s=128&d=identicon&r=PG","display_name":"MetroidFan2002","link":"https://stackoverflow.com/users/8026/metroidfan2002"},"score":7,"creation_date":1238422359},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":5,"creation_date":1391735404},{"owner":{"reputation":206732,"user_id":642706,"user_type":"registered","accept_rate":58,"profile_image":"https://i.stack.imgur.com/ZWEI3.jpg?s=128&g=1","display_name":"Basil Bourque","link":"https://stackoverflow.com/users/642706/basil-bourque"},"score":4,"creation_date":1414987965}],"owner":{"reputation":1226,"user_id":16201,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/649b51366f6875923d48a2bb6ca75ac7?s=128&d=identicon&r=PG","display_name":"eishay","link":"https://stackoverflow.com/users/16201/eishay"},"comment_count":4,"score":39,"creation_date":1226532630,"body_markdown":"If you will never need to serialize your objects to byte array and send/store them, then you don&#39;t need to worry about it. If you do, then you must consider your serialVersionUID since the deserializer of the object will match it to the version of object its classloader has. Read more about it in the Java Language Specification.","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":20138,"user_id":29182,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/af3daf5de4ebd0531d978fad803a46a0?s=128&d=identicon&r=PG","display_name":"Ziggy","link":"https://stackoverflow.com/users/29182/ziggy"},"score":37,"creation_date":1230794915},{"owner":{"reputation":9149,"user_id":374499,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/baf65281d85e8019317cb96d94510606?s=128&d=identicon&r=PG","display_name":"Chander Shivdasani","link":"https://stackoverflow.com/users/374499/chander-shivdasani"},"score":11,"creation_date":1326484178},{"owner":{"reputation":8002,"user_id":887421,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/08a22e053b0b4cd9e1b62922258819fb?s=128&d=identicon&r=PG&f=1","display_name":"Achow","link":"https://stackoverflow.com/users/887421/achow"},"score":3,"creation_date":1362112709},{"owner":{"reputation":17017,"user_id":325742,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/sNS8v.png?s=128&g=1","display_name":"Ashutosh Jindal","link":"https://stackoverflow.com/users/325742/ashutosh-jindal"},"score":33,"creation_date":1404825935},{"owner":{"reputation":108,"user_id":7224691,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0411eb15d01be3dd57842f42b7498afb?s=128&d=identicon&r=PG&f=1","display_name":"Ben","link":"https://stackoverflow.com/users/7224691/ben"},"score":0,"creation_date":1608452966}],"owner":{"reputation":10051,"user_id":2495576,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/4dde4097258f44245bbadb0a08b5230a?s=128&d=identicon&r=PG","display_name":"Scott Bale","link":"https://stackoverflow.com/users/2495576/scott-bale"},"comment_count":5,"score":319,"creation_date":1226533038,"body_markdown":"I can&#39;t pass up this opportunity to plug Josh Bloch&#39;s book [Effective Java][1] (2nd Edition).  Chapter 11 is an indispensible resource on Java serialization.\r\n\r\nPer Josh, the automatically-generated UID is generated based on a class name, implemented interfaces, and all public and protected members.  Changing any of these in any way will change the `serialVersionUID`.  So you don&#39;t need to mess with them only if you are certain that no more than one version of the class will ever be serialized (either across processes or retrieved from storage at a later time).\r\n\r\nIf you ignore them for now, and find later that you need to change the class in some way but maintain compatibility w/ old version of the class, you can use the JDK tool **serialver** to generate the `serialVersionUID` on the *old* class, and explicitly set that on the new class.  (Depending on your changes you may need to also implement custom serialization by adding `writeObject` and `readObject` methods - see `Serializable` javadoc or aforementioned chapter 11.)\r\n\r\n  [1]: http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":21774,"user_id":13687,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/83fd7d4059fec16d3f138f4f351b6423?s=128&d=identicon&r=PG","display_name":"John Gardner","link":"https://stackoverflow.com/users/13687/john-gardner"},"score":22,"creation_date":1226539711},{"owner":{"reputation":131708,"user_id":4249,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/c11c60c7e6d29cb4b87f3c0a3b692181?s=128&d=identicon&r=PG","display_name":"matt b","link":"https://stackoverflow.com/users/4249/matt-b"},"score":3,"creation_date":1226544728},{"owner":{"reputation":20138,"user_id":29182,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/af3daf5de4ebd0531d978fad803a46a0?s=128&d=identicon&r=PG","display_name":"Ziggy","link":"https://stackoverflow.com/users/29182/ziggy"},"score":14,"creation_date":1230794975},{"owner":{"reputation":917,"user_id":5218240,"user_type":"registered","accept_rate":86,"profile_image":"https://lh5.googleusercontent.com/-lr14bSsitOU/AAAAAAAAAAI/AAAAAAAATYc/yuSCjwCDkt8/photo.jpg?sz=128","display_name":"cinqS","link":"https://stackoverflow.com/users/5218240/cinqs"},"score":8,"creation_date":1492486298}],"owner":{"reputation":131708,"user_id":4249,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/c11c60c7e6d29cb4b87f3c0a3b692181?s=128&d=identicon&r=PG","display_name":"matt b","link":"https://stackoverflow.com/users/4249/matt-b"},"comment_count":4,"score":140,"creation_date":1226539020,"body_markdown":"You can tell Eclipse to ignore these serialVersionUID  warnings:\r\n\r\n&gt;Window &gt; Preferences &gt; Java &gt; Compiler &gt; Errors / Warnings &gt; Potential Programming Problems\r\n\r\nIn case you didn&#39;t know, there are a lot of other warnings you can enable in this section (or even have some reported as errors), many are very useful:\r\n\r\n  - Potential Programming Problems: Possible accidental boolean assignment\r\n  - Potential Programming Problems: Null pointer access\r\n  - Unnecessary code: Local variable is never read\r\n  - Unnecessary code: Redundant null check\r\n  - Unnecessary code: Unnecessary cast or &#39;instanceof&#39;\r\n\r\nand many more.","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":42497,"user_id":116639,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/30700279c97553494d9479ec7d667483?s=128&d=identicon&r=PG","display_name":"Tom Anderson","link":"https://stackoverflow.com/users/116639/tom-anderson"},"score":82,"creation_date":1303641804},{"owner":{"reputation":27299,"user_id":8026,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/60929e8e0445f0070e501f5ded8ad348?s=128&d=identicon&r=PG","display_name":"MetroidFan2002","link":"https://stackoverflow.com/users/8026/metroidfan2002"},"score":25,"creation_date":1303751386},{"owner":{"reputation":6412,"user_id":336656,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/21f9d9fb84dc64acfcf90569c1e945f6?s=128&d=identicon&r=PG","display_name":"AbdullahC","link":"https://stackoverflow.com/users/336656/abdullahc"},"score":72,"creation_date":1325255525},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":11,"creation_date":1355273941},{"owner":{"reputation":11253,"user_id":3317808,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/6c8272382fcd9841919bc1f8709d25a0?s=128&d=identicon&r=PG&f=1","display_name":"overexchange","link":"https://stackoverflow.com/users/3317808/overexchange"},"score":4,"creation_date":1419435578},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1430738274},{"owner":{"reputation":11253,"user_id":3317808,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/6c8272382fcd9841919bc1f8709d25a0?s=128&d=identicon&r=PG&f=1","display_name":"overexchange","link":"https://stackoverflow.com/users/3317808/overexchange"},"score":0,"creation_date":1430738872},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1511601072},{"owner":{"reputation":11253,"user_id":3317808,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/6c8272382fcd9841919bc1f8709d25a0?s=128&d=identicon&r=PG&f=1","display_name":"overexchange","link":"https://stackoverflow.com/users/3317808/overexchange"},"score":0,"creation_date":1511601195},{"owner":{"reputation":6765,"user_id":1262865,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/1c93afaf48cdb37ee73b67acb533e63c?s=128&d=identicon&r=PG","display_name":"john16384","link":"https://stackoverflow.com/users/1262865/john16384"},"score":0,"creation_date":1518260775},{"owner":{"reputation":1176,"user_id":4854931,"user_type":"registered","accept_rate":33,"profile_image":"https://www.gravatar.com/avatar/060bc28b9269322a762c3419d18c3443?s=128&d=identicon&r=PG&f=1","display_name":"Alex78191","link":"https://stackoverflow.com/users/4854931/alex78191"},"score":0,"creation_date":1528419204},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1564139091}],"owner":{"reputation":27299,"user_id":8026,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/60929e8e0445f0070e501f5ded8ad348?s=128&d=identicon&r=PG","display_name":"MetroidFan2002","link":"https://stackoverflow.com/users/8026/metroidfan2002"},"comment_count":12,"score":491,"creation_date":1226550297,"body_markdown":"If you&#39;re serializing just because you have to serialize for the implementation&#39;s sake (who cares if you serialize for an `HTTPSession`, for instance...if it&#39;s stored or not, you probably don&#39;t care about `de-serializing` a form object), then you can ignore this.\r\n\r\nIf you&#39;re actually using serialization, it only matters if you plan on storing and retrieving objects using serialization directly.  The `serialVersionUID` represents your class version, and you should increment it if the current version of your class is not backwards compatible with its previous version.\r\n\r\nMost of the time, you will probably not use serialization directly.  If this is the case, generate a default `SerialVersionUID` by clicking the quick fix option and don&#39;t worry about it.","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":67931,"user_id":600500,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/5925786f174975db18cbc83dd85e5c1d?s=128&d=identicon&r=PG","display_name":"Paŭlo Ebermann","link":"https://stackoverflow.com/users/600500/pa%c5%adlo-ebermann"},"score":8,"creation_date":1298167453},{"owner":{"reputation":6947,"user_id":15127,"user_type":"registered","accept_rate":97,"profile_image":"https://www.gravatar.com/avatar/89061a4464c9f4770092a4941aee72b2?s=128&d=identicon&r=PG","display_name":"Andrew Backer","link":"https://stackoverflow.com/users/15127/andrew-backer"},"score":4,"creation_date":1312878563},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":2,"creation_date":1391735445},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":0,"creation_date":1516914395},{"owner":{"reputation":6765,"user_id":1262865,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/1c93afaf48cdb37ee73b67acb533e63c?s=128&d=identicon&r=PG","display_name":"john16384","link":"https://stackoverflow.com/users/1262865/john16384"},"score":1,"creation_date":1518261111}],"owner":{"user_type":"does_not_exist","display_name":"David Wright"},"comment_count":5,"score":11,"creation_date":1228315473,"body_markdown":"It would be nice if CheckStyle could verify that the serialVersionUID on a class that implements Serializable has a good value, i.e. that it matches what the serial version id  generator would produce.  If you have a project with lots of serializable DTOs, for example, remembering to delete the existing serialVersionUID and regenerate it is a pain, and currently the only way (that I know of) to verify this is to regenerate for each class and compare to the old one.  This is very very painful.","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":1893,"user_id":255830,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/782742f27b6e9da82b666f6d1dcc9d92?s=128&d=identicon&r=PG","display_name":"piepera","link":"https://stackoverflow.com/users/255830/piepera"},"score":4,"creation_date":1323271248},{"owner":{"reputation":1609,"user_id":884502,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/1f4a1119fab3984edda7b7809dc1e639?s=128&d=identicon&r=PG","display_name":"M_M","link":"https://stackoverflow.com/users/884502/m-m"},"score":2,"creation_date":1345414536},{"owner":{"reputation":67931,"user_id":600500,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/5925786f174975db18cbc83dd85e5c1d?s=128&d=identicon&r=PG","display_name":"Paŭlo Ebermann","link":"https://stackoverflow.com/users/600500/pa%c5%adlo-ebermann"},"score":4,"creation_date":1345450196},{"owner":{"reputation":1624,"user_id":3009607,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/jHlAq.jpg?s=128&g=1","display_name":"WVrock","link":"https://stackoverflow.com/users/3009607/wvrock"},"score":1,"creation_date":1417245286},{"owner":{"reputation":1409,"user_id":747739,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/63f7411b16341f1bc6c7ebdc791bc38f?s=128&d=identicon&r=PG","display_name":"Phil","link":"https://stackoverflow.com/users/747739/phil"},"score":2,"creation_date":1492052348},{"owner":{"reputation":67931,"user_id":600500,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/5925786f174975db18cbc83dd85e5c1d?s=128&d=identicon&r=PG","display_name":"Paŭlo Ebermann","link":"https://stackoverflow.com/users/600500/pa%c5%adlo-ebermann"},"score":0,"creation_date":1492501138},{"owner":{"reputation":9752,"user_id":1786065,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/udTpS.png?s=128&g=1","display_name":"Rogue","link":"https://stackoverflow.com/users/1786065/rogue"},"score":0,"creation_date":1497361331}],"owner":{"reputation":67931,"user_id":600500,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/5925786f174975db18cbc83dd85e5c1d?s=128&d=identicon&r=PG","display_name":"Paŭlo Ebermann","link":"https://stackoverflow.com/users/600500/pa%c5%adlo-ebermann"},"comment_count":7,"score":34,"creation_date":1296693123,"body_markdown":"If you get this warning on a class you don&#39;t ever think about serializing, and that you didn&#39;t declare yourself `implements Serializable`, it is often because you inherited from a superclass, which implements Serializable. Often then it would be better to delegate to such a object instead of using inheritance.\r\n\r\nSo, instead of \r\n\r\n    public class MyExample extends ArrayList&lt;String&gt; {\r\n        \r\n        public MyExample() {\r\n            super();\r\n        }\r\n        ...\r\n    }\r\n\r\ndo\r\n\r\n    public class MyExample {\r\n        private List&lt;String&gt; myList;\r\n        \r\n        public MyExample() {\r\n             this.myList = new ArrayList&lt;String&gt;();\r\n        }\r\n        ...\r\n    }\r\n\r\nand in the relevant methods call `myList.foo()` instead of `this.foo()` (or `super.foo()`). (This does not fit in all cases, but still quite often.)\r\n\r\nI often see people extending JFrame or such, when they really only need to delegate to this. (This also helps for auto-completing in a IDE, since JFrame has hundreds of methods, which you don&#39;t need when you want to call your custom ones on your class.)\r\n\r\nOne case where the warning (or the serialVersionUID) is unavoidable is when you extend from AbstractAction, normally in a anonymous class, only adding the actionPerformed-method. I think there shouldn&#39;t be a warning in this case (since you normally can&#39;t reliable serialize and deserialize such anonymous classes anyway accross different versions of your class), but I&#39;m not sure how the compiler could recognize this.","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":3,"creation_date":1521714644},{"owner":{"reputation":2568,"user_id":6790326,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/--0W1SyomlMg/AAAAAAAAAAI/AAAAAAAAAGY/w5Ja9a3U4zE/photo.jpg?sz=128","display_name":"Dorian Gray","link":"https://stackoverflow.com/users/6790326/dorian-gray"},"score":0,"creation_date":1604418294}],"owner":{"reputation":671,"user_id":1364371,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9006e687716255b5e083ab6d5ecde64a?s=128&d=identicon&r=PG","display_name":"grand johnson","link":"https://stackoverflow.com/users/1364371/grand-johnson"},"comment_count":2,"score":17,"creation_date":1335715181,"body_markdown":"Don&#39;t bother, the default calculation is really good and suffice for 99,9999% of the cases. And if you run into problems, you can - as already stated - introduce UID&#39;s as the need arrise (which is highly unlikely)","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":4,"creation_date":1391735133},{"owner":{"reputation":16464,"user_id":83741,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/60adb60c59462ef0cb9db65853736cf4?s=128&d=identicon&r=PG","display_name":"Alexander Torstling","link":"https://stackoverflow.com/users/83741/alexander-torstling"},"score":4,"creation_date":1391800361},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":3,"creation_date":1400621271},{"owner":{"reputation":16464,"user_id":83741,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/60adb60c59462ef0cb9db65853736cf4?s=128&d=identicon&r=PG","display_name":"Alexander Torstling","link":"https://stackoverflow.com/users/83741/alexander-torstling"},"score":3,"creation_date":1400654537},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":4,"creation_date":1430738187}],"owner":{"reputation":16464,"user_id":83741,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/60adb60c59462ef0cb9db65853736cf4?s=128&d=identicon&r=PG","display_name":"Alexander Torstling","link":"https://stackoverflow.com/users/83741/alexander-torstling"},"comment_count":5,"score":117,"creation_date":1349244345,"body_markdown":"`serialVersionUID` facilitates versioning of serialized data. Its value is stored with the data when serializing. When de-serializing, the same version is checked to see how the serialized data matches the current code. \r\n\r\nIf you want to version your data, you normally start with a `serialVersionUID` of 0, and bump it with every structural change to your class which alters the serialized data (adding or removing non-transient fields). \r\n\r\nThe built-in de-serialization mechanism (`in.defaultReadObject()`) will refuse to de-serialize from old versions of the data. But if you want to you can define your own [readObject()][1]-function which can read back old data. This custom code can then check the `serialVersionUID` in order to know which version the data is in and decide how to de-serialize it. This versioning technique is useful if you store serialized data which survives several versions of your code.\r\n\r\nBut storing serialized data for such a long time span is not very common. It is far more common to use the serialization mechanism to temporarily write data to for instance a cache or send it over the network to another program with the same version of the relevant parts of the codebase. \r\n\r\nIn this case you are not interested in maintaining backwards compatibility. You are only concerned with making sure that the code bases which are communicating indeed have the same versions of relevant classes. In order to facilitate such a check, you must maintain the `serialVersionUID` just like before and not forget to update it when making changes to your classes. \r\n\r\nIf you do forget to update the field, you might end up with two different versions of a class with different structure but with the same `serialVersionUID`. If this happens, the default mechanism (`in.defaultReadObject()`) will not detect any difference, and try to de-serialize incompatible data. Now you might end up with a cryptic runtime error or silent failure (null fields). These types of errors might be hard to find.\r\n\r\nSo to help this usecase, the Java platform offers you a choice of not setting the `serialVersionUID` manually. Instead, a hash of the class structure will be generated at compile-time and used as id. This mechanism will make sure that you never have different class structures with the same id, and so you will not get these hard-to-trace runtime serialization failures mentioned above.\r\n\r\nBut there is a backside to the auto-generated id strategy. Namely that the generated ids for the same class might differ between compilers (as mentioned by Jon Skeet above). So if you communicate serialized data between code compiled with different compilers, it is recommended to maintain the ids manually anyway. \r\n\r\nAnd if you are backwards-compatible with your data like in the first use case mentioned, you also probably want to maintain the id yourself. This in order to get readable ids and have greater control over when and how they change.\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/1.5.0/docs/guide/serialization/spec/input.html#2971","title":"What is a serialVersionUID and why should I use it?"},{"owner":{"reputation":241,"user_id":2165875,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a79a1cb0c9611fb8b1e92ac4750285ae?s=128&d=identicon&r=PG","display_name":"Mukti","link":"https://stackoverflow.com/users/2165875/mukti"},"comment_count":0,"score":14,"creation_date":1363184813,"body_markdown":"Field data represents some information stored in the class.\r\nClass implements the `Serializable` interface, \r\nso eclipse automatically offered  to declare the `serialVersionUID` field. Lets start with value 1 set there.\r\n\r\nIf you don&#39;t want that warning to come, use this:\r\n\r\n    @SuppressWarnings(&quot;serial&quot;)","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":4505,"user_id":1875434,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/dc064a0af5b489a8a5aec8dcf53cc21e?s=128&d=identicon&r=PG","display_name":"abbas","link":"https://stackoverflow.com/users/1875434/abbas"},"score":0,"creation_date":1509068069},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":4,"creation_date":1511600298},{"owner":{"reputation":4505,"user_id":1875434,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/dc064a0af5b489a8a5aec8dcf53cc21e?s=128&d=identicon&r=PG","display_name":"abbas","link":"https://stackoverflow.com/users/1875434/abbas"},"score":0,"creation_date":1511743142},{"owner":{"reputation":20767,"user_id":603516,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/40895ef337d0a2eb7d538f5f8b3e6d58?s=128&d=identicon&r=PG","display_name":"Vadzim","link":"https://stackoverflow.com/users/603516/vadzim"},"score":2,"creation_date":1513275699},{"owner":{"reputation":20767,"user_id":603516,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/40895ef337d0a2eb7d538f5f8b3e6d58?s=128&d=identicon&r=PG","display_name":"Vadzim","link":"https://stackoverflow.com/users/603516/vadzim"},"score":3,"creation_date":1516962404},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1521714531},{"owner":{"reputation":1772,"user_id":257364,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/fd01dd06eefc977f4746b1ff55799c2b?s=128&d=identicon&r=PG","display_name":"Volksman","link":"https://stackoverflow.com/users/257364/volksman"},"score":0,"creation_date":1588415712}],"owner":{"reputation":2317,"user_id":1270989,"user_type":"registered","accept_rate":48,"profile_image":"https://i.stack.imgur.com/CcQbg.jpg?s=128&g=1","display_name":"Rupesh","link":"https://stackoverflow.com/users/1270989/rupesh"},"comment_count":7,"score":59,"creation_date":1365331407,"body_markdown":"Original question has asked for &#39;why is it important&#39; and &#39;example&#39; where this `Serial Version ID` would be useful. Well I have found one.\r\n\r\nSay you create a `Car` class, instantiate it, and write it out to an object stream. The flattened car object sits in the file system for some time. Meanwhile, if the `Car` class is modified by adding a new field. Later on, when you try to read (i.e. deserialize) the flattened `Car` object, you get the `java.io.InvalidClassException` – because all serializable classes are automatically given a unique identifier. This exception is thrown when the identifier of the class is not equal to the identifier of the flattened object. If you really think about it, the exception is thrown because of the addition of the new field. You can avoid this exception being thrown by controlling the versioning yourself by declaring an explicit serialVersionUID. There is also a small performance benefit in explicitly declaring your `serialVersionUID` (because does not have to be calculated). So, it is best practice to add your own serialVersionUID to your Serializable classes as soon as you create them as shown below:\r\n\r\n    public class Car {\r\n        static final long serialVersionUID = 1L; //assign a long value\r\n    }","title":"What is a serialVersionUID and why should I use it?"},{"owner":{"reputation":3097,"user_id":1264138,"user_type":"registered","accept_rate":87,"profile_image":"https://i.stack.imgur.com/sR3pc.jpg?s=128&g=1","display_name":"Henrique Ordine","link":"https://stackoverflow.com/users/1264138/henrique-ordine"},"comment_count":0,"score":20,"creation_date":1369078357,"body_markdown":"As for an example where the missing serialVersionUID might cause a problem:\r\n\r\nI&#39;m working on this Java EE application that is composed of a Web module that uses an `EJB` module. The web module calls the `EJB` module remotely and passes a `POJO` that implements `Serializable` as an argument.\r\n\r\nThis `POJO&#39;s` class was packaged inside the EJB jar and inside it&#39;s own jar in the WEB-INF/lib of the web module. They&#39;re actually the same class, but when I package the EJB module I unpack this POJO&#39;s jar to pack it together with the EJB module.\r\n\r\nThe call to the `EJB` was failing with the Exception below because I hadn&#39;t declared its `serialVersionUID`:\r\n\r\n \r\n\r\n    Caused by: java.io.IOException: Mismatched serialization UIDs : Source\r\n     (Rep.\r\n     IDRMI:com.hordine.pedra.softbudget.domain.Budget:5CF7CE11E6810A36:04A3FEBED5DA4588)\r\n     = 04A3FEBED5DA4588 whereas Target (Rep. ID RMI:com.hordine.pedra.softbudget.domain.Budget:7AF5ED7A7CFDFF31:6227F23FA74A9A52)\r\n     = 6227F23FA74A9A52","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":2,"creation_date":1400621710},{"owner":{"reputation":960,"user_id":1092670,"user_type":"registered","accept_rate":93,"profile_image":"https://i.stack.imgur.com/sZiEO.jpg?s=128&g=1","display_name":"AnthonyJClink","link":"https://stackoverflow.com/users/1092670/anthonyjclink"},"score":0,"creation_date":1567126875}],"owner":{"reputation":251,"user_id":2444506,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8f439960718f0dcd01d26f47a791a599?s=128&d=identicon&r=PG","display_name":"Nitesh Soni","link":"https://stackoverflow.com/users/2444506/nitesh-soni"},"comment_count":2,"score":22,"creation_date":1370154031,"body_markdown":"To understand the significance of field serialVersionUID, one should understand how Serialization/Deserialization works.\r\n\r\nWhen a Serializable class object is serialized Java Runtime associates a serial version no.(called as serialVersionUID) with this serialized object. At the time when you deserialize this serialized object Java Runtime matches the serialVersionUID of serialized object with the serialVersionUID of the class. If both are equal then only it proceeds with the further process of deserialization else throws InvalidClassException.\r\n\r\nSo we conclude that to make Serialization/Deserialization process successful the serialVersionUID of serialized object must be equivalent to the serialVersionUID of the class. In case if programmer specifies the serialVersionUID value explicitly in the program then the same value will be associated with the serialized object and the class, irrespective of the serialization and deserialzation platform(for ex. serialization might be done on platform like windows by using sun or MS JVM and Deserialization might be on different platform Linux using Zing JVM).\r\n\r\nBut in case if serialVersionUID is not specified by programmer then while doing Serialization\\DeSerialization  of any object, Java runtime uses its own algorithm to calculate it. This serialVersionUID calculation algorithm varies from one JRE to another. It is also possible that the environment where the object is serialized is using one JRE (ex: SUN JVM) and the environment where deserialzation happens is using Linux Jvm(zing). In such cases serialVersionUID associated with serialized object will be different than the serialVersionUID of class calculated at deserialzation environment. In turn deserialization will not be successful. So to avoid such situations/issues programmer must always specify serialVersionUID of Serializable class.","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":488,"user_id":3041275,"user_type":"registered","accept_rate":69,"profile_image":"https://i.stack.imgur.com/UUx25.png?s=128&g=1","display_name":"Kranthi Sama","link":"https://stackoverflow.com/users/3041275/kranthi-sama"},"score":3,"creation_date":1402916805},{"owner":{"reputation":12784,"user_id":266531,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/619aaf27f793d8ffdbc879c74884c0cc?s=128&d=identicon&r=PG","display_name":"Kirby","link":"https://stackoverflow.com/users/266531/kirby"},"score":3,"creation_date":1403022651},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":8,"creation_date":1433823438}],"owner":{"reputation":20456,"user_id":337128,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/Qo1Yy.jpg?s=128&g=1","display_name":"Thalaivar","link":"https://stackoverflow.com/users/337128/thalaivar"},"comment_count":3,"score":76,"creation_date":1381984103,"body_markdown":"&gt; What is a **serialVersionUID** and why should I use it?\r\n\r\n`SerialVersionUID` is a unique identifier for each class, `JVM` uses it to compare the versions of the class ensuring that the same class was used during Serialization is loaded during Deserialization.\r\n\r\nSpecifying one gives more control, though JVM does generate one if you don&#39;t specify. The value generated can differ between different compilers. Furthermore, sometimes you just want for some reason to forbid deserialization of old serialized objects [`backward incompatibility`], and in this case you just have to change the serialVersionUID. \r\n\r\n**The [javadocs for `Serializable`][1] say**:\r\n\r\n&gt; the default serialVersionUID computation is highly sensitive to class\r\n&gt; details that may vary depending on compiler implementations, and can\r\n&gt; thus result in unexpected `InvalidClassException`s during\r\n&gt; deserialization.\r\n\r\n**Therefore, you must declare serialVersionUID because it give us more control**.\r\n\r\n[This article][2] has some good points on the topic.\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html\r\n  [2]: http://www.javapractices.com/topic/TopicAction.do?Id=45","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1400621776}],"owner":{"reputation":21536,"user_id":242042,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/a798a3d661375ece15776f83fbb80c2c?s=128&d=identicon&r=PG","display_name":"Archimedes Trajano","link":"https://stackoverflow.com/users/242042/archimedes-trajano"},"comment_count":1,"score":16,"creation_date":1393949868,"body_markdown":"I generally use `serialVersionUID` in one context:  When I know it will be leaving the context of the Java VM.  \r\n\r\nI would know this when I to use `ObjectInputStream` and `ObjectOutputStream` for my application or if I know a library/framework I use will use it.  The serialVersionID ensures different Java VMs of varying versions or vendors will inter-operate correctly or if it is stored and retrieved outside the VM for example `HttpSession` the session data can remain even during a restart and upgrade of the application server.\r\n\r\nFor all other cases, I use \r\n\r\n    @SuppressWarnings(&quot;serial&quot;)\r\n\r\nsince most of the time the default `serialVersionUID` is sufficient.  This includes `Exception`, `HttpServlet`.","title":"What is a serialVersionUID and why should I use it?"},{"owner":{"reputation":2501,"user_id":3875380,"user_type":"registered","accept_rate":85,"profile_image":"https://i.stack.imgur.com/K4YDD.jpg?s=128&g=1","display_name":"Coder123","link":"https://stackoverflow.com/users/3875380/coder123"},"comment_count":0,"score":11,"creation_date":1427317691,"body_markdown":"SerialVersionUID is used for version control of object. you can specify serialVersionUID in your class file also. Consequence of not specifying serialVersionUID is that when you add or modify any field in class then already serialized class will not be able to recover because serialVersionUID generated for new class and for old serialized object will be different. Java serialization process relies on correct serialVersionUID for recovering state of serialized object and throws java.io.InvalidClassException in case of serialVersionUID mismatch\r\n\r\nRead more: http://javarevisited.blogspot.com/2011/04/top-10-java-serialization-interview.html#ixzz3VQxnpOPZ","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":9576,"user_id":1197045,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/bc014d2173a1a5ea2c0417712ced8ff0?s=128&d=identicon&r=PG","display_name":"Ignazio","link":"https://stackoverflow.com/users/1197045/ignazio"},"score":2,"creation_date":1458237945}],"owner":{"reputation":250,"user_id":3061706,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dd36c86ebf5d061d727e877e322266de?s=128&d=identicon&r=PG&f=1","display_name":"schnell18","link":"https://stackoverflow.com/users/3061706/schnell18"},"comment_count":1,"score":8,"creation_date":1435408567,"body_markdown":"If you want to amend a huge number of classes which had no serialVersionUID set in the first place while maintain the compatibility with the old classes, tools like IntelliJ Idea, Eclipse fall short as they generate random numbers and does not work on a bunch of files in one go. I come up the following bash script(I&#39;m sorry for Windows users, consider buy a Mac or convert to Linux) to make amending serialVersionUID issue with ease:\r\n\r\n&lt;!-- language: shell --&gt;\r\n\r\n    base_dir=$(pwd)                                                                  \r\n    src_dir=$base_dir/src/main/java                                                  \r\n    ic_api_cp=$base_dir/target/classes                                               \r\n                                                                                     \r\n    while read f                                                                     \r\n    do                                                                               \r\n        clazz=${f//\\//.}                                                             \r\n        clazz=${clazz/%.java/}                                                       \r\n        seruidstr=$(serialver -classpath $ic_api_cp $clazz | cut -d &#39;:&#39; -f 2 | sed -e &#39;s/^\\s\\+//&#39;)\r\n        perl -ni.bak -e &quot;print $_; printf qq{%s\\n}, q{    private $seruidstr} if /public class/&quot; $src_dir/$f\r\n    done\r\n\r\nyou save the this script, say add_serialVersionUID.sh to you ~/bin. Then you run it in the root directory of your Maven or Gradle project like:\r\n\r\n    add_serialVersionUID.sh &lt; myJavaToAmend.lst\r\n\r\nThis .lst includes the list of java files to add the serialVersionUID in the following format:\r\n\r\n    com/abc/ic/api/model/domain/item/BizOrderTransDO.java\r\n    com/abc/ic/api/model/domain/item/CardPassFeature.java\r\n    com/abc/ic/api/model/domain/item/CategoryFeature.java\r\n    com/abc/ic/api/model/domain/item/GoodsFeature.java\r\n    com/abc/ic/api/model/domain/item/ItemFeature.java\r\n    com/abc/ic/api/model/domain/item/ItemPicUrls.java\r\n    com/abc/ic/api/model/domain/item/ItemSkuDO.java\r\n    com/abc/ic/api/model/domain/serve/ServeCategoryFeature.java\r\n    com/abc/ic/api/model/domain/serve/ServeFeature.java\r\n    com/abc/ic/api/model/param/depot/DepotItemDTO.java\r\n    com/abc/ic/api/model/param/depot/DepotItemQueryDTO.java\r\n    com/abc/ic/api/model/param/depot/InDepotDTO.java\r\n    com/abc/ic/api/model/param/depot/OutDepotDTO.java\r\n\r\nThis script uses the JDK serialVer tool under hood. So make sure your $JAVA_HOME/bin is in the PATH.","title":"What is a serialVersionUID and why should I use it?"},{"owner":{"reputation":21406,"user_id":102040,"user_type":"registered","accept_rate":66,"profile_image":"https://www.gravatar.com/avatar/dbf44501979768be513fc1d001e4238e?s=128&d=identicon&r=PG","display_name":"Geek","link":"https://stackoverflow.com/users/102040/geek"},"comment_count":0,"score":6,"creation_date":1438630891,"body_markdown":"This question is very well documented in Effective Java by Joshua Bloch. A very good book and a must read. I will outline some of the reasons below :\r\n\r\nThe serialization runtime comes up with a number called Serial version for each serializable class. This number is called serialVersionUID. Now there is some Math behind this number and it comes out based on the fields/methods that are defined in the class. For the same class the same version is generated every time. This number is used during deserialization to verify that the sender and receiver of a serialized object have loaded classes for that object that are compatible with respect to serialization. If the receiver has loaded a class for the object that has a different serialVersionUID than that of the corresponding sender&#39;s class, then deserialization will result in an InvalidClassException.\r\n\r\nIf the class is serializable you can also declare your own serialVersionUID explicitly  by declaring a field named &quot;serialVersionUID&quot; that must be static, final, and of type long. Most IDE&#39;s like Eclipse help you generate that long string.","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":1,"creation_date":1511600406}],"owner":{"reputation":508,"user_id":4142806,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/c2c6c.jpg?s=128&g=1","display_name":"Naved Ali","link":"https://stackoverflow.com/users/4142806/naved-ali"},"comment_count":1,"score":6,"creation_date":1460922151,"body_markdown":"Each time an object is serialized the object is stamped with a version ID number for the object&#39;s class.This ID is called [serialVersionUID](https://stackoverflow.com/q/285793/1387612) and it is computed based on information about the class structure. Suppose you made an Employee class and it has version id #333 (assigned by JVM),Now when you will serialize the object of that class (Suppose Employee object), JVM will assign UID to it as #333.\r\n\r\nConsider a situation - in the future you need to edit or change your class and in that case when you modify it, JVM will assign it a new UID (Suppose #444).\r\nNow when you try to deserialize the employee object, JVM will compare serialized object&#39;s (Employee object) version ID(#333) with that of the class i.e #444(Since it was changed). On comparison JVM will find both version UID are different and hence Deserialization will fail.\r\nHence if serialVersionID for each class is defined by programmer itself. It will be same even if the class is evolved in future and hence JVM will always find that class is compatible with serialized object even though the class is changed. For more Info you can refer chapter 14 of HEAD FIRST JAVA.","title":"What is a serialVersionUID and why should I use it?"},{"owner":{"reputation":6153,"user_id":5167682,"user_type":"registered","accept_rate":29,"profile_image":"https://i.stack.imgur.com/2vexc.jpg?s=128&g=1","display_name":"roottraveller","link":"https://stackoverflow.com/users/5167682/roottraveller"},"comment_count":0,"score":10,"creation_date":1488865682,"body_markdown":"**Why use `SerialVersionUID` inside `Serializable` class in Java?**\r\n\r\nDuring `serialization`, Java runtime creates a version number for a class, so that it can de-serialize it later. This version number is known as `SerialVersionUID` in Java.\r\n\r\n`SerialVersionUID` is used to version serialized data. You can only de-serialize a class if it&#39;s `SerialVersionUID` matches with the serialized instance. When we don&#39;t declare `SerialVersionUID` in our class, Java runtime generates it for us but its not recommended. It&#39;s recommended to declare `SerialVersionUID` as `private static final long` variable to avoid default mechanism. \r\n\r\nWhen you declare a class as `Serializable` by implementing marker interface `java.io.Serializable`, Java runtime persist instance of that class into disk by using default Serialization mechanism, provided you have not customized the process using `Externalizable` interface.\r\n\r\nsee also [Why use SerialVersionUID inside Serializable class in Java][1]\r\n\r\n\r\n\r\n\r\n  [1]: http://javarevisited.blogspot.com/2014/05/why-use-serialversionuid-inside-serializable-class-in-java.html","title":"What is a serialVersionUID and why should I use it?"},{"comments":[{"owner":{"reputation":477,"user_id":2407369,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/3ab75cc461f20f7728c5fef1ba8e1b1f?s=128&d=identicon&r=PG","display_name":"Victor","link":"https://stackoverflow.com/users/2407369/victor"},"score":0,"creation_date":1591189410}],"owner":{"reputation":1573,"user_id":3230563,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/MnydM.jpg?s=128&g=1","display_name":"JegsVala","link":"https://stackoverflow.com/users/3230563/jegsvala"},"comment_count":1,"score":49,"creation_date":1516595260,"body_markdown":"First I need to explain what serialization is.\r\n\r\n**Serialization** allows to convert an object to a stream, for sending that object over the network OR Save to file OR save into DB for letter usage.    \r\n\r\n***There are some rules for serialization***.   \r\n\r\n - An object is serializable only if its class or its superclass implements the Serializable interface\r\n\r\n - An object is serializable (itself implements the Serializable interface) even if its superclass is not. However, the first superclass in the hierarchy of the serializable class, that does not implements Serializable interface, MUST have a no-arg constructor. If this is violated, readObject() will produce a java.io.InvalidClassException in runtime\r\n\r\n - All primitive types are serializable.\r\n\r\n - Transient fields (with transient modifier) are NOT serialized, (i.e., not saved or restored). A class that implements Serializable must mark transient fields of classes that do not support serialization (e.g., a file stream).\r\n\r\n - Static fields (with static modifier) are not serialized.\r\n\r\nWhen `Object` is serialized, Java Runtime associates the serial version number aka, the `serialVersionID`.  \r\n  \r\n***Where we need serialVersionID:***\r\n\r\nDuring the deserialization to verify that sender and receiver are compatible with respect to serialization. If the receiver loaded the class with a different `serialVersionID` then deserialization will end with `InvalidClassCastException`.    \r\n A serializable class can declare its own `serialVersionUID` explicitly by declaring a field named `serialVersionUID` that must be static, final, and of type long.\r\n\r\nLet&#39;s try this with an example.\r\n\r\n``` java\r\nimport java.io.Serializable;\r\n\r\npublic class Employee implements Serializable {\r\n    private static final long serialVersionUID = 1L;\r\n    private String empname;\r\n    private byte empage;\r\n\r\n    public String getEmpName() {\r\n        return name;\r\n    }\r\n\r\n    public void setEmpName(String empname) {\r\n        this.empname = empname;\r\n    }\r\n\r\n    public byte getEmpAge() {\r\n        return empage;\r\n    }\r\n\r\n    public void setEmpAge(byte empage) {\r\n        this.empage = empage;\r\n    }\r\n\r\n    public String whoIsThis() {\r\n        return getEmpName() + &quot; is &quot; + getEmpAge() + &quot;years old&quot;;\r\n    }\r\n}\r\n```\r\n\r\nCreate Serialize Object    \r\n    \r\n``` java\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.ObjectOutputStream;\r\n\r\npublic class Writer {\r\n    public static void main(String[] args) throws IOException {\r\n        Employee employee = new Employee();\r\n        employee.setEmpName(&quot;Jagdish&quot;);\r\n        employee.setEmpAge((byte) 30);\r\n\r\n        FileOutputStream fout = new\r\n                FileOutputStream(&quot;/users/Jagdish.vala/employee.obj&quot;);\r\n        ObjectOutputStream oos = new ObjectOutputStream(fout);\r\n        oos.writeObject(employee);\r\n        oos.close();\r\n        System.out.println(&quot;Process complete&quot;);\r\n    }\r\n}\r\n```\r\n\r\nDeserialize the object    \r\n\r\n``` java\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\n\r\npublic class Reader {\r\n    public static void main(String[] args) throws ClassNotFoundException, IOException {\r\n        Employee employee = new Employee();\r\n        FileInputStream fin = new FileInputStream(&quot;/users/Jagdish.vala/employee.obj&quot;);\r\n        ObjectInputStream ois = new ObjectInputStream(fin);\r\n        employee = (Employee) ois.readObject();\r\n        ois.close();\r\n        System.out.println(employee.whoIsThis());\r\n    }\r\n}\r\n```    \r\n\r\nNOTE: Now change the serialVersionUID of the Employee class and save:    \r\n    \r\n    private static final long serialVersionUID = 4L;\r\n    \r\nAnd execute the Reader class. Not to execute the Writer class and you will get the exception.    \r\n\r\n    Exception in thread &quot;main&quot; java.io.InvalidClassException: \r\n    com.jagdish.vala.java.serialVersion.Employee; local class incompatible: \r\n    stream classdesc serialVersionUID = 1, local class serialVersionUID = 4\r\n    at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:616)\r\n    at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1623)\r\n    at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1518)\r\n    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1774)\r\n    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)\r\n    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)\r\n    at com.krishantha.sample.java.serialVersion.Reader.main(Reader.java:14)\r\n","title":"What is a serialVersionUID and why should I use it?"},{"owner":{"reputation":909,"user_id":3862024,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/HYIdB.jpg?s=128&g=1","display_name":"gagarwa","link":"https://stackoverflow.com/users/3862024/gagarwa"},"comment_count":0,"score":3,"creation_date":1547681341,"body_markdown":"A Simple Explanation:\r\n\r\n1. Are you serializing data?\r\n\r\n  Serialization is basically writing class data to a file/stream/etc.  De-serialization is reading that data back to a class.  \r\n\r\n2. Do you intend to go into production?\r\n\r\n    If you are just testing something with unimportant/fake data, then don&#39;t worry about it (unless you are testing serialization directly).  \r\n\r\n3. Is this the first version?\r\n\r\n  If so, set `serialVersionUID=1L`.  \r\n\r\n4. Is this the second, third, etc. prod version?\r\n\r\n  Now you need to worry about `serialVersionUID`, and should look into it in depth.\r\n\r\nBasically, if you don&#39;t update the version correctly when you update a class you need to write/read, you will get an error when you try to read old data.","title":"What is a serialVersionUID and why should I use it?"},{"owner":{"reputation":206,"user_id":5580567,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-hqwHmWigIJo/AAAAAAAAAAI/AAAAAAAAANk/Nt-fGNNCYUs/photo.jpg?sz=128","display_name":"Stanislav Orlov","link":"https://stackoverflow.com/users/5580567/stanislav-orlov"},"comment_count":0,"score":1,"creation_date":1555347303,"body_markdown":"To tell the long story short this field is used to check if serialized data can be deserialized correctly. Serialization and deserialization are often made by different copies of program - for example server converts object to string and client converts received string to object. This field tells that both operates with same idea about what this object is. This field helps when:\r\n\r\n- you have many different copies of your program in different places (like 1 server and 100 clients). If you will change your object, alter your version number and forget to update one this clients, it will know that he is not capable of deserialization\r\n\r\n- you have stored your data in some file and later on you try to open it with updated version of your program with modified object - you will know that this file is not compatible if you keep your version right\r\n\r\nWhen is it important? \r\n\r\nMost obvious - if you add some fields to your object, older versions will not be able to use them because they do not have these fields in their object structure.\r\n\r\nLess obvious - When you deserialize object, fields that where not present in string will be kept as NULL. If you have removed field from your object, older versions will keep this field as allways-NULL that can lead to misbehavior if older versions rely on data in this field (anyway you have created it for something, not just for fun :-) ) \r\n\r\nLeast obvious - Sometimes you change the idea you put in some field&#39;s meaning. For example when you are 12 years old you mean &quot;bicycle&quot; under &quot;bike&quot;, but when you are 18 you mean &quot;motorcycle&quot; - if your friends will invite you to &quot;bike ride across city&quot; and you will be the only one who came on bicycle, you will undestand how important it is to keep same meaning across fields :-)","title":"What is a serialVersionUID and why should I use it?"},{"owner":{"reputation":79,"user_id":11004892,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-ZOKO10uy_js/AAAAAAAAAAI/AAAAAAAAASE/hHX9gnEy5-E/photo.jpg?sz=128","display_name":"Shanks D Shiva","link":"https://stackoverflow.com/users/11004892/shanks-d-shiva"},"comment_count":0,"score":1,"creation_date":1556514382,"body_markdown":"Firstly to answer your question, when we don&#39;t declare SerialVersionUID in our class, Java runtime generates it for us, but that process is sensitive to many class meta data including number of fields, type of fields, access modifier of fields, interface implemented by class etc. Therefore it is recommended to declare it ourselves and Eclipse is warning you about the same.\r\n\r\nSerialization:\r\nWe often work with important objects whose state (data in the variables of the object) is so important that we can not risk to lose it due to power/system failures (or) network failures in case of sending the object state to other machine. The solution for this problem is named &quot;Persistence&quot; which simply means persisting (holding/saving) the data. Serialization is one of many other ways to achieve persistence (by saving data to disk/memory). When saving the state of the object, it is important to create an identity for the object, to be able to properly read it back (de-serialization). This unique identification is ID is SerialVersionUID. ","title":"What is a serialVersionUID and why should I use it?"},{"owner":{"reputation":1221,"user_id":2468375,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7bb422a9f7bbfaec418e2402e07ba523?s=128&d=identicon&r=PG","display_name":"forkdbloke","link":"https://stackoverflow.com/users/2468375/forkdbloke"},"comment_count":0,"score":0,"creation_date":1573833965,"body_markdown":"What is SerialVersionUID?\r\nAnswer : - Lets say there are two persons, one from HQ and another from ODC, both are going to perform serialization and deserialization respectively. In this case to authenticate that the receiver who is in ODC is the authenticated person, JVM creates a Unique ID which is known as SerialVersionUID.\r\n\r\nHere is a nice explanation based on the scenario,\r\n\r\nWhy SerialVersionUID?\r\n\r\n**Serialization** : At the time of serialization, with every object sender side JVM will save a Unique Identifier. JVM is responsible to generate that unique ID based on the corresponding .class file which is present in the sender system.\r\n\r\n**Deserialization**: At the time of deserialization, receiver side JVM will compare the unique ID associated with the Object with local class Unique ID i.e. JVM will also create a Unique ID based on the corresponding .class file which is present in the receiver system. If both unique ID matched then only deserialization will be performed. Otherwise we will get Runtime Exception saying InvalidClassException. This unique Identifier is nothing but SerialVersionUID","title":"What is a serialVersionUID and why should I use it?"},{"owner":{"reputation":2507,"user_id":3302424,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/70d64f2369ad3cfd0d9271792bdccf3c?s=128&d=identicon&r=PG&f=1","display_name":"Hari Krishna","link":"https://stackoverflow.com/users/3302424/hari-krishna"},"comment_count":0,"score":3,"creation_date":1579533299,"body_markdown":"&#39;serialVersionUID&#39; is a 64 bit number used to uniquely identify a class during deserialization process. When you serialize an object, serialVersionUID of the class also written to the file. Whenever you deserialize this object, java run time extract this serialVersionUID value from the serialized data and compare the same value associate with the class. If both do not match, then &#39;java.io.InvalidClassException&#39; will be thrown.\r\n\r\nIf a serializable class do not explicitly declare a serialVersionUID, then serialization runtime will calculate  serialVersionUID value for that class based on various aspects of the class like fields, methods etc.,, You can refer this [link][1] for demo application.\r\n\r\n\r\n  [1]: https://self-learning-java-tutorial.blogspot.com/2014/09/serialversionuid.html","title":"What is a serialVersionUID and why should I use it?"}],"owner":{"reputation":73738,"user_id":33203,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/07856b52198509b8bd0d2e5418d0bf37?s=128&d=identicon&r=PG","display_name":"ashokgelal","link":"https://stackoverflow.com/users/33203/ashokgelal"},"comment_count":1,"is_answered":true,"answer_count":26,"score":3127,"creation_date":1226532296,"question_id":285793,"body_markdown":"Eclipse issues warnings when a `serialVersionUID` is missing.  \r\n\r\n&gt; The serializable class Foo does not declare a static final\r\n&gt; serialVersionUID field of type long\r\n\r\n\r\nWhat is `serialVersionUID` and why is it important?  Please show an example where missing `serialVersionUID` will cause a problem.","link":"https://stackoverflow.com/questions/285793/what-is-a-serialversionuid-and-why-should-i-use-it","title":"What is a serialVersionUID and why should I use it?"},{"tags":["java","collections","arraylist","initialization"],"comments":[{"owner":{"reputation":199057,"user_id":11236,"user_type":"registered","accept_rate":76,"profile_image":"https://www.gravatar.com/avatar/40656706454dcbdbcec125b85b01f1e4?s=128&d=identicon&r=PG","display_name":"ripper234","link":"https://stackoverflow.com/users/11236/ripper234"},"score":35,"creation_date":1293831659},{"owner":{"reputation":2372,"user_id":466884,"user_type":"registered","accept_rate":62,"profile_image":"https://i.stack.imgur.com/b0QUm.png?s=128&g=1","display_name":"Rose","link":"https://stackoverflow.com/users/466884/rose"},"score":5,"creation_date":1436303550},{"owner":{"reputation":23806,"user_id":233014,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XyJIf.jpg?s=128&g=1","display_name":"Christoffer Hammarstr&#246;m","link":"https://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m"},"score":2,"creation_date":1444302335},{"owner":{"reputation":1274,"user_id":4328100,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/08fe181f0f9c414733724680ef792139?s=128&d=identicon&r=PG&f=1","display_name":"Mohammadreza Khatami","link":"https://stackoverflow.com/users/4328100/mohammadreza-khatami"},"score":2,"creation_date":1461684986},{"owner":{"reputation":5760,"user_id":4501354,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/1230cfcc7f68488ad19d0022cf7b1a93?s=128&d=identicon&r=PG&f=1","display_name":"Donato","link":"https://stackoverflow.com/users/4501354/donato"},"score":0,"creation_date":1502324349},{"owner":{"reputation":2470,"user_id":4949653,"user_type":"registered","profile_image":"https://i.stack.imgur.com/AV8al.jpg?s=128&g=1","display_name":"torina","link":"https://stackoverflow.com/users/4949653/torina"},"score":9,"creation_date":1507916234},{"owner":{"reputation":454,"user_id":1231935,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a30736ad0cf7bfce43f40c58b6364892?s=128&d=identicon&r=PG","display_name":"Paul Smith","link":"https://stackoverflow.com/users/1231935/paul-smith"},"score":0,"creation_date":1556700842},{"owner":{"reputation":960,"user_id":6380992,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/iTzJ5.jpg?s=128&g=1","display_name":"Seshadri R","link":"https://stackoverflow.com/users/6380992/seshadri-r"},"score":0,"creation_date":1589971948}],"answers":[{"comments":[{"owner":{"reputation":50869,"user_id":57752,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/3d184a8ef609eaabcaabd0dd19196a74?s=128&d=identicon&r=PG","display_name":"Eddie","link":"https://stackoverflow.com/users/57752/eddie"},"score":178,"creation_date":1245212472},{"owner":{"reputation":150576,"user_id":17172,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1de7574c70db36492ea962c22e2252a8?s=128&d=identicon&r=PG","display_name":"coobird","link":"https://stackoverflow.com/users/17172/coobird"},"score":7,"creation_date":1245212583},{"owner":{"reputation":724,"user_id":1417653,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/3fa02c341aed737820b2780729caf77d?s=128&d=identicon&r=PG","display_name":"Richard B","link":"https://stackoverflow.com/users/1417653/richard-b"},"score":2,"creation_date":1418643725},{"owner":{"reputation":4901,"user_id":635549,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/f1014fca35accf96cf9a5d3f30c1623d?s=128&d=identicon&r=PG","display_name":"galath","link":"https://stackoverflow.com/users/635549/galath"},"score":2,"creation_date":1441279161},{"owner":{"reputation":775,"user_id":761231,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/f857273f6c859da68c1538d40d32b3b3?s=128&d=identicon&r=PG","display_name":"Asaf","link":"https://stackoverflow.com/users/761231/asaf"},"score":9,"creation_date":1513657931},{"owner":{"reputation":447,"user_id":4037411,"user_type":"registered","accept_rate":50,"profile_image":"https://lh6.googleusercontent.com/-hZizbpJJvHw/AAAAAAAAAAI/AAAAAAAAAHE/5QQc1799fSM/photo.jpg?sz=128","display_name":"Bagus Aji Santoso","link":"https://stackoverflow.com/users/4037411/bagus-aji-santoso"},"score":0,"creation_date":1590478168},{"owner":{"reputation":101,"user_id":8387760,"user_type":"registered","profile_image":"https://i.stack.imgur.com/5xVHu.png?s=128&g=1","display_name":"Void","link":"https://stackoverflow.com/users/8387760/void"},"score":0,"creation_date":1605499013}],"owner":{"reputation":150576,"user_id":17172,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1de7574c70db36492ea962c22e2252a8?s=128&d=identicon&r=PG","display_name":"coobird","link":"https://stackoverflow.com/users/17172/coobird"},"comment_count":7,"score":2121,"creation_date":1245212016,"body_markdown":"Actually, probably the &quot;best&quot; way to initialize the `ArrayList` is the method you wrote, as it does not need to create a new `List` in any way:\r\n\r\n    ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();\r\n    list.add(&quot;A&quot;);\r\n    list.add(&quot;B&quot;);\r\n    list.add(&quot;C&quot;);\r\n\r\nThe catch is that there is quite a bit of typing required to refer to that `list` instance.\r\n\r\nThere are alternatives, such as making an anonymous inner class with an instance initializer (also known as an &quot;double brace initialization&quot;):\r\n\r\n    ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;() {{\r\n        add(&quot;A&quot;);\r\n        add(&quot;B&quot;);\r\n        add(&quot;C&quot;);\r\n    }};\r\n\r\nHowever, I&#39;m not too fond of that method because what you end up with is a subclass of `ArrayList` which has an instance initializer, and that class is created just to create one object -- that just seems like a little bit overkill to me.\r\n\r\nWhat would have been nice was if the [Collection Literals proposal][1] for [Project Coin][2] was accepted (it was slated to be introduced in Java 7, but it&#39;s not likely to be part of Java 8 either.):\r\n\r\n    List&lt;String&gt; list = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;];\r\n\r\nUnfortunately it won&#39;t help you here, as it will initialize an immutable `List` rather than an `ArrayList`, and furthermore, it&#39;s not available yet, if it ever will be.\r\n\r\n  [1]: http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html\r\n  [2]: http://openjdk.java.net/projects/coin","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":86325,"user_id":119895,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/dEYOs.jpg?s=128&g=1","display_name":"Macarse","link":"https://stackoverflow.com/users/119895/macarse"},"score":2,"creation_date":1245212555},{"owner":{"reputation":58646,"user_id":8946,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/8c6e2d5c384c074a893830b34f1c0a9a?s=128&d=identicon&r=PG","display_name":"Lawrence Dol","link":"https://stackoverflow.com/users/8946/lawrence-dol"},"score":20,"creation_date":1245215084},{"owner":{"reputation":86325,"user_id":119895,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/dEYOs.jpg?s=128&g=1","display_name":"Macarse","link":"https://stackoverflow.com/users/119895/macarse"},"score":1,"creation_date":1245219556},{"owner":{"reputation":23806,"user_id":233014,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XyJIf.jpg?s=128&g=1","display_name":"Christoffer Hammarstr&#246;m","link":"https://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m"},"score":76,"creation_date":1284035835},{"owner":{"reputation":5474,"user_id":491790,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/9c4b745ad5d4e802fe513efddb6fc780?s=128&d=identicon&r=PG&f=1","display_name":"maks","link":"https://stackoverflow.com/users/491790/maks"},"score":10,"creation_date":1316954906},{"owner":{"reputation":23806,"user_id":233014,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XyJIf.jpg?s=128&g=1","display_name":"Christoffer Hammarstr&#246;m","link":"https://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m"},"score":2,"creation_date":1316994333},{"owner":{"reputation":1260,"user_id":714249,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5d7d56398e3e55f20b3b5afdb30d3e9f?s=128&d=identicon&r=PG","display_name":"Splash","link":"https://stackoverflow.com/users/714249/splash"},"score":58,"creation_date":1334191804},{"owner":{"reputation":23806,"user_id":233014,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XyJIf.jpg?s=128&g=1","display_name":"Christoffer Hammarstr&#246;m","link":"https://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m"},"score":6,"creation_date":1344690185},{"owner":{"reputation":13380,"user_id":3973,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/cbd511f0cd39f36c6f2a9bc17fb0f2da?s=128&d=identicon&r=PG","display_name":"Binil Thomas","link":"https://stackoverflow.com/users/3973/binil-thomas"},"score":2,"creation_date":1397854992},{"owner":{"reputation":2418,"user_id":1129420,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5c8de776018d6eaae68740f2cfe24c90?s=128&d=identicon&r=PG","display_name":"iono","link":"https://stackoverflow.com/users/1129420/iono"},"score":1,"creation_date":1570724761},{"owner":{"reputation":1715,"user_id":3182598,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/13c1b35032fa363408d0b544127f65c8?s=128&d=identicon&r=PG&f=1","display_name":"nomadSK25","link":"https://stackoverflow.com/users/3182598/nomadsk25"},"score":0,"creation_date":1577635013}],"owner":{"reputation":38791,"user_id":8969,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/15JSR.jpg?s=128&g=1","display_name":"Tom","link":"https://stackoverflow.com/users/8969/tom"},"comment_count":11,"score":2264,"creation_date":1245212106,"body_markdown":"It would be simpler if you were to just declare it as a `List` - does it have to be an ArrayList?\r\n\r\n    List&lt;String&gt; places = Arrays.asList(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\nOr if you have only one element:\r\n\r\n    List&lt;String&gt; places = Collections.singletonList(&quot;Buenos Aires&quot;);\r\n\r\nThis would mean that `places` is **immutable** (trying to change it will cause an `UnsupportedOperationException` exception to be thrown).\r\n\r\nTo make a mutable list that is a concrete `ArrayList` you can create an `ArrayList` from the immutable list:\r\n\r\n    ArrayList&lt;String&gt; places = new ArrayList&lt;&gt;(Arrays.asList(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;));","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":3454,"user_id":369824,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/d800ae5b8e065e908bd52bd018a264db?s=128&d=identicon&r=PG","display_name":"L. Holanda","link":"https://stackoverflow.com/users/369824/l-holanda"},"score":2,"creation_date":1345065858},{"owner":{"reputation":50802,"user_id":31158,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/e10c6b474db05fa2b2afd5fd0ea27b50?s=128&d=identicon&r=PG","display_name":"Jord&#227;o","link":"https://stackoverflow.com/users/31158/jord%c3%a3o"},"score":7,"creation_date":1345070366}],"owner":{"reputation":50802,"user_id":31158,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/e10c6b474db05fa2b2afd5fd0ea27b50?s=128&d=identicon&r=PG","display_name":"Jord&#227;o","link":"https://stackoverflow.com/users/31158/jord%c3%a3o"},"comment_count":2,"score":24,"creation_date":1272934674,"body_markdown":"You could create a factory method:\r\n\r\n    public static ArrayList&lt;String&gt; createArrayList(String ... elements) {\r\n      ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();\r\n      for (String element : elements) {\r\n        list.add(element);\r\n      }\r\n      return list;\r\n    }\r\n\r\n    ....\r\n\r\n    ArrayList&lt;String&gt; places = createArrayList(\r\n      &quot;S&#227;o Paulo&quot;, &quot;Rio de Janeiro&quot;, &quot;Bras&#237;lia&quot;);\r\n\r\nBut it&#39;s not much better than your first refactoring.\r\n\r\nFor greater flexibility, it can be generic:\r\n\r\n    public static &lt;T&gt; ArrayList&lt;T&gt; createArrayList(T ... elements) {\r\n      ArrayList&lt;T&gt; list = new ArrayList&lt;T&gt;();\r\n      for (T element : elements) {\r\n        list.add(element);\r\n      }\r\n      return list;\r\n    }\r\n","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":86325,"user_id":119895,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/dEYOs.jpg?s=128&g=1","display_name":"Macarse","link":"https://stackoverflow.com/users/119895/macarse"},"score":5,"creation_date":1273673807},{"owner":{"reputation":23806,"user_id":233014,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XyJIf.jpg?s=128&g=1","display_name":"Christoffer Hammarstr&#246;m","link":"https://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m"},"score":6,"creation_date":1284716864},{"owner":{"reputation":9025,"user_id":18296,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f9d8c89371a7c17aa70edec1e08c1d0b?s=128&d=identicon&r=PG","display_name":"David Pierre","link":"https://stackoverflow.com/users/18296/david-pierre"},"score":9,"creation_date":1288791728},{"owner":{"reputation":3454,"user_id":369824,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/d800ae5b8e065e908bd52bd018a264db?s=128&d=identicon&r=PG","display_name":"L. Holanda","link":"https://stackoverflow.com/users/369824/l-holanda"},"score":2,"creation_date":1345066814},{"owner":{"reputation":23806,"user_id":233014,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XyJIf.jpg?s=128&g=1","display_name":"Christoffer Hammarstr&#246;m","link":"https://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m"},"score":3,"creation_date":1405516870},{"owner":{"reputation":422,"user_id":5083456,"user_type":"registered","accept_rate":62,"profile_image":"https://lh5.googleusercontent.com/-3aCVskJgx7Y/AAAAAAAAAAI/AAAAAAAACkE/ujlUOTqCCwo/photo.jpg?sz=128","display_name":"IMustBeSomeone","link":"https://stackoverflow.com/users/5083456/imustbesomeone"},"score":1,"creation_date":1465150893}],"owner":{"reputation":3313,"user_id":64679,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/2e2c6a13c0667002af849d1749e6ab56?s=128&d=identicon&r=PG","display_name":"George","link":"https://stackoverflow.com/users/64679/george"},"comment_count":6,"score":32,"creation_date":1273670056,"body_markdown":"    import com.google.common.collect.ImmutableList;\r\n\r\n    ....\r\n\r\n    List&lt;String&gt; places = ImmutableList.of(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":569,"user_id":1020678,"user_type":"registered","accept_rate":21,"profile_image":"https://www.gravatar.com/avatar/bad0ec98cf101fec618cb2ef862c9485?s=128&d=identicon&r=PG&f=1","display_name":"jollyroger","link":"https://stackoverflow.com/users/1020678/jollyroger"},"score":1,"creation_date":1359594827},{"owner":{"reputation":23806,"user_id":233014,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XyJIf.jpg?s=128&g=1","display_name":"Christoffer Hammarstr&#246;m","link":"https://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m"},"score":3,"creation_date":1359635303},{"owner":{"reputation":569,"user_id":1020678,"user_type":"registered","accept_rate":21,"profile_image":"https://www.gravatar.com/avatar/bad0ec98cf101fec618cb2ef862c9485?s=128&d=identicon&r=PG&f=1","display_name":"jollyroger","link":"https://stackoverflow.com/users/1020678/jollyroger"},"score":2,"creation_date":1359725247},{"owner":{"reputation":23806,"user_id":233014,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XyJIf.jpg?s=128&g=1","display_name":"Christoffer Hammarstr&#246;m","link":"https://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m"},"score":2,"creation_date":1359730493},{"owner":{"reputation":1440,"user_id":1048722,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2682ca1f3af1b4695d0f6bb89defa038?s=128&d=identicon&r=PG","display_name":"Geert Weening","link":"https://stackoverflow.com/users/1048722/geert-weening"},"score":2,"creation_date":1362009032},{"owner":{"reputation":5665,"user_id":1493294,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/hyY7Y.png?s=128&g=1","display_name":"candied_orange","link":"https://stackoverflow.com/users/1493294/candied-orange"},"score":2,"creation_date":1410498719},{"owner":{"reputation":23806,"user_id":233014,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XyJIf.jpg?s=128&g=1","display_name":"Christoffer Hammarstr&#246;m","link":"https://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m"},"score":2,"creation_date":1558894347}],"owner":{"reputation":23806,"user_id":233014,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XyJIf.jpg?s=128&g=1","display_name":"Christoffer Hammarstr&#246;m","link":"https://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m"},"comment_count":7,"score":933,"creation_date":1284035595,"body_markdown":"# The simple answer\nIn **Java 9** or later, after `List.of()` was added:\n\n    List&lt;String&gt; strings = List.of(&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;);\n\nWith **Java 10** or later, this can be shortened with the `var` keyword.\n\n    var strings = List.of(&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;);\n\nThis will give you an *immutable* `List`, so it cannot be changed.  \nWhich is what you want in most cases where you&#39;re prepopulating it.\n\n---\n# Java 8 or earlier:\n\n    List&lt;String&gt; strings = Arrays.asList(&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;);\n\nThis will give you a `List` backed by an array, so it cannot change length.  \nBut you can call `List.set`, so it&#39;s still *mutable*.\n\n----\n\nYou can make `Arrays.asList` even shorter with a static import:\n\n    List&lt;String&gt; strings = asList(&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;);\n\nThe static import:\n\n    import static java.util.Arrays.asList;  \n\nWhich any modern IDE will suggest and automatically do for you.  \nFor example in IntelliJ IDEA you press `Alt+Enter` and select `Static import method...`.\n\n----\n\nHowever, i don&#39;t recommend shortening the `List.of` method to `of`, because that becomes confusing.  \n`List.of` is already short enough and reads well.\n\n----\n\nUsing `Stream`s\n========================\nWhy does it have to be a `List`?  \nWith Java 8 or later you can use a `Stream` which is more flexible:\n\n    Stream&lt;String&gt; strings = Stream.of(&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;);\n\nYou can concatenate `Stream`s:\n\n    Stream&lt;String&gt; strings = Stream.concat(Stream.of(&quot;foo&quot;, &quot;bar&quot;),\n                                           Stream.of(&quot;baz&quot;, &quot;qux&quot;));\n\nOr you can go from a `Stream` to a `List`:\n\n    import static java.util.stream.Collectors.toList;\n\n    List&lt;String&gt; strings = Stream.of(&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;).collect(toList());\n\nBut preferably, just use the `Stream` without collecting it to a `List`.\n\n---\n\nIf you *really* specifically need a `java.util.ArrayList`\n===================================\n\n(You probably don&#39;t.)  \nTo quote [JEP 269][2] (emphasis mine):\n\n&gt; There is a **small set** of use cases for initializing a mutable collection instance with a predefined set of values. It&#39;s usually preferable to have those predefined values be in an immutable collection, and then to initialize the mutable collection via a copy constructor.\n\n---\n\nIf you want to *both* prepopulate an `ArrayList` *and* add to it afterwards (why?), use\n\n    ArrayList&lt;String&gt; strings = new ArrayList&lt;&gt;(List.of(&quot;foo&quot;, &quot;bar&quot;));\n    strings.add(&quot;baz&quot;);\n\nor in Java 8 or earlier:\n\n    ArrayList&lt;String&gt; strings = new ArrayList&lt;&gt;(asList(&quot;foo&quot;, &quot;bar&quot;));\n    strings.add(&quot;baz&quot;);\n   \nor using `Stream`:\n\n    import static java.util.stream.Collectors.toCollection;\n\n    ArrayList&lt;String&gt; strings = Stream.of(&quot;foo&quot;, &quot;bar&quot;)\n                                 .collect(toCollection(ArrayList::new));\n    strings.add(&quot;baz&quot;);\n\nBut again, it&#39;s better to just use the `Stream` directly instead of collecting it to a `List`.\n\n---\n\nProgram to interfaces, not to implementations\n=============================================\nYou said you&#39;ve declared the list as an `ArrayList` in your code, but you should only do that if you&#39;re using some member of `ArrayList` that&#39;s not in `List`.\n\nWhich you are most likely not doing.\n\nUsually you should just declare variables by the most general interface that you are going to use (e.g. `Iterable`, `Collection`, or `List`), and initialize them with the specific implementation (e.g. `ArrayList`, `LinkedList` or `Arrays.asList()`).\n\nOtherwise you&#39;re limiting your code to that specific type, and it&#39;ll be harder to change when you want to.\n\nFor example, if you&#39;re passing an `ArrayList` to a `void method(...)`:\n\n    // Iterable if you just need iteration, for (String s : strings):\n    void method(Iterable&lt;String&gt; strings) { \n        for (String s : strings) { ... } \n    }\n\n    // Collection if you also need .size(), .isEmpty(), or .stream():\n    void method(Collection&lt;String&gt; strings) {\n        if (!strings.isEmpty()) { strings.stream()... }\n    }\n\n    // List if you also need .get(index):\n    void method(List&lt;String&gt; strings) {\n        strings.get(...)\n    }\n\n    // Don&#39;t declare a specific list implementation\n    // unless you&#39;re sure you need it:\n    void method(ArrayList&lt;String&gt; strings) {\n        ??? // You don&#39;t want to limit yourself to just ArrayList\n    }\n\n---\n\nAnother example would be always declaring variable an `InputStream` even though it is usually a `FileInputStream` or a `BufferedInputStream`, because one day soon you or somebody else will want to use some other kind of `InputStream`.\n\n\n  [1]: http://download.java.net/java/jdk9/docs/api/java/util/List.html#of-E...-\n  [2]: http://openjdk.java.net/jeps/269","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":2815,"user_id":9518,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/ddbadbdb89a8375f01c6b898fcd365a3?s=128&d=identicon&r=PG","display_name":"Randyaa","link":"https://stackoverflow.com/users/9518/randyaa"},"comment_count":0,"score":113,"creation_date":1314678785,"body_markdown":"If you need a simple list of size 1:\r\n\r\n    List&lt;String&gt; strings = new ArrayList&lt;String&gt;(Collections.singletonList(&quot;A&quot;));\r\n\r\nIf you need a list of several objects:\r\n\r\n    List&lt;String&gt; strings = new ArrayList&lt;String&gt;();\r\n    Collections.addAll(strings,&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;);\r\n","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":359614,"user_id":256196,"user_type":"moderator","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/d84b558fd67be10d5a718fb94231909d?s=128&d=identicon&r=PG","display_name":"Bohemian","link":"https://stackoverflow.com/users/256196/bohemian"},"score":5,"creation_date":1344516816}],"owner":{"reputation":61,"user_id":1207828,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/d8bd5afef54e22dcb96bce121028c8f5?s=128&d=identicon&r=PG","display_name":"Dawg","link":"https://stackoverflow.com/users/1207828/dawg"},"comment_count":1,"score":2,"creation_date":1329169654,"body_markdown":"In Java, you can&#39;t do\r\n\r\n    ArrayList&lt;String&gt; places = new ArrayList&lt;String&gt;( Arrays.asList(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;));\r\n\r\nAs was pointed out, you&#39;d need to do a double brace initialization:\r\n\r\n    List&lt;String&gt; places = new ArrayList&lt;String&gt;() {{ add(&quot;x&quot;); add(&quot;y&quot;); }};\r\n\r\nBut this may force you into adding an annotation `@SuppressWarnings(&quot;serial&quot;)` or generate a serial UUID which is annoying. Also most code formatters will unwrap that into multiple statements/lines.\r\n\r\nAlternatively you can do\r\n\r\n    List&lt;String&gt; places = Arrays.asList(new String[] {&quot;x&quot;, &quot;y&quot; });\r\n\r\nbut then you may want to do a `@SuppressWarnings(&quot;unchecked&quot;)`.\r\n\r\nAlso according to javadoc you should be able to do this:\r\n\r\n    List&lt;String&gt; stooges = Arrays.asList(&quot;Larry&quot;, &quot;Moe&quot;, &quot;Curly&quot;);\r\n\r\nBut I&#39;m not able to get it to compile with JDK 1.6.\r\n \r\n","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":51155,"user_id":697449,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/0d825a4fb8f4417045815f4c921aa0cc?s=128&d=identicon&r=PG","display_name":"Paul Bellora","link":"https://stackoverflow.com/users/697449/paul-bellora"},"score":2,"creation_date":1358118637}],"owner":{"reputation":794,"user_id":1357822,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/a495e0bf11b45242ed52a4d34ee19f68?s=128&d=identicon&r=PG","display_name":"abaelter","link":"https://stackoverflow.com/users/1357822/abaelter"},"comment_count":1,"score":-4,"creation_date":1343740978,"body_markdown":"    public static &lt;T&gt; List&lt;T&gt; asList(T... a) {\r\n\t    return new ArrayList&lt;T&gt;(a);\r\n    }\r\n\r\nThis is the implementation of `Arrays.asList`, so you could go with\r\n\r\n    ArrayList&lt;String&gt; arr = (ArrayList&lt;String&gt;) Arrays.asList(&quot;1&quot;, &quot;2&quot;);","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":433498,"user_id":922184,"user_type":"registered","profile_image":"https://i.stack.imgur.com/h7WDB.jpg?s=128&g=1","display_name":"Mysticial","link":"https://stackoverflow.com/users/922184/mysticial"},"score":3,"creation_date":1370180240},{"owner":{"reputation":8727,"user_id":1549135,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/734f78bfa617357edce993d5cbcb95f9?s=128&d=identicon&r=PG","display_name":"Atais","link":"https://stackoverflow.com/users/1549135/atais"},"score":0,"creation_date":1443004547}],"owner":{"reputation":25,"user_id":2445174,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/ba6078344a3f2a310e97511186cdb6f3?s=128&d=identicon&r=PG","display_name":"Adrian","link":"https://stackoverflow.com/users/2445174/adrian"},"comment_count":2,"score":-1,"creation_date":1370180057,"body_markdown":"Actually, it&#39;s possible to do it in one line:\r\n\r\n    Arrays.asList(new MyClass[] {new MyClass(&quot;arg1&quot;), new MyClass(&quot;arg2&quot;)})\r\n","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":1470,"user_id":439407,"user_type":"registered","accept_rate":37,"profile_image":"https://www.gravatar.com/avatar/37c9eaf4a128967d340dbe87aff81d50?s=128&d=identicon&r=PG","display_name":"user439407","link":"https://stackoverflow.com/users/439407/user439407"},"comment_count":0,"score":7,"creation_date":1370497466,"body_markdown":"(Should be a comment, but too long, so new reply).  As others have mentioned, the `Arrays.asList` method is fixed size, but that&#39;s not the only issue with it.  It also doesn&#39;t handle inheritance very well.  For instance, suppose you have the following:\r\n\r\n    class A{}\r\n    class B extends A{}\r\n    \r\n    public List&lt;A&gt; getAList(){\r\n        return Arrays.asList(new B());\r\n    }\r\n\r\nThe above results in a compiler error, because `List&lt;B&gt;`(which is what is returned by Arrays.asList) is not a subclass of `List&lt;A&gt;`, even though you can add Objects of type B to a `List&lt;A&gt;` object.  To get around this, you need to do something like:\r\n\r\n    new ArrayList&lt;A&gt;(Arrays.&lt;A&gt;asList(b1, b2, b3))\r\n\r\nThis is probably the best way to go about doing this, esp. if you need an unbounded list or need to use inheritance.\r\n\r\n","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":7777,"user_id":1031312,"user_type":"registered","accept_rate":96,"profile_image":"https://i.stack.imgur.com/q2qhc.jpg?s=128&g=1","display_name":"Ozzy","link":"https://stackoverflow.com/users/1031312/ozzy"},"comment_count":0,"score":5,"creation_date":1371491844,"body_markdown":"Like [Tom said][1]:\r\n\r\n    List&lt;String&gt; places = Arrays.asList(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\nBut since you complained of wanting an ArrayList, you should firstly know that ArrayList is a subclass of List and you could simply add this line:\r\n\r\n    ArrayList&lt;String&gt; myPlaces = new ArrayList(places);\r\n\r\nAlthough, that might make you complain of &#39;performance&#39;.\r\n\r\nIn that case it doesn&#39;t make sense to me, why, since your list is predefined it wasn&#39;t defined as an array (since the size is known at time of initialisation). And if that&#39;s an option for you:\r\n\r\n    String[] places = {&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;};\r\n\r\nIn case you don&#39;t care of the minor performance differences then you can also copy an array to an ArrayList very simply:\r\n\r\n    ArrayList&lt;String&gt; myPlaces = new ArrayList(Arrays.asList(places));\r\n\r\nOkay, but in future you need a bit more than just the place name, you need a country code too. Assuming this is still a predefined list which will never change during run-time, then it&#39;s fitting to use an `enum` set, which would require re-compilation if the list needed to be changed in the future.\r\n\r\n    enum Places {BUENOS_AIRES, CORDOBA, LA_PLATA}\r\n\r\nwould become:\r\n\r\n    enum Places {\r\n        BUENOS_AIRES(&quot;Buenos Aires&quot;,123),\r\n        CORDOBA(&quot;C&#243;rdoba&quot;,456),\r\n        LA_PLATA(&quot;La Plata&quot;,789);\r\n    \r\n        String name;\r\n        int code;\r\n        Places(String name, int code) {\r\n          this.name=name;\r\n          this.code=code;\r\n        }\r\n    }\r\n\r\nEnum&#39;s have a static `values` method that returns an array containing all of the values of the enum in the order they are declared, e.g.:\r\n\r\n    for (Places p:Places.values()) {\r\n        System.out.printf(&quot;The place %s has code %d%n&quot;,\r\n                      p.name, p.code);\r\n    }\r\n\r\nIn that case I guess you wouldn&#39;t need your ArrayList.\r\n\r\nP.S. [Randyaa demonstrated][2] another nice way using the static utility method [Collections.addAll][3].\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/1005089/1031312\r\n  [2]: https://stackoverflow.com/a/7238739/1031312\r\n  [3]: http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Collections.html","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":1432,"user_id":2592424,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/zaexb.jpg?s=128&g=1","display_name":"beckah","link":"https://stackoverflow.com/users/2592424/beckah"},"score":1,"creation_date":1435348784},{"owner":{"reputation":2735,"user_id":1268294,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/qymw2.jpg?s=128&g=1","display_name":"Paweł Adamski","link":"https://stackoverflow.com/users/1268294/pawe%c5%82-adamski"},"score":2,"creation_date":1436852042},{"owner":{"reputation":42512,"user_id":1553851,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/ad333c218c8f2fb917cf506919fc95f4?s=128&d=identicon&r=PG","display_name":"shmosel","link":"https://stackoverflow.com/users/1553851/shmosel"},"score":1,"creation_date":1513047840}],"owner":{"reputation":2735,"user_id":1268294,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/qymw2.jpg?s=128&g=1","display_name":"Paweł Adamski","link":"https://stackoverflow.com/users/1268294/pawe%c5%82-adamski"},"comment_count":3,"score":58,"creation_date":1375104284,"body_markdown":"With [Guava][1] you can write:\r\n\r\n    ArrayList&lt;String&gt; places = Lists.newArrayList(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\nIn Guava there are also other useful static constructors. You can read about them [here][2].\r\n\r\n  [1]: https://en.wikipedia.org/wiki/Google_Guava\r\n  [2]: https://github.com/google/guava/wiki/CollectionUtilitiesExplained\r\n","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":2470,"user_id":2254382,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/38b5fff7f4b2cddee56d3f0120339f84?s=128&d=identicon&r=PG","display_name":"melwil","link":"https://stackoverflow.com/users/2254382/melwil"},"score":2,"creation_date":1407634254},{"owner":{"reputation":1512,"user_id":760393,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/24e27e5c8b053d6600b9fca6f86c78ec?s=128&d=identicon&r=PG","display_name":"Ra&#250;l","link":"https://stackoverflow.com/users/760393/ra%c3%bal"},"score":2,"creation_date":1479217094}],"owner":{"reputation":99,"user_id":2801794,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c127a96bd7ef670da1afe867cb1e908d?s=128&d=identicon&r=PG&f=1","display_name":"user2801794","link":"https://stackoverflow.com/users/2801794/user2801794"},"comment_count":2,"score":8,"creation_date":1379756587,"body_markdown":"Simply use below code as follows.\r\n\r\n    List&lt;String&gt; list = new ArrayList&lt;String&gt;() {{\r\n    \t\t\tadd(&quot;A&quot;);\r\n    \t\t\tadd(&quot;B&quot;);\r\n    \t\t\tadd(&quot;C&quot;);\r\n    }};","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":1907,"user_id":3486249,"user_type":"registered","profile_image":"https://i.stack.imgur.com/AjIuQ.jpg?s=128&g=1","display_name":"Mark","link":"https://stackoverflow.com/users/3486249/mark"},"comment_count":0,"score":34,"creation_date":1396567308,"body_markdown":"Collection literals didn&#39;t make it into Java 8, but it is possible to use the Stream API to initialize a list in one rather long line:\r\n\r\n    List&lt;String&gt; places = Stream.of(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;).collect(Collectors.toList());\r\n\r\nIf you need to ensure that your `List` is an `ArrayList`:\r\n\r\n    ArrayList&lt;String&gt; places = Stream.of(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;).collect(Collectors.toCollection(ArrayList::new));","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":3043,"user_id":2447599,"user_type":"registered","profile_image":"https://i.stack.imgur.com/xXP4z.jpg?s=128&g=1","display_name":"Ran Adler","link":"https://stackoverflow.com/users/2447599/ran-adler"},"comment_count":0,"score":4,"creation_date":1403424751,"body_markdown":"    List&lt;String&gt; names = Arrays.asList(&quot;2&quot;,&quot;@2234&quot;,&quot;21&quot;,&quot;11&quot;);","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":22723,"user_id":6998684,"user_type":"registered","profile_image":"https://i.stack.imgur.com/cqR2Z.jpg?s=128&g=1","display_name":"IgorGanapolsky","link":"https://stackoverflow.com/users/6998684/igorganapolsky"},"score":0,"creation_date":1449003037}],"owner":{"reputation":101,"user_id":2282246,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9bfd3b63ba790bf02f0e6c0a5b921fcb?s=128&d=identicon&r=PG","display_name":"Manoj Kumar","link":"https://stackoverflow.com/users/2282246/manoj-kumar"},"comment_count":1,"score":0,"creation_date":1417930632,"body_markdown":"For me Arrays.asList() is the best and convenient one. I always like to initialize that way.\r\nIf you are a beginner into Java Collections then I would like you to refer [ArrayList initialization][1]\r\n\r\n\r\n  [1]: http://www.gitarani.com/classified.htm?classifiedId=3011","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":724,"user_id":1417653,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/3fa02c341aed737820b2780729caf77d?s=128&d=identicon&r=PG","display_name":"Richard B","link":"https://stackoverflow.com/users/1417653/richard-b"},"comment_count":0,"score":8,"creation_date":1418643855,"body_markdown":"About the most compact way to do this is:\r\n\r\n    Double array[] = { 1.0, 2.0, 3.0};\r\n    List&lt;Double&gt; list = Arrays.asList(array);","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":5666,"user_id":1570415,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Scl35.jpg?s=128&g=1","display_name":"Donald Raab","link":"https://stackoverflow.com/users/1570415/donald-raab"},"comment_count":0,"score":8,"creation_date":1422408635,"body_markdown":"With [Eclipse Collections][1] you can write the following:\r\n\r\n    List&lt;String&gt; list = Lists.mutable.with(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\nYou can also be more specific about the types and whether they are Mutable or Immutable.\r\n\r\n    MutableList&lt;String&gt; mList = Lists.mutable.with(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n    ImmutableList&lt;String&gt; iList = Lists.immutable.with(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\nYou can also do the same with Sets and Bags:\r\n\r\n    Set&lt;String&gt; set = Sets.mutable.with(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n    MutableSet&lt;String&gt; mSet = Sets.mutable.with(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n    ImmutableSet&lt;String&gt; iSet = Sets.immutable.with(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\n    Bag&lt;String&gt; bag = Bags.mutable.with(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n    MutableBag&lt;String&gt; mBag = Bags.mutable.with(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n    ImmutableBag&lt;String&gt; iBag = Bags.immutable.with(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\n**Note:** I am a committer for Eclipse Collections.\r\n\r\n\r\n  [1]: https://www.eclipse.org/collections/\r\n  [2]: https://github.com/goldmansachs/gs-collections","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":10251,"user_id":517381,"user_type":"registered","accept_rate":33,"profile_image":"https://www.gravatar.com/avatar/9d3bebe088c64440ec8870918299d18f?s=128&d=identicon&r=PG","display_name":"ViliusK","link":"https://stackoverflow.com/users/517381/viliusk"},"comment_count":0,"score":1,"creation_date":1428053438,"body_markdown":"    Collections.singletonList(messageBody)\r\n\r\nIf you&#39;d need to have a list of **one item**!\r\n\r\n\r\n*Collections* is from *java.util* package.","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":2460,"user_id":3919009,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/836c238f05fe7faac08b593d2bace718?s=128&d=identicon&r=PG","display_name":"Gustavo Morales","link":"https://stackoverflow.com/users/3919009/gustavo-morales"},"score":1,"creation_date":1463407515}],"owner":{"reputation":1234,"user_id":6233653,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/3iNsk.jpg?s=128&g=1","display_name":"Ant20","link":"https://stackoverflow.com/users/6233653/ant20"},"comment_count":1,"score":3,"creation_date":1463406301,"body_markdown":"Try with this code line:\r\n\r\n    Collections.singletonList(provider)","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":4461,"user_id":1431720,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/f5a1388d4d3b2bf03b11bb5658c68c29?s=128&d=identicon&r=PG","display_name":"Robert","link":"https://stackoverflow.com/users/1431720/robert"},"score":1,"creation_date":1473370072}],"owner":{"reputation":13285,"user_id":6089852,"user_type":"registered","accept_rate":88,"profile_image":"https://i.stack.imgur.com/h15pk.png?s=128&g=1","display_name":"Charif DZ","link":"https://stackoverflow.com/users/6089852/charif-dz"},"comment_count":1,"score":1,"creation_date":1468780271,"body_markdown":"The best way to do it:\r\n\r\n    package main_package;\r\n\r\n    import java.util.ArrayList;\r\n\r\n\r\n    public class Stackkkk {\r\n        public static void main(String[] args) {\r\n            ArrayList&lt;Object&gt; list = new ArrayList&lt;Object&gt;();\r\n            add(list, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;);\r\n            System.out.println(&quot;I added &quot; + list.size() + &quot; element in one line&quot;);\r\n        }\r\n\r\n        public static void add(ArrayList&lt;Object&gt; list,Object...objects){\r\n            for(Object object:objects)\r\n                list.add(object);\r\n        }\r\n    }\r\n\r\nJust create a function that can have as many elements as you want and call it to add them in one line.\r\n","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":181,"user_id":5089473,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/EVfDj.jpg?s=128&g=1","display_name":"Akash Manngroliya","link":"https://stackoverflow.com/users/5089473/akash-manngroliya"},"comment_count":0,"score":4,"creation_date":1473746095,"body_markdown":"Yes with the help of Arrays you can initialize array list in one line,\r\n \r\n    List&lt;String&gt; strlist= Arrays.asList(&quot;aaa&quot;, &quot;bbb&quot;, &quot;ccc&quot;);","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":1385,"user_id":3380739,"user_type":"registered","profile_image":"https://graph.facebook.com/711282833/picture?type=large","display_name":"user_3380739","link":"https://stackoverflow.com/users/3380739/user-3380739"},"comment_count":0,"score":1,"creation_date":1480362997,"body_markdown":"Here is code by [AbacusUtil][1]\r\n\r\n    // ArrayList\r\n    List&lt;String&gt; list = N.asList(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n    // HashSet\r\n    Set&lt;String&gt; set = N.asSet(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n    // HashMap\r\n    Map&lt;String, Integer&gt; map = N.asMap(&quot;Buenos Aires&quot;, 1, &quot;C&#243;rdoba&quot;, 2, &quot;La Plata&quot;, 3);\r\n\r\n    // Or for Immutable List/Set/Map\r\n    ImmutableList.of(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n    ImmutableSet.of(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n    ImmutableSet.of(&quot;Buenos Aires&quot;, 1, &quot;C&#243;rdoba&quot;, 2, &quot;La Plata&quot;, 3);\r\n\r\n    // The most efficient way, which is similar with Arrays.asList(...) in JDK. \r\n    // but returns a flexible-size list backed by the specified array.\r\n    List&lt;String&gt; set = Array.asList(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\nDeclaration： I&#39;m the developer of AbacusUtil.\r\n\r\n  [1]: https://github.com/landawn/AbacusUtil","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":8231,"user_id":441902,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/6c9abe80acfc58b78432c81b16234032?s=128&d=identicon&r=PG&f=1","display_name":"teon","link":"https://stackoverflow.com/users/441902/teon"},"score":1,"creation_date":1559918083}],"owner":{"reputation":27490,"user_id":85421,"user_type":"registered","profile_image":"https://i.stack.imgur.com/kKvXH.gif?s=128&g=1","display_name":"user85421","link":"https://stackoverflow.com/users/85421/user85421"},"comment_count":1,"score":5,"creation_date":1481018269,"body_markdown":"Java 9 has the following method to create an *immutable* list:\r\n\r\n    List&lt;String&gt; places = List.of(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\nwhich is easily adapted to create a mutable list, if required:\r\n\r\n    List&lt;String&gt; places = new ArrayList&lt;&gt;(List.of(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;));\r\n\r\nSimilar methods are available for `Set` and `Map`.\r\n","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":42308,"user_id":1746118,"user_type":"registered","accept_rate":95,"profile_image":"https://i.stack.imgur.com/a4a3P.png?s=128&g=1","display_name":"Naman","link":"https://stackoverflow.com/users/1746118/naman"},"comment_count":0,"score":44,"creation_date":1486056984,"body_markdown":"With [tag:java-9] and above, as suggested in [JEP 269: Convenience Factory Methods for Collections](http://openjdk.java.net/jeps/269), this could be achieved using *collection literals* now with - \n\n    List&lt;String&gt; list = List.of(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;);\n\n    Set&lt;String&gt; set = Set.of(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;);\n\nA similar approach would apply to `Map` as well - \n\n    Map&lt;String, String&gt; map = Map.of(&quot;k1&quot;, &quot;v1&quot;, &quot;k2&quot;, &quot;v2&quot;, &quot;k3&quot;, &quot;v3&quot;)\n\n\nwhich is similar to [Collection Literals proposal](http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html) as stated by @coobird. Further clarified in the JEP as well - \n\n----------\n\n**Alternatives**\n\n&gt; Language changes have been considered several times, and rejected:\n&gt; \n&gt; [Project Coin Proposal, 29 March 2009](http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001112.html) \n&gt;\n&gt; [Project Coin Proposal, 30 March 2009](http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html) \n&gt;\n&gt; [JEP 186 discussion on lambda-dev, January-March 2014](http://mail.openjdk.java.net/pipermail/lambda-dev/2014-January/011671.html)\n&gt;\n&gt; The language\n&gt; proposals were set aside in preference to a library-based proposal as\n&gt; summarized in this [message.](http://mail.openjdk.java.net/pipermail/lambda-dev/2014-March/011938.html)\n\nRelated: https://stackoverflow.com/questions/41918934/what-is-the-point-of-overloaded-convenience-factory-methods-for-collections-in-j/41918976#41918976","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":754,"user_id":1291525,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ad1b5b352d226bf0231656cae360dd0a?s=128&d=identicon&r=PG","display_name":"Henok T","link":"https://stackoverflow.com/users/1291525/henok-t"},"comment_count":0,"score":7,"creation_date":1488322254,"body_markdown":"Here is another way:\r\n    \r\n    List&lt;String&gt; values = Stream.of(&quot;One&quot;, &quot;Two&quot;).collect(Collectors.toList());","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":228,"user_id":961575,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f94ff2f513b37c737608ade46ad92a80?s=128&d=identicon&r=PG","display_name":"Pavel Repin","link":"https://stackoverflow.com/users/961575/pavel-repin"},"score":0,"creation_date":1519652524}],"owner":{"reputation":2541,"user_id":6714430,"user_type":"registered","profile_image":"https://i.stack.imgur.com/adedu.jpg?s=128&g=1","display_name":"rashedcs","link":"https://stackoverflow.com/users/6714430/rashedcs"},"comment_count":1,"score":6,"creation_date":1490732283,"body_markdown":"You can use the below statements:\n\n### Code Snippet:\n\n    String [] arr = {&quot;Sharlock&quot;, &quot;Homes&quot;, &quot;Watson&quot;};\n\n    List&lt;String&gt; names = Arrays.asList(arr);\n","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":92649,"user_id":187141,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/f9e28dc83496320c87c55b3cf988ab60?s=128&d=identicon&r=PG","display_name":"yegor256","link":"https://stackoverflow.com/users/187141/yegor256"},"comment_count":0,"score":4,"creation_date":1498412897,"body_markdown":"You can use `StickyList` from [Cactoos](http://www.cactoos.org):\r\n\r\n    List&lt;String&gt; names = new StickyList&lt;&gt;(\r\n      &quot;Scott Fitzgerald&quot;, &quot;Fyodor Dostoyevsky&quot;\r\n    );\r\n","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":2524,"user_id":6051536,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-5RJ4vhbXHuk/AAAAAAAAAAI/AAAAAAAAFXw/8NiskXWvAL8/photo.jpg?sz=128","display_name":"Mohit Tyagi","link":"https://stackoverflow.com/users/6051536/mohit-tyagi"},"comment_count":0,"score":16,"creation_date":1507252570,"body_markdown":"In Java 9 we can easily initialize an `ArrayList` in a single line:\r\n\r\n    List&lt;String&gt; places = List.of(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\nor\r\n\r\n    List&lt;String&gt; places = new ArrayList&lt;&gt;(List.of(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;));\r\n\r\nThis new approach of Java 9 has many advantages over the previous ones:\r\n\r\n1. [Space Efficiency][1]\r\n2. [Immutability][2]\r\n3. [Thread Safe][3]\r\n\r\nSee this post for more details -&gt; *[What is the difference between List.of and Arrays.asList?][4]*\r\n\r\n  [1]: https://docs.oracle.com/javase/9/core/creating-immutable-lists-sets-and-maps.htm#JSCOR-GUID-6A9BAE41-A1AD-4AA1-AF1A-A8FC99A14199\r\n  [2]: https://docs.oracle.com/javase/9/core/creating-immutable-lists-sets-and-maps.htm#JSCOR-GUID-4F3E2B7D-CE90-4862-A78A-414FC08DA6E4\r\n  [3]: https://docs.oracle.com/javase/9/core/creating-immutable-lists-sets-and-maps.htm#JSCOR-GUID-DD066F67-9C9B-444E-A3CB-820503735951\r\n  [4]: https://stackoverflow.com/questions/46579074/what-is-the-difference-between-list-of-and-arrays-aslist\r\n","title":"Initialization of an ArrayList in one line"},{"comments":[{"owner":{"reputation":10232,"user_id":4138801,"user_type":"registered","accept_rate":97,"profile_image":"https://lh4.googleusercontent.com/-aVJI2hM4hYc/AAAAAAAAAAI/AAAAAAAAAEk/cXFqsfUYh0o/photo.jpg?sz=128","display_name":"Clashsoft","link":"https://stackoverflow.com/users/4138801/clashsoft"},"score":1,"creation_date":1602244762}],"owner":{"reputation":816,"user_id":947488,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b99c19bbe166745fc5d29ea09ff2c562?s=128&d=identicon&r=PG","display_name":"Stefan Reich","link":"https://stackoverflow.com/users/947488/stefan-reich"},"comment_count":1,"score":0,"creation_date":1512386588,"body_markdown":"Why not make a simple utility function that does this?\r\n\r\n    static &lt;A&gt; ArrayList&lt;A&gt; ll(A... a) {\r\n      ArrayList l = new ArrayList(a.length);\r\n      for (A x : a) l.add(x);\r\n      return l;\r\n    }\r\n\r\n&quot;`ll`&quot; stands for &quot;literal list&quot;.\r\n\r\n    ArrayList&lt;String&gt; places = ll(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;);\r\n\r\n\r\n","title":"Initialization of an ArrayList in one line"},{"owner":{"reputation":629,"user_id":11199879,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a0a9c56c2190957960c9463c03486df8?s=128&d=identicon&r=PG&f=1","display_name":"Kaplan","link":"https://stackoverflow.com/users/11199879/kaplan"},"comment_count":0,"score":0,"creation_date":1570201451,"body_markdown":"_interestingly no one-liner with the other overloaded_ `Stream::collect` _method is listed_\r\n\r\n    ArrayList&lt;String&gt; places = Stream.of( &quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot; ).collect( ArrayList::new, ArrayList::add, ArrayList::addAll );\r\n\r\n","title":"Initialization of an ArrayList in one line"}],"owner":{"reputation":86325,"user_id":119895,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/dEYOs.jpg?s=128&g=1","display_name":"Macarse","link":"https://stackoverflow.com/users/119895/macarse"},"comment_count":8,"is_answered":true,"answer_count":31,"score":2894,"creation_date":1245211820,"question_id":1005073,"body_markdown":"I wanted to create a list of options for testing purposes. At first, I did this:\r\n\r\n    ArrayList&lt;String&gt; places = new ArrayList&lt;String&gt;();\r\n    places.add(&quot;Buenos Aires&quot;);\r\n    places.add(&quot;C&#243;rdoba&quot;);\r\n    places.add(&quot;La Plata&quot;);\r\n\r\nThen, I refactored the code as follows:\r\n\r\n    ArrayList&lt;String&gt; places = new ArrayList&lt;String&gt;(\r\n        Arrays.asList(&quot;Buenos Aires&quot;, &quot;C&#243;rdoba&quot;, &quot;La Plata&quot;));\r\n\r\nIs there a better way to do this?","link":"https://stackoverflow.com/questions/1005073/initialization-of-an-arraylist-in-one-line","title":"Initialization of an ArrayList in one line"},{"tags":["java","unit-testing","tdd"],"comments":[{"owner":{"reputation":4739,"user_id":70551,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/c5a248cded4b8de6ea69feab15a9b6e6?s=128&d=identicon&r=PG","display_name":"Surya","link":"https://stackoverflow.com/users/70551/surya"},"score":270,"creation_date":1283201036},{"owner":{"reputation":34844,"user_id":271999,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/UOdwH.png?s=128&g=1","display_name":"Mouna Cheikhna","link":"https://stackoverflow.com/users/271999/mouna-cheikhna"},"score":27,"creation_date":1286962441}],"answers":[{"comments":[{"owner":{"reputation":744,"user_id":1476154,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/d878b45af06f96aa81304df6c694e6af?s=128&d=identicon&r=PG","display_name":"grinch","link":"https://stackoverflow.com/users/1476154/grinch"},"score":7,"creation_date":1360787350},{"owner":{"reputation":1596,"user_id":2020801,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/9981dde909678f98fb25eed05cc9f23f?s=128&d=identicon&r=PG","display_name":"Erik Madsen","link":"https://stackoverflow.com/users/2020801/erik-madsen"},"score":40,"creation_date":1372146816}],"owner":{"reputation":7100,"user_id":2822,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/687b3538510fe4217ecbe06fcac473e2?s=128&d=identicon&r=PG","display_name":"Trumpi","link":"https://stackoverflow.com/users/2822/trumpi"},"comment_count":2,"score":692,"creation_date":1220026459,"body_markdown":"The best way to test a private method is via another public method. If this cannot be done, then one of the following conditions is true:\r\n\r\n 1. The private method is dead code\r\n 2. There is a design smell near the class that you are testing\r\n 3. The method that you are trying to test should not be private","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":388,"user_id":880942,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7ca81d636f92ced28a287d69ecff7943?s=128&d=identicon&r=PG","display_name":"Dan Haynes","link":"https://stackoverflow.com/users/880942/dan-haynes"},"score":18,"creation_date":1368801532},{"owner":{"reputation":2235,"user_id":346057,"user_type":"registered","accept_rate":33,"profile_image":"https://www.gravatar.com/avatar/ad4d3f051749ebbb0aafabfc603df4ee?s=128&d=identicon&r=PG","display_name":"razor","link":"https://stackoverflow.com/users/346057/razor"},"score":15,"creation_date":1432053724},{"owner":{"reputation":427,"user_id":5111897,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c63a8a7d93df885ae3e7d17f3fcf5303?s=128&d=identicon&r=PG&f=1","display_name":"Akshat Sharda","link":"https://stackoverflow.com/users/5111897/akshat-sharda"},"score":3,"creation_date":1581519183}],"owner":{"reputation":6293,"user_id":3305,"user_type":"registered","accept_rate":41,"profile_image":"https://www.gravatar.com/avatar/9f88abf7dbaa66d72efc2e3cda54c732?s=128&d=identicon&r=PG","display_name":"John Channing","link":"https://stackoverflow.com/users/3305/john-channing"},"comment_count":3,"score":138,"creation_date":1220026494,"body_markdown":"Generally a unit test is intended to exercise the public interface of a class or unit. Therefore, private methods are implementation detail that you would not expect to test explicitly.\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":1214,"user_id":3645375,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2ba0dfc80b363486da9d9c92e429e745?s=128&d=identicon&r=PG&f=1","display_name":"Bernardo Dal Corno","link":"https://stackoverflow.com/users/3645375/bernardo-dal-corno"},"score":0,"creation_date":1525889465},{"owner":{"reputation":742,"user_id":1854834,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/605df56f7a59b96f2ae70e9237f7d2fa?s=128&d=identicon&r=PG","display_name":"Wei Qiu","link":"https://stackoverflow.com/users/1854834/wei-qiu"},"score":0,"creation_date":1529377454}],"owner":{"reputation":106835,"user_id":572,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/Ct4o3.jpg?s=128&g=1","display_name":"Thomas Owens","link":"https://stackoverflow.com/users/572/thomas-owens"},"comment_count":2,"score":62,"creation_date":1220026530,"body_markdown":"The private methods are called by a public method, so the inputs to your public methods should also test private methods that are called by those public methods. When a public method fails, then that could be a failure in the private method.","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":74856,"user_id":632951,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/77f196f4d3b4b89fc179071f3aa21e1e?s=128&d=identicon&r=PG","display_name":"Pacerier","link":"https://stackoverflow.com/users/632951/pacerier"},"score":0,"creation_date":1440140605},{"owner":{"reputation":3623,"user_id":1659790,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/sS2uf.png?s=128&g=1","display_name":"Jimmy T.","link":"https://stackoverflow.com/users/1659790/jimmy-t"},"score":0,"creation_date":1440188821},{"owner":{"reputation":1066,"user_id":2441441,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/51eea1787b9429c6873be5d34e0059e2?s=128&d=identicon&r=PG","display_name":"user2441441","link":"https://stackoverflow.com/users/2441441/user2441441"},"score":1,"creation_date":1468357546},{"owner":{"user_type":"does_not_exist","display_name":"user2918461"},"score":1,"creation_date":1505921576},{"owner":{"reputation":645,"user_id":1568881,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/24164ab238f93cf20266cbde9a577ec8?s=128&d=identicon&r=PG&f=1","display_name":"Aguid","link":"https://stackoverflow.com/users/1568881/aguid"},"score":0,"creation_date":1509138804},{"owner":{"reputation":10592,"user_id":2601671,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/9e7a8b29723c6d38e1b1a1f245c27b4c?s=128&d=identicon&r=PG","display_name":"Trenton","link":"https://stackoverflow.com/users/2601671/trenton"},"score":0,"creation_date":1587598413}],"owner":{"reputation":6621,"user_id":2697,"user_type":"registered","accept_rate":76,"profile_image":"https://www.gravatar.com/avatar/17404e0c1869fec55dd69f7c033de12e?s=128&d=identicon&r=PG","display_name":"Iker Jimenez","link":"https://stackoverflow.com/users/2697/iker-jimenez"},"comment_count":6,"score":216,"creation_date":1220026580,"body_markdown":"From this article: [Testing Private Methods with JUnit and SuiteRunner][1] (Bill Venners), you basically have 4 options:\r\n\r\n&gt; 1. Don&#39;t test private methods.\r\n&gt; 1. Give the methods package access.\r\n&gt; 1. Use a nested test class.\r\n&gt; 1. &lt;strike&gt;Use reflection.&lt;/strike&gt;\r\n\r\n  [1]: http://www.artima.com/suiterunner/private.html","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":24446,"user_id":1931,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/4a330b7317cb51cafd60b0c345922744?s=128&d=identicon&r=PG","display_name":"bmurphy1976","link":"https://stackoverflow.com/users/1931/bmurphy1976"},"comment_count":0,"score":16,"creation_date":1220027025,"body_markdown":"I tend not to test private methods.  There lies madness.  Personally, I believe you should only test your publicly exposed interfaces (and that includes protected and internal methods).  ","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":73377,"user_id":1782,"user_type":"registered","accept_rate":98,"profile_image":"https://www.gravatar.com/avatar/4dfc8f56817006ef21327d5ff19ce04f?s=128&d=identicon&r=PG","display_name":"juan","link":"https://stackoverflow.com/users/1782/juan"},"score":0,"creation_date":1220027655},{"owner":{"reputation":32787,"user_id":349112,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9b69ebb35f216518130c1f301c5e938f?s=128&d=identicon&r=PG","display_name":"tc.","link":"https://stackoverflow.com/users/349112/tc"},"score":0,"creation_date":1363982616}],"owner":{"reputation":48640,"user_id":2030,"user_type":"registered","accept_rate":91,"profile_image":"https://www.gravatar.com/avatar/73fad2d46ffaac8dd679d302a681147b?s=128&d=identicon&r=PG","display_name":"Josh Brown","link":"https://stackoverflow.com/users/2030/josh-brown"},"comment_count":2,"score":6,"creation_date":1220027403,"body_markdown":"For Java I&#39;d use [reflection][1], since I don&#39;t like the idea of changing the access to a package on the declared method just for the sake of testing. However, I usually just test the public methods which should also ensure the private methods are working correctly.\r\n\r\n&gt; you can&#39;t use reflection to get private methods from outside the owner class, the private modifier affects reflection also\r\n\r\nThis is not true. You most certainly can, as mentioned in [Cem Catikkas&#39;s answer][2].\r\n\r\n  [1]: http://docs.oracle.com/javase/tutorial/reflect/index.html\r\n  [2]: https://stackoverflow.com/questions/34571/whats-the-best-way-of-unit-testing-private-methods#34658\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":2476,"user_id":117361,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0c0319b9236bfd4b39af7729ff99383a?s=128&d=identicon&r=PG&f=1","display_name":"andygavin","link":"https://stackoverflow.com/users/117361/andygavin"},"score":371,"creation_date":1246026209}],"owner":{"reputation":6950,"user_id":3087,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7d0939f834c7658366376f94fbc6a4e6?s=128&d=identicon&r=PG","display_name":"Cem Catikkas","link":"https://stackoverflow.com/users/3087/cem-catikkas"},"comment_count":1,"score":1716,"creation_date":1220027711,"body_markdown":"&gt;**Update:**\r\n&gt;\r\n&gt;Some 10 years later perhaps the best way to test a private method, or any inaccessible member, is via **`@Jailbreak`** from the [Manifold][1] framework.\r\n&gt; ```\r\n&gt; @Jailbreak Foo foo = new Foo();\r\n&gt; // Direct, *type-safe* access to *all* foo&#39;s members\r\n&gt; foo.privateMethod(x, y, z);\r\n&gt; foo.privateField = value;\r\n&gt;```\r\n&gt;This way your code remains type-safe and readable.  No design compromises, no overexposing methods and fields for the sake of tests.\r\n&gt;\r\n\r\nIf you have somewhat of a legacy **Java** application, and you&#39;re not allowed to change the visibility of your methods, the best way to test private methods is to use [reflection][2]. \r\n\r\nInternally we&#39;re using helpers to get/set `private` and `private static` variables as well as invoke `private` and `private static` methods. The following patterns will let you do pretty much anything related to the private methods and fields. Of course, you can&#39;t change `private static final` variables through reflection.\r\n\r\n    Method method = TargetClass.getDeclaredMethod(methodName, argClasses);\r\n    method.setAccessible(true);\r\n    return method.invoke(targetObject, argObjects);\r\n\r\nAnd for fields:\r\n\r\n    Field field = TargetClass.getDeclaredField(fieldName);\r\n    field.setAccessible(true);\r\n    field.set(object, value);\r\n\r\n\r\n----------\r\n\r\n\r\n&gt; **Notes:**  \r\n&gt; 1. `TargetClass.getDeclaredMethod(methodName, argClasses)` lets you look into `private` methods. The same thing applies for\r\n&gt; `getDeclaredField`.  \r\n&gt; 2. The `setAccessible(true)` is required to play around with privates.\r\n\r\n \r\n\r\n\r\n  [1]: https://manifold.systems\r\n  [2]: http://en.wikipedia.org/wiki/Reflection_%28computer_programming%29","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":113845,"user_id":4120,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/71f8f2fa409ea5ce2757c8d490ece924?s=128&d=identicon&r=PG","display_name":"Grundlefleck","link":"https://stackoverflow.com/users/4120/grundlefleck"},"comment_count":0,"score":31,"creation_date":1220302727,"body_markdown":"Having tried Cem Catikkas&#39; [solution using reflection][1] for Java, I&#39;d have to say his was a more elegant solution than I have described here. However, if you&#39;re looking for an alternative to using reflection, and have access to the source you&#39;re testing, this will still be an option.\r\n\r\nThere is possible merit in testing private methods of a class, particularly with [test-driven development][2], where you would like to design small tests before you write any code.\r\n\r\nCreating a test with access to private members and methods can test areas of code which are difficult to target specifically with access only to public methods. If a public method has several steps involved, it can consist of several private methods, which can then be tested individually.\r\n\r\nAdvantages:\r\n\r\n  - Can test to a finer granularity\r\n\r\nDisadvantages:\r\n\r\n  - Test code must reside in the same\r\n    file as source code, which can be\r\n    more difficult to maintain\r\n  - Similarly with .class output files, they must remain within the same package as declared in source code\r\n\r\nHowever, if continuous testing requires this method, it may be a signal that the private methods should be extracted, which could be tested in the traditional, public way.\r\n\r\nHere is a convoluted example of how this would work:\r\n\r\n    // Import statements and package declarations\r\n\r\n    public class ClassToTest\r\n    {\r\n        private int decrement(int toDecrement) {\r\n            toDecrement--;\r\n            return toDecrement;\r\n        }\r\n\r\n        // Constructor and the rest of the class\r\n\r\n        public static class StaticInnerTest extends TestCase\r\n        {\r\n            public StaticInnerTest(){\r\n                super();\r\n            }\r\n\r\n            public void testDecrement(){\r\n                int number = 10;\r\n                ClassToTest toTest= new ClassToTest();\r\n                int decremented = toTest.decrement(number);\r\n                assertEquals(9, decremented);\r\n            }\r\n\r\n            public static void main(String[] args) {\r\n                junit.textui.TestRunner.run(StaticInnerTest.class);\r\n            }\r\n        }\r\n    }\r\n\r\nThe inner class would be compiled to `ClassToTest$StaticInnerTest`.\r\n\r\nSee also: *[Java Tip 106: Static inner classes for fun and profit][3]*\r\n\r\n  [1]: https://stackoverflow.com/questions/34571/whats-the-best-way-of-unit-testing-private-methods#34658\r\n  [2]: http://en.wikipedia.org/wiki/Test-driven_development\r\n  [3]: http://www.javaworld.com/javaworld/javatips/jw-javatip106.html\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":40091,"user_id":4794,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/f90cd356f2945b284946d5743467d850?s=128&d=identicon&r=PG","display_name":"Don Kirkby","link":"https://stackoverflow.com/users/4794/don-kirkby"},"comment_count":0,"score":25,"creation_date":1220632785,"body_markdown":"If you&#39;re trying to test existing code that you&#39;re reluctant or unable to change, reflection is a good choice.\r\n\r\nIf the class&#39;s design is still flexible, and you&#39;ve got a complicated private method that you&#39;d like to test separately, I suggest you pull it out into a separate class and test that class separately. This doesn&#39;t have to change the public interface of the original class; it can internally create an instance of the helper class and call the helper method.\r\n\r\nIf you want to test difficult error conditions coming from the helper method, you can go a step further. Extract an interface from the helper class, add a public getter and setter to the original class to inject the helper class (used through its interface), and then inject a mock version of the helper class into the original class to test how the original class responds to exceptions from the helper. This approach is also helpful if you want to test the original class without also testing the helper class.\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":4800,"user_id":622440,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/0cf638dd0a3f0786c42d681689ffc35e?s=128&d=identicon&r=PG","display_name":"Domenic D.","link":"https://stackoverflow.com/users/622440/domenic-d"},"score":4,"creation_date":1384834977},{"owner":{"reputation":13667,"user_id":62539,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/09dae57dd154198e0479c5aeb7c5b4d8?s=128&d=identicon&r=PG","display_name":"MedicineMan","link":"https://stackoverflow.com/users/62539/medicineman"},"score":0,"creation_date":1511156316}],"owner":{"reputation":4279,"user_id":5266,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f11a6143fb27e81c709f0339c7a95211?s=128&d=identicon&r=PG","display_name":"Will Sargent","link":"https://stackoverflow.com/users/5266/will-sargent"},"comment_count":2,"score":17,"creation_date":1220932256,"body_markdown":"If you want to test private methods of a legacy application where you can&#39;t change the code, one option for Java is [jMockit][1], which will allow you to create mocks to an object even when they&#39;re private to the class.\r\n\r\n  [1]: http://code.google.com/p/jmockit/","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":1684,"user_id":205943,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/a6fe3fd7c49c4cb055f1d73b7dc4fed6?s=128&d=identicon&r=PG","display_name":"Dainius","link":"https://stackoverflow.com/users/205943/dainius"},"score":26,"creation_date":1343994040},{"owner":{"reputation":1684,"user_id":205943,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/a6fe3fd7c49c4cb055f1d73b7dc4fed6?s=128&d=identicon&r=PG","display_name":"Dainius","link":"https://stackoverflow.com/users/205943/dainius"},"score":4,"creation_date":1344098122},{"owner":{"reputation":40897,"user_id":5314,"user_type":"registered","accept_rate":36,"profile_image":"https://www.gravatar.com/avatar/59ca40f0fafad6de52790016d2195abc?s=128&d=identicon&r=PG","display_name":"Jay Bazuzi","link":"https://stackoverflow.com/users/5314/jay-bazuzi"},"score":29,"creation_date":1344114914},{"owner":{"reputation":1684,"user_id":205943,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/a6fe3fd7c49c4cb055f1d73b7dc4fed6?s=128&d=identicon&r=PG","display_name":"Dainius","link":"https://stackoverflow.com/users/205943/dainius"},"score":13,"creation_date":1344236013},{"owner":{"reputation":1185,"user_id":2391315,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e3bea36da7e3c24d4baf1bfc75a4be70?s=128&d=identicon&r=PG","display_name":"confusopoly","link":"https://stackoverflow.com/users/2391315/confusopoly"},"score":2,"creation_date":1371506347},{"owner":{"reputation":40897,"user_id":5314,"user_type":"registered","accept_rate":36,"profile_image":"https://www.gravatar.com/avatar/59ca40f0fafad6de52790016d2195abc?s=128&d=identicon&r=PG","display_name":"Jay Bazuzi","link":"https://stackoverflow.com/users/5314/jay-bazuzi"},"score":1,"creation_date":1371513871},{"owner":{"reputation":27109,"user_id":1019167,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/juW4C.png?s=128&g=1","display_name":"AlexWien","link":"https://stackoverflow.com/users/1019167/alexwien"},"score":6,"creation_date":1372712049},{"owner":{"reputation":955,"user_id":2025948,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0a2eba20314e13b364fe1e7b7108e13f?s=128&d=identicon&r=PG","display_name":"Charles","link":"https://stackoverflow.com/users/2025948/charles"},"score":1,"creation_date":1413123802},{"owner":{"reputation":46145,"user_id":574479,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/79f682361ccbe900f8846a1098d13921?s=128&d=identicon&r=PG","display_name":"biziclop","link":"https://stackoverflow.com/users/574479/biziclop"},"score":3,"creation_date":1437683122},{"owner":{"reputation":598,"user_id":2780081,"user_type":"registered","profile_image":"https://i.stack.imgur.com/lgKtG.jpg?s=128&g=1","display_name":"c-garcia","link":"https://stackoverflow.com/users/2780081/c-garcia"},"score":2,"creation_date":1442133449},{"owner":{"reputation":787,"user_id":92822,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/abb3692549bc59b790bfebb755ae94cb?s=128&d=identicon&r=PG","display_name":"pnschofield","link":"https://stackoverflow.com/users/92822/pnschofield"},"score":8,"creation_date":1480714553},{"owner":{"reputation":1395,"user_id":999264,"user_type":"registered","accept_rate":39,"profile_image":"https://www.gravatar.com/avatar/12491b2a358bf2427bc8871251649d91?s=128&d=identicon&r=PG","display_name":"John Donn","link":"https://stackoverflow.com/users/999264/john-donn"},"score":0,"creation_date":1501154756},{"owner":{"reputation":40897,"user_id":5314,"user_type":"registered","accept_rate":36,"profile_image":"https://www.gravatar.com/avatar/59ca40f0fafad6de52790016d2195abc?s=128&d=identicon&r=PG","display_name":"Jay Bazuzi","link":"https://stackoverflow.com/users/5314/jay-bazuzi"},"score":1,"creation_date":1504157613},{"owner":{"reputation":1693,"user_id":2757620,"user_type":"registered","accept_rate":65,"profile_image":"https://i.stack.imgur.com/wFg9k.jpg?s=128&g=1","display_name":"qartal","link":"https://stackoverflow.com/users/2757620/qartal"},"score":0,"creation_date":1574350667}],"owner":{"reputation":40897,"user_id":5314,"user_type":"registered","accept_rate":36,"profile_image":"https://www.gravatar.com/avatar/59ca40f0fafad6de52790016d2195abc?s=128&d=identicon&r=PG","display_name":"Jay Bazuzi","link":"https://stackoverflow.com/users/5314/jay-bazuzi"},"comment_count":14,"score":343,"creation_date":1220971385,"body_markdown":"When I have private methods in a class that are sufficiently complicated that I feel the need to test the private methods directly, that is a code smell: my class is too complicated.  \r\n\r\nMy usual approach to addressing such issues is to tease out a new class that contains the interesting bits.  Often, this method and the fields it interacts with, and maybe another method or two can be extracted in to a new class.  \r\n\r\nThe new class exposes these methods as &#39;public&#39;, so they&#39;re accessible for unit testing.  The new and old classes are now both simpler than the original class, which is great for me (I need to keep things simple, or I get lost!).\r\n\r\nNote that I&#39;m not suggesting that people create classes without using their brain! The point here is to use the forces of unit testing to help you find good new classes.  ","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":27109,"user_id":1019167,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/juW4C.png?s=128&g=1","display_name":"AlexWien","link":"https://stackoverflow.com/users/1019167/alexwien"},"score":0,"creation_date":1372711867}],"owner":{"reputation":3226,"user_id":151,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/2f38ca4af6139077092c687c3c7ab9a5?s=128&d=identicon&r=PG","display_name":"Darren Greaves","link":"https://stackoverflow.com/users/151/darren-greaves"},"comment_count":1,"score":12,"creation_date":1221032922,"body_markdown":"As many above have suggested, a good way is to test them via your public interfaces.\r\n\r\nIf you do this, it&#39;s a good idea to use a code coverage tool (like Emma) to see if your private methods are in fact being executed from your tests.","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":786,"user_id":5313,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f5a8f90cf5bbb85b1037d1ed7baf6375?s=128&d=identicon&r=PG","display_name":"Joe","link":"https://stackoverflow.com/users/5313/joe"},"comment_count":0,"score":15,"creation_date":1221171628,"body_markdown":"If you&#39;re using JUnit, have a look at [junit-addons][1]. It has the ability to ignore the Java security model and access private methods and attributes.\r\n\r\n  [1]: http://junit-addons.sourceforge.net/\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":128679,"user_id":16853,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/lUxU7.jpg?s=128&g=1","display_name":"oxbow_lakes","link":"https://stackoverflow.com/users/16853/oxbow-lakes"},"score":3,"creation_date":1234719187},{"owner":{"reputation":27109,"user_id":1019167,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/juW4C.png?s=128&g=1","display_name":"AlexWien","link":"https://stackoverflow.com/users/1019167/alexwien"},"score":0,"creation_date":1372711737}],"owner":{"reputation":3293,"user_id":14153,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/80dade8a6e4fa68b48b4a63dc16ab433?s=128&d=identicon&r=PG","display_name":"Aaron","link":"https://stackoverflow.com/users/14153/aaron"},"comment_count":2,"score":10,"creation_date":1221730190,"body_markdown":"First, I&#39;ll throw this question out: Why do your private members need isolated testing? Are they that complex, providing such complicated behaviors as to require testing apart from the public surface? It&#39;s unit testing, not &#39;line-of-code&#39; testing. Don&#39;t sweat the small stuff.\r\n\r\nIf they are that big, big enough that these private members are each a &#39;unit&#39; large in complexity -- consider refactoring such private members out of this class.\r\n\r\nIf refactoring is inappropriate or infeasible, can you use the strategy pattern to replace access to these private member functions / member classes when under unit test? Under unit test, the strategy would provide added validation, but in release builds it would be simple passthrough.\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":27109,"user_id":1019167,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/juW4C.png?s=128&g=1","display_name":"AlexWien","link":"https://stackoverflow.com/users/1019167/alexwien"},"score":4,"creation_date":1372711393},{"owner":{"reputation":22770,"user_id":2281790,"user_type":"registered","accept_rate":46,"profile_image":"https://i.stack.imgur.com/pP0ow.jpg?s=128&g=1","display_name":"Harald Coppoolse","link":"https://stackoverflow.com/users/2281790/harald-coppoolse"},"score":1,"creation_date":1447075634}],"owner":{"reputation":5067,"user_id":19520,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/44e500d45df133c3e941d1293c3e224c?s=128&d=identicon&r=PG","display_name":"ema","link":"https://stackoverflow.com/users/19520/ema"},"comment_count":2,"score":20,"creation_date":1223621042,"body_markdown":"Testing private methods breaks the encapsulation of your class because every time you change the internal implementation you break client code (in this case, the tests).\r\n\r\nSo don&#39;t test private methods.\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":2679,"user_id":853599,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/a05d4f0059368a056ddf29ef647d591b?s=128&d=identicon&r=PG","display_name":"coolcfan","link":"https://stackoverflow.com/users/853599/coolcfan"},"score":0,"creation_date":1344478811},{"owner":{"reputation":18038,"user_id":1439305,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/gNHmR.jpg?s=128&g=1","display_name":"Audrius Meskauskas","link":"https://stackoverflow.com/users/1439305/audrius-meskauskas"},"score":0,"creation_date":1418373803}],"owner":{"reputation":57706,"user_id":65868,"user_type":"registered","accept_rate":68,"profile_image":"https://i.stack.imgur.com/1c5lJ.png?s=128&g=1","display_name":"TofuBeer","link":"https://stackoverflow.com/users/65868/tofubeer"},"comment_count":2,"score":27,"creation_date":1234637583,"body_markdown":"As others have said... don&#39;t test private methods directly. Here are a few thoughts:\r\n\r\n1. Keep all methods small and focused (easy to test, easy to find what is wrong)\r\n2. Use code coverage tools. I like [Cobertura][1] (oh happy day, looks like a new version is out!)\r\n\r\nRun the code coverage on the unit tests. If you see that methods are not fully tested add to the tests to get the coverage up. Aim for 100% code coverage, but realize that you probably won&#39;t get it.\r\n\r\n  [1]: http://cobertura.sourceforge.net/index.html\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":57706,"user_id":65868,"user_type":"registered","accept_rate":68,"profile_image":"https://i.stack.imgur.com/1c5lJ.png?s=128&g=1","display_name":"TofuBeer","link":"https://stackoverflow.com/users/65868/tofubeer"},"comment_count":0,"score":4,"creation_date":1234637685,"body_markdown":"You can turn off Java access restrictions for reflection so that private means nothing.\r\n\r\nThe `setAccessible(true)` call does that.\r\n\r\nThe only restriction is that a ClassLoader may disallow you from doing that.\r\n\r\nSee *[Subverting Java Access Protection for Unit Testing][1]* (Ross Burton) for a way to do this in Java.\r\n\r\n  [1]: http://www.onjava.com/pub/a/onjava/2003/11/12/reflection.html\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":5433,"user_id":29746,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e90fd4968a902ae667f3e9ce0b040a94?s=128&d=identicon&r=PG","display_name":"Thomas Hansen","link":"https://stackoverflow.com/users/29746/thomas-hansen"},"comment_count":0,"score":2,"creation_date":1234638661,"body_markdown":"In C# you could have used `System.Reflection`, though in Java I don&#39;t know. Though I feel the urge to answer this anyway since if you &quot;feel you need to unit test private methods&quot; my guess is that there is something else which is wrong...\r\n\r\nI would seriously consider looking at my architecture again with fresh eyes...\r\n\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":2235,"user_id":346057,"user_type":"registered","accept_rate":33,"profile_image":"https://www.gravatar.com/avatar/ad4d3f051749ebbb0aafabfc603df4ee?s=128&d=identicon&r=PG","display_name":"razor","link":"https://stackoverflow.com/users/346057/razor"},"score":0,"creation_date":1432053653}],"owner":{"reputation":559,"user_id":126875,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ef4aa134664f17673c4d9480bfaeff67?s=128&d=identicon&r=PG","display_name":"Diego Amicabile","link":"https://stackoverflow.com/users/126875/diego-amicabile"},"comment_count":1,"score":2,"creation_date":1245851383,"body_markdown":"What if your test classes are in the same package as the class that should be tested?\r\n\r\nBut in a different directory of course, `src` &amp; `classes` for your source code, `test/src` and `test/classes` for your test classes. And let `classes` and `test/classes` be in your classpath.\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":11782,"user_id":683077,"user_type":"registered","accept_rate":91,"profile_image":"https://www.gravatar.com/avatar/f9374eb11453c92578511c19deb2a34f?s=128&d=identicon&r=PG&f=1","display_name":"Colin M","link":"https://stackoverflow.com/users/683077/colin-m"},"score":78,"creation_date":1373290046},{"owner":{"reputation":143,"user_id":3167155,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/fd4705e916f325c8ec2c40955e9bc424?s=128&d=identicon&r=PG&f=1","display_name":"Aaron Marcus","link":"https://stackoverflow.com/users/3167155/aaron-marcus"},"score":11,"creation_date":1427991708},{"owner":{"reputation":7916,"user_id":912829,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/8155348e86202fd2f553332dde3b2fcf?s=128&d=identicon&r=PG&f=1","display_name":"ACV","link":"https://stackoverflow.com/users/912829/acv"},"score":2,"creation_date":1512041567},{"owner":{"reputation":994,"user_id":1171253,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9962fbb2d62f7850f29374e68ceef4f5?s=128&d=identicon&r=PG","display_name":"wuppi","link":"https://stackoverflow.com/users/1171253/wuppi"},"score":1,"creation_date":1562053410}],"owner":{"reputation":3290,"user_id":128285,"user_type":"registered","accept_rate":64,"profile_image":"https://www.gravatar.com/avatar/a237710fcffbb701c6af99aee0e56ec0?s=128&d=identicon&r=PG","display_name":"Jon","link":"https://stackoverflow.com/users/128285/jon"},"comment_count":4,"score":299,"creation_date":1245924072,"body_markdown":"I have used [reflection][1] to do this for Java in the past, and in my opinion it was a big mistake.\r\n\r\nStrictly speaking, you should *not* be writing unit tests that directly test private methods. What you *should* be testing is the public contract that the class has with other objects; you should never directly test an object&#39;s internals. If another developer wants to make a small internal change to the class, which doesn&#39;t affect the classes public contract, he/she then has to modify your reflection based test to ensure that it works. If you do this repeatedly throughout a project, unit tests then stop being a useful measurement of code health, and start to become a hindrance to development, and an annoyance to the development team.\r\n\r\nWhat I recommend doing instead is using a code coverage tool such as Cobertura, to ensure that the unit tests you write provide decent coverage of the code in private methods. That way, you indirectly test what the private methods are doing, and maintain a higher level of agility.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Reflection_%28computer_programming%29\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":1390,"user_id":1486498,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/92a10a7ccb8296747bfdbdb894949c32?s=128&d=identicon&r=PG","display_name":"ngreen","link":"https://stackoverflow.com/users/1486498/ngreen"},"score":7,"creation_date":1397101516},{"owner":{"reputation":27739,"user_id":383414,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/a0252c97758708e419523490aa848ded?s=128&d=identicon&r=PG","display_name":"Richard Le Mesurier","link":"https://stackoverflow.com/users/383414/richard-le-mesurier"},"score":0,"creation_date":1397124393},{"owner":{"reputation":1390,"user_id":1486498,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/92a10a7ccb8296747bfdbdb894949c32?s=128&d=identicon&r=PG","display_name":"ngreen","link":"https://stackoverflow.com/users/1486498/ngreen"},"score":2,"creation_date":1397147439},{"owner":{"reputation":27739,"user_id":383414,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/a0252c97758708e419523490aa848ded?s=128&d=identicon&r=PG","display_name":"Richard Le Mesurier","link":"https://stackoverflow.com/users/383414/richard-le-mesurier"},"score":2,"creation_date":1397148399},{"owner":{"reputation":1214,"user_id":3645375,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2ba0dfc80b363486da9d9c92e429e745?s=128&d=identicon&r=PG&f=1","display_name":"Bernardo Dal Corno","link":"https://stackoverflow.com/users/3645375/bernardo-dal-corno"},"score":2,"creation_date":1525888840},{"owner":{"reputation":837,"user_id":3218627,"user_type":"registered","accept_rate":38,"profile_image":"https://graph.facebook.com/100000812061368/picture?type=large","display_name":"Nether","link":"https://stackoverflow.com/users/3218627/nether"},"score":1,"creation_date":1589133564}],"owner":{"reputation":27739,"user_id":383414,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/a0252c97758708e419523490aa848ded?s=128&d=identicon&r=PG","display_name":"Richard Le Mesurier","link":"https://stackoverflow.com/users/383414/richard-le-mesurier"},"comment_count":6,"score":71,"creation_date":1278310213,"body_markdown":"Just two examples of where I would want to test a private method:\r\n\r\n 1. **Decryption routines** - I would not\r\n    want to make them visible to anyone to see just for\r\n    the sake of testing, else anyone can\r\n    use them to decrypt. But they are\r\n    intrinsic to the code, complicated,\r\n    and need to always work (the obvious exception is reflection which can be used to view even private methods in most cases, when `SecurityManager` is not configured to prevent this).\r\n 2. **Creating an SDK** for community\r\n    consumption. Here public takes on a\r\n    wholly different meaning, since this\r\n    is code that the whole world may see\r\n    (not just internal to my application). I put\r\n    code into private methods if I don&#39;t\r\n    want the SDK users to see it - I\r\n    don&#39;t see this as code smell, merely\r\n    as how SDK programming works. But of\r\n    course I still need to test my\r\n    private methods, and they are where\r\n    the functionality of my SDK actually\r\n    lives.\r\n\r\nI understand the idea of only testing the &quot;contract&quot;. But I don&#39;t see one can advocate actually not testing code - your mileage may vary.\r\n\r\nSo my tradeoff involves complicating the JUnits with reflection, rather than compromising my security &amp; SDK.\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":1248,"user_id":1678392,"user_type":"registered","accept_rate":93,"profile_image":"https://i.stack.imgur.com/LuMvG.jpg?s=128&g=1","display_name":"skia.heliou","link":"https://stackoverflow.com/users/1678392/skia-heliou"},"score":2,"creation_date":1421327579},{"owner":{"reputation":1248,"user_id":1678392,"user_type":"registered","accept_rate":93,"profile_image":"https://i.stack.imgur.com/LuMvG.jpg?s=128&g=1","display_name":"skia.heliou","link":"https://stackoverflow.com/users/1678392/skia-heliou"},"score":2,"creation_date":1421782828}],"owner":{"reputation":261,"user_id":373975,"user_type":"registered","profile_image":"https://i.stack.imgur.com/YOqCw.jpg?s=128&g=1","display_name":"phareim","link":"https://stackoverflow.com/users/373975/phareim"},"comment_count":2,"score":37,"creation_date":1294828041,"body_markdown":"To test legacy code with large and quirky classes, it is often very helpful to be able to test the one private (or public) method I&#39;m writing _right now_.\r\n\r\nI use the **junitx.util.PrivateAccessor**-package for Java . Lots of helpful one-liners for accessing private methods and private fields.\r\n\r\n    import junitx.util.PrivateAccessor;\r\n\r\n    PrivateAccessor.setField(myObjectReference, &quot;myCrucialButHardToReachPrivateField&quot;, myNewValue);\r\n    PrivateAccessor.invoke(myObjectReference, &quot;privateMethodName&quot;, java.lang.Class[] parameterTypes, java.lang.Object[] args);\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":9347,"user_id":300248,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/bc25a8b55f2b511375416cfe60055d17?s=128&d=identicon&r=PG","display_name":"simpatico","link":"https://stackoverflow.com/users/300248/simpatico"},"comment_count":0,"score":17,"creation_date":1298403671,"body_markdown":"The answer from [JUnit.org FAQ page][1]:\r\n\r\n&gt; But if you must...\r\n&gt; \r\n&gt; If you are using JDK 1.3 or higher, you can use reflection to subvert\r\n&gt; the access control mechanism with the aid of the [PrivilegedAccessor][2].\r\n&gt; For details on how to use it, read [this article][3].\r\n&gt; \r\n&gt; If you are using JDK 1.6 or higher and you annotate your tests with\r\n&gt; @Test, you can use [Dp4j][4] to inject reflection in your test methods. For\r\n&gt; details on how to use it, see [this test script][5].\r\n\r\nP.S. I&#39;m the main contributor to [Dp4j][4], ask [me][6] if you need help. :)\r\n\r\n\r\n  [1]: http://junit.org/faq.html#atests_11\r\n  [2]: http://sourceforge.net/projects/privaccessor/\r\n  [3]: http://www.onjava.com/pub/a/onjava/2003/11/12/reflection.html\r\n  [4]: http://dp4j.com\r\n  [5]: http://dp4j.com/testscript\r\n  [6]: https://stackoverflow.com/users/300248","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":4535,"user_id":424903,"user_type":"registered","profile_image":"https://i.stack.imgur.com/8oHZF.png?s=128&g=1","display_name":"Gimby","link":"https://stackoverflow.com/users/424903/gimby"},"comment_count":0,"score":0,"creation_date":1304002907,"body_markdown":"I only test the public interface, but I have been known to make specific private methods protected so I can either mock them out entirely, or add in additional steps specific for unit testing purposes. A general case is to hook in flags I can set from the unit test to make certain methods intentionally cause an exception to be able to test fault paths; the exception triggering code is only in the test path in an overridden implementation of the protected method.\r\n\r\nI minimize the need for this though and I always document the precise reasons to avoid confusion.","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":5223,"user_id":946904,"user_type":"registered","accept_rate":69,"profile_image":"https://i.stack.imgur.com/4Km5a.png?s=128&g=1","display_name":"marc wellman","link":"https://stackoverflow.com/users/946904/marc-wellman"},"comment_count":0,"score":3,"creation_date":1321374156,"body_markdown":"I am not sure whether this is a good technique, but I developed the following pattern to unit test private methods:\r\n\r\nI don&#39;t modify the visibility of the method that I want to test and add an additional method. Instead I am adding an additional public method for every private method I want to test. I call this additional method `Test-Port` and denote them with the prefix `t_`. This `Test-Port` method then simply accesses the according private method.\r\n\r\nAdditionally I add a boolean flag to the `Test-Port` method to decide whether I grant access to the private method through the `Test-Port` method from outside. This flag is then set globally in a static class where I place e.g. other global settings for the application. So I can switch the access to the private methods on and off in one place e.g. in the corresponding unit test.\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":12820,"user_id":7852,"user_type":"registered","accept_rate":74,"profile_image":"https://i.stack.imgur.com/HP5eX.jpg?s=128&g=1","display_name":"givanse","link":"https://stackoverflow.com/users/7852/givanse"},"score":2,"creation_date":1342190947},{"owner":{"reputation":5742,"user_id":56708,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/64c66e0f95ddc09d2c46f78bf74e0525?s=128&d=identicon&r=PG","display_name":"Jeff Olson","link":"https://stackoverflow.com/users/56708/jeff-olson"},"score":3,"creation_date":1367948083}],"owner":{"reputation":78,"user_id":107852,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0f7bc6c44cc0ac8e9f0a7cd03b3646af?s=128&d=identicon&r=PG","display_name":"sagehen03","link":"https://stackoverflow.com/users/107852/sagehen03"},"comment_count":2,"score":0,"creation_date":1325535174,"body_markdown":"Groovy has a [bug/feature][1], through which you can invoke private methods as if they were public.  So if you&#39;re able to use Groovy in your project, it&#39;s an option you can use in lieu of reflection.  Check out [this page][2] for an example.\r\n\r\n  [1]: http://jira.codehaus.org/browse/GROOVY-1875\r\n  [2]: http://marciogarcia.com/?p=80","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":128,"user_id":419109,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8f53a1c548c17a4740656e301f1f2726?s=128&d=identicon&r=PG","display_name":"Steven Bluen","link":"https://stackoverflow.com/users/419109/steven-bluen"},"comment_count":0,"score":1,"creation_date":1362355663,"body_markdown":"JML has a spec_public comment annotation syntax that allows you to specify a method as public during tests:\r\n\r\n    private /*@ spec_public @*/ int methodName(){\r\n    ...\r\n    }\r\n\r\nThis syntax is discussed at http://www.eecs.ucf.edu/~leavens/JML/jmlrefman/jmlrefman_2.html#SEC12. There also exists a program that translates JML specifications into JUnit tests. I&#39;m not sure how well that works or what its capabilities are, but it doesn&#39;t appear to be necessary since JML is a viable testing framework on its own.","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":9685,"user_id":887343,"user_type":"registered","accept_rate":77,"profile_image":"https://i.stack.imgur.com/adlbM.jpg?s=128&g=1","display_name":"forhas","link":"https://stackoverflow.com/users/887343/forhas"},"score":1,"creation_date":1380723134}],"owner":{"reputation":36678,"user_id":693752,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/1f9cd9b9bad9aa6115a1ed72433c180d?s=128&d=identicon&r=PG","display_name":"Snicolas","link":"https://stackoverflow.com/users/693752/snicolas"},"comment_count":1,"score":11,"creation_date":1379449430,"body_markdown":"Today, I pushed a Java library to help testing private methods and fields. It has been designed with Android in mind, but it can really be used for any Java project.\r\n\r\nIf you got some code with private methods or fields or constructors, you can use [**BoundBox**][1]. It does exactly what you are looking for.\r\nHere below is an example of a test that accesses two private fields of an Android activity to test it:\r\n\r\n    @UiThreadTest\r\n    public void testCompute() {\r\n\r\n        // Given\r\n        boundBoxOfMainActivity = new BoundBoxOfMainActivity(getActivity());\r\n\r\n        // When\r\n        boundBoxOfMainActivity.boundBox_getButtonMain().performClick();\r\n\r\n        // Then\r\n        assertEquals(&quot;42&quot;, boundBoxOfMainActivity.boundBox_getTextViewMain().getText());\r\n    }\r\n\r\n**BoundBox** makes it easy to test private/protected fields, methods and constructors. You can even access stuff that is hidden by inheritance. Indeed, BoundBox breaks encapsulation. It will give you access to all that through reflection, **BUT** everything is checked at compile time.\r\n\r\nIt is ideal for testing some legacy code. Use it carefully. ;)\r\n\r\nhttps://github.com/stephanenicolas/boundbox\r\n\r\n  [1]: https://github.com/stephanenicolas/boundbox\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":2,"creation_date":1475272283}],"owner":{"reputation":248,"user_id":312957,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/9ea1e767fe1989551e96690080c23d34?s=128&d=identicon&r=PG","display_name":"Antony Booth","link":"https://stackoverflow.com/users/312957/antony-booth"},"comment_count":1,"score":27,"creation_date":1386018773,"body_markdown":"Private methods are consumed by public ones. Otherwise, they&#39;re dead code. That&#39;s why you test the public method, asserting the expected results of the public method and thereby, the private methods it consumes.\r\n\r\nTesting private methods should be tested by debugging before running your unit tests on public methods.\r\n\r\nThey may also be debugged using test-driven development, debugging your unit tests until all your assertions are met.\r\n\r\nI personally believe it is better to create classes using TDD; creating the public method stubs, then generating unit tests with **all** the assertions defined in advance, so the expected outcome of the method is determined before you code it. This way, you don&#39;t go down the wrong path of making the unit test assertions fit the results. Your class is then robust and meets requirements when all your unit tests pass.\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":618,"user_id":1789360,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/CmbCW.jpg?s=128&g=1","display_name":"Yuli Reiri","link":"https://stackoverflow.com/users/1789360/yuli-reiri"},"comment_count":0,"score":12,"creation_date":1389169359,"body_markdown":"Here is my generic function to test private fields:\r\n\r\n    protected &lt;F&gt; F getPrivateField(String fieldName, Object obj)\r\n        throws NoSuchFieldException, IllegalAccessException {\r\n        Field field =\r\n            obj.getClass().getDeclaredField(fieldName);\r\n\r\n        field.setAccessible(true);\r\n        return (F)field.get(obj);\r\n    }\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":661,"user_id":609033,"user_type":"registered","accept_rate":30,"profile_image":"https://www.gravatar.com/avatar/6069a0e406e575a2bbe52b80753004bf?s=128&d=identicon&r=PG","display_name":"Sayo Oladeji","link":"https://stackoverflow.com/users/609033/sayo-oladeji"},"score":0,"creation_date":1433037843},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":1,"creation_date":1475272091},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":0,"creation_date":1489085648}],"owner":{"reputation":1302,"user_id":2373304,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/1dccy.jpg?s=128&g=1","display_name":"loknath","link":"https://stackoverflow.com/users/2373304/loknath"},"comment_count":3,"score":13,"creation_date":1399098798,"body_markdown":"A private method is only to be accessed within the same class. So there is no way to test a “private” method of a target class from any test class. A way out is that you can perform unit testing manually or can change your method from “private” to “protected”.\r\n\r\nAnd then a protected method can only be accessed within the same package where the class is defined. So, testing a protected method of a target class means we need to define your test class in the same package as the target class.\r\n\r\nIf all the above does not suits your requirement, use [**the  reflection way**][1] to access the private method.  \r\n\r\n  [1]: https://stackoverflow.com/questions/11483647/how-to-access-private-methods-and-private-data-members-via-reflection\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":31448,"user_id":1063716,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/594dfa12a4f922652c182c46b6bc2de3?s=128&d=identicon&r=PG","display_name":"Steve Chambers","link":"https://stackoverflow.com/users/1063716/steve-chambers"},"comment_count":0,"score":25,"creation_date":1415662560,"body_markdown":"If using Spring, [ReflectionTestUtils](http://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/util/ReflectionTestUtils.html) provides some handy tools that help out here with minimal effort. For example, to set up a mock on a private member without being forced to add an undesirable public setter:\r\n\r\n    ReflectionTestUtils.setField(theClass, &quot;theUnsettableField&quot;, theMockObject);","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":6598,"user_id":4497253,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1","display_name":"CoronA","link":"https://stackoverflow.com/users/4497253/corona"},"comment_count":0,"score":8,"creation_date":1430978564,"body_markdown":"I recently had this problem and wrote a little tool, called [Picklock][1], that avoids the problems of explicitly using the Java reflection API, two examples:\r\n\r\n**Calling methods, e.g. `private void method(String s)` - by Java reflection**\r\n\r\n    Method method = targetClass.getDeclaredMethod(&quot;method&quot;, String.class);\r\n    method.setAccessible(true);\r\n    return method.invoke(targetObject, &quot;mystring&quot;);\r\n\r\n**Calling methods, e.g. `private void method(String s)` - by Picklock**\r\n\r\n    interface Accessible {\r\n      void method(String s);\r\n    }\r\n\r\n    ...\r\n    Accessible a = ObjectAccess.unlock(targetObject).features(Accessible.class);\r\n    a.method(&quot;mystring&quot;);\r\n\r\n**Setting fields, e.g. `private BigInteger amount;` - by Java reflection**\r\n\r\n    Field field = targetClass.getDeclaredField(&quot;amount&quot;);\r\n    field.setAccessible(true);\r\n    field.set(object, BigInteger.valueOf(42));\r\n\r\n**Setting fields, e.g. `private BigInteger amount;` - by Picklock**\r\n\r\n    interface Accessible {\r\n      void setAmount(BigInteger amount);\r\n    }\r\n\r\n    ...\r\n    Accessible a = ObjectAccess.unlock(targetObject).features(Accessible.class);\r\n    a.setAmount(BigInteger.valueOf(42));\r\n\r\n  [1]: https://github.com/almondtools/picklock\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":220,"user_id":405131,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c0380b517275c4d69b9edc33a943f423?s=128&d=identicon&r=PG","display_name":"Denis Nikolaenko","link":"https://stackoverflow.com/users/405131/denis-nikolaenko"},"score":1,"creation_date":1584243057}],"owner":{"reputation":2164,"user_id":1781357,"user_type":"registered","accept_rate":45,"profile_image":"https://www.gravatar.com/avatar/82f0d252a13f7f930e212c15d69ca684?s=128&d=identicon&r=PG","display_name":"Mikhail","link":"https://stackoverflow.com/users/1781357/mikhail"},"comment_count":1,"score":36,"creation_date":1435132868,"body_markdown":"In the [Spring Framework][1] you can test private methods using this method:\r\n\r\n    ReflectionTestUtils.invokeMethod()\r\n\r\nFor example:\r\n\r\n    ReflectionTestUtils.invokeMethod(TestClazz, &quot;createTest&quot;, &quot;input data&quot;);\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Spring_Framework\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":2374,"user_id":3938606,"user_type":"registered","accept_rate":44,"profile_image":"https://www.gravatar.com/avatar/bb2c702a03d6218cf9f9b81adefa89e9?s=128&d=identicon&r=PG&f=1","display_name":"Seb","link":"https://stackoverflow.com/users/3938606/seb"},"score":2,"creation_date":1485858319},{"owner":{"reputation":322,"user_id":2641025,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1be0d013a9711d11e3e06daec2cfd6a3?s=128&d=identicon&r=PG","display_name":"Fr Jeremy Krieg","link":"https://stackoverflow.com/users/2641025/fr-jeremy-krieg"},"score":3,"creation_date":1509923706},{"owner":{"reputation":1170,"user_id":6648326,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/zaG25.jpg?s=128&g=1","display_name":"MasterJoe","link":"https://stackoverflow.com/users/6648326/masterjoe"},"score":0,"creation_date":1583860495},{"owner":{"reputation":322,"user_id":2641025,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1be0d013a9711d11e3e06daec2cfd6a3?s=128&d=identicon&r=PG","display_name":"Fr Jeremy Krieg","link":"https://stackoverflow.com/users/2641025/fr-jeremy-krieg"},"score":2,"creation_date":1583971258}],"owner":{"reputation":2684,"user_id":538160,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/4b816c3331088ec95af69b0f33137ad9?s=128&d=identicon&r=PG","display_name":"supernova","link":"https://stackoverflow.com/users/538160/supernova"},"comment_count":4,"score":42,"creation_date":1458489183,"body_markdown":"Another approach I have used is to change a private method to package private or protected then complement it with the **@VisibleForTesting** annotation of the Google Guava library.\r\n\r\nThis will tell anybody using this method to take caution and not access it directly even in a package. Also a test class need not be in same package **physically**, but in the same package under the **test** folder.\r\n\r\nFor example, if a method to be tested is in `src/main/java/mypackage/MyClass.java` then your test call should be placed in `src/test/java/mypackage/MyClassTest.java`. That way, you got access to the test method in your test class.\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":805,"user_id":2335016,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/09564e73403344f1d05d78e38140690c?s=128&d=identicon&r=PG","display_name":"Olcay Tarazan","link":"https://stackoverflow.com/users/2335016/olcay-tarazan"},"comment_count":0,"score":12,"creation_date":1464868321,"body_markdown":"Please see below for an example;\r\n\r\nThe following import statement should be added:\r\n\r\n    import org.powermock.reflect.Whitebox;\r\n\r\nNow you can directly pass the object which has the private method, method name to be called, and additional parameters as below.\r\n\r\n    Whitebox.invokeMethod(obj, &quot;privateMethod&quot;, &quot;param1&quot;);\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":1413,"user_id":2197088,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d938fd6a5c00595ba7680269988b74e5?s=128&d=identicon&r=PG","display_name":"Legna","link":"https://stackoverflow.com/users/2197088/legna"},"comment_count":0,"score":3,"creation_date":1464968869,"body_markdown":"A quick addition to @Cem Catikka&#39;s comment, when using ExpectedException:\r\n\r\nKeep in mind that your expected exception will be wrapped in an InvocationTargetException, so in order to get to your exception you will have to throw the cause of the InvocationTargetException you received. Something like (testing private method validateRequest() on BizService):\r\n\r\n    @Rule\r\n    public ExpectedException thrown = ExpectedException.none();\r\n\r\n    @Autowired(required = true)\r\n    private BizService svc;\r\n\r\n\r\n    @Test\r\n    public void testValidateRequest() throws Exception {\r\n\r\n        thrown.expect(BizException.class);\r\n        thrown.expectMessage(expectMessage);\r\n\r\n        BizRequest request = /* Mock it, read from source - file, etc. */;\r\n        validateRequest(request);\r\n    }\r\n\r\n    private void validateRequest(BizRequest request) throws Exception {\r\n        Method method = svc.getClass().getDeclaredMethod(&quot;validateRequest&quot;, BizRequest.class);\r\n        method.setAccessible(true);\r\n        try {\r\n            method.invoke(svc, request);\r\n        }\r\n        catch (InvocationTargetException e) {\r\n            throw ((BizException)e.getCause());\r\n        }\r\n     }\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":1,"creation_date":1489085180},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":0,"creation_date":1489085342},{"owner":{"reputation":3401,"user_id":3930424,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/dOJRF.jpg?s=128&g=1","display_name":"GROX13","link":"https://stackoverflow.com/users/3930424/grox13"},"score":2,"creation_date":1489085560},{"owner":{"reputation":3401,"user_id":3930424,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/dOJRF.jpg?s=128&g=1","display_name":"GROX13","link":"https://stackoverflow.com/users/3930424/grox13"},"score":1,"creation_date":1489085687},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":0,"creation_date":1489096768},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":0,"creation_date":1489097185},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":0,"creation_date":1489097275},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":0,"creation_date":1489097626},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":0,"creation_date":1489097994}],"owner":{"reputation":3401,"user_id":3930424,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/dOJRF.jpg?s=128&g=1","display_name":"GROX13","link":"https://stackoverflow.com/users/3930424/grox13"},"comment_count":9,"score":14,"creation_date":1472505059,"body_markdown":"I would suggest you refactoring your code a little bit. When you have to start thinking about using reflection or other kind of stuff, for just testing your code, something is going wrong with your code.\r\n\r\nYou mentioned different types of problems. Let&#39;s start with private fields. In case of private fields I would have added a new constructor and injected fields into that. Instead of this:\r\n\r\n    public class ClassToTest {\r\n\r\n        private final String first = &quot;first&quot;;\r\n        private final List&lt;String&gt; second = new ArrayList&lt;&gt;();\r\n        ...\r\n    }\r\n\r\nI&#39;d have used this:\r\n\r\n    public class ClassToTest {\r\n\r\n        private final String first;\r\n        private final List&lt;String&gt; second;\r\n\r\n        public ClassToTest() {\r\n            this(&quot;first&quot;, new ArrayList&lt;&gt;());\r\n        }\r\n\r\n        public ClassToTest(final String first, final List&lt;String&gt; second) {\r\n            this.first = first;\r\n            this.second = second;\r\n        }\r\n        ...\r\n    }\r\n\r\nThis won&#39;t be a problem even with some legacy code. Old code will be using an empty constructor, and if you ask me, refactored code will look cleaner, and you&#39;ll be able to inject necessary values in test without reflection.\r\n\r\nNow about private methods. In my personal experience when you have to stub a private method for testing, then that method has nothing to do in that class. A common pattern, in that case, would be to *wrap* it within an interface, like `Callable` and then you pass in that interface also in the constructor (with that multiple constructor trick):\r\n\r\n    public ClassToTest() {\r\n        this(...);\r\n    }\r\n\r\n    public ClassToTest(final Callable&lt;T&gt; privateMethodLogic) {\r\n        this.privateMethodLogic = privateMethodLogic;\r\n    }\r\n\r\nMostly all that I wrote looks like it&#39;s a dependency injection pattern. In my personal experience it&#39;s really useful while testing, and I think that this kind of code is cleaner and will be easier to maintain. I&#39;d say the same about nested classes. If a nested class contains heavy logic it would be better if you&#39;d moved it as a package private class and have injected it into a class needing it.\r\n\r\nThere are also several other design patterns which I have used while refactoring and maintaining legacy code, but it all depends on cases of your code to test. Using reflection mostly is not a problem, but when you have an enterprise application which is heavily tested and tests are run before every deployment everything gets really slow (it&#39;s just annoying and I don&#39;t like that kind of stuff).\r\n\r\nThere is also setter injection, but I wouldn&#39;t recommended using it. I&#39;d better stick with a constructor and initialize everything when it&#39;s really necessary, leaving the possibility for injecting necessary dependencies.\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":190,"user_id":7599315,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/c0365d97605028731a4cd879a6cab525?s=128&d=identicon&r=PG&f=1","display_name":"Rahul","link":"https://stackoverflow.com/users/7599315/rahul"},"comment_count":0,"score":1,"creation_date":1504892218,"body_markdown":"You can use PowerMockito to set return values for private fields and private methods that are called/used in the private method you want to test:\r\n\r\nEg. Setting return value for private method:\r\n\r\n    MyClient classUnderTest = PowerMockito.spy(new MyClient());\r\n\r\n    //Set expected return value\r\n    PowerMockito.doReturn(20).when(classUnderTest, &quot;myPrivateMethod&quot;, anyString(), anyInt());\r\n    //This is very important otherwise it will not work\r\n    classUnderTest.myPrivateMethod(); \r\n\r\n    //Setting private field value as someValue:\r\n    Whitebox.setInternalState(classUnderTest, &quot;privateField&quot;, someValue);\r\n\r\nThen finally you can validate your private method under test is returning correct value based on set values above by:\r\n\r\n    String msg = Whitebox.invokeMethod(obj, &quot;privateMethodToBeTested&quot;, &quot;param1&quot;);\r\n    Assert.assertEquals(privateMsg, msg);\r\nOr \r\n\r\nIf classUnderTest private method does not return value but it set another private field then you can get that private field value to see if it was set correctly:\r\n\r\n    //To get value of private field\r\n    MyClass obj = Whitebox.getInternalState(classUnderTest, &quot;foo&quot;);\r\n    assertThat(obj, is(notNull(MyClass.class))); // or test value\r\n\r\n\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":1008,"user_id":3794038,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a3279d4553a6a584651144d08c4c75aa?s=128&d=identicon&r=PG&f=1","display_name":"Constantinos","link":"https://stackoverflow.com/users/3794038/constantinos"},"score":5,"creation_date":1509305125},{"owner":{"reputation":184,"user_id":4836141,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0af12576ab19d54b1901beaeccb4fb5b?s=128&d=identicon&r=PG&f=1","display_name":"Miladinho","link":"https://stackoverflow.com/users/4836141/miladinho"},"score":3,"creation_date":1546890775}],"owner":{"reputation":184,"user_id":4836141,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0af12576ab19d54b1901beaeccb4fb5b?s=128&d=identicon&r=PG&f=1","display_name":"Miladinho","link":"https://stackoverflow.com/users/4836141/miladinho"},"comment_count":2,"score":5,"creation_date":1509303695,"body_markdown":"I&#39;d like to contribute that of you are worried by not testing private methods as many of the posts suggest, consider that a **code coverage** tool will determine exactly how much of your code is tested and where it leaks, so it is quantifiably acceptable to do this.\r\n\r\nI am going to say something that needs to be said but many may not like to hear. Those of you contributing answers that direct the author of the question towards a &#39;work around&#39; are doing a massive disservice to the community. Testing is a major part of all engineering disciplines, you would not want to buy a car that is not properly tested, and tested in a meaningful way, so why would anyone want to buy or use software that is tested poorly? The reason people do this anyways is probably because the effects of badly tested software are felt way after the fact, and we don&#39;t usually associate them with bodily harm. This is a very dangerous perception which will be difficult to change, but it is our responsibility to deliver safe products regardless of what even management is bullying us to do. Think Equifax hack... \r\n\r\nWe must strive to build an environment that encourages good software engineering practices, this does not mean ostracizing the weak/lazy among us who do not take their craft seriously, but rather, to create a status quo of accountability and self reflection that would encourage everyone to pursue growth, both mentally and skillfully. I am still learning, and may have wrong perceptions/opinions myself, but I do firmly believe that we need to hold ourselves accountable to good practices and shun irresponsible hacks or workarounds to problems.","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":4504,"user_id":1550509,"user_type":"registered","accept_rate":44,"profile_image":"https://i.stack.imgur.com/DPQCa.jpg?s=128&g=1","display_name":"Android is everything for me","link":"https://stackoverflow.com/users/1550509/android-is-everything-for-me"},"comment_count":0,"score":2,"creation_date":1511436840,"body_markdown":"Best and proper legal way to test Java private method from test framework is **@VisibleForTesting** annotation over the method so same method will be visible for test framework as like public method.","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":929,"user_id":4610114,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/7HTdY.png?s=128&g=1","display_name":"Franz D.","link":"https://stackoverflow.com/users/4610114/franz-d"},"score":0,"creation_date":1530801131},{"owner":{"reputation":9534,"user_id":3691783,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/18bfba7d4beb1c210fa670cf57c66f4b?s=128&d=identicon&r=PG","display_name":"Matt Messersmith","link":"https://stackoverflow.com/users/3691783/matt-messersmith"},"score":1,"creation_date":1534298303},{"owner":{"reputation":33616,"user_id":45685,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/y4RJr.jpg?s=128&g=1","display_name":"AndersK","link":"https://stackoverflow.com/users/45685/andersk"},"score":2,"creation_date":1551079146}],"owner":{"reputation":802,"user_id":1125774,"user_type":"registered","profile_image":"https://i.stack.imgur.com/zthh8.jpg?s=128&g=1","display_name":"mohammad madani","link":"https://stackoverflow.com/users/1125774/mohammad-madani"},"comment_count":3,"score":6,"creation_date":1515571007,"body_markdown":"In c++ : before including class header that has a private function that you want test it\r\n\r\nUse this code:\r\n\r\n    #define private public\r\n    #define protected public","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":12933,"user_id":522729,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/5610e7161cc5e1dee1d7209ab65cc5ad?s=128&d=identicon&r=PG","display_name":"Victor Grazi","link":"https://stackoverflow.com/users/522729/victor-grazi"},"comment_count":0,"score":9,"creation_date":1516824508,"body_markdown":"PowerMockito is made for this.\r\nUse maven dependency\r\n\r\n        &lt;dependency&gt;\r\n            &lt;groupId&gt;org.powermock&lt;/groupId&gt;\r\n            &lt;artifactId&gt;powermock-core&lt;/artifactId&gt;\r\n            &lt;version&gt;2.0.7&lt;/version&gt;\r\n            &lt;scope&gt;test&lt;/scope&gt;\r\n        &lt;/dependency&gt;\r\n\r\nThen you can do \r\n    \r\n    import org.powermock.reflect.Whitebox;\r\n    ...\r\n    MyClass sut = new MyClass();\r\n    SomeType rval = Whitebox.invokeMethod(sut, &quot;myPrivateMethod&quot;, params, moreParams);\r\n\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":169,"user_id":8356771,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/2757e8c6c6fa9f1450c95ea016b8854c?s=128&d=identicon&r=PG&f=1","display_name":"HilaB","link":"https://stackoverflow.com/users/8356771/hilab"},"comment_count":0,"score":1,"creation_date":1530184772,"body_markdown":"My team and I are using Typemock, which has an API that allows you to [fake non-public methods.][1] \r\nRecently they added the ability to [fake non-visible types][2] and to use XUnit. \r\n\r\n  [1]: https://www.typemock.com/docs/?book=Isolator&amp;page=Documentation%2FHtmlDocs%2Fcontrollingnonpublicmethods.htm\r\n  [2]: https://www.typemock.com/docs/?book=Isolator&amp;page=Documentation%2FHtmlDocs%2Ffakingnonpublicobjects.htm","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":2859,"user_id":2300013,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a3d1849176183b37842920c364db487a?s=128&d=identicon&r=PG","display_name":"AR1","link":"https://stackoverflow.com/users/2300013/ar1"},"comment_count":0,"score":1,"creation_date":1537609671,"body_markdown":"If you have a case where you really need to test a private method/class etc.. directly, you can use reflection as already mentioned in other answers. However if it comes to that, instead of dealing directly with reflection I&#39;d rather use util classes provided by your framework. For instance, for Java we have:\n\n \n - [ReflectionUtils][1]  Spring framework\n \n - [ReflectionUtils][2] JUnit\n\nAs per how to use them, you can find plenty of articles online. Here one that I particularly liked:\n\n - [Java Code Examples for org.springframework.util.ReflectionUtils][3]\n\n\n  [1]: https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/util/ReflectionUtils.html\n  [2]: https://junit.org/junit5/docs/5.0.3/api/org/junit/platform/commons/util/ReflectionUtils.html\n  [3]: https://www.programcreek.com/java-api-examples/index.php?api=org.springframework.util.ReflectionUtils","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":1004,"user_id":7629797,"user_type":"registered","profile_image":"https://i.stack.imgur.com/dhQVE.jpg?s=128&g=1","display_name":"Louis Saglio","link":"https://stackoverflow.com/users/7629797/louis-saglio"},"comment_count":0,"score":2,"creation_date":1544730020,"body_markdown":"You can create a special public method to proxy the private method to test.\r\nThe @TestOnly annotation is out of the box available when using IntelliJ.\r\nThe downside is is that if somebody want to to use the private method in a public context, he can do it. But he will be warned by the annotation and the method name. On IntelliJ a warning will appear when doing it.\r\n\r\n    import org.jetbrains.annotations.TestOnly\r\n\r\n    class MyClass {\r\n    \r\n        private void aPrivateMethod() {}\r\n\r\n        @TestOnly\r\n        public void aPrivateMethodForTest() {\r\n            aPrivateMethod()\r\n        }\r\n    }","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":1211,"user_id":4308897,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-X67wO4XjVAE/AAAAAAAAAAI/AAAAAAAAADw/NacwJv67gHI/photo.jpg?sz=128","display_name":"Ercan","link":"https://stackoverflow.com/users/4308897/ercan"},"comment_count":0,"score":0,"creation_date":1554798212,"body_markdown":"There is another approach to test your private methods.\r\nIf you &quot;enable assertion&quot; in run configurations then you can unit test your method inside method itself. For example;\r\n\r\n    assert (&quot;Ercan&quot;.equals(person1.name));\r\n    assert (Person.count == 2);","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":6688,"user_id":4537090,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/Dwxvn.jpg?s=128&g=1","display_name":"WesternGun","link":"https://stackoverflow.com/users/4537090/westerngun"},"comment_count":0,"score":1,"creation_date":1557671253,"body_markdown":"`PowerMock.Whitebox` is the best option I have seen, but when I read its source code, it reads private fields with reflection, so I think I have my answer: \r\n\r\n - test private internal states(fields) with PowerMock, or just reflection without the overhead of introducing another independency\r\n - for private methods: actually, the upvote for this question itself, and the huge number of comments and answers, shows that it is a very concurrent and controversial topic **where no definite answer could be given to suit every circumstance**. I understand that only contract should be tested, but we also have coverage to consider. Actually, **I doubt that only testing contracts will 100% make a class immune to errors**. Private methods are those who process data in the class where it is defined and thus does not interest other classes, so we cannot simply expose to make it testable. I will **try not to test them**, but when you have to, **just go for it and forget all the answers here**. You know better your situation and restrictions than any other one in the Internet. When you have control over your code, use that. With consideration, but without over-thinking. \r\n\r\n---\r\n\r\nAfter some time, when I reconsider it, I still believe this is true, but I saw better approaches.\r\n\r\nFirst of all, `Powermock.Whitebox` is still usable. \r\n\r\nAnd, Mockito `Whitebox` has been hidden after v2(the latest version I can find with `Whitebox` is `testImplementation &#39;org.mockito:mockito-core:1.10.19&#39;`) and it has always been part of `org.mockito.internal` package, which is prone of breaking changes in the future(see [this post](https://stackoverflow.com/questions/40280918/what-do-i-use-instead-of-whitebox-in-mockito-2-2-to-set-fields)). So now I tend not to use it. \r\n\r\nIn Gradle/Maven projects, if you define private methods or fields, there is no other ways then reflection to get access to them, so the first part stays true. But, if you change the visibility to &quot;package private&quot;, **the tests following the same structure in `test` package will have access to them.** That is also another important reason why we are encouraged to create the same hierarchy in `main` and `test` package. So, when you have control over production code as well as tests, delete that `private` access modifier may be the best option for you because relatively it does not cause huge impact. And, that makes testing as well as **private method spying** possible.\r\n```java\r\n@Autowired\r\nprivate SomeService service; // with a package private method &quot;doSomething()&quot;\r\n\r\n@Test\r\nvoid shouldReturnTrueDoSomething() {\r\n    assertThat(doSomething(input), is(true)); // package private method testing\r\n}\r\n\r\n@Test\r\nvoid shouldReturnTrueWhenServiceThrowsException() {\r\n    SomeService spy = Mockito.spy(service); // spying real object\r\n    doThrow(new AppException()).when(spy).doSomething(input); // spy package private method\r\n    ...\r\n    \r\n}\r\n```\r\n\r\nWhen it comes to internal fields, in Spring you have `ReflectionUtils.setField()`. \r\n\r\nAt last, sometimes we can bypass the problem itself: if there is a coverage requirement to meet, maybe you can move these private methods into an inner static class and ignore this class in Jacoco. I just found some way to ignore inner class in Jacoco gradle tasks. [another question](https://stackoverflow.com/questions/58604955/how-to-ignore-inner-static-classes-in-jacoco-when-using-gradle)","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":11921,"user_id":4770877,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/cccebea2d190bf8f2054c1949ffa8677?s=128&d=identicon&r=PG&f=1","display_name":"yoAlex5","link":"https://stackoverflow.com/users/4770877/yoalex5"},"comment_count":0,"score":1,"creation_date":1562946652,"body_markdown":"Android has [`@VisibleForTesting`][1] annotation from `android.support.annotation` package.\r\n\r\n&gt;The `@VisibleForTesting` annotation indicates that an annotated method is more visible than normally necessary to make the method testable. This annotation has an optional `otherwise` argument that lets you designate what the visibility of the method should have been if not for the need to make it visible for testing. Lint uses the `otherwise` argument to enforce the intended visibility.\r\n\r\nOn the practice it means that you should make a method open for testing and the `@VisibleForTesting` annotation will show a warning.\r\n\r\nFor example\r\n\r\n    package com.mypackage;\r\n \r\n    public class ClassA {\r\n\r\n        @VisibleForTesting(otherwise = VisibleForTesting.PRIVATE)\r\n        static void myMethod() {\r\n\r\n        }\r\n    }\r\n\r\nAnd when you call ClassA.myMethod() within the same package(com.mypackage) you will see the warning.\r\n\r\n[![enter image description here][2]][2]\r\n\r\n\r\n  [1]: https://developer.android.com/studio/write/annotations.html#visible\r\n  [2]: https://i.stack.imgur.com/25FX3.png","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"comments":[{"owner":{"reputation":720,"user_id":4818802,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/a760701b7a9260a73bc49ffcdb0567af?s=128&d=identicon&r=PG&f=1","display_name":"Xeverous","link":"https://stackoverflow.com/users/4818802/xeverous"},"score":0,"creation_date":1566844658}],"owner":{"reputation":3993,"user_id":2915032,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/VMG1A.jpg?s=128&g=1","display_name":"avtomaton","link":"https://stackoverflow.com/users/2915032/avtomaton"},"comment_count":1,"score":0,"creation_date":1565893963,"body_markdown":"For C++ (since C++11) adding the test class as a friend works perfectly and does not break production encapsulation.\r\n\r\nLet&#39;s suppose that we have some class `Foo` with some private functions which really require testing, and some class `FooTest` that should have access to Foo&#39;s private members. Then we should write the following:\r\n\r\n```\r\n// prod.h: some production code header\r\n\r\n// forward declaration is enough\r\n// we should not include testing headers into production code\r\nclass FooTest;\r\n\r\nclass Foo\r\n{\r\n  // that does not affect Foo&#39;s functionality\r\n  // but now we have access to Foo&#39;s members from FooTest\r\n  friend FooTest;\r\npublic:\r\n  Foo();\r\nprivate:\r\n  bool veryComplicatedPrivateFuncThatReallyRequiresTesting();\r\n}\r\n```\r\n\r\n```\r\n// test.cpp: some test\r\n#include &lt;prod.h&gt;\r\n\r\nclass FooTest\r\n{\r\npublic:\r\n  void complicatedFisture() {\r\n    Foo foo;\r\n    ASSERT_TRUE(foo.veryComplicatedPrivateFuncThatReallyRequiresTesting());\r\n  }\r\n}\r\n\r\nint main(int /*argc*/, char* argv[])\r\n{\r\n  FooTest test;\r\n  test.complicatedFixture();  // and it really works!\r\n}\r\n```","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":2229,"user_id":6769119,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-cJOCPQ3_674/AAAAAAAAAAI/AAAAAAAABBw/WCyslIvdXbk/photo.jpg?sz=128","display_name":"Mukundhan","link":"https://stackoverflow.com/users/6769119/mukundhan"},"comment_count":0,"score":0,"creation_date":1571406813,"body_markdown":"The following **Reflection TestUtil** could be ***used generically*** to test the ***private methods for their atomicity***.\r\n\r\n\r\n\r\n\r\n    import com.google.common.base.Preconditions;\r\n    \r\n    import org.springframework.test.util.ReflectionTestUtils;\r\n    \r\n    /**\r\n     * &lt;p&gt;\r\n     * Invoker\r\n     * &lt;/p&gt;\r\n     *\r\n     * @author\r\n     * @created Oct-10-2019\r\n     */\r\n    public class Invoker {\r\n        private Object target;\r\n        private String methodName;\r\n        private Object[] arguments;\r\n    \r\n        public &lt;T&gt; T invoke() {\r\n            try {\r\n                Preconditions.checkNotNull(target, &quot;Target cannot be empty&quot;);\r\n                Preconditions.checkNotNull(methodName, &quot;MethodName cannot be empty&quot;);\r\n                if (null == arguments) {\r\n                    return ReflectionTestUtils.invokeMethod(target, methodName);\r\n                } else {\r\n                    return ReflectionTestUtils.invokeMethod(target, methodName, arguments);\r\n                }\r\n            } catch (Exception e) {\r\n               throw e;\r\n            }\r\n        }\r\n    \r\n        public Invoker withTarget(Object target) {\r\n            this.target = target;\r\n            return this;\r\n        }\r\n    \r\n        public Invoker withMethod(String methodName) {\r\n            this.methodName = methodName;\r\n            return this;\r\n        }\r\n    \r\n        public Invoker withArguments(Object... args) {\r\n            this.arguments = args;\r\n            return this;\r\n        }\r\n    \r\n    }\r\n    \r\n    Object privateMethodResponse = new Invoker()\r\n      .withTarget(targetObject)\r\n      .withMethod(PRIVATE_METHOD_NAME_TO_INVOKE)\r\n      .withArguments(arg1, arg2, arg3)\r\n      .invoke();\r\n    Assert.assertNotNutll(privateMethodResponse)\r\n\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":37,"user_id":4458900,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/809fe77ef5079fbb6c618d594d49ad80?s=128&d=identicon&r=PG&f=1","display_name":"Vishwas","link":"https://stackoverflow.com/users/4458900/vishwas"},"comment_count":0,"score":0,"creation_date":1579141772,"body_markdown":"If you are only using Mockito:\r\n\r\nYou can consider the private method as a part of public method being tested. You can make sure you cover all the cases in private method when testing public method.\r\n\r\nSuppose you are a mockito only user(You are not allowed or don&#39;t want to use Powermock or reflection or any such tools) and you dont want to change the existing code or libraries being tested, this might be the best way. \r\n\r\nThe only thing you need to handle if you choose this way is the variables(user defined objects) declared locally within private methods.  If the private method depends on locally declared variable objects and their methods, make sure you declare those user defined objects globally as private object instead of locally declared objects. You can instantiate these objects locally . \r\n\r\nThis allows you to mock these objects and inject them back to testing object. You can also mock(using when/then) their methods. \r\n\r\nThis will allow you test private method without errors when testing the public method.\r\n\r\nAdvantages\r\n1. code coverage\r\n2. Able to test the complete private method.\r\n\r\nDisadvantages\r\n1. Scope of the Object - If you don&#39;t want the object to be exposed to other methods within same class, this might not be your way.\r\n2. You might end up testing the private method multiple times when invoked at different public methods and/or in same method multiple times.\r\n\r\n\r\n\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":1568,"user_id":9389293,"user_type":"registered","profile_image":"https://i.stack.imgur.com/AjGCK.jpg?s=128&g=1","display_name":"Abhishek Sengupta","link":"https://stackoverflow.com/users/9389293/abhishek-sengupta"},"comment_count":0,"score":3,"creation_date":1584121344,"body_markdown":"Hey use this utility class if you are on **spring**.\r\n\r\n    ReflectionTestUtils.invokeMethod(new ClassName(), &quot;privateMethodName&quot;);\r\n\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":617,"user_id":7280140,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/fHhkQ.jpg?s=128&g=1","display_name":"Ahmed Hussein","link":"https://stackoverflow.com/users/7280140/ahmed-hussein"},"comment_count":0,"score":0,"creation_date":1593413584,"body_markdown":"In your class:\r\n\r\n    namespace my_namespace {\r\n        #ifdef UNIT_TEST\r\n            class test_class;\r\n        #endif\r\n\r\n        class my_class {\r\n            public:\r\n                #ifdef UNIT_TEST\r\n                    friend class test_class;\r\n                #endif\r\n            private:\r\n                void fun() { cout &lt;&lt; &quot;I am private&quot; &lt;&lt; endl; }\r\n        }\r\n    }\r\n\r\nIn your unit test class:\r\n\r\n    #ifndef UNIT_TEST\r\n        #define UNIT_TEST\r\n    #endif\r\n\r\n    #include &quot;my_class.h&quot;\r\n \r\n    class my_namespace::test_class {\r\n        public:\r\n            void fun() { my_obj.fun(); }\r\n        private:\r\n            my_class my_obj;\r\n    }\r\n\r\n    void my_unit_test() {\r\n        test_class test_obj;\r\n        test_obj.fun(); // here you accessed the private function ;)\r\n    }\r\n","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"owner":{"reputation":570,"user_id":3110488,"user_type":"registered","profile_image":"https://i.stack.imgur.com/seEic.jpg?s=128&g=1","display_name":"m.nguyencntt","link":"https://stackoverflow.com/users/3110488/m-nguyencntt"},"comment_count":0,"score":3,"creation_date":1595576782,"body_markdown":"Detail my sample with lombok as below. private field, private method:\r\n\r\n    public static void main(String[] args) throws NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException, NoSuchMethodException, InvocationTargetException {\r\n\t\tStudent student = new Student();\r\n\r\n\t\tField privateFieldName = Student.class.getDeclaredField(&quot;name&quot;);\r\n\t\tprivateFieldName.setAccessible(true);\r\n\t\tprivateFieldName.set(student, &quot;Naruto&quot;);\r\n\r\n\t\tField privateFieldAge = Student.class.getDeclaredField(&quot;age&quot;);\r\n\t\tprivateFieldAge.setAccessible(true);\r\n\t\tprivateFieldAge.set(student, &quot;28&quot;);\r\n\r\n\t\tSystem.out.println(student.toString());\r\n\r\n\t\tMethod privateMethodGetInfo = Student.class.getDeclaredMethod(&quot;getInfo&quot;, String.class, String.class);\r\n\t\tprivateMethodGetInfo.setAccessible(true);\r\n\t\tSystem.out.println(privateMethodGetInfo.invoke(student, &quot;Sasuke&quot;, &quot;29&quot;));\r\n\t}\r\n\r\n\r\n\t@Setter\r\n\t@Getter\r\n\t@ToString\r\n\tclass Student {\r\n\t  private String name;\r\n\t  private String age;\r\n\r\n\t  private String getInfo(String name, String age) {\r\n\t\treturn name + &quot;-&quot; + age;\r\n\t  }\r\n\t}","title":"How do I test a private function or a class that has private methods, fields or inner classes?"}],"owner":{"reputation":11006,"user_id":3098,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/90f5ff22cf73eefda97decffdf45de32?s=128&d=identicon&r=PG","display_name":"MattGrommes","link":"https://stackoverflow.com/users/3098/mattgrommes"},"comment_count":2,"is_answered":true,"answer_count":55,"score":2868,"creation_date":1220026269,"question_id":34571,"body_markdown":"How do I unit test (using xUnit) a class that has internal private methods, fields or nested classes? Or a function that is made private by having [internal linkage](https://stackoverflow.com/questions/1358400/what-is-external-linkage-and-internal-linkage) (`static` in C/C++) or is in a private ([anonymous](https://stackoverflow.com/questions/154469/unnamed-anonymous-namespaces-vs-static-functions)) namespace?\r\n\r\nIt seems bad to change the access modifier for a method or function just to be able to run a test. \r\n","link":"https://stackoverflow.com/questions/34571/how-do-i-test-a-private-function-or-a-class-that-has-private-methods-fields-or","title":"How do I test a private function or a class that has private methods, fields or inner classes?"},{"tags":["java","performance","loops","for-loop","system.out"],"comments":[{"owner":{"reputation":4323,"user_id":1565862,"user_type":"registered","profile_image":"https://i.stack.imgur.com/wJLo7.png?s=128&g=1","display_name":"fejese","link":"https://stackoverflow.com/users/1565862/fejese"},"score":62,"creation_date":1393026583},{"owner":{"reputation":249530,"user_id":438154,"user_type":"registered","accept_rate":98,"profile_image":"https://www.gravatar.com/avatar/827d86026ddc062f449ccedece1c52da?s=128&d=identicon&r=PG&f=1","display_name":"Sotirios Delimanolis","link":"https://stackoverflow.com/users/438154/sotirios-delimanolis"},"score":3,"creation_date":1393026696},{"owner":{"reputation":20234,"user_id":1896169,"user_type":"registered","accept_rate":98,"profile_image":"https://i.stack.imgur.com/jap8U.png?s=128&g=1","display_name":"Justin","link":"https://stackoverflow.com/users/1896169/justin"},"score":3,"creation_date":1393026723},{"owner":{"reputation":4257,"user_id":1142253,"user_type":"registered","profile_image":"https://i.stack.imgur.com/JTDfX.jpg?s=128&g=1","display_name":"Kakarot","link":"https://stackoverflow.com/users/1142253/kakarot"},"score":160,"creation_date":1393026769},{"owner":{"reputation":9446,"user_id":2305826,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/xRwWw.png?s=128&g=1","display_name":"MarsAtomic","link":"https://stackoverflow.com/users/2305826/marsatomic"},"score":2,"creation_date":1393027169},{"owner":{"reputation":581129,"user_id":1491895,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/82f9e178a16364bf561d0ed4da09a35d?s=128&d=identicon&r=PG","display_name":"Barmar","link":"https://stackoverflow.com/users/1491895/barmar"},"score":19,"creation_date":1393125670},{"owner":{"reputation":512,"user_id":401346,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2c9632d7d0e52bfbc0dbb902e8db3520?s=128&d=identicon&r=PG","display_name":"Divide","link":"https://stackoverflow.com/users/401346/divide"},"score":24,"creation_date":1393328686},{"owner":{"reputation":10144,"user_id":2157640,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/aoymS.png?s=128&g=1","display_name":"Palec","link":"https://stackoverflow.com/users/2157640/palec"},"score":0,"creation_date":1441042837},{"owner":{"reputation":7688,"user_id":3453226,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/8c681e1b2ff238b273596e227be778ac?s=128&d=identicon&r=PG&f=1","display_name":"Francesco Menzani","link":"https://stackoverflow.com/users/3453226/francesco-menzani"},"score":1,"creation_date":1441113053},{"owner":{"reputation":928,"user_id":2655988,"user_type":"registered","accept_rate":30,"profile_image":"https://www.gravatar.com/avatar/85bec2e7ca2632bde58e60fd1ff11927?s=128&d=identicon&r=PG","display_name":"Nishit","link":"https://stackoverflow.com/users/2655988/nishit"},"score":0,"creation_date":1522901642}],"answers":[{"comments":[{"owner":{"reputation":1449,"user_id":556742,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/33008536cdf6697c002fd5f2629ca895?s=128&d=identicon&r=PG","display_name":"Bob Kerns","link":"https://stackoverflow.com/users/556742/bob-kerns"},"score":322,"creation_date":1393195122},{"owner":{"reputation":25965,"user_id":338068,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/4cb6a6a3ccc0d568a0944a6655e22803?s=128&d=identicon&r=PG","display_name":"Chris","link":"https://stackoverflow.com/users/338068/chris"},"score":18,"creation_date":1393254585},{"owner":{"reputation":42188,"user_id":1016716,"user_type":"registered","accept_rate":72,"profile_image":"https://www.gravatar.com/avatar/1c83d772b1c065603c7f20975d8d3552?s=128&d=identicon&r=PG","display_name":"Mr Lister","link":"https://stackoverflow.com/users/1016716/mr-lister"},"score":2,"creation_date":1393446121},{"owner":{"reputation":3587,"user_id":371191,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/e1caa49eebfe37ffe3ef64e19364b0b3?s=128&d=identicon&r=PG","display_name":"Silly Freak","link":"https://stackoverflow.com/users/371191/silly-freak"},"score":7,"creation_date":1393446901},{"owner":{"reputation":860689,"user_id":157247,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/4HovX.jpg?s=128&g=1","display_name":"T.J. Crowder","link":"https://stackoverflow.com/users/157247/t-j-crowder"},"score":39,"creation_date":1393452673},{"owner":{"reputation":1449,"user_id":556742,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/33008536cdf6697c002fd5f2629ca895?s=128&d=identicon&r=PG","display_name":"Bob Kerns","link":"https://stackoverflow.com/users/556742/bob-kerns"},"score":39,"creation_date":1393849668},{"owner":{"reputation":4145,"user_id":1410669,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/e48a0c062eea7f211bd8cf5ae31c2886?s=128&d=identicon&r=PG&f=1","display_name":"UpAndAdam","link":"https://stackoverflow.com/users/1410669/upandadam"},"score":9,"creation_date":1396642286},{"owner":{"reputation":20116,"user_id":1173112,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/rtcjY.jpg?s=128&g=1","display_name":"Koray Tugay","link":"https://stackoverflow.com/users/1173112/koray-tugay"},"score":0,"creation_date":1420995139},{"owner":{"reputation":3587,"user_id":371191,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/e1caa49eebfe37ffe3ef64e19364b0b3?s=128&d=identicon&r=PG","display_name":"Silly Freak","link":"https://stackoverflow.com/users/371191/silly-freak"},"score":0,"creation_date":1421008472},{"owner":{"reputation":3841,"user_id":889053,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/3e26b08aa9c9bff40d6dab7b98680bf4?s=128&d=identicon&r=PG","display_name":"Christian Bongiorno","link":"https://stackoverflow.com/users/889053/christian-bongiorno"},"score":7,"creation_date":1421254743},{"owner":{"reputation":5792,"user_id":3950982,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG","display_name":"Luke Hutchison","link":"https://stackoverflow.com/users/3950982/luke-hutchison"},"score":0,"creation_date":1520742969},{"owner":{"reputation":580,"user_id":1330085,"user_type":"registered","profile_image":"https://i.stack.imgur.com/H8jo2.png?s=128&g=1","display_name":"cleberz","link":"https://stackoverflow.com/users/1330085/cleberz"},"score":1,"creation_date":1538689366},{"owner":{"reputation":3075,"user_id":1324393,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/462dfbd15fcd32d5c52ca867fa914b9b?s=128&d=identicon&r=PG","display_name":"GoatInTheMachine","link":"https://stackoverflow.com/users/1324393/goatinthemachine"},"score":1,"creation_date":1540302907}],"owner":{"reputation":860689,"user_id":157247,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/4HovX.jpg?s=128&g=1","display_name":"T.J. Crowder","link":"https://stackoverflow.com/users/157247/t-j-crowder"},"comment_count":13,"score":4137,"creation_date":1393027321,"body_markdown":"*Pure speculation* is that you&#39;re using a terminal that attempts to do [word-wrapping][1] rather than character-wrapping, and treats `B` as a word character but `#` as a non-word character. So when it reaches the end of a line and searches for a place to break the line, it sees a `#` almost immediately and happily breaks there; whereas with the `B`, it has to keep searching for longer, and may have more text to wrap (which may be expensive on some terminals, e.g., outputting backspaces, then outputting spaces to overwrite the letters being wrapped).\r\n\r\nBut that&#39;s pure speculation.\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Word_wrap","title":"Why is printing &quot;B&quot; dramatically slower than printing &quot;#&quot;?"},{"comments":[{"owner":{"reputation":318,"user_id":1394917,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/540c60ff8bfc7057ac9af4f7231a7999?s=128&d=identicon&r=PG","display_name":"silph","link":"https://stackoverflow.com/users/1394917/silph"},"score":34,"creation_date":1477802985},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":0,"creation_date":1593861951},{"owner":{"reputation":173,"user_id":11670196,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ad0ea391d628290be8b71786bfb2e217?s=128&d=identicon&r=PG&f=1","display_name":"Tobias","link":"https://stackoverflow.com/users/11670196/tobias"},"score":1,"creation_date":1604584267}],"owner":{"reputation":4399,"user_id":3962211,"user_type":"registered","accept_rate":71,"profile_image":"https://graph.facebook.com/100001763507125/picture?type=large","display_name":"Roy Shmuli","link":"https://stackoverflow.com/users/3962211/roy-shmuli"},"comment_count":3,"score":222,"creation_date":1428073264,"body_markdown":"I performed tests on Eclipse vs Netbeans 8.0.2, both with Java version 1.8;\nI used `System.nanoTime()` for measurements.\n\n## Eclipse:\n\nI got the **same time on both cases** - around **1.564 seconds**.\n\n## Netbeans:\n\n* Using &quot;#&quot;: **1.536 seconds**\n* Using &quot;B&quot;: **44.164 seconds**\n\nSo, it looks like Netbeans has bad performance on print to console.\n\nAfter more research I realized that the problem is [line-wrapping][1] of the max buffer of Netbeans (it&#39;s not restricted to `System.out.println` command), demonstrated by this code:\n\n    for (int i = 0; i &lt; 1000; i++) {\n        long t1 = System.nanoTime();\n        System.out.print(&quot;BBB......BBB&quot;); \\\\&lt;-contain 1000 &quot;B&quot;\n        long t2 = System.nanoTime();\n        System.out.println(t2-t1);\n        System.out.println(&quot;&quot;);\n    }\n\nThe time results are less then 1 millisecond every iteration except **every fifth iteration**, when the time result is around 225 millisecond. Something like (in nanoseconds):\n\n    BBB...31744\n    BBB...31744\n    BBB...31744\n    BBB...31744\n    BBB...226365807\n    BBB...31744\n    BBB...31744\n    BBB...31744\n    BBB...31744\n    BBB...226365807\n    .\n    .\n    .\n\nAnd so on..\n\n## Summary:\n\n1. Eclipse works perfectly with &quot;B&quot;\n1. Netbeans has a line-wrapping problem that can be solved (because the problem does not occur in eclipse)(without adding space after B (&quot;B &quot;)).\n\n  [1]: http://en.wikipedia.org/wiki/Line_wrap_and_word_wrap","title":"Why is printing &quot;B&quot; dramatically slower than printing &quot;#&quot;?"},{"comments":[{"owner":{"reputation":44166,"user_id":365237,"user_type":"registered","accept_rate":96,"profile_image":"https://www.gravatar.com/avatar/fb9385b7f1a792d5159eca8bbb2c34f8?s=128&d=identicon&r=PG","display_name":"eis","link":"https://stackoverflow.com/users/365237/eis"},"score":1,"creation_date":1610903685}],"owner":{"reputation":773,"user_id":8504033,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b166c14f06ea17be1d560bbcfe79e070?s=128&d=identicon&r=PG","display_name":"Abdul Alim Shakir","link":"https://stackoverflow.com/users/8504033/abdul-alim-shakir"},"comment_count":1,"score":14,"creation_date":1567661130,"body_markdown":"Yes the culprit is definitely word-wrapping. When I tested your two programs, NetBeans IDE 8.2 gave me the following result.\r\n\r\n 1. First Matrix: O and # = ***6.03 seconds***\r\n 2. Second Matrix: O and B = ***50.97 seconds***\r\n\r\nLooking at your code closely you have used a line break at the end of first loop. But you didn&#39;t use any line break in second loop. So you are going to print a word with 1000 characters in the second loop. That causes a word-wrapping problem. If we use a non-word character &quot; &quot; after B, it takes only ***5.35 seconds*** to compile the program. And If we use a line break in the second loop after passing 100 values or 50 values, it takes only ***8.56 seconds*** and ***7.05 seconds*** respectively. \r\n\r\n    Random r = new Random();\r\n    for (int i = 0; i &lt; 1000; i++) {\r\n        for (int j = 0; j &lt; 1000; j++) {\r\n            if(r.nextInt(4) == 0) {\r\n                System.out.print(&quot;O&quot;);\r\n            } else {\r\n                System.out.print(&quot;B&quot;);\r\n            }\r\n            if(j%100==0){               //Adding a line break in second loop      \r\n                System.out.println();\r\n            }                    \r\n        }\r\n        System.out.println(&quot;&quot;);                \r\n    }\r\n\r\n\r\n\r\nAnother advice is that to change settings of NetBeans IDE. First of all, go to NetBeans **Tools** and click **Options**. After that click **Editor** and go to **Formatting** tab. Then select *Anywhere* in **Line Wrap** Option. It will take almost 6.24% less time to compile the program. \r\n\r\n[![NetBeans Editor Settings][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/yv2eL.jpg","title":"Why is printing &quot;B&quot; dramatically slower than printing &quot;#&quot;?"}],"owner":{"reputation":24678,"user_id":1732709,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/1e93a4869dec073619f6ba377ec87691?s=128&d=identicon&r=PG","display_name":"Kuba Spatny","link":"https://stackoverflow.com/users/1732709/kuba-spatny"},"comment_count":10,"is_answered":true,"answer_count":3,"score":2808,"creation_date":1393026343,"question_id":21947452,"body_markdown":"I generated two matrices of `1000` x `1000`:\r\n\r\nFirst Matrix: `O` and `#`.  \r\nSecond Matrix: `O` and `B`.\r\n\r\nUsing the following code, the first matrix took 8.52 seconds to complete:\r\n\r\n    Random r = new Random();\r\n    for (int i = 0; i &lt; 1000; i++) {\r\n        for (int j = 0; j &lt; 1000; j++) {\r\n            if(r.nextInt(4) == 0) {\r\n                System.out.print(&quot;O&quot;);\r\n            } else {\r\n                System.out.print(&quot;#&quot;);\r\n            }\r\n        }\r\n                \r\n       System.out.println(&quot;&quot;);\r\n     }\r\n\r\n\r\nWith this code, the second matrix took 259.152 seconds to complete:\r\n\r\n    Random r = new Random();\r\n    for (int i = 0; i &lt; 1000; i++) {\r\n        for (int j = 0; j &lt; 1000; j++) {\r\n            if(r.nextInt(4) == 0) {\r\n                System.out.print(&quot;O&quot;);\r\n            } else {\r\n                System.out.print(&quot;B&quot;); //only line changed\r\n            }\r\n        }\r\n                    \r\n        System.out.println(&quot;&quot;);\r\n    }\r\n\r\nWhat is the reason behind the dramatically different run times?\r\n\r\n---\r\n\r\nAs suggested in the comments, printing only `System.out.print(&quot;#&quot;);` takes `7.8871` seconds, whereas `System.out.print(&quot;B&quot;);` gives `still printing...`.\r\n\r\nAs others who pointed out that it works for them normally, I tried [Ideone.com](http://ideone.com) for instance, and both pieces of code execute at the same speed.\r\n\r\nTest Conditions:\r\n\r\n - I ran this test from _Netbeans 7.2_, with the output into its console\r\n - I used `System.nanoTime()` for measurements","link":"https://stackoverflow.com/questions/21947452/why-is-printing-b-dramatically-slower-than-printing","title":"Why is printing &quot;B&quot; dramatically slower than printing &quot;#&quot;?"},{"tags":["java","maven-2","build-process","build-automation","executable-jar"],"comments":[{"owner":{"reputation":15366,"user_id":56039,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/bededa744012c87721d68f69342f81b0?s=128&d=identicon&r=PG","display_name":"Matthew McCullough","link":"https://stackoverflow.com/users/56039/matthew-mccullough"},"score":15,"creation_date":1236784310},{"owner":{"reputation":9033,"user_id":253231,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/e6ba36648047adc44c5567e2b9c4dbc7?s=128&d=identicon&r=PG","display_name":"Dan","link":"https://stackoverflow.com/users/253231/dan"},"score":2,"creation_date":1422903714},{"owner":{"reputation":20116,"user_id":1173112,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/rtcjY.jpg?s=128&g=1","display_name":"Koray Tugay","link":"https://stackoverflow.com/users/1173112/koray-tugay"},"score":1,"creation_date":1490856858},{"owner":{"reputation":6651,"user_id":5678086,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/iJDcj.jpg?s=128&g=1","display_name":"Thanga","link":"https://stackoverflow.com/users/5678086/thanga"},"score":1,"creation_date":1505117896}],"answers":[{"comments":[{"owner":{"reputation":33084,"user_id":13379,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/29d7c49f6f174710788c79011219bae1?s=128&d=identicon&r=PG","display_name":"Michael","link":"https://stackoverflow.com/users/13379/michael"},"score":25,"creation_date":1306868613},{"owner":{"reputation":58116,"user_id":474189,"user_type":"registered","accept_rate":72,"profile_image":"https://i.stack.imgur.com/jzXIJ.jpg?s=128&g=1","display_name":"Duncan Jones","link":"https://stackoverflow.com/users/474189/duncan-jones"},"score":10,"creation_date":1361435906},{"owner":{"reputation":343,"user_id":651406,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/hMWrE.jpg?s=128&g=1","display_name":"Sahil Dave","link":"https://stackoverflow.com/users/651406/sahil-dave"},"score":1,"creation_date":1382540135},{"owner":{"reputation":448,"user_id":1407277,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/8f84b2094fe16c6cc6a3cf5a5d15e30e?s=128&d=identicon&r=PG","display_name":"Prashant Vaidyanathan","link":"https://stackoverflow.com/users/1407277/prashant-vaidyanathan"},"score":0,"creation_date":1405476650},{"owner":{"reputation":871,"user_id":1391454,"user_type":"registered","accept_rate":43,"profile_image":"https://i.stack.imgur.com/JaGXc.jpg?s=128&g=1","display_name":"Mubasher","link":"https://stackoverflow.com/users/1391454/mubasher"},"score":0,"creation_date":1411059360},{"owner":{"reputation":2372,"user_id":1284868,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/ccafa13724eaae58ab1c5041f1dcf13b?s=128&d=identicon&r=PG","display_name":"pitchblack408","link":"https://stackoverflow.com/users/1284868/pitchblack408"},"score":3,"creation_date":1428424272},{"owner":{"reputation":1537,"user_id":1060779,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/17097df0f5471dede472d7666f4f5aa6?s=128&d=identicon&r=PG","display_name":"maxivis","link":"https://stackoverflow.com/users/1060779/maxivis"},"score":187,"creation_date":1430940149},{"owner":{"reputation":26593,"user_id":432903,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/YCgsh.jpg?s=128&g=1","display_name":"prayagupd","link":"https://stackoverflow.com/users/432903/prayagupd"},"score":8,"creation_date":1478997846},{"owner":{"reputation":910,"user_id":3774109,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c8e907ecb562bb1b8d8c99e0c3dcabf6?s=128&d=identicon&r=PG&f=1","display_name":"user3774109","link":"https://stackoverflow.com/users/3774109/user3774109"},"score":0,"creation_date":1489072051},{"owner":{"reputation":21799,"user_id":108207,"user_type":"registered","accept_rate":96,"profile_image":"https://www.gravatar.com/avatar/dd8608b8b423bdcbda3fe5c0cf8b6230?s=128&d=identicon&r=PG&f=1","display_name":"Niklas R.","link":"https://stackoverflow.com/users/108207/niklas-r"},"score":0,"creation_date":1511300900},{"owner":{"reputation":2775,"user_id":405326,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/6b19171e5d2f922dde018b57d8501c89?s=128&d=identicon&r=PG","display_name":"Raffi Khatchadourian","link":"https://stackoverflow.com/users/405326/raffi-khatchadourian"},"score":1,"creation_date":1517524901},{"owner":{"reputation":928,"user_id":4719725,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-mcCgejRuIKg/AAAAAAAAAAI/AAAAAAAAACc/P9xPV8FH8hE/photo.jpg?sz=128","display_name":"parlad","link":"https://stackoverflow.com/users/4719725/parlad"},"score":2,"creation_date":1532084556},{"owner":{"reputation":4298,"user_id":697099,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/c1dd89427d4d5d899642c7624147ac7c?s=128&d=identicon&r=PG","display_name":"gerardw","link":"https://stackoverflow.com/users/697099/gerardw"},"score":0,"creation_date":1540398471},{"owner":{"user_type":"does_not_exist","display_name":"user10201743"},"score":0,"creation_date":1542751450},{"owner":{"reputation":573,"user_id":5236247,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/X84Js.png?s=128&g=1","display_name":"Adowrath","link":"https://stackoverflow.com/users/5236247/adowrath"},"score":3,"creation_date":1552759751},{"owner":{"reputation":151,"user_id":3277070,"user_type":"registered","profile_image":"https://i.stack.imgur.com/XVfyE.jpg?s=128&g=1","display_name":"Richard Bradley Smith","link":"https://stackoverflow.com/users/3277070/richard-bradley-smith"},"score":0,"creation_date":1558747008},{"owner":{"reputation":678,"user_id":5217790,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/---u55cTd7v4/AAAAAAAAAAI/AAAAAAAAAD0/KmliRKWfORI/photo.jpg?sz=128","display_name":"Halil İbrahim Oymacı","link":"https://stackoverflow.com/users/5217790/halil-%c4%b0brahim-oymac%c4%b1"},"score":1,"creation_date":1585646746},{"owner":{"reputation":604,"user_id":7949704,"user_type":"registered","profile_image":"https://i.stack.imgur.com/JOTXA.jpg?s=128&g=1","display_name":"Alejandro Gonzalez","link":"https://stackoverflow.com/users/7949704/alejandro-gonzalez"},"score":0,"creation_date":1595440420},{"owner":{"reputation":136,"user_id":2001265,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0d099487862f2623c22e024913ee12c7?s=128&d=identicon&r=PG","display_name":"Jack D Menendez","link":"https://stackoverflow.com/users/2001265/jack-d-menendez"},"score":0,"creation_date":1607285151},{"owner":{"reputation":30014,"user_id":300224,"user_type":"registered","accept_rate":68,"profile_image":"https://i.stack.imgur.com/PFB2V.jpg?s=128&g=1","display_name":"William Entriken","link":"https://stackoverflow.com/users/300224/william-entriken"},"score":0,"creation_date":1613696872}],"owner":{"reputation":55122,"user_id":30453,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/22dd0a01a087140791952d22cfd13b6c?s=128&d=identicon&r=PG","display_name":"IAdapter","link":"https://stackoverflow.com/users/30453/iadapter"},"comment_count":20,"score":2520,"creation_date":1235295088,"body_markdown":"&lt;!-- language-all: xml --&gt;\r\n\r\n    &lt;build&gt;\r\n      &lt;plugins&gt;\r\n        &lt;plugin&gt;\r\n          &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n          &lt;configuration&gt;\r\n            &lt;archive&gt;\r\n              &lt;manifest&gt;\r\n                &lt;mainClass&gt;fully.qualified.MainClass&lt;/mainClass&gt;\r\n              &lt;/manifest&gt;\r\n            &lt;/archive&gt;\r\n            &lt;descriptorRefs&gt;\r\n              &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n            &lt;/descriptorRefs&gt;\r\n          &lt;/configuration&gt;\r\n        &lt;/plugin&gt;\r\n      &lt;/plugins&gt;\r\n    &lt;/build&gt;\r\n\r\nand you run it with\r\n\r\n    mvn clean compile assembly:single\r\n\r\n*Compile goal should be added before assembly:single or otherwise the code on your own project is not included.*\r\n\r\n\r\nSee more details in comments.\r\n\r\n---\r\n\r\nCommonly this goal is tied to a build phase to execute automatically. This ensures the JAR is built when executing `mvn install` or performing a deployment/release.\r\n\r\n    &lt;plugin&gt;\r\n      &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n      &lt;configuration&gt;\r\n        &lt;archive&gt;\r\n          &lt;manifest&gt;\r\n            &lt;mainClass&gt;fully.qualified.MainClass&lt;/mainClass&gt;\r\n          &lt;/manifest&gt;\r\n        &lt;/archive&gt;\r\n        &lt;descriptorRefs&gt;\r\n          &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n        &lt;/descriptorRefs&gt;\r\n      &lt;/configuration&gt;\r\n      &lt;executions&gt;\r\n        &lt;execution&gt;\r\n          &lt;id&gt;make-assembly&lt;/id&gt; &lt;!-- this is used for inheritance merges --&gt;\r\n          &lt;phase&gt;package&lt;/phase&gt; &lt;!-- bind to the packaging phase --&gt;\r\n          &lt;goals&gt;\r\n            &lt;goal&gt;single&lt;/goal&gt;\r\n          &lt;/goals&gt;\r\n        &lt;/execution&gt;\r\n      &lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\n","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":15366,"user_id":56039,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/bededa744012c87721d68f69342f81b0?s=128&d=identicon&r=PG","display_name":"Matthew McCullough","link":"https://stackoverflow.com/users/56039/matthew-mccullough"},"comment_count":0,"score":144,"creation_date":1235622665,"body_markdown":"\r\nTaking Unanswered&#39;s answer and reformatting it, we have:\r\n\r\n&lt;!-- language: xml --&gt;\r\n\r\n    &lt;build&gt;\r\n        &lt;plugins&gt;\r\n            &lt;plugin&gt;\r\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n                &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\r\n                &lt;configuration&gt;\r\n                    &lt;archive&gt;\r\n                        &lt;manifest&gt;\r\n                            &lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n                            &lt;mainClass&gt;fully.qualified.MainClass&lt;/mainClass&gt;\r\n                        &lt;/manifest&gt;\r\n                    &lt;/archive&gt;\r\n                &lt;/configuration&gt;\r\n            &lt;/plugin&gt;\r\n            &lt;plugin&gt;\r\n                &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n                &lt;configuration&gt;\r\n                    &lt;descriptorRefs&gt;\r\n                        &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n                    &lt;/descriptorRefs&gt;\r\n                &lt;/configuration&gt;\r\n            &lt;/plugin&gt;\r\n        &lt;/plugins&gt;\r\n    &lt;/build&gt;\r\n\r\nNext, I would recommend making this a natural part of your build, rather than something to call explicitly.  To make this a integral part of your build, add this plugin to your `pom.xml` and bind it to the `package` lifecycle event.  However, a gotcha is that you need to call the `assembly:single` goal if putting this in your pom.xml, while you would call &#39;assembly:assembly&#39; if executing it manually from the command line.\r\n\r\n&lt;!-- language: xml --&gt;\r\n\r\n    &lt;project&gt;\r\n      [...]\r\n      &lt;build&gt;\r\n          &lt;plugins&gt;\r\n              &lt;plugin&gt;\r\n                  &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n                  &lt;configuration&gt;\r\n                      &lt;archive&gt;\r\n                          &lt;manifest&gt;\r\n                              &lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n                              &lt;mainClass&gt;fully.qualified.MainClass&lt;/mainClass&gt;\r\n                          &lt;/manifest&gt;\r\n                      &lt;/archive&gt;\r\n                      &lt;descriptorRefs&gt;\r\n                          &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n                      &lt;/descriptorRefs&gt;\r\n                  &lt;/configuration&gt;\r\n                  &lt;executions&gt;\r\n                      &lt;execution&gt;\r\n                          &lt;id&gt;make-my-jar-with-dependencies&lt;/id&gt;\r\n                          &lt;phase&gt;package&lt;/phase&gt;\r\n                          &lt;goals&gt;\r\n                              &lt;goal&gt;single&lt;/goal&gt;\r\n                          &lt;/goals&gt;\r\n                      &lt;/execution&gt;\r\n                  &lt;/executions&gt;\r\n              &lt;/plugin&gt;\r\n          [...]\r\n          &lt;/plugins&gt;\r\n        [...]\r\n      &lt;/build&gt;\r\n    &lt;/project&gt;","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":15366,"user_id":56039,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/bededa744012c87721d68f69342f81b0?s=128&d=identicon&r=PG","display_name":"Matthew McCullough","link":"https://stackoverflow.com/users/56039/matthew-mccullough"},"comment_count":0,"score":16,"creation_date":1236784375,"body_markdown":"Another option if you really want to repackage the other JARs contents inside your single resultant JAR is the [Maven Assembly plugin][1].  It unpacks and then repacks everything into a directory via `&lt;unpack&gt;true&lt;/unpack&gt;`. Then you&#39;d have a second pass that built it into one massive JAR.\r\n\r\n[Another option is the OneJar plugin][2].  This performs the above repackaging actions all in one step.\r\n\r\n\r\n  [1]: http://maven.apache.org/plugins/maven-assembly-plugin/\r\n  [2]: http://code.google.com/p/onejar-maven-plugin/","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":4163,"user_id":170865,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/eb2b0cd9d5f718264c171f2e3d987bc1?s=128&d=identicon&r=PG","display_name":"Matthew Franglen","link":"https://stackoverflow.com/users/170865/matthew-franglen"},"comment_count":0,"score":10,"creation_date":1252503463,"body_markdown":"Ken Liu has it right in my opinion. The maven dependency plugin allows you to expand all the dependencies, which you can then treat as resources. This allows you to include them in the *main* artifact. The use of the assembly plugin creates a secondary artifact which can be difficult to modify - in my case I wanted to add custom manifest entries. My pom ended up as:\r\n\r\n    &lt;project&gt;\r\n     ...\r\n     &lt;build&gt;\r\n      &lt;plugins&gt;\r\n       &lt;plugin&gt;\r\n        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n        &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\r\n        &lt;executions&gt;\r\n         &lt;execution&gt;\r\n          &lt;id&gt;unpack-dependencies&lt;/id&gt;\r\n          &lt;phase&gt;package&lt;/phase&gt;\r\n          &lt;goals&gt;\r\n           &lt;goal&gt;unpack-dependencies&lt;/goal&gt;\r\n          &lt;/goals&gt;\r\n         &lt;/execution&gt;\r\n        &lt;/executions&gt;\r\n       &lt;/plugin&gt;\r\n      &lt;/plugins&gt;\r\n      ...\r\n      &lt;resources&gt;\r\n       &lt;resource&gt;\r\n        &lt;directory&gt;${basedir}/target/dependency&lt;/directory&gt;\r\n        &lt;targetPath&gt;/&lt;/targetPath&gt;\r\n       &lt;/resource&gt;\r\n      &lt;/resources&gt;\r\n     &lt;/build&gt;\r\n     ...\r\n    &lt;/project&gt;","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"user_type":"does_not_exist","display_name":"user189057"},"comment_count":0,"score":19,"creation_date":1255436184,"body_markdown":"You can use maven-dependency-plugin, but the question was how to create an executable JAR. To do that requires the following alteration to Matthew Franglen&#39;s response (btw, using the dependency plugin takes longer to build when starting from a clean target):\r\n\r\n    &lt;build&gt;\r\n\t\t&lt;plugins&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;archive&gt;\r\n\t\t\t\t\t\t&lt;manifest&gt;\r\n\t\t\t\t\t\t\t&lt;mainClass&gt;fully.qualified.MainClass&lt;/mainClass&gt;\r\n\t\t\t\t\t\t&lt;/manifest&gt;\r\n\t\t\t\t\t&lt;/archive&gt;\r\n\t\t\t\t&lt;/configuration&gt;\r\n\t\t\t&lt;/plugin&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;executions&gt;\r\n\t\t\t\t\t&lt;execution&gt;\r\n\t\t\t\t\t\t&lt;id&gt;unpack-dependencies&lt;/id&gt;\r\n\t\t\t\t\t\t&lt;phase&gt;package&lt;/phase&gt;\r\n\t\t\t\t\t\t&lt;goals&gt;\r\n\t\t\t\t\t\t\t&lt;goal&gt;unpack-dependencies&lt;/goal&gt;\r\n\t\t\t\t\t\t&lt;/goals&gt;\r\n\t\t\t\t\t&lt;/execution&gt;\r\n\t\t\t\t&lt;/executions&gt;\r\n\t\t\t&lt;/plugin&gt;\r\n\t\t&lt;/plugins&gt;\r\n\t\t&lt;resources&gt;\r\n\t\t\t&lt;resource&gt;\r\n\t\t\t\t&lt;directory&gt;${basedir}/target/dependency&lt;/directory&gt;\r\n\t\t\t&lt;/resource&gt;\r\n\t\t&lt;/resources&gt;\r\n\t&lt;/build&gt;","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":1501,"user_id":195463,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4fa56a04d27cbb608964b21a01b196b6?s=128&d=identicon&r=PG","display_name":"SRG","link":"https://stackoverflow.com/users/195463/srg"},"comment_count":0,"score":5,"creation_date":1262018615,"body_markdown":"I won&#39;t answer directly the question as other have already done that before, but I really wonder if it&#39;s a good idea to embed all the dependencies in the project&#39;s jar itself.\r\n\r\nI see the point (ease of deployment / usage) but it depends of the use case of your poject (and there may be alternatives (see below)).\r\n\r\nIf you use it fully standalone, why not.\r\n\r\nBut if you use your project in other contexts (like in a webapp, or dropped in a folder where other jars are sitting), you may have jar duplicates in your classpath (the ones in the folder, the one in the jars). Maybe not a bid deal but i usually avoid this.\r\n\r\nA good alternative :\r\n\r\n - deploy your application as a .zip / .war : the archive contains your project&#39;s jar and all dependent jars ;\r\n - use a dynamic classloader mechanism (see Spring, or you can easily do this yourself) to have a single entry point of your project (a single class to start - see the Manifest mechanism on another answer), which will add (dynamically) to the current classpath all the other needed jars.\r\n\r\nLike this, with in the end just a manifest and a &quot;special dynamic classloader main&quot;, you can start your project with :\r\n\r\n    java -jar ProjectMainJar.jar com.stackoverflow.projectName.MainDynamicClassLoaderClass\r\n\r\n","title":"How can I create an executable JAR with dependencies using Maven?"},{"comments":[{"owner":{"reputation":826,"user_id":2405670,"user_type":"registered","profile_image":"https://i.stack.imgur.com/DDOvS.jpg?s=128&g=1","display_name":"MoHaN K RaJ","link":"https://stackoverflow.com/users/2405670/mohan-k-raj"},"score":0,"creation_date":1608035645}],"owner":{"reputation":101,"user_id":287244,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/cbc89ae600530421b951d05d7a8743c4?s=128&d=identicon&r=PG","display_name":"kac-ani","link":"https://stackoverflow.com/users/287244/kac-ani"},"comment_count":1,"score":10,"creation_date":1267803559,"body_markdown":"It should be like that:\r\n\r\n    &lt;plugin&gt;\r\n        &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\r\n        &lt;executions&gt;\r\n            &lt;execution&gt;\r\n                &lt;id&gt;unpack-dependencies&lt;/id&gt;\r\n                &lt;phase&gt;generate-resources&lt;/phase&gt;\r\n                &lt;goals&gt;\r\n                    &lt;goal&gt;unpack-dependencies&lt;/goal&gt;\r\n                &lt;/goals&gt;\r\n            &lt;/execution&gt;\r\n        &lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\n\r\nUnpacking have to be in generate-resources phase because, if in package phase, will not be included as resources.\r\nTry clean package and you&#39;ll see.","title":"How can I create an executable JAR with dependencies using Maven?"},{"comments":[{"owner":{"reputation":18942,"user_id":714112,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/83b2bbbdc0f34ed6148dab188c6bb987?s=128&d=identicon&r=PG","display_name":"Sridhar Sarnobat","link":"https://stackoverflow.com/users/714112/sridhar-sarnobat"},"score":5,"creation_date":1504897147}],"owner":{"reputation":51,"user_id":446986,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/80eeeb391c97c521cfddee492956fc88?s=128&d=identicon&r=PG","display_name":"Mayank ","link":"https://stackoverflow.com/users/446986/mayank"},"comment_count":1,"score":5,"creation_date":1284439063,"body_markdown":"To create an executable JAR from command line itself just run the below command from the project path:\r\n\r\n    mvn assembly:assembly\r\n\r\n","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":1251,"user_id":455180,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4e0c6b3670db888abcf0fded61300fb3?s=128&d=identicon&r=PG","display_name":"Vijay Katam","link":"https://stackoverflow.com/users/455180/vijay-katam"},"comment_count":0,"score":100,"creation_date":1285168820,"body_markdown":"Use the maven-shade-plugin to package all dependencies into one uber-jar. It can also be used to build an executable jar by specifying the main class. After trying to use maven-assembly and maven-jar , I found that this plugin best suited my needs. \r\n\r\nI found this plugin particularly useful as it merges content of specific files instead of overwriting them. This is needed when there are resource files that are have the same name across the jars and the plugin tries to package all the resource files\r\n\r\nSee example below \r\n\r\n          &lt;plugins&gt;\r\n        &lt;!-- This plugin provides the capability to package the artifact in an uber-jar, including its dependencies and to shade - i.e. rename - the packages of some of the dependencies. --&gt;\r\n            &lt;plugin&gt;\r\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n                &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;\r\n                &lt;version&gt;1.4&lt;/version&gt;\r\n                &lt;executions&gt;\r\n                    &lt;execution&gt;\r\n                        &lt;phase&gt;package&lt;/phase&gt;\r\n                        &lt;goals&gt;\r\n                            &lt;goal&gt;shade&lt;/goal&gt;\r\n                        &lt;/goals&gt;\r\n                        &lt;configuration&gt;\r\n                            &lt;artifactSet&gt;\r\n                            &lt;!-- signed jars--&gt;\r\n                                &lt;excludes&gt;\r\n                                    &lt;exclude&gt;bouncycastle:bcprov-jdk15&lt;/exclude&gt;\r\n                                &lt;/excludes&gt;\r\n                            &lt;/artifactSet&gt;\r\n\r\n                             &lt;transformers&gt;\r\n                                &lt;transformer\r\n                                    implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt;\r\n                                    &lt;!-- Main class --&gt;\r\n                                    &lt;mainClass&gt;com.main.MyMainClass&lt;/mainClass&gt;\r\n                                &lt;/transformer&gt;\r\n                                &lt;!-- Use resource transformers to prevent file overwrites --&gt;\r\n                                &lt;transformer \r\n                                     implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;\r\n                                    &lt;resource&gt;properties.properties&lt;/resource&gt;\r\n                                &lt;/transformer&gt;\r\n                                &lt;transformer\r\n                                    implementation=&quot;org.apache.maven.plugins.shade.resource.XmlAppendingTransformer&quot;&gt;\r\n                                    &lt;resource&gt;applicationContext.xml&lt;/resource&gt;\r\n                                &lt;/transformer&gt;\r\n                                &lt;transformer\r\n                                    implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;\r\n                                    &lt;resource&gt;META-INF/cxf/cxf.extension&lt;/resource&gt;\r\n                                &lt;/transformer&gt;\r\n                                &lt;transformer\r\n                                    implementation=&quot;org.apache.maven.plugins.shade.resource.XmlAppendingTransformer&quot;&gt;\r\n                                    &lt;resource&gt;META-INF/cxf/bus-extensions.xml&lt;/resource&gt;\r\n                                &lt;/transformer&gt;\r\n                         &lt;/transformers&gt;\r\n                        &lt;/configuration&gt;\r\n                    &lt;/execution&gt;\r\n                &lt;/executions&gt;\r\n            &lt;/plugin&gt;\r\n\r\n        &lt;/plugins&gt;\r\n\r\n","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":3661,"user_id":526415,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/d1c7ca5e13c5d5236eb0550a86ba4a74?s=128&d=identicon&r=PG","display_name":"Andr&#233; Aronsen","link":"https://stackoverflow.com/users/526415/andr%c3%a9-aronsen"},"comment_count":0,"score":366,"creation_date":1291200384,"body_markdown":"You can use the dependency-plugin to generate all dependencies in a separate directory before the package phase and then include that in the classpath of the manifest:\r\n\r\n&lt;!-- language: xml --&gt;\r\n\r\n    &lt;plugin&gt;\r\n        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n        &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\r\n        &lt;executions&gt;\r\n            &lt;execution&gt;\r\n                &lt;id&gt;copy-dependencies&lt;/id&gt;\r\n                &lt;phase&gt;prepare-package&lt;/phase&gt;\r\n                &lt;goals&gt;\r\n                    &lt;goal&gt;copy-dependencies&lt;/goal&gt;\r\n                &lt;/goals&gt;\r\n                &lt;configuration&gt;\r\n                    &lt;outputDirectory&gt;${project.build.directory}/lib&lt;/outputDirectory&gt;\r\n                    &lt;overWriteReleases&gt;false&lt;/overWriteReleases&gt;\r\n                    &lt;overWriteSnapshots&gt;false&lt;/overWriteSnapshots&gt;\r\n                    &lt;overWriteIfNewer&gt;true&lt;/overWriteIfNewer&gt;\r\n                &lt;/configuration&gt;\r\n            &lt;/execution&gt;\r\n        &lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\n    &lt;plugin&gt;\r\n        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n        &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\r\n        &lt;configuration&gt;\r\n            &lt;archive&gt;\r\n                &lt;manifest&gt;\r\n                    &lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n                    &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;\r\n                    &lt;mainClass&gt;theMainClass&lt;/mainClass&gt;\r\n                &lt;/manifest&gt;\r\n            &lt;/archive&gt;\r\n        &lt;/configuration&gt;\r\n    &lt;/plugin&gt;\r\n\r\nAlternatively use `${project.build.directory}/classes/lib` as OutputDirectory to integrate all jar-files into the main jar, but then you will need to add custom classloading code to load the jars.\r\n","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":81,"user_id":657445,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/10ec89c0d42d3fa1a7b425c6d0ac3284?s=128&d=identicon&r=PG","display_name":"Rostislav Stř&#237;brn&#253;","link":"https://stackoverflow.com/users/657445/rostislav-st%c5%99%c3%adbrn%c3%bd"},"comment_count":0,"score":8,"creation_date":1300016445,"body_markdown":"Problem with locating shared assembly file with maven-assembly-plugin-2.2.1?\r\n\r\nTry using descriptorId configuration parameter instead of descriptors/descriptor or descriptorRefs/descriptorRef parameters.\r\n\r\nNeither of them do what you need: look for the file on classpath.\r\nOf course you need adding the package where the shared assembly resides on maven-assembly-plugin&#39;s classpath (see below).\r\nIf you&#39;re using Maven 2.x (not Maven 3.x), you may need adding this dependency in top-most parent pom.xml in pluginManagement section.\r\n\r\n\r\nSee [this][1] for more details.\r\n\r\nClass: org.apache.maven.plugin.assembly.io.DefaultAssemblyReader\r\n\r\n\r\nExample:\r\n\r\n            &lt;!-- Use the assembly plugin to create a zip file of all our dependencies. --&gt;\r\n            &lt;plugin&gt;\r\n                &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n                &lt;version&gt;2.2.1&lt;/version&gt;\r\n                &lt;executions&gt;\r\n                    &lt;execution&gt;\r\n                        &lt;id&gt;make-assembly&lt;/id&gt;\r\n                        &lt;phase&gt;package&lt;/phase&gt;\r\n                        &lt;goals&gt;\r\n                            &lt;goal&gt;single&lt;/goal&gt;\r\n                        &lt;/goals&gt;\r\n                        &lt;configuration&gt;\r\n                            &lt;descriptorId&gt;assembly-zip-for-wid&lt;/descriptorId&gt;\r\n                        &lt;/configuration&gt;\r\n                    &lt;/execution&gt;\r\n                &lt;/executions&gt;\r\n                &lt;dependencies&gt;\r\n                    &lt;dependency&gt;\r\n                        &lt;groupId&gt;cz.ness.ct.ip.assemblies&lt;/groupId&gt;\r\n                        &lt;artifactId&gt;TEST_SharedAssemblyDescriptor&lt;/artifactId&gt;\r\n                        &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;\r\n                    &lt;/dependency&gt;\r\n                &lt;/dependencies&gt;\r\n            &lt;/plugin&gt;\r\n\r\n[1]:http://svn.apache.org/repos/asf/maven/plugins/tags/maven-assembly-plugin-2.2.1\r\n","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":39711,"user_id":451634,"user_type":"registered","accept_rate":58,"profile_image":"https://www.gravatar.com/avatar/360ebfce7ad37f53a1302f8e68843139?s=128&d=identicon&r=PG","display_name":"Benny Neugebauer","link":"https://stackoverflow.com/users/451634/benny-neugebauer"},"comment_count":0,"score":16,"creation_date":1313259823,"body_markdown":"You can add the following to your **pom.xml**:\r\n\r\n    &lt;build&gt;\r\n    &lt;defaultGoal&gt;install&lt;/defaultGoal&gt;\r\n    &lt;plugins&gt;\r\n      &lt;plugin&gt;\r\n        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\r\n        &lt;version&gt;2.3.2&lt;/version&gt;\r\n        &lt;configuration&gt;\r\n          &lt;source&gt;1.6&lt;/source&gt;\r\n          &lt;target&gt;1.6&lt;/target&gt;\r\n        &lt;/configuration&gt;\r\n      &lt;/plugin&gt;\r\n      &lt;plugin&gt;\r\n        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n        &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\r\n        &lt;version&gt;2.3.1&lt;/version&gt;\r\n        &lt;configuration&gt;\r\n          &lt;archive&gt;\r\n            &lt;manifest&gt;\r\n              &lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n              &lt;mainClass&gt;com.mycompany.package.MainClass&lt;/mainClass&gt;\r\n            &lt;/manifest&gt;\r\n          &lt;/archive&gt;\r\n        &lt;/configuration&gt;\r\n      &lt;/plugin&gt;\r\n      &lt;plugin&gt;\r\n        &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n        &lt;configuration&gt;\r\n          &lt;descriptorRefs&gt;\r\n            &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n          &lt;/descriptorRefs&gt;\r\n          &lt;archive&gt;\r\n            &lt;manifest&gt;\r\n              &lt;mainClass&gt;com.mycompany.package.MainClass&lt;/mainClass&gt;\r\n            &lt;/manifest&gt;\r\n          &lt;/archive&gt;\r\n        &lt;/configuration&gt;\r\n        &lt;executions&gt;\r\n          &lt;execution&gt;\r\n            &lt;id&gt;make-my-jar-with-dependencies&lt;/id&gt;\r\n            &lt;phase&gt;package&lt;/phase&gt;\r\n            &lt;goals&gt;\r\n              &lt;goal&gt;single&lt;/goal&gt;\r\n            &lt;/goals&gt;\r\n          &lt;/execution&gt;\r\n        &lt;/executions&gt;\r\n      &lt;/plugin&gt;\r\n    &lt;/plugins&gt;\r\n    &lt;/build&gt;\r\n\r\nAfterwards you have to switch via the console to the directory, where the pom.xml is located. Then you have to execute **mvn assembly:single** and then your executable JAR file with dependencies will be hopefully build. You can check it when switching to the output (target) directory with **cd ./target** and starting your jar with a command similiar to **java -jar mavenproject1-1.0-SNAPSHOT-jar-with-dependencies.jar**. \r\n\r\nI tested this with **Apache Maven 3.0.3**.","title":"How can I create an executable JAR with dependencies using Maven?"},{"comments":[{"owner":{"reputation":11978,"user_id":80714,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/bfATw.png?s=128&g=1","display_name":"Chadwick","link":"https://stackoverflow.com/users/80714/chadwick"},"score":4,"creation_date":1330378540}],"owner":{"reputation":470,"user_id":891846,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/22415dfe4dd72f4f45a5acdbd55bff54?s=128&d=identicon&r=PG","display_name":"Oliver","link":"https://stackoverflow.com/users/891846/oliver"},"comment_count":1,"score":13,"creation_date":1322317021,"body_markdown":"You could combine the `maven-shade-plugin` and `maven-jar-plugin`.\r\n\r\n* The `maven-shade-plugin` packs your classes and all dependencies in a single jar file.\r\n* Configure the `maven-jar-plugin` to specify the main class of your executable jar (see [Set Up The Classpath][1], chapter &quot;Make The Jar Executable&quot;).\r\n\r\n\r\nExample POM configuration for `maven-jar-plugin`:\r\n\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;2.3.2&lt;/version&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;archive&gt;\r\n\t\t\t\t\t\t&lt;manifest&gt;\r\n\t\t\t\t\t\t\t&lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n\t\t\t\t\t\t\t&lt;mainClass&gt;com.example.MyMainClass&lt;/mainClass&gt;\r\n\t\t\t\t\t\t&lt;/manifest&gt;\r\n\t\t\t\t\t&lt;/archive&gt;\r\n\t\t\t\t&lt;/configuration&gt;\r\n\t\t\t&lt;/plugin&gt;\r\n            \r\n\r\nFinally create the executable jar by invoking:\r\n\r\n    mvn clean package shade:shade\r\n\r\n[1]:http://maven.apache.org/shared/maven-archiver/examples/classpath.html","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":24268,"user_id":404395,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/482810f6637ba931bc76524140b1a727?s=128&d=identicon&r=PG","display_name":"marioosh","link":"https://stackoverflow.com/users/404395/marioosh"},"comment_count":0,"score":21,"creation_date":1331672158,"body_markdown":"Long used the **maven assembly plugin**, but I could not find a solution to the problem with [`&quot;already added, skipping&quot;`][1]. Now, I&#39;m using another plugin - [**onejar-maven-plugin**][2]. Example below (`mvn package` build jar):\r\n\r\n    &lt;plugin&gt;\r\n    \t&lt;groupId&gt;org.dstovall&lt;/groupId&gt;\r\n    \t&lt;artifactId&gt;onejar-maven-plugin&lt;/artifactId&gt;\r\n    \t&lt;version&gt;1.3.0&lt;/version&gt;\r\n    \t&lt;executions&gt;\r\n    \t\t&lt;execution&gt;\r\n    \t\t\t&lt;configuration&gt;\r\n    \t\t\t\t&lt;mainClass&gt;com.company.MainClass&lt;/mainClass&gt;\r\n    \t\t\t&lt;/configuration&gt;\r\n    \t\t\t&lt;goals&gt;\r\n    \t\t\t\t&lt;goal&gt;one-jar&lt;/goal&gt;\r\n    \t\t\t&lt;/goals&gt;\r\n    \t\t&lt;/execution&gt;\r\n    \t&lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\n\r\nYou need to add repository for that plugin:\r\n\r\n\t&lt;pluginRepositories&gt;\r\n\t\t&lt;pluginRepository&gt;\r\n\t\t\t&lt;id&gt;onejar-maven-plugin.googlecode.com&lt;/id&gt;\r\n\t\t\t&lt;url&gt;http://onejar-maven-plugin.googlecode.com/svn/mavenrepo&lt;/url&gt;\r\n\t\t&lt;/pluginRepository&gt;\r\n\t&lt;/pluginRepositories&gt;\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/2596655/how-do-i-surpress-maven-assembly-plugin-skipping-files-that-are-already-added-o\r\n  [2]: http://code.google.com/p/onejar-maven-plugin/","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":469,"user_id":547689,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/93c9d62bd8a66c85d85335fe50d06faf?s=128&d=identicon&r=PG","display_name":"Chris","link":"https://stackoverflow.com/users/547689/chris"},"comment_count":0,"score":1,"creation_date":1369424524,"body_markdown":"The maven-assembly-plugin worked great for me.\r\nI spent hours with the maven-dependency-plugin and couldn&#39;t make it work. The main reason was that I had to define in the configuration section explicitly the artifact items which should be included as it is described in the [documentation][1]. \r\nThere is an example there for the cases when you want to use it like: `mvn dependency:copy`, where there are not included any artifactItems but it doesn&#39;t work.\r\n\r\n\r\n  [1]: http://maven.apache.org/plugins/maven-dependency-plugin/usage.html","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":1103,"user_id":2695990,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c05194ea1fcc0d2729ac3de4e023de72?s=128&d=identicon&r=PG","display_name":"fascynacja","link":"https://stackoverflow.com/users/2695990/fascynacja"},"comment_count":0,"score":3,"creation_date":1380039076,"body_markdown":"Something that have worked for me was:\r\n\r\n      &lt;plugin&gt;\r\n        &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\r\n        &lt;executions&gt;\r\n          &lt;execution&gt;\r\n            &lt;id&gt;unpack-dependencies&lt;/id&gt;\r\n            &lt;phase&gt;prepare-package&lt;/phase&gt;\r\n            &lt;goals&gt;\r\n              &lt;goal&gt;unpack-dependencies&lt;/goal&gt;\r\n            &lt;/goals&gt;\r\n            &lt;configuration&gt;\r\n              &lt;outputDirectory&gt;${project.build.directory}/classes&lt;/outputDirectory&gt;\r\n            &lt;/configuration&gt;\r\n          &lt;/execution&gt;\r\n\r\n        &lt;/executions&gt;\r\n      &lt;/plugin&gt;\r\n\r\n\r\n      &lt;plugin&gt;\r\n        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n        &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\r\n        &lt;executions&gt;\r\n          &lt;execution&gt;\r\n            &lt;id&gt;unpack-dependencies&lt;/id&gt;\r\n            &lt;phase&gt;package&lt;/phase&gt;\r\n          &lt;/execution&gt;\r\n        &lt;/executions&gt;\r\n        &lt;configuration&gt;\r\n          &lt;archive&gt;\r\n            &lt;manifest&gt;\r\n              &lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n              &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;\r\n              &lt;mainClass&gt;SimpleKeyLogger&lt;/mainClass&gt;\r\n            &lt;/manifest&gt;\r\n          &lt;/archive&gt;\r\n        &lt;/configuration&gt;\r\n      &lt;/plugin&gt;\r\n\r\nI had extraordinary case because my dependency was system one:\r\n\r\n    &lt;dependency&gt;\r\n      ..\r\n      &lt;scope&gt;system&lt;/scope&gt;\r\n      &lt;systemPath&gt;${project.basedir}/lib/myjar.jar&lt;/systemPath&gt;\r\n    &lt;/dependency&gt;\r\n\r\nI have changed the code provided by @user189057 with changes:\r\n1) maven-dependency-plugin is executed in &quot;prepare-package&quot; phase\r\n2) I am extracting unpacked classess directly to &quot;target/classes&quot;","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":16799,"user_id":330457,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/2JN6W.jpg?s=128&g=1","display_name":"Jin Kwon","link":"https://stackoverflow.com/users/330457/jin-kwon"},"comment_count":0,"score":260,"creation_date":1401678113,"body_markdown":"See [executable-jar-with-maven-example](https://github.com/jinahya/executable-jar-with-maven-example) (GitHub)\r\n\r\n## Notes\r\nThose pros and cons are provided by [Stephan](https://stackoverflow.com/users/363573/stephan).\r\n\r\n---\r\n## For Manual Deployment\r\n  * Pros\r\n  * Cons\r\n    * Dependencies are out of the final jar.\r\n\r\n### Copy Dependencies to a specific directory\r\n&lt;!-- language: xml --&gt;\r\n\r\n    &lt;plugin&gt;\r\n      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n      &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\r\n      &lt;executions&gt;\r\n        &lt;execution&gt;\r\n          &lt;id&gt;copy-dependencies&lt;/id&gt;\r\n          &lt;phase&gt;prepare-package&lt;/phase&gt;\r\n          &lt;goals&gt;\r\n            &lt;goal&gt;copy-dependencies&lt;/goal&gt;\r\n          &lt;/goals&gt;\r\n          &lt;configuration&gt;\r\n            &lt;outputDirectory&gt;${project.build.directory}/${project.build.finalName}.lib&lt;/outputDirectory&gt;\r\n          &lt;/configuration&gt;\r\n        &lt;/execution&gt;\r\n      &lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\n\r\n### Make the Jar Executable and Classpath Aware\r\n&lt;!-- language: xml --&gt;\r\n\r\n    &lt;plugin&gt;\r\n      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n      &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\r\n      &lt;configuration&gt;\r\n        &lt;archive&gt;\r\n          &lt;manifest&gt;\r\n            &lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n            &lt;classpathPrefix&gt;${project.build.finalName}.lib/&lt;/classpathPrefix&gt;\r\n            &lt;mainClass&gt;${fully.qualified.main.class}&lt;/mainClass&gt;\r\n          &lt;/manifest&gt;\r\n        &lt;/archive&gt;\r\n      &lt;/configuration&gt;\r\n    &lt;/plugin&gt;\r\n\r\nAt this point the `jar` is actually executable with external classpath elements.\r\n\r\n    $ java -jar target/${project.build.finalName}.jar\r\n\r\n### Make Deployable Archives\r\nThe `jar` file is only executable with the sibling `...lib/` directory. We need to make archives to deploy with the directory and its content.\r\n&lt;!-- language: xml --&gt;\r\n\r\n    &lt;plugin&gt;\r\n      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n      &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;\r\n      &lt;executions&gt;\r\n        &lt;execution&gt;\r\n          &lt;id&gt;antrun-archive&lt;/id&gt;\r\n          &lt;phase&gt;package&lt;/phase&gt;\r\n          &lt;goals&gt;\r\n            &lt;goal&gt;run&lt;/goal&gt;\r\n          &lt;/goals&gt;\r\n          &lt;configuration&gt;\r\n            &lt;target&gt;\r\n              &lt;property name=&quot;final.name&quot; value=&quot;${project.build.directory}/${project.build.finalName}&quot;/&gt;\r\n              &lt;property name=&quot;archive.includes&quot; value=&quot;${project.build.finalName}.${project.packaging} ${project.build.finalName}.lib/*&quot;/&gt;\r\n              &lt;property name=&quot;tar.destfile&quot; value=&quot;${final.name}.tar&quot;/&gt;\r\n              &lt;zip basedir=&quot;${project.build.directory}&quot; destfile=&quot;${final.name}.zip&quot; includes=&quot;${archive.includes}&quot; /&gt;\r\n              &lt;tar basedir=&quot;${project.build.directory}&quot; destfile=&quot;${tar.destfile}&quot; includes=&quot;${archive.includes}&quot; /&gt;\r\n              &lt;gzip src=&quot;${tar.destfile}&quot; destfile=&quot;${tar.destfile}.gz&quot; /&gt;\r\n              &lt;bzip2 src=&quot;${tar.destfile}&quot; destfile=&quot;${tar.destfile}.bz2&quot; /&gt;\r\n            &lt;/target&gt;\r\n          &lt;/configuration&gt;\r\n        &lt;/execution&gt;\r\n      &lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\n\r\nNow you have `target/${project.build.finalName}.(zip|tar|tar.bz2|tar.gz)` which each contains the `jar` and `lib/*`.\r\n\r\n---\r\n## Apache Maven Assembly Plugin\r\n\r\n * Pros\r\n * Cons\r\n   * No class relocation support (use maven-shade-plugin if class relocation is needed).\r\n\r\n&lt;!-- language: xml --&gt;\r\n\r\n    &lt;plugin&gt;\r\n      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n      &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n      &lt;executions&gt;\r\n        &lt;execution&gt;\r\n          &lt;phase&gt;package&lt;/phase&gt;\r\n          &lt;goals&gt;\r\n            &lt;goal&gt;single&lt;/goal&gt;\r\n          &lt;/goals&gt;\r\n          &lt;configuration&gt;\r\n            &lt;archive&gt;\r\n              &lt;manifest&gt;\r\n                &lt;mainClass&gt;${fully.qualified.main.class}&lt;/mainClass&gt;\r\n              &lt;/manifest&gt;\r\n            &lt;/archive&gt;\r\n            &lt;descriptorRefs&gt;\r\n              &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n            &lt;/descriptorRefs&gt;\r\n          &lt;/configuration&gt;\r\n        &lt;/execution&gt;\r\n      &lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\nYou have `target/${project.bulid.finalName}-jar-with-dependencies.jar`.\r\n\r\n---\r\n## Apache Maven Shade Plugin\r\n  * Pros\r\n  * Cons\r\n\r\n&lt;!-- language: xml --&gt;\r\n\r\n    &lt;plugin&gt;\r\n      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n      &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;\r\n      &lt;executions&gt;\r\n        &lt;execution&gt;\r\n          &lt;goals&gt;\r\n            &lt;goal&gt;shade&lt;/goal&gt;\r\n          &lt;/goals&gt;\r\n          &lt;configuration&gt;\r\n            &lt;shadedArtifactAttached&gt;true&lt;/shadedArtifactAttached&gt;\r\n            &lt;transformers&gt;\r\n              &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt;\r\n                &lt;mainClass&gt;${fully.qualified.main.class}&lt;/mainClass&gt;\r\n              &lt;/transformer&gt;\r\n            &lt;/transformers&gt;\r\n          &lt;/configuration&gt;\r\n        &lt;/execution&gt;\r\n      &lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\nYou have `target/${project.build.finalName}-shaded.jar`.\r\n\r\n---\r\n## onejar-maven-plugin\r\n  * Pros\r\n  * Cons\r\n    * Not actively supported since 2012.\r\n\r\n&lt;!-- language: xml --&gt;\r\n\r\n    &lt;plugin&gt;\r\n      &lt;!--groupId&gt;org.dstovall&lt;/groupId--&gt; &lt;!-- not available on the central --&gt;\r\n      &lt;groupId&gt;com.jolira&lt;/groupId&gt;\r\n      &lt;artifactId&gt;onejar-maven-plugin&lt;/artifactId&gt;\r\n      &lt;executions&gt;\r\n        &lt;execution&gt;\r\n          &lt;configuration&gt;\r\n            &lt;mainClass&gt;${fully.qualified.main.class}&lt;/mainClass&gt;\r\n            &lt;attachToBuild&gt;true&lt;/attachToBuild&gt;\r\n            &lt;!-- https://code.google.com/p/onejar-maven-plugin/issues/detail?id=8 --&gt;\r\n            &lt;!--classifier&gt;onejar&lt;/classifier--&gt;\r\n            &lt;filename&gt;${project.build.finalName}-onejar.${project.packaging}&lt;/filename&gt;\r\n          &lt;/configuration&gt;\r\n          &lt;goals&gt;\r\n            &lt;goal&gt;one-jar&lt;/goal&gt;\r\n          &lt;/goals&gt;\r\n        &lt;/execution&gt;\r\n      &lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\n\r\n---\r\n## Spring Boot Maven Plugin\r\n  * Pros\r\n  * Cons\r\n    * Add potential unecessary Spring and Spring Boot related classes.\r\n\r\n&lt;!-- language: xml --&gt;\r\n\r\n    &lt;plugin&gt;\r\n      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\r\n      &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\r\n      &lt;executions&gt;\r\n        &lt;execution&gt;\r\n          &lt;goals&gt;\r\n            &lt;goal&gt;repackage&lt;/goal&gt;\r\n          &lt;/goals&gt;\r\n          &lt;configuration&gt;\r\n            &lt;classifier&gt;spring-boot&lt;/classifier&gt;\r\n            &lt;mainClass&gt;${fully.qualified.main.class}&lt;/mainClass&gt;\r\n          &lt;/configuration&gt;\r\n        &lt;/execution&gt;\r\n      &lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\nYou have `target/${project.bulid.finalName}-spring-boot.jar`.","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":1341,"user_id":2289765,"user_type":"registered","accept_rate":72,"profile_image":"https://www.gravatar.com/avatar/508912e7551ed0d5df1a7c76042af1b4?s=128&d=identicon&r=PG","display_name":"Rocky Inde","link":"https://stackoverflow.com/users/2289765/rocky-inde"},"comment_count":0,"score":2,"creation_date":1412979078,"body_markdown":"I tried the most up-voted answer here, and was able to get the jar runnable. But the program didn&#39;t run correctly. I do not know what the reason was. When I try to run from `Eclipse`, I get a different result but when I run the jar from command-line I get a different result (it crashes with a program-specific runtime error).\r\n\r\nI had a similar requirement as the OP just that I had too many (Maven) dependencies for my project. Fortunately, the only solution that worked for me was that using `Eclipse`. Very simple and very straightforward. This is not a solution to the OP but is a solution for someone who has a similar requirement but with many Maven dependencies,\r\n\r\n1) Just right-click on your project folder (in Eclipse) and select `Export`\r\n\r\n2) Then select `Java` -&gt; `Runnable Jar`\r\n\r\n3) You will be asked to choose the location of the jar file\r\n\r\n4) Finally, select the class that has the Main method that you want to run and choose `Package dependencies with the Jar file` and click `Finish`","title":"How can I create an executable JAR with dependencies using Maven?"},{"comments":[{"owner":{"reputation":7927,"user_id":338249,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a660dd7e94731072e5543e7b6da75321?s=128&d=identicon&r=PG","display_name":"rjdkolb","link":"https://stackoverflow.com/users/338249/rjdkolb"},"score":2,"creation_date":1446461148}],"owner":{"reputation":931,"user_id":2556114,"user_type":"registered","accept_rate":8,"profile_image":"https://www.gravatar.com/avatar/7daa9fe1470ca721d33dcc48fa40b93c?s=128&d=identicon&r=PG","display_name":"mycowan","link":"https://stackoverflow.com/users/2556114/mycowan"},"comment_count":1,"score":-2,"creation_date":1423788716,"body_markdown":"Okay, so this is my solution. I know it&#39;s not using the pom.xml file. But I had the problem my programmme compiling and running on Netbeans but it failing when I tried Java -jar MyJarFile.jar. Now, I don&#39;t fully understand Maven and I think this why was having trouble getting Netbeans 8.0.2 to include my jar file in a library to put them into a jar file. I was thinking about how I used to use jar files with no Maven in Eclipse. \r\n\r\nIt&#39;s Maven that can compile all the dependanices and plugins. Not Netbeans. (If you can get Netbeans and be able to use java .jar to do this please tell me how (^.^)v )\r\n\r\n[Solved - for Linux] by opening a terminal. \r\n\r\nThen\r\n\r\n    cd /MyRootDirectoryForMyProject\r\n\r\nNext\r\n\r\n    mvn org.apache.maven.plugins:maven-compiler-plugin:compile\r\n\r\nNext\r\n\r\n    mvn install\r\n\r\nThis will create jar file in the target directory.\r\n\r\n    MyJarFile-1.0-jar-with-dependencies.jar\r\n\r\nNow\r\n\r\n    cd target\r\n\r\n(You may need to run: `chmod +x MyJarFile-1.0-jar-with-dependencies.jar`)\r\n\r\nAnd finally\r\n\r\n    java -jar MyJarFile-1.0-jar-with-dependencies.jar\r\n\r\nPlease see \r\n\r\nhttps://cwiki.apache.org/confluence/display/MAVEN/LifecyclePhaseNotFoundException\r\n\r\nI&#39;ll post this solution in on a couple of other pages with a similar problem. Hopefully I can save somebody from a week of frustration.\r\n\r\n\r\n\r\n\r\n","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":7195,"user_id":3233398,"user_type":"registered","accept_rate":9,"profile_image":"https://www.gravatar.com/avatar/c2ab25926e68d6897da205117b1fe9fd?s=128&d=identicon&r=PG","display_name":"EliuX","link":"https://stackoverflow.com/users/3233398/eliux"},"comment_count":0,"score":3,"creation_date":1425939770,"body_markdown":"This is the best way i found:\r\n\r\n      &lt;plugin&gt;\r\n    \t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n    \t&lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\r\n    \t&lt;version&gt;2.4&lt;/version&gt;\r\n    \t&lt;configuration&gt;\r\n    \t  &lt;archive&gt;\r\n    \t    &lt;manifest&gt;\r\n    \t\t&lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n    \t\t&lt;mainClass&gt;com.myDomain.etc.MainClassName&lt;/mainClass&gt;\r\n    \t\t&lt;classpathPrefix&gt;dependency-jars/&lt;/classpathPrefix&gt;\r\n    \t    &lt;/manifest&gt;\r\n    \t  &lt;/archive&gt;\r\n    \t&lt;/configuration&gt;\r\n      &lt;/plugin&gt;\r\n      &lt;plugin&gt;\r\n    \t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n    \t&lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\r\n    \t&lt;version&gt;2.5.1&lt;/version&gt;\r\n    \t&lt;executions&gt;\r\n    \t  &lt;execution&gt;\r\n    \t\t&lt;id&gt;copy-dependencies&lt;/id&gt;\r\n    \t\t&lt;phase&gt;package&lt;/phase&gt;\r\n    \t\t&lt;goals&gt;\r\n    \t\t    &lt;goal&gt;copy-dependencies&lt;/goal&gt;\r\n    \t\t&lt;/goals&gt;\r\n    \t\t&lt;configuration&gt;\r\n    \t\t    &lt;outputDirectory&gt;\r\n                   ${project.build.directory}/dependency-jars/\r\n                &lt;/outputDirectory&gt;\r\n    \t\t&lt;/configuration&gt;\r\n    \t  &lt;/execution&gt;\r\n    \t&lt;/executions&gt;\r\n      &lt;/plugin&gt;\r\nWith this configuration, all dependencies will be located in `/dependency-jars`. My application has no `Main` class, just context ones, but one of my dependencies do have a `Main` class (`com.myDomain.etc.MainClassName`) that starts the JMX server, and receives a `start` or a `stop` parameter. So with this i was able to start my application like this:\r\n\r\n    java -jar ./lib/TestApp-1.0-SNAPSHOT.jar start\r\n\r\nI wait it be useful for you all.","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":96,"user_id":911617,"user_type":"registered","profile_image":"https://i.stack.imgur.com/gJgwY.jpg?s=128&g=1","display_name":"Jan Ziegler","link":"https://stackoverflow.com/users/911617/jan-ziegler"},"comment_count":0,"score":1,"creation_date":1432740115,"body_markdown":"This blog post shows another approach with combining the maven-jar and maven-assembly plugins. With the assembly configuration xml from the blog post it can also be controlled if dependencies will be expanded or just be collected in a folder and referenced by a classpath entry in the manifest:\r\n\r\n&gt; The ideal solution is to include the jars in a lib folder and the manifest.mf file of the main jar include all the jars in classpath.\r\n\r\nAnd exactly that one is described here: https://caffebig.wordpress.com/2013/04/05/executable-jar-file-with-dependent-jars-using-maven/","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":657,"user_id":2390974,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/GNH1d.jpg?s=128&g=1","display_name":"dsutherland","link":"https://stackoverflow.com/users/2390974/dsutherland"},"comment_count":0,"score":14,"creation_date":1448310535,"body_markdown":"I went through every one of these responses looking to make a fat executable jar containing all dependencies and none of them worked right.  The answer is the shade plugin, its very easy and straightforward.\r\n\r\n        &lt;plugin&gt;\r\n\t\t  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n\t\t  &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;\r\n\t\t  &lt;version&gt;2.3&lt;/version&gt;\r\n\t\t  &lt;executions&gt;\r\n\t\t     &lt;!-- Run shade goal on package phase --&gt;\r\n\t\t    &lt;execution&gt;\r\n\t\t\t&lt;phase&gt;package&lt;/phase&gt;\r\n\t\t\t&lt;goals&gt;\r\n\t\t\t\t&lt;goal&gt;shade&lt;/goal&gt;\r\n\t\t\t&lt;/goals&gt;\r\n\t\t\t&lt;configuration&gt;\r\n\t\t\t  &lt;transformers&gt;\r\n\t\t\t\t &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt;\r\n\t\t\t\t    &lt;mainClass&gt;path.to.MainClass&lt;/mainClass&gt;\r\n\t\t\t\t &lt;/transformer&gt;\r\n\t\t\t  &lt;/transformers&gt;\r\n\t\t\t&lt;/configuration&gt;\r\n\t\t      &lt;/execution&gt;\r\n\t\t  &lt;/executions&gt;\r\n\t\t&lt;/plugin&gt;\r\n\r\nBe aware that your dependencies need to have a scope of compile or runtime for this to work properly.\r\n\r\n[This example came from mkyong.com][1]\r\n\r\n\r\n  [1]: http://www.mkyong.com/maven/create-a-fat-jar-file-maven-shade-plugin/","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":1183,"user_id":3375762,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/P0MrP.jpg?s=128&g=1","display_name":"salmanbw","link":"https://stackoverflow.com/users/3375762/salmanbw"},"comment_count":0,"score":2,"creation_date":1448448027,"body_markdown":"This could also be an option,You will be able to build your jar file\r\n\r\n\r\n\t&lt;build&gt;\r\n\t\t&lt;plugins&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;!-- Build an executable JAR --&gt;\r\n\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;2.4&lt;/version&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;archive&gt;\r\n\t\t\t\t\t\t&lt;manifest&gt;\r\n\t\t\t\t\t\t\t&lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n\t\t\t\t\t\t\t&lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;\r\n\t\t\t\t\t\t\t&lt;mainClass&gt;WordListDriver&lt;/mainClass&gt;\r\n\t\t\t\t\t\t&lt;/manifest&gt;\r\n\t\t\t\t\t&lt;/archive&gt;\r\n\t\t\t\t&lt;/configuration&gt;\r\n\t\t\t&lt;/plugin&gt;\r\n\t\t&lt;/plugins&gt;\r\n\t&lt;/build&gt;","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":415,"user_id":1077748,"user_type":"registered","accept_rate":76,"profile_image":"https://www.gravatar.com/avatar/fe1a3f1853e3abeb3d155f3bee8e217c?s=128&d=identicon&r=PG","display_name":"Fabio","link":"https://stackoverflow.com/users/1077748/fabio"},"comment_count":0,"score":3,"creation_date":1456337521,"body_markdown":"I compared the tree plugins mentioned in this post. I generated 2 jars and a directory with all the jars. I compared the results and definitely the maven-shade-plugin is the best. My challenge was that I have multiple spring resources that needed to be merged, as well as jax-rs, and JDBC services. They were all merged properly by the shade plugin in comparison with the maven-assembly-plugin. In which case the spring will fail unless you copy them to your own resources folder and merge them manually one time. Both plugins output the correct dependency tree. I had multiple scopes like test,provide, compile, etc the test and provided were skipped by both plugins. They both produced the same manifest but I was able to consolidate licenses with the shade plugin using their transformer.\r\nWith the maven-dependency-plugin of course you don&#39;t have those problems because the jars are not extracted. But like some other have pointed you need to carry one extra file(s) to work properly.\r\nHere is a snip of the pom.xml\r\n\r\n                &lt;plugin&gt;\r\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n                &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\r\n                &lt;executions&gt;\r\n                    &lt;execution&gt;\r\n                        &lt;id&gt;copy-dependencies&lt;/id&gt;\r\n                        &lt;phase&gt;prepare-package&lt;/phase&gt;\r\n                        &lt;goals&gt;\r\n                            &lt;goal&gt;copy-dependencies&lt;/goal&gt;\r\n                        &lt;/goals&gt;\r\n                        &lt;configuration&gt;\r\n                            &lt;outputDirectory&gt;${project.build.directory}/lib&lt;/outputDirectory&gt;\r\n                            &lt;includeScope&gt;compile&lt;/includeScope&gt;\r\n                            &lt;excludeTransitive&gt;true&lt;/excludeTransitive&gt;\r\n                            &lt;overWriteReleases&gt;false&lt;/overWriteReleases&gt;\r\n                            &lt;overWriteSnapshots&gt;false&lt;/overWriteSnapshots&gt;\r\n                            &lt;overWriteIfNewer&gt;true&lt;/overWriteIfNewer&gt;\r\n                        &lt;/configuration&gt;\r\n                    &lt;/execution&gt;\r\n                &lt;/executions&gt;\r\n            &lt;/plugin&gt;\r\n            &lt;plugin&gt;\r\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n                &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n                &lt;version&gt;2.6&lt;/version&gt;\r\n                &lt;configuration&gt;\r\n                    &lt;archive&gt;\r\n                        &lt;manifest&gt;\r\n                            &lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n                            &lt;mainClass&gt;com.rbccm.itf.cdd.poller.landingzone.LandingZonePoller&lt;/mainClass&gt;\r\n                        &lt;/manifest&gt;\r\n                    &lt;/archive&gt;\r\n                    &lt;descriptorRefs&gt;\r\n                        &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n                    &lt;/descriptorRefs&gt;\r\n                &lt;/configuration&gt;\r\n                &lt;executions&gt;\r\n                    &lt;execution&gt;\r\n                        &lt;id&gt;make-my-jar-with-dependencies&lt;/id&gt;\r\n                        &lt;phase&gt;package&lt;/phase&gt;\r\n                        &lt;goals&gt;\r\n                            &lt;goal&gt;single&lt;/goal&gt;\r\n                        &lt;/goals&gt;\r\n                    &lt;/execution&gt;\r\n                &lt;/executions&gt;\r\n            &lt;/plugin&gt;\r\n            &lt;plugin&gt;\r\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n                &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;\r\n                &lt;version&gt;2.4.3&lt;/version&gt;\r\n                &lt;configuration&gt;\r\n                    &lt;shadedArtifactAttached&gt;false&lt;/shadedArtifactAttached&gt;\r\n                    &lt;keepDependenciesWithProvidedScope&gt;false&lt;/keepDependenciesWithProvidedScope&gt;\r\n                    &lt;transformers&gt;\r\n                        &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;\r\n                            &lt;resource&gt;META-INF/services/javax.ws.rs.ext.Providers&lt;/resource&gt;\r\n                        &lt;/transformer&gt;\r\n                        &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;\r\n                            &lt;resource&gt;META-INF/spring.factories&lt;/resource&gt;\r\n                        &lt;/transformer&gt;\r\n                        &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;\r\n                            &lt;resource&gt;META-INF/spring.handlers&lt;/resource&gt;\r\n                        &lt;/transformer&gt;\r\n                        &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;\r\n                            &lt;resource&gt;META-INF/spring.schemas&lt;/resource&gt;\r\n                        &lt;/transformer&gt;\r\n                        &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.AppendingTransformer&quot;&gt;\r\n                            &lt;resource&gt;META-INF/spring.tooling&lt;/resource&gt;\r\n                        &lt;/transformer&gt;\r\n                        &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ServicesResourceTransformer&quot;/&gt;\r\n                        &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;/&gt;\r\n                        &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer&quot;&gt;\r\n                        &lt;/transformer&gt;\r\n                    &lt;/transformers&gt;\r\n                &lt;/configuration&gt;\r\n                &lt;executions&gt;\r\n                    &lt;execution&gt;\r\n                        &lt;goals&gt;\r\n                            &lt;goal&gt;shade&lt;/goal&gt;\r\n                        &lt;/goals&gt;\r\n                    &lt;/execution&gt;\r\n                &lt;/executions&gt;\r\n            &lt;/plugin&gt;\r\n","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":1112,"user_id":1332486,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/58d306dcd2bc83379aab647ee098fe06?s=128&d=identicon&r=PG","display_name":"Paul Bormans","link":"https://stackoverflow.com/users/1332486/paul-bormans"},"comment_count":0,"score":2,"creation_date":1462262952,"body_markdown":"For anyone looking for options to exclude specific dependencies from the uber-jar, this is a solution that worked for me:\r\n\r\n    &lt;project...&gt;\r\n    &lt;dependencies&gt;\r\n            &lt;dependency&gt;\r\n                &lt;groupId&gt;org.apache.spark&lt;/groupId&gt;\r\n                &lt;artifactId&gt;spark-core_2.11&lt;/artifactId&gt;\r\n                &lt;version&gt;1.6.1&lt;/version&gt;\r\n                &lt;scope&gt;provided&lt;/scope&gt; &lt;=============\r\n            &lt;/dependency&gt;\r\n    &lt;/dependencies&gt;\r\n    &lt;build&gt;\r\n            &lt;plugins&gt;\r\n                &lt;plugin&gt;\r\n                    &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n                    &lt;configuration&gt;\r\n                        &lt;descriptorRefs&gt;\r\n                            &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n                        &lt;/descriptorRefs&gt;\r\n                        &lt;archive&gt;\r\n                            &lt;manifest&gt;\r\n                                &lt;mainClass&gt;...&lt;/mainClass&gt;\r\n                            &lt;/manifest&gt;\r\n                        &lt;/archive&gt;\r\n                    &lt;/configuration&gt;\r\n                    &lt;executions&gt;\r\n                        &lt;execution&gt;\r\n                            &lt;id&gt;make-assembly&lt;/id&gt;\r\n                            &lt;phase&gt;package&lt;/phase&gt;\r\n                            &lt;goals&gt;\r\n                                &lt;goal&gt;single&lt;/goal&gt;\r\n                            &lt;/goals&gt;\r\n                        &lt;/execution&gt;\r\n                    &lt;/executions&gt;\r\n                &lt;/plugin&gt;\r\n            &lt;/plugins&gt;\r\n        &lt;/build&gt;\r\n    &lt;/project&gt;\r\n\r\nSo it&#39;s not a configuration of the mvn-assembly-plugin but a property of the dependency.\r\n","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":359,"user_id":6698976,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/458a953846aa0f3593d20a4388e1fc4f?s=128&d=identicon&r=PG","display_name":"Anoop Rai","link":"https://stackoverflow.com/users/6698976/anoop-rai"},"comment_count":0,"score":7,"creation_date":1472725312,"body_markdown":"To resolve this issue we will use Maven Assembly Plugin that will create the JAR together with its dependency JARs into a single executable JAR file. Just add below plugin configuration in your pom.xml file.\r\n\r\n    &lt;build&gt;\r\n       &lt;pluginManagement&gt;\r\n          &lt;plugins&gt;\r\n             &lt;plugin&gt;\r\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n                &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n                &lt;configuration&gt;\r\n                   &lt;archive&gt;\r\n                      &lt;manifest&gt;\r\n                         &lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n                         &lt;mainClass&gt;com.your.package.MainClass&lt;/mainClass&gt;\r\n                      &lt;/manifest&gt;\r\n                   &lt;/archive&gt;\r\n                   &lt;descriptorRefs&gt;\r\n                      &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n                   &lt;/descriptorRefs&gt;\r\n                &lt;/configuration&gt;\r\n                &lt;executions&gt;\r\n                   &lt;execution&gt;\r\n                      &lt;id&gt;make-my-jar-with-dependencies&lt;/id&gt;\r\n                      &lt;phase&gt;package&lt;/phase&gt;\r\n                      &lt;goals&gt;\r\n                         &lt;goal&gt;single&lt;/goal&gt;\r\n                      &lt;/goals&gt;\r\n                   &lt;/execution&gt;\r\n                &lt;/executions&gt;\r\n             &lt;/plugin&gt;\r\n          &lt;/plugins&gt;\r\n       &lt;/pluginManagement&gt;\r\n    &lt;/build&gt;\r\n\r\nAfter doing this don’t forget to run MAVEN tool with this command mvn clean compile assembly:single\r\n\r\nhttp://jkoder.com/maven-creating-a-jar-together-with-its-dependency-jars-into-a-single-executable-jar-file/","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":26593,"user_id":432903,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/YCgsh.jpg?s=128&g=1","display_name":"prayagupd","link":"https://stackoverflow.com/users/432903/prayagupd"},"comment_count":0,"score":2,"creation_date":1475191624,"body_markdown":"There are millions of answers already, I wanted to add you don&#39;t need `&lt;mainClass&gt;` if you don&#39;t need to add entryPoint to your application. **For example APIs may not have necessarily have `main` method.**\r\n\r\nmaven plugin config\r\n------------------------------\r\n\r\n      &lt;build&gt;\r\n        &lt;finalName&gt;log-enrichment&lt;/finalName&gt;\r\n        &lt;plugins&gt;\r\n          &lt;plugin&gt;\r\n            &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n            &lt;configuration&gt;\r\n              &lt;descriptorRefs&gt;\r\n                &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n              &lt;/descriptorRefs&gt;\r\n            &lt;/configuration&gt;\r\n          &lt;/plugin&gt;\r\n        &lt;/plugins&gt;\r\n      &lt;/build&gt;\r\n\r\n\r\nbuild \r\n------------\r\n\r\n    mvn clean compile assembly:single\r\n\r\nverify\r\n--------------\r\n\r\n    ll target/\r\n    total 35100\r\n    drwxrwx--- 1 root vboxsf     4096 Sep 29 16:25 ./\r\n    drwxrwx--- 1 root vboxsf     4096 Sep 29 16:25 ../\r\n    drwxrwx--- 1 root vboxsf        0 Sep 29 16:08 archive-tmp/\r\n    drwxrwx--- 1 root vboxsf        0 Sep 29 16:25 classes/\r\n    drwxrwx--- 1 root vboxsf        0 Sep 29 16:25 generated-sources/\r\n    drwxrwx--- 1 root vboxsf        0 Sep 29 16:25 generated-test-sources/\r\n    -rwxrwx--- 1 root vboxsf 35929841 Sep 29 16:10 log-enrichment-jar-with-dependencies.jar*\r\n    drwxrwx--- 1 root vboxsf        0 Sep 29 16:08 maven-status/\r\n\r\n","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":2687,"user_id":470517,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/gWEdm.jpg?s=128&g=1","display_name":"Aydin K.","link":"https://stackoverflow.com/users/470517/aydin-k"},"comment_count":0,"score":2,"creation_date":1498073738,"body_markdown":"Add to pom.xml:\r\n\r\n      &lt;dependency&gt;\r\n                &lt;groupId&gt;com.jolira&lt;/groupId&gt;\r\n                &lt;artifactId&gt;onejar-maven-plugin&lt;/artifactId&gt;\r\n                &lt;version&gt;1.4.4&lt;/version&gt;\r\n      &lt;/dependency&gt;\r\n\r\nand\r\n   \r\n\r\n    &lt;plugin&gt;\r\n           &lt;groupId&gt;com.jolira&lt;/groupId&gt;\r\n           &lt;artifactId&gt;onejar-maven-plugin&lt;/artifactId&gt;\r\n           &lt;version&gt;1.4.4&lt;/version&gt;\r\n           &lt;executions&gt;\r\n                  &lt;execution&gt;\r\n                         &lt;goals&gt;\r\n                             &lt;goal&gt;one-jar&lt;/goal&gt;\r\n                         &lt;/goals&gt;\r\n                  &lt;/execution&gt;\r\n           &lt;/executions&gt;\r\n    &lt;/plugin&gt;\r\n\r\nThats it. Next mvn package will also create one fat jar additionally, including all dependency jars.","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":1545,"user_id":3088897,"user_type":"registered","accept_rate":69,"profile_image":"https://i.stack.imgur.com/nLj69.jpg?s=128&g=1","display_name":"Minisha","link":"https://stackoverflow.com/users/3088897/minisha"},"comment_count":0,"score":20,"creation_date":1508979471,"body_markdown":"   You can use maven-shade plugin to build a uber jar like below\r\n\r\n    &lt;plugin&gt;\r\n        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n        &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;\r\n        &lt;executions&gt;\r\n            &lt;execution&gt;\r\n                &lt;phase&gt;package&lt;/phase&gt;\r\n                &lt;goals&gt;\r\n                    &lt;goal&gt;shade&lt;/goal&gt;\r\n                &lt;/goals&gt;\r\n            &lt;/execution&gt;\r\n        &lt;/executions&gt;\r\n    &lt;/plugin&gt;","title":"How can I create an executable JAR with dependencies using Maven?"},{"comments":[{"owner":{"reputation":1949,"user_id":4178262,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-MVZ9ZR1BFos/AAAAAAAAAAI/AAAAAAAAAAA/aEP8yOumPbw/photo.jpg?sz=128","display_name":"Mark Stewart","link":"https://stackoverflow.com/users/4178262/mark-stewart"},"score":1,"creation_date":1556892610}],"owner":{"reputation":51,"user_id":10344261,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-USMHPAw6Xm4/AAAAAAAAAAI/AAAAAAAAAEY/G7bPI-D4KP0/photo.jpg?sz=128","display_name":"Shang Gao","link":"https://stackoverflow.com/users/10344261/shang-gao"},"comment_count":1,"score":0,"creation_date":1551390459,"body_markdown":"    &lt;build&gt;\r\n        &lt;plugins&gt;\r\n            &lt;plugin&gt;\r\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n                &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n                &lt;version&gt;2.4.1&lt;/version&gt;\r\n                &lt;configuration&gt;\r\n                    &lt;!-- get all project dependencies --&gt;\r\n                    &lt;descriptorRefs&gt;\r\n                        &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n                    &lt;/descriptorRefs&gt;\r\n                &lt;/configuration&gt;\r\n                &lt;executions&gt;\r\n                    &lt;execution&gt;\r\n                        &lt;id&gt;make-assembly&lt;/id&gt;\r\n                        &lt;!-- bind to the packaging phase --&gt;\r\n                        &lt;phase&gt;package&lt;/phase&gt;\r\n                        &lt;goals&gt;\r\n                            &lt;goal&gt;single&lt;/goal&gt;\r\n                        &lt;/goals&gt;\r\n                    &lt;/execution&gt;\r\n                &lt;/executions&gt;\r\n            &lt;/plugin&gt;\r\n        &lt;/plugins&gt;\r\n    &lt;/build&gt;","title":"How can I create an executable JAR with dependencies using Maven?"},{"owner":{"reputation":438,"user_id":5754238,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2c904324232f30ce9c2997ecf9aaf6a8?s=128&d=identicon&r=PG&f=1","display_name":"uwevil","link":"https://stackoverflow.com/users/5754238/uwevil"},"comment_count":0,"score":1,"creation_date":1593088411,"body_markdown":"I hope my experience can help somebody: I want to migrate my app Spring (using cas client) to Spring Boot (1.5 not 2.4 yet). I stucked with many problem like :\r\n\r\n&gt; no main manifest attribute, in target/cas-client-web.jar\r\n\r\nI want to make one unique jar with all dependencies. After some days in searching on the Internet. I can do my job with theses lines : \r\n\r\n             &lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;fork&gt;true&lt;/fork&gt;\r\n\t\t\t\t\t&lt;mainClass&gt;${start-class}&lt;/mainClass&gt;\r\n\t\t\t\t&lt;/configuration&gt;\r\n\t\t\t\t&lt;executions&gt;\r\n\t\t\t\t\t&lt;execution&gt;\r\n\t\t\t\t\t\t&lt;goals&gt;\r\n\t\t\t\t\t\t\t&lt;goal&gt;repackage&lt;/goal&gt;\r\n\t\t\t\t\t\t&lt;/goals&gt;\r\n\t\t\t\t\t&lt;/execution&gt;\r\n\t\t\t\t&lt;/executions&gt;\r\n\t\t\t&lt;/plugin&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;executions&gt;\r\n\t\t\t\t\t&lt;execution&gt;\r\n\t\t\t\t\t\t&lt;phase&gt;package&lt;/phase&gt;\r\n\t\t\t\t\t\t&lt;goals&gt;\r\n\t\t\t\t\t\t\t&lt;goal&gt;single&lt;/goal&gt;\r\n\t\t\t\t\t\t&lt;/goals&gt;\r\n\t\t\t\t\t&lt;/execution&gt;\r\n\t\t\t\t&lt;/executions&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;archive&gt;\r\n\t\t\t\t\t\t&lt;manifest&gt;\r\n\t\t\t\t\t\t\t&lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n\t\t\t\t\t\t\t&lt;mainClass&gt;${start-class}&lt;/mainClass&gt;\r\n\t\t\t\t\t\t&lt;/manifest&gt;\r\n\t\t\t\t\t&lt;/archive&gt;\r\n\t\t\t\t\t&lt;descriptorRefs&gt;\r\n\t\t\t\t\t\t&lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\r\n\t\t\t\t\t&lt;/descriptorRefs&gt;\r\n\t\t\t\t&lt;/configuration&gt;\r\n\t\t\t&lt;/plugin&gt;\r\n\r\nwith *start-class* is your main class\r\n\r\n    &lt;properties&gt;\r\n\t\t&lt;java.version&gt;1.8&lt;/java.version&gt;\r\n\t\t&lt;start-class&gt;com.test.Application&lt;/start-class&gt;\r\n\t&lt;/properties&gt;\r\n\r\nAnd my *Application* is like : \r\n\r\n    package com.test;\r\n\r\n    import java.util.Arrays;\r\n\r\n    import com.test.TestProperties;\r\n    import org.springframework.boot.CommandLineRunner;\r\n    import org.springframework.boot.SpringApplication;\r\n    import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\r\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\r\n    import org.springframework.boot.context.properties.EnableConfigurationProperties;\r\n    import org.springframework.context.ApplicationContext;\r\n    import org.springframework.context.annotation.Bean;\r\n\r\n\r\n    @SpringBootApplication\r\n    @EnableAutoConfiguration\r\n    @EnableConfigurationProperties({TestProperties.class})\r\n    public class Application {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(Application.class, args);\r\n    }\r\n\r\n    @Bean\r\n    public CommandLineRunner commandLineRunner(ApplicationContext ctx) {\r\n        return args -&gt; {\r\n\r\n            System.out.println(&quot;Let&#39;s inspect the beans provided by Spring Boot:&quot;);\r\n\r\n            String[] beanNames = ctx.getBeanDefinitionNames();\r\n            Arrays.sort(beanNames);\r\n            for (String beanName : beanNames) {\r\n                System.out.println(beanName);\r\n            }\r\n\r\n        };\r\n    }\r\n\r\n    }","title":"How can I create an executable JAR with dependencies using Maven?"}],"owner":{"reputation":26116,"user_id":67219,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0f3cc17431211a37e6d52154fef3f710?s=128&d=identicon&r=PG","display_name":"soemirno","link":"https://stackoverflow.com/users/67219/soemirno"},"comment_count":4,"is_answered":true,"answer_count":31,"score":2557,"creation_date":1235292225,"question_id":574594,"body_markdown":"I want to package my project in a single executable JAR for distribution.\r\n\r\nHow can I make a Maven project package all dependency JARs into my output JAR?","link":"https://stackoverflow.com/questions/574594/how-can-i-create-an-executable-jar-with-dependencies-using-maven","title":"How can I create an executable JAR with dependencies using Maven?"},{"tags":["java","android","android-networking","networkonmainthread"],"comments":[{"owner":{"reputation":1031,"user_id":1357390,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1d8e5e3a2133ed88992dcbf571435be6?s=128&d=identicon&r=PG","display_name":"Adrian Monk","link":"https://stackoverflow.com/users/1357390/adrian-monk"},"score":132,"creation_date":1344343126},{"owner":{"reputation":498,"user_id":1542237,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/e7bbd815136df3c4f7b8291544694940?s=128&d=identicon&r=PG","display_name":"Anuj Sharma","link":"https://stackoverflow.com/users/1542237/anuj-sharma"},"score":6,"creation_date":1390459151},{"owner":{"reputation":36678,"user_id":693752,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/1f9cd9b9bad9aa6115a1ed72433c180d?s=128&d=identicon&r=PG","display_name":"Snicolas","link":"https://stackoverflow.com/users/693752/snicolas"},"score":3,"creation_date":1392159324},{"owner":{"reputation":6069,"user_id":2915785,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/JkoNf.png?s=128&g=1","display_name":"Naveed Ahmad","link":"https://stackoverflow.com/users/2915785/naveed-ahmad"},"score":0,"creation_date":1414701858},{"owner":{"reputation":2984,"user_id":141437,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/8da873d447f6682ea907bbf83e8fcb36?s=128&d=identicon&r=PG","display_name":"Jay","link":"https://stackoverflow.com/users/141437/jay"},"score":0,"creation_date":1511131878}],"answers":[{"owner":{"reputation":21444,"user_id":694378,"user_type":"registered","profile_image":"https://i.stack.imgur.com/hlX0K.png?s=128&g=1","display_name":"Mark Allison","link":"https://stackoverflow.com/users/694378/mark-allison"},"comment_count":0,"score":149,"creation_date":1308053271,"body_markdown":"You cannot perform network [I/O][1] on the UI thread on [Honeycomb][2]. Technically, it *is* possible on earlier versions of Android, but it is a really bad idea as it will cause your app to stop responding, and can result in the OS killing your app for being badly behaved. You&#39;ll need to run a background process or use AsyncTask to perform your network transaction on a background thread.\r\n\r\nThere is an article about [Painless Threading][3] on the Android developer site which is a good introduction to this, and it will provide you with a much better depth of an answer than can be realistically provided here.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Input/output\r\n  [2]: https://en.wikipedia.org/wiki/Android_version_history#Android_3.0_Honeycomb_.28API_level_11.29\r\n  [3]: http://android-developers.blogspot.com/2009/05/painless-threading.html\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":34713,"user_id":398309,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/be7a307aae139b8e2b80d91237d20356?s=128&d=identicon&r=PG","display_name":"Michael Spector","link":"https://stackoverflow.com/users/398309/michael-spector"},"comment_count":0,"score":2605,"creation_date":1308053705,"body_markdown":"**NOTE : AsyncTask was deprecated in API level 30.   \r\n[https://developer.android.com/reference/android/os/AsyncTask][1]**\r\n\r\nThis exception is thrown when an application attempts to perform a networking operation on its main thread. Run your code in [`AsyncTask`][2]:\r\n\r\n    class RetrieveFeedTask extends AsyncTask&lt;String, Void, RSSFeed&gt; {\r\n\r\n        private Exception exception;\r\n\r\n        protected RSSFeed doInBackground(String... urls) {\r\n            try {\r\n                URL url = new URL(urls[0]);\r\n                SAXParserFactory factory = SAXParserFactory.newInstance();\r\n                SAXParser parser = factory.newSAXParser();\r\n                XMLReader xmlreader = parser.getXMLReader();\r\n                RssHandler theRSSHandler = new RssHandler();\r\n                xmlreader.setContentHandler(theRSSHandler);\r\n                InputSource is = new InputSource(url.openStream());\r\n                xmlreader.parse(is);\r\n\r\n                return theRSSHandler.getFeed();\r\n            } catch (Exception e) {\r\n                this.exception = e;\r\n\r\n                return null;\r\n            } finally {\r\n                is.close();\r\n            }\r\n        }\r\n\r\n        protected void onPostExecute(RSSFeed feed) {\r\n            // TODO: check this.exception\r\n            // TODO: do something with the feed\r\n        }\r\n    }\r\n\r\nHow to execute the task:\r\n\r\nIn `MainActivity.java` file you can add this line within your `oncreate()` method\r\n\r\n    new RetrieveFeedTask().execute(urlToRssFeed);\r\n\r\nDon&#39;t forget to add this to `AndroidManifest.xml` file:\r\n\r\n    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;\r\n\r\n\r\n  [1]: https://developer.android.com/reference/android/os/AsyncTask\r\n  [2]: http://developer.android.com/reference/android/os/AsyncTask.html","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":8411,"user_id":1169115,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1143fd841010526e2fb11dd38a819de6?s=128&d=identicon&r=PG","display_name":"user1169115","link":"https://stackoverflow.com/users/1169115/user1169115"},"comment_count":0,"score":717,"creation_date":1329289190,"body_markdown":"**You should almost always run network operations on a thread or as an asynchronous task.**\r\n\r\nBut it *is* possible to remove this restriction and you override the default behavior, if you are willing to accept the consequences.\r\n\r\nAdd:\r\n\r\n    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n\r\n    StrictMode.setThreadPolicy(policy); \r\n\r\nIn your class,\r\n\r\nand\r\n\r\nADD this permission in android manifest.xml file: &#160; &#160;\r\n\r\n    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;\r\n\r\nConsequences:\r\n\r\nYour app will (in areas of spotty internet connection) become unresponsive and lock up, the user perceives slowness and has to do a force kill, and you risk the activity manager killing your app and telling the user that the app has stopped.\r\n\r\nAndroid has some good tips on good programming practices to design for responsiveness:\r\nhttp://developer.android.com/reference/android/os/NetworkOnMainThreadException.html\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":1311,"user_id":878106,"user_type":"registered","profile_image":"https://i.stack.imgur.com/5ac7Q.jpg?s=128&g=1","display_name":"Muhammad Mubashir","link":"https://stackoverflow.com/users/878106/muhammad-mubashir"},"score":2,"creation_date":1367839430},{"owner":{"reputation":16168,"user_id":603270,"user_type":"registered","accept_rate":98,"profile_image":"https://www.gravatar.com/avatar/cbfe6e57e0fa59928be4898a7be08c5d?s=128&d=identicon&r=PG","display_name":"shkschneider","link":"https://stackoverflow.com/users/603270/shkschneider"},"score":13,"creation_date":1377788485},{"owner":{"reputation":1033,"user_id":3470479,"user_type":"registered","profile_image":"https://graph.facebook.com/100002931125658/picture?type=large","display_name":"Prakhar1001","link":"https://stackoverflow.com/users/3470479/prakhar1001"},"score":0,"creation_date":1473948361}],"owner":{"reputation":4042,"user_id":1029089,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/67fa77173dda3fd89d4124da7bc6873d?s=128&d=identicon&r=PG","display_name":"Piyush-Ask Any Difference","link":"https://stackoverflow.com/users/1029089/piyush-ask-any-difference"},"comment_count":3,"score":72,"creation_date":1351062603,"body_markdown":"You disable the strict mode using following code:\r\n\r\n    if (android.os.Build.VERSION.SDK_INT &gt; 9) {\r\n        StrictMode.ThreadPolicy policy = \r\n    \t\tnew StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n        StrictMode.setThreadPolicy(policy);\r\n    }\r\n\r\n**This is not recommended**: use the `AsyncTask` interface.\r\n\r\n[Full code for both the methods][1]\r\n\r\n\r\n  [1]: https://askanydifference.com/how-to-fix-android-os-networkonmainthreadexception/","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":140,"user_id":1781157,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/72d398d3ca3ab886a9b6d35546294627?s=128&d=identicon&r=PG","display_name":"Richi Gonz&#225;lez","link":"https://stackoverflow.com/users/1781157/richi-gonz%c3%a1lez"},"score":10,"creation_date":1369727238}],"owner":{"reputation":21381,"user_id":1466188,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/a070e78946e97428453fa3b797c678ae?s=128&d=identicon&r=PG","display_name":"Dipak Keshariya","link":"https://stackoverflow.com/users/1466188/dipak-keshariya"},"comment_count":1,"score":122,"creation_date":1351591592,"body_markdown":"There are two Solution of this Problem.\r\n\r\n1) Don&#39;t write network call in Main UI Thread, Use Async Task for that.\r\n\r\n2) Write below code into your MainActivity file after setContentView(R.layout.activity_main);\r\n\r\n    if (android.os.Build.VERSION.SDK_INT &gt; 9) {\r\n        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n        StrictMode.setThreadPolicy(policy);\r\n    }\r\n\r\nAnd below import statement into your java file.\r\n\r\n    import android.os.StrictMode;","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":5501,"user_id":1099990,"user_type":"registered","profile_image":"https://i.stack.imgur.com/sPaVW.jpg?s=128&g=1","display_name":"Dr.Luiji","link":"https://stackoverflow.com/users/1099990/dr-luiji"},"comment_count":0,"score":460,"creation_date":1358785895,"body_markdown":"I solved this problem using a new `Thread`.\r\n\r\n    Thread thread = new Thread(new Runnable() {\r\n        \r\n        @Override\r\n        public void run() {\r\n            try  {\r\n    \t        //Your code goes here\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    });\r\n    \r\n    thread.start();\t\r\n\r\n\t\t\t","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":4074,"user_id":2559284,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/3f893b556d42b01e6de76195343ea25e?s=128&d=identicon&r=PG","display_name":"sivag1","link":"https://stackoverflow.com/users/2559284/sivag1"},"comment_count":0,"score":43,"creation_date":1374173542,"body_markdown":"The top [answer of spektom][1] works perfect.\r\n\r\nIf you are writing the `AsyncTask` inline and not extending as a class, and on top of this, if there is a need to get a response out of the `AsyncTask`, one can use the `get()` method as below.\r\n\r\n    RSSFeed feed = new RetreiveFeedTask().execute(urlToRssFeed).get();\r\n\r\n(From his example.)\r\n\r\n  [1]: https://stackoverflow.com/questions/6343166/how-to-fix-android-os-networkonmainthreadexception/6343299#6343299\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":7212,"user_id":473338,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/629f85340a6e54d11aae14d5b26bbbbe?s=128&d=identicon&r=PG","display_name":"Stevie","link":"https://stackoverflow.com/users/473338/stevie"},"score":8,"creation_date":1390379630},{"owner":{"reputation":211,"user_id":2535511,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6b7d5869b9aab61ee320f779db44b432?s=128&d=identicon&r=PG","display_name":"Dage","link":"https://stackoverflow.com/users/2535511/dage"},"score":0,"creation_date":1391510475}],"owner":{"reputation":5783,"user_id":1645339,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/eecdecec53a6c9fddbcad6bf1dd99c21?s=128&d=identicon&r=PG","display_name":"venergiac","link":"https://stackoverflow.com/users/1645339/venergiac"},"comment_count":2,"score":81,"creation_date":1376817528,"body_markdown":"1. Do not use strictMode (only in debug mode)\r\n2. Do not change SDK version\r\n3. Do not use a separate thread\r\n\r\nUse Service or AsyncTask\r\n\r\nSee also Stack&amp;nbsp;Overflow question:\r\n\r\n*https://stackoverflow.com/questions/18297485/i-get-an-android-os-networkonmainthreadexception-sending-an-email-from-android/18297516#18297516*\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":531,"user_id":2447827,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8de1201f0e387ee197ec341cd44364d2?s=128&d=identicon&r=PG","display_name":"raihan ahmed","link":"https://stackoverflow.com/users/2447827/raihan-ahmed"},"comment_count":0,"score":50,"creation_date":1378368994,"body_markdown":"This happens in Android 3.0 and above. From Android 3.0 and above, they have restricted using network operations (functions that access the Internet) from running in the main thread/UI thread (what spawns from your on create and on resume methods in the activity).\r\n\r\nThis is to encourage using separate threads for network operations. See [AsyncTask][1] for more details on how to perform network activities the right way.\r\n\r\n  [1]: http://developer.android.com/reference/android/os/AsyncTask.html\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":6465,"user_id":690952,"user_type":"registered","profile_image":"https://i.stack.imgur.com/B9WfV.png?s=128&g=1","display_name":"Selvin","link":"https://stackoverflow.com/users/690952/selvin"},"score":11,"creation_date":1379432169},{"owner":{"reputation":2040,"user_id":1308850,"user_type":"registered","accept_rate":37,"profile_image":"https://graph.facebook.com/100000712576206/picture?type=large","display_name":"FractalBob","link":"https://stackoverflow.com/users/1308850/fractalbob"},"score":1,"creation_date":1382729769}],"owner":{"reputation":1887,"user_id":1292736,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/47d17f7686caeefc7c5d502751488bb6?s=128&d=identicon&r=PG","display_name":"rharvey","link":"https://stackoverflow.com/users/1292736/rharvey"},"comment_count":2,"score":28,"creation_date":1379420121,"body_markdown":"For me it was this:\r\n\r\n    &lt;uses-sdk\r\n            android:minSdkVersion=&quot;8&quot;\r\n            android:targetSdkVersion=&quot;10&quot; /&gt;\r\n\r\nThe device I was testing my app on was 4.1.2 which is SDK Version 16!\r\n\r\nMake the sure the target version is the same as your Android Target Library. If you are unsure what your target library is, right click your Project -&gt; *Build Path* -&gt; *Android*, and it should be the one that is ticked.\r\n\r\nAlso, as others have mentioned, include the correct permissions to access the Internet:\r\n\r\n    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":3503,"user_id":1897334,"user_type":"registered","accept_rate":45,"profile_image":"https://i.stack.imgur.com/1H2y4.jpg?s=128&g=1","display_name":"henry4343","link":"https://stackoverflow.com/users/1897334/henry4343"},"comment_count":0,"score":84,"creation_date":1387895588,"body_markdown":"Do the network actions on another thread\r\n\r\n&gt;For Example:\r\n\r\n    new Thread(new Runnable(){\r\n        @Override\r\n        public void run() {\r\n            // Do network action in this function\r\n        }\r\n    }).start();\r\n\r\nAnd add this to AndroidManifest.xml    \r\n\r\n    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":5355,"user_id":1360732,"user_type":"registered","profile_image":"https://i.stack.imgur.com/NFzsy.jpg?s=128&g=1","display_name":"Kapil Vats","link":"https://stackoverflow.com/users/1360732/kapil-vats"},"comment_count":0,"score":44,"creation_date":1388946518,"body_markdown":"You should not do any time-consuming task on the main thread (UI thread), like any network operation, file I/O, or SQLite database operations. So for this kind of operation, you should create a worker thread, but the problem is that you can not directly perform any UI related operation from your worker thread. For that, you have to use `Handler` and pass the `Message`. \r\n\r\nTo simplify all these things, Android provides various ways, like `AsyncTask`, `AsyncTaskLoader`, `CursorLoader` or `IntentService`. So you can use any of these according to your requirements.\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":3048,"user_id":1429432,"user_type":"registered","accept_rate":68,"profile_image":"https://www.gravatar.com/avatar/d54fcc6f3d6d39688c69999f846e427a?s=128&d=identicon&r=PG","display_name":"Yousha Aleayoub","link":"https://stackoverflow.com/users/1429432/yousha-aleayoub"},"score":1,"creation_date":1457788704}],"owner":{"reputation":1006,"user_id":3129443,"user_type":"registered","accept_rate":33,"profile_image":"https://www.gravatar.com/avatar/7201a07ae19dce89e13b4c3366720fad?s=128&d=identicon&r=PG&f=1","display_name":"Dhruv Jindal","link":"https://stackoverflow.com/users/3129443/dhruv-jindal"},"comment_count":1,"score":60,"creation_date":1389680053,"body_markdown":"Network-based operations cannot be run on the main thread. You need to run all network-based tasks on a child thread or implement AsyncTask.\r\n\r\nThis is how you run a task in a child thread:\r\n\r\n    new Thread(new Runnable(){\r\n        @Override\r\n        public void run() {\r\n            try {\r\n                // Your implementation goes here\r\n            } \r\n            catch (Exception ex) {\r\n                ex.printStackTrace();\r\n            }\r\n        }\r\n    }).start();\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":7212,"user_id":473338,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/629f85340a6e54d11aae14d5b26bbbbe?s=128&d=identicon&r=PG","display_name":"Stevie","link":"https://stackoverflow.com/users/473338/stevie"},"comment_count":0,"score":181,"creation_date":1390396652,"body_markdown":"**The accepted answer has some significant down-sides. It is not advisable to use AsyncTask for networking unless you _really_ know what you are doing. Some of the down-sides include:**\r\n\r\n * AsyncTask&#39;s created as non-static inner classes have an implicit reference to the enclosing Activity object, its context, and the entire View hierarchy created by that activity. This reference prevents the Activity from being garbage collected until the AsyncTask&#39;s background work completes. If the user&#39;s connection is slow, and/or the download is large, these short-term memory leaks can become a problem - for example, if the orientation changes several times (and you don&#39;t cancel the executing tasks), or the user navigates away from the Activity.\r\n * AsyncTask has different execution characteristics depending on the platform it executes on: prior to API level 4 AsyncTasks execute serially on a single background thread; from API level 4 through API level 10, AsyncTasks execute on a pool of up to 128 threads; from API level 11 onwards AsyncTask executes serially on a single background thread (unless you use the overloaded `executeOnExecutor` method and supply an alternative executor). Code that works fine when running serially on ICS may break when executed concurrently on Gingerbread, say if you have inadvertent order-of-execution dependencies.\r\n\r\nIf you want to avoid short-term memory leaks, have well-defined execution characteristics across all platforms, and have a base to build really robust network handling, you might want to consider:\r\n\r\n 1. Using a library that does a nice job of this for you - there&#39;s a nice comparison of networking libs in [this question](https://stackoverflow.com/questions/16902716/comparison-of-android-networking-libraries-okhttp-retrofit-volley), or\r\n 2. Using a `Service` or `IntentService` instead, perhaps with a `PendingIntent` to return the result via the Activity&#39;s `onActivityResult` method.\r\n\r\n*IntentService approach*\r\n--\r\n\r\nDown-sides:\r\n\r\n * More code and complexity than `AsyncTask`, though not as much as you might think\r\n * Will queue requests and run them on a _single_ background thread. You can easily control this by replacing `IntentService` with an equivalent `Service` implementation, perhaps like [this one](https://github.com/steveliles/AsyncAndroid/blob/master/AsyncAndroid/src/main/java/com/packt/asyncandroid/chapter6/ConcurrentIntentService.java).\r\n * Um, I can&#39;t think of any others right now actually\r\n\r\nUp-sides:\r\n\r\n * Avoids the short-term memory leak problem\r\n * If your activity restarts while network operations are in-flight it can still receive the result of the download via its `onActivityResult` method\r\n * Better platform than AsyncTask to build and re-use robust networking code. Example: if you need to do an important upload, you could do it from `AsyncTask` in an `Activity`, but if the user context-switches out of the app to take a phone call, the system _may_ kill the app before the upload completes. It is _less likely_ to kill an application with an active `Service`.\r\n * If you use your own concurrent version of `IntentService` (like the one I linked above) you can control the level of concurrency via the `Executor`.\r\n\r\n*Implementation summary*\r\n---\r\n\r\nYou can implement an `IntentService` to perform downloads on a single background thread quite easily.\r\n\r\nStep 1: Create an `IntentService` to perform the download. You can tell it what to download via `Intent` extra&#39;s, and pass it a `PendingIntent` to use to return the result to the `Activity`:\r\n\r\n    import android.app.IntentService;\r\n    import android.app.PendingIntent;\r\n    import android.content.Intent;\r\n    import android.util.Log;\r\n\r\n    import java.io.InputStream;\r\n    import java.net.MalformedURLException;\r\n    import java.net.URL;\r\n\r\n    public class DownloadIntentService extends IntentService {\r\n\r\n        private static final String TAG = DownloadIntentService.class.getSimpleName();\r\n\r\n        public static final String PENDING_RESULT_EXTRA = &quot;pending_result&quot;;\r\n        public static final String URL_EXTRA = &quot;url&quot;;\r\n        public static final String RSS_RESULT_EXTRA = &quot;url&quot;;\r\n\r\n        public static final int RESULT_CODE = 0;\r\n        public static final int INVALID_URL_CODE = 1;\r\n        public static final int ERROR_CODE = 2;\r\n\r\n        private IllustrativeRSSParser parser;\r\n\r\n        public DownloadIntentService() {\r\n            super(TAG);\r\n\r\n            // make one and re-use, in the case where more than one intent is queued\r\n            parser = new IllustrativeRSSParser();\r\n        }\r\n\r\n        @Override\r\n        protected void onHandleIntent(Intent intent) {\r\n            PendingIntent reply = intent.getParcelableExtra(PENDING_RESULT_EXTRA);\r\n            InputStream in = null;\r\n            try {\r\n                try {\r\n                    URL url = new URL(intent.getStringExtra(URL_EXTRA));\r\n                    IllustrativeRSS rss = parser.parse(in = url.openStream());\r\n\r\n                    Intent result = new Intent();\r\n                    result.putExtra(RSS_RESULT_EXTRA, rss);\r\n\r\n                    reply.send(this, RESULT_CODE, result);\r\n                } catch (MalformedURLException exc) {\r\n                    reply.send(INVALID_URL_CODE);\r\n                } catch (Exception exc) {\r\n                    // could do better by treating the different sax/xml exceptions individually\r\n                    reply.send(ERROR_CODE);\r\n                }\r\n            } catch (PendingIntent.CanceledException exc) {\r\n                Log.i(TAG, &quot;reply cancelled&quot;, exc);\r\n            }\r\n        }\r\n    }\r\n\r\nStep 2: Register the service in the manifest:\r\n\r\n    &lt;service\r\n            android:name=&quot;.DownloadIntentService&quot;\r\n            android:exported=&quot;false&quot;/&gt;\r\n\r\nStep 3: Invoke the service from the Activity, passing a PendingResult object which the Service will use to return the result:\r\n\r\n    PendingIntent pendingResult = createPendingResult(\r\n        RSS_DOWNLOAD_REQUEST_CODE, new Intent(), 0);\r\n    Intent intent = new Intent(getApplicationContext(), DownloadIntentService.class);\r\n    intent.putExtra(DownloadIntentService.URL_EXTRA, URL);\r\n    intent.putExtra(DownloadIntentService.PENDING_RESULT_EXTRA, pendingResult);\r\n    startService(intent);\r\n\r\nStep 4: Handle the result in onActivityResult:\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        if (requestCode == RSS_DOWNLOAD_REQUEST_CODE) {\r\n            switch (resultCode) {\r\n                case DownloadIntentService.INVALID_URL_CODE:\r\n                    handleInvalidURL();\r\n                    break;\r\n                case DownloadIntentService.ERROR_CODE:\r\n                    handleError(data);\r\n                    break;\r\n                case DownloadIntentService.RESULT_CODE:\r\n                    handleRSS(data);\r\n                    break;\r\n            }\r\n            handleRSS(data);\r\n        }\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\nA Github project containing a complete working Android-Studio/Gradle project is available [here](https://github.com/steveliles/Android-Download-Service-Example).","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":848,"user_id":1837505,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/vXYYa.jpg?s=128&g=1","display_name":"perry","link":"https://stackoverflow.com/users/1837505/perry"},"comment_count":0,"score":32,"creation_date":1393309431,"body_markdown":"This is only thrown for applications targeting the [Honeycomb][1] SDK or higher. Applications targeting earlier SDK versions are allowed to do networking on their main event loop threads.\r\n\r\n[The error is the SDK warning!][2]\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Android_version_history#Android_3.0_Honeycomb_.28API_level_11.29\r\n  [2]: http://developer.android.com/reference/android/os/NetworkOnMainThreadException.html\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":459,"user_id":3081554,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/Nh0OL.jpg?s=128&g=1","display_name":"dhiraj kakran","link":"https://stackoverflow.com/users/3081554/dhiraj-kakran"},"comment_count":0,"score":26,"creation_date":1393681439,"body_markdown":"**Use this in Your Activity**\r\n\r\n\t\tbtnsub.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View v) {\r\n\t\t\t\tnew Thread(new Runnable() {\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void run() {\r\n\t\t\t\t\t\t// TODO Auto-generated method stub\r\n\r\n\t\t\t\t\t\t//Initialize soap request + add parameters\r\n\t\t\t\t\t\tSoapObject request = new SoapObject(NAMESPACE, METHOD_NAME1);\r\n\r\n\t\t\t\t\t\t//Use this to add parameters\r\n\t\t\t\t\t\trequest.addProperty(&quot;pincode&quot;, txtpincode.getText().toString());\r\n\t\t\t\t\t\trequest.addProperty(&quot;bg&quot;, bloodgroup.getSelectedItem().toString());\r\n\r\n\t\t\t\t\t\t//Declare the version of the SOAP request\r\n\t\t\t\t\t\tSoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);\r\n\r\n\t\t\t\t\t\tenvelope.setOutputSoapObject(request);\r\n\t\t\t\t\t\tenvelope.dotNet = true;\r\n\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tHttpTransportSE androidHttpTransport = new HttpTransportSE(URL);\r\n\r\n\t\t\t\t\t\t\t//this is the actual part that will call the webservice\r\n\t\t\t\t\t\t\tandroidHttpTransport.call(SOAP_ACTION1, envelope);\r\n\r\n\t\t\t\t\t\t\t// Get the SoapResult from the envelope body.\r\n\t\t\t\t\t\t\tSoapObject result = (SoapObject) envelope.getResponse();\r\n\t\t\t\t\t\t\tLog.e(&quot;result data&quot;, &quot;data&quot; + result);\r\n\t\t\t\t\t\t\tSoapObject root = (SoapObject) result.getProperty(0);\r\n\t\t\t\t\t\t\t// SoapObject s_deals = (SoapObject) root.getProperty(0);\r\n\t\t\t\t\t\t\t// SoapObject s_deals_1 = (SoapObject) s_deals.getProperty(0);\r\n\t\t\t\t\t\t\t//\r\n\r\n\t\t\t\t\t\t\tSystem.out.println(&quot;********Count : &quot; + root.getPropertyCount());\r\n\r\n\t\t\t\t\t\t\tvalue = new ArrayList&lt;Detailinfo&gt;();\r\n\r\n\t\t\t\t\t\t\tfor (int i = 0; i &lt; root.getPropertyCount(); i++) {\r\n\t\t\t\t\t\t\t\tSoapObject s_deals = (SoapObject) root.getProperty(i);\r\n\t\t\t\t\t\t\t\tDetailinfo info = new Detailinfo();\r\n\r\n\t\t\t\t\t\t\t\tinfo.setFirstName(s_deals.getProperty(&quot;Firstname&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setLastName(s_deals.getProperty(&quot;Lastname&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setDOB(s_deals.getProperty(&quot;DOB&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setGender(s_deals.getProperty(&quot;Gender&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setAddress(s_deals.getProperty(&quot;Address&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setCity(s_deals.getProperty(&quot;City&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setState(s_deals.getProperty(&quot;State&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setPinecode(s_deals.getProperty(&quot;Pinecode&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setMobile(s_deals.getProperty(&quot;Mobile&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setEmail(s_deals.getProperty(&quot;Email&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setBloodgroup(s_deals.getProperty(&quot;Bloodgroup&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setAdddate(s_deals.getProperty(&quot;Adddate&quot;).toString());\r\n\t\t\t\t\t\t\t\tinfo.setWaight(s_deals.getProperty(&quot;waight&quot;).toString());\r\n\t\t\t\t\t\t\t\tvalue.add(info);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} catch (Exception e) {\r\n\t\t\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tIntent intent = new Intent(getApplicationContext(), ComposeMail.class);\r\n\t\t\t\t\t\t//intent.putParcelableArrayListExtra(&quot;valuesList&quot;, value);\r\n\r\n\t\t\t\t\t\tstartActivity(intent);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).start();\r\n\t\t\t}\r\n\t\t});\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":30102,"user_id":1367392,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/ddba466166e7ea3c4923d16f96cff1f7?s=128&d=identicon&r=PG&f=1","display_name":"Oleksiy","link":"https://stackoverflow.com/users/1367392/oleksiy"},"score":6,"creation_date":1439947833}],"owner":{"reputation":30102,"user_id":1367392,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/ddba466166e7ea3c4923d16f96cff1f7?s=128&d=identicon&r=PG&f=1","display_name":"Oleksiy","link":"https://stackoverflow.com/users/1367392/oleksiy"},"comment_count":1,"score":49,"creation_date":1402542654,"body_markdown":"Using [Android Annotations][1] is an option. It will allow you to simply run any method in a background thread:\r\n\r\n    // normal method\r\n    private void normal() {\r\n        doSomething(); // do something in background\r\n    }\r\n\r\n    @Background\r\n    protected void doSomething() \r\n        // run your networking code here\r\n    }\r\n\r\n  [1]: http://androidannotations.org/\r\n\r\nNote, that although it provides benefits of simplicity and readability, it has its disadvantages. ","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":4252,"user_id":1092746,"user_type":"registered","accept_rate":58,"profile_image":"https://www.gravatar.com/avatar/75214b33ad242fe56b4b8aaa6f379996?s=128&d=identicon&r=PG","display_name":"Novak","link":"https://stackoverflow.com/users/1092746/novak"},"comment_count":0,"score":24,"creation_date":1403645573,"body_markdown":"Just to spell out something explicitly:\r\n\r\nThe main thread is basically the UI thread.\r\n\r\nSo saying that you cannot do networking operations in the main thread means you cannot do networking operations in the UI thread, which means *you cannot do networking operations in a `*runOnUiThread(new Runnable() { ... }*` block* inside some other thread, either.\r\n\r\n(I just had a long head-scratching moment trying to figure out why I was getting that error somewhere other than my main thread.  This was why; this thread helped; and hopefully this comment will help someone else.)","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":3203,"user_id":2767181,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/rNeHp.jpg?s=128&g=1","display_name":"Ashwin S Ashok","link":"https://stackoverflow.com/users/2767181/ashwin-s-ashok"},"comment_count":0,"score":45,"creation_date":1405490977,"body_markdown":"The error is due to executing long running operations in main thread,You can easily rectify the problem by using [AsynTask][1] or [Thread][2]. You can checkout this library [AsyncHTTPClient][3] for better handling. \r\n\r\n    AsyncHttpClient client = new AsyncHttpClient();\r\n    client.get(&quot;http://www.google.com&quot;, new AsyncHttpResponseHandler() {\r\n\r\n        @Override\r\n        public void onStart() {\r\n            // Called before a request is started\r\n        }\r\n\r\n        @Override\r\n        public void onSuccess(int statusCode, Header[] headers, byte[] response) {\r\n            // Called when response HTTP status is &quot;200 OK&quot;\r\n        }\r\n\r\n        @Override\r\n        public void onFailure(int statusCode, Header[] headers, byte[] errorResponse, Throwable e) {\r\n            // Called when response HTTP status is &quot;4XX&quot; (for example, 401, 403, 404)\r\n        }\r\n\r\n        @Override\r\n        public void onRetry(int retryNo) {\r\n            // Called when request is retried\r\n        }\r\n    });\r\n\r\n\r\n  [1]: https://developer.android.com/reference/android/os/AsyncTask.html\r\n  [2]: https://developer.android.com/reference/java/lang/Thread.html\r\n  [3]: http://loopj.com/android-async-http/","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":462,"user_id":2201778,"user_type":"registered","accept_rate":43,"profile_image":"https://i.stack.imgur.com/euyRE.jpg?s=128&g=1","display_name":"amardeep","link":"https://stackoverflow.com/users/2201778/amardeep"},"comment_count":0,"score":22,"creation_date":1405943600,"body_markdown":"This exception occurs due to any heavy task performed on the main thread if that performing task takes *too much time*.\r\n\r\nTo avoid this, we can handle it using **threads** or **executers**\r\n\r\n    Executors.newSingleThreadExecutor().submit(new Runnable() {\r\n        @Override\r\n        public void run() {\r\n            // You can perform your task here.\r\n        }\r\n    });\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":4774,"user_id":3129572,"user_type":"registered","profile_image":"https://i.stack.imgur.com/YjXYb.jpg?s=128&g=1","display_name":"Vaishali Sutariya","link":"https://stackoverflow.com/users/3129572/vaishali-sutariya"},"comment_count":0,"score":52,"creation_date":1406544193,"body_markdown":"Put your code inside:\r\n\r\n    new Thread(new Runnable(){\r\n        @Override\r\n        public void run() {\r\n            try {\r\n                // Your implementation\r\n            }\r\n            catch (Exception ex) {\r\n                ex.printStackTrace();\r\n            }\r\n        }\r\n    }).start();\r\n\r\nOr:\r\n\r\n    class DemoTask extends AsyncTask&lt;Void, Void, Void&gt; {\r\n\r\n        protected Void doInBackground(Void... arg0) {\r\n            //Your implementation\r\n        }\r\n\r\n        protected void onPostExecute(Void result) {\r\n            // TODO: do something with the feed\r\n        }\r\n    }\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":131,"user_id":2313968,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/ec5d4492b22befa8e51dc06a43fab69a?s=128&d=identicon&r=PG","display_name":"Kumarsunil","link":"https://stackoverflow.com/users/2313968/kumarsunil"},"comment_count":0,"score":-5,"creation_date":1418357541,"body_markdown":"Android does not allow a separate process into the main activity thread, and the HTTP connection is an independent thread here. That is the reason you are getting the &quot;**android.os.NetworkOnMainThreadException**&quot;.\r\n\r\nThere can be a need where you want to check the actual Internet connection before showing webview to the user, because if there is not Internet the web view will show the *page not found* error to the user, which normally you don&#39;t what to show.\r\n\r\nFor checking Internet availability, the ping command can be used, but in case of Wi-Fi pinging can be disabled at the Wi-Fi server, so in this case you use an HTTP connection to check the status of the request.\r\n\r\nThis can be the right approach if you are checking your own webview URL link before showing a webview to the user. In this case, you can use the strict mode of Android, but don&#39;t permit all the policy because you don&#39;t need it.\r\n\r\nYou should only give network allow policy for the strict mode. Just add the below line into your code, and you will not get this error.\r\n\r\n    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitNetwork().build();\r\n    StrictMode.setThreadPolicy(policy);\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":2319,"user_id":3514144,"user_type":"registered","accept_rate":17,"profile_image":"https://i.stack.imgur.com/hRi21.jpg?s=128&g=1","display_name":"Ajay Pandya","link":"https://stackoverflow.com/users/3514144/ajay-pandya"},"score":0,"creation_date":1481278299}],"owner":{"reputation":5547,"user_id":2721917,"user_type":"registered","accept_rate":57,"profile_image":"https://i.stack.imgur.com/LXHdu.jpg?s=128&g=1","display_name":"Subhalaxmi","link":"https://stackoverflow.com/users/2721917/subhalaxmi"},"comment_count":1,"score":3,"creation_date":1419149867,"body_markdown":"I solved this problem in a simple way...\r\n\r\nI added after `oncreate` `StrictMode.enableDefaults();` and solved this.\r\n\r\nOr\r\n\r\nuse `Service` or `AsyncTask` to solve this\r\n\r\nNote:\r\n\r\n    Do not change SDK version\r\n    Do not use a separate thread\r\n\r\nFor more, [check this][1].\r\n\r\n  [1]: http://sevennet.org/2014/11/21/how-to-android-os-networkonmainthreadexception/\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":121,"user_id":3151440,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/aKRzK.jpg?s=128&g=1","display_name":"Gurpreet singh","link":"https://stackoverflow.com/users/3151440/gurpreet-singh"},"comment_count":0,"score":-4,"creation_date":1422352603,"body_markdown":"Use the below code to perform heavy tasks.\r\n\r\n    // Your package here\r\n\r\n\r\n    import java.util.List;\r\n    import org.apache.http.NameValuePair;\r\n\r\n    import android.app.Activity;\r\n    import android.app.ProgressDialog;\r\n    import android.content.Context;\r\n    import android.os.AsyncTask;\r\n    import android.view.View.OnSystemUiVisibilityChangeListener;\r\n\r\n    public class AsyncRequest extends AsyncTask&lt;String, Integer, String&gt; {\r\n\r\n        Context context;\r\n        ProgressDialog pDialog;\r\n\r\n        // Three Constructors\r\n        public AsyncRequest(Activity a, String m, List&lt;NameValuePair&gt; p) {\r\n            context = a;\r\n            method = m;\r\n            parameters = p;\r\n        }\r\n\r\n        public AsyncRequest(Activity a) {\r\n            this.caller = (OnAsyncRequestComplete) a;\r\n            context = a;\r\n        }\r\n\r\n        public String doInBackground(String... urls) {\r\n\r\n            //Perform your task here\r\n            return result;\r\n        }\r\n\r\n        public void onPreExecute() {\r\n            pDialog = new ProgressDialog(context);\r\n            pDialog.setMessage(&quot;Please wait..&quot;);\r\n            pDialog.setCancelable(false);\r\n            pDialog.show();\r\n        }\r\n\r\n        public void onProgressUpdate(Integer... progress) {\r\n            // You can implement some progressBar and update it in this record.\r\n            //   setProgressPercent(progress[0]);\r\n        }\r\n\r\n        public void onPostExecute(String response) {\r\n            if (pDialog != null &amp;&amp; pDialog.isShowing()) {\r\n                pDialog.dismiss();\r\n            }\r\n            // Get the result here\r\n        }\r\n\r\n        protected void onCancelled(String response) {\r\n\r\n            if (pDialog != null &amp;&amp; pDialog.isShowing()) {\r\n                pDialog.dismiss();\r\n            }\r\n        }\r\n    }\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":2927,"user_id":2763256,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/EmWiu.jpg?s=128&g=1","display_name":"Kacy","link":"https://stackoverflow.com/users/2763256/kacy"},"comment_count":0,"score":8,"creation_date":1423869017,"body_markdown":"This works. Just made Dr.Luiji&#39;s answer a little simpler.\r\n\r\n    new Thread() {\r\n        @Override\r\n        public void run() {\r\n            try {\r\n                //Your code goes here\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }.start();","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":1806,"user_id":2251011,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/7585fe839269d49d9baa8725a1f77ebf?s=128&d=identicon&r=PG","display_name":"msysmilu","link":"https://stackoverflow.com/users/2251011/msysmilu"},"comment_count":0,"score":10,"creation_date":1424169091,"body_markdown":"Although above there is a huge solution pool, no one mentioned `com.koushikdutta.ion`: https://github.com/koush/ion\r\n\r\nIt&#39;s also **asynchronous** and **very simple** to use:\r\n\r\n\r\n    Ion.with(context)\r\n    .load(&quot;http://example.com/thing.json&quot;)\r\n    .asJsonObject()\r\n    .setCallback(new FutureCallback&lt;JsonObject&gt;() {\r\n       @Override\r\n        public void onCompleted(Exception e, JsonObject result) {\r\n            // do stuff with the result or error\r\n        }\r\n    });","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":7716,"user_id":4588760,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/35a154ab6dfafe9494629fd0176f4cec?s=128&d=identicon&r=PG&f=1","display_name":"ci_","link":"https://stackoverflow.com/users/4588760/ci"},"score":2,"creation_date":1426845610}],"owner":{"reputation":1057,"user_id":3340034,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Ji2PX.png?s=128&g=1","display_name":"prat3ik-patel","link":"https://stackoverflow.com/users/3340034/prat3ik-patel"},"comment_count":1,"score":-5,"creation_date":1424929477,"body_markdown":"You have to simple add following line in manifest.xml after manifest tag\r\n\r\n    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;\r\n\r\nand in activity file add following code after binding statement\r\n\r\n \r\n\r\n    if (android.os.Build.VERSION.SDK_INT &gt; 9) {\r\n       StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n       StrictMode.setThreadPolicy(policy);\r\n    }\r\n\r\n ","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":4402,"user_id":1294150,"user_type":"registered","accept_rate":24,"profile_image":"https://i.stack.imgur.com/vyetp.jpg?s=128&g=1","display_name":"Ponsuyambu Velladurai","link":"https://stackoverflow.com/users/1294150/ponsuyambu-velladurai"},"comment_count":0,"score":7,"creation_date":1435218179,"body_markdown":"On Android, network operations cannot be run on the main thread. You can use Thread, AsyncTask (short-running tasks), Service (long-running tasks) to do network operations.\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":9471,"user_id":2770850,"user_type":"registered","accept_rate":85,"profile_image":"https://i.stack.imgur.com/fwn9J.jpg?s=128&g=1","display_name":"Nabin","link":"https://stackoverflow.com/users/2770850/nabin"},"comment_count":0,"score":16,"creation_date":1437530744,"body_markdown":"In simple words,\r\n\r\n**DO NOT DO NETWORK WORK IN THE UI THREAD**\r\n\r\nFor example, if you do an HTTP request, that is a network action.\r\n\r\n**Solution:**\r\n\r\n 1. You have to create a new Thread\r\n 2. **Or** use [AsyncTask class][1]\r\n\r\n**Way:**\r\n\r\nPut all your works inside\r\n\r\n 1. `run()` method of new thread\r\n 2. **Or** `doInBackground()` method of AsyncTask class.\r\n\r\n**But:**\r\n\r\nWhen you get something from Network response and want to show it on your view (like display response message in TextView), you need to **return back to the UI** thread.\r\n\r\nIf you don&#39;t do it, you will get `ViewRootImpl$CalledFromWrongThreadException`.\r\n\r\n**How to?**\r\n\r\n 1. While using AsyncTask, update view from `onPostExecute()` method\r\n 2. **Or** call [`runOnUiThread()`][2] method and update view inside the `run()` method.\r\n\r\n  [1]: https://www.google.com.np/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0CB0QFjAAahUKEwjgivqS0-3GAhUGOJQKHV_YD84&amp;url=http%3A%2F%2Fdeveloper.android.com%2Freference%2Fandroid%2Fos%2FAsyncTask.html&amp;ei=RfquVaDUPIbw0ATfsL_wDA&amp;usg=AFQjCNE8gLVXz1Hwq4rI8oxRkZNHjhRzpQ&amp;sig2=qTI0AgoyYUXyDwHFQup9sw\r\n  [2]: https://stackoverflow.com/questions/11140285/how-to-use-runonuithread\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":1780,"user_id":4522954,"user_type":"registered","accept_rate":67,"profile_image":"https://lh5.googleusercontent.com/-QWRqvk7DlDA/AAAAAAAAAAI/AAAAAAAAB6k/LwtJUTMOjh0/photo.jpg?sz=128","display_name":"RevanthKrishnaKumar V.","link":"https://stackoverflow.com/users/4522954/revanthkrishnakumar-v"},"comment_count":0,"score":7,"creation_date":1439454374,"body_markdown":"Accessing network resources from the main (UI) thread cause this exception. Use a separate thread or AsyncTask for accessing a network resource to avoid this problem.\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":783,"user_id":4581645,"user_type":"registered","profile_image":"https://i.stack.imgur.com/eqFSO.jpg?s=128&g=1","display_name":"RobotCharlie","link":"https://stackoverflow.com/users/4581645/robotcharlie"},"comment_count":0,"score":1,"creation_date":1439776048,"body_markdown":"You can actually start a new Thread, I had this problem before and solved it by this way.","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":2083,"user_id":4549000,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/PbH24.jpg?s=128&g=1","display_name":"Krishna","link":"https://stackoverflow.com/users/4549000/krishna"},"comment_count":0,"score":6,"creation_date":1450430601,"body_markdown":"You are not allowed to implement network operations on the UI thread on Android. You will have to use AsyncTask class to perform network related operations like sending API request, downloading image from a URL, etc. and using callback methods of AsyncTask, you can get you result in onPostExecute menthod and you will be in the UI thread and you can populate UI with data from web service or something like that.\r\n\r\nExample: Suppose you want to download image from an URL: https://www.samplewebsite.com/sampleimage.jpg\r\n\r\nSolution using AsyncTask:\r\n&lt;String,Void,Bitmap&gt; are &lt;Params,Progress,Result&gt; respectively.\r\n\r\n        public class MyDownloader extends AsyncTask&lt;String,Void,Bitmap&gt;\r\n        {\r\n            @Override\r\n            protected void onPreExecute() {\r\n                // Show progress dialog\r\n                super.onPreExecute();\r\n            }\r\n\r\n            @Override\r\n            protected void onPostExecute(Bitmap bitmap) {\r\n                //Populate Ui\r\n                super.onPostExecute(bitmap);\r\n            }\r\n\r\n            @Override\r\n            protected Bitmap doInBackground(String... params) {\r\n                // Open URL connection read bitmaps and return form here\r\n                return result;\r\n            }\r\n\r\n            @Override\r\n            protected void onProgressUpdate(Void... values) {\r\n                // Show progress update\r\n                super.onProgressUpdate(values);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\nNote: Do not forget to add the Internet permission in the Android manifest file. It will work like a charm. :)\r\n\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":3088,"user_id":1367344,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/cAx41.jpg?s=128&g=1","display_name":"Adnan Abdollah Zaki","link":"https://stackoverflow.com/users/1367344/adnan-abdollah-zaki"},"comment_count":0,"score":5,"creation_date":1452876474,"body_markdown":"This exception is thrown when an application attempts to perform a networking operation on its main thread.\r\nIf your task took above five seconds, it takes a force close.\r\n\r\nRun your code in `AsyncTask`:\r\n\r\n    class RetrieveFeedTask extends AsyncTask&lt;String, Void, Boolean&gt; {\r\n\r\n        protected RSSFeed doInBackground(String... urls) {\r\n           // TODO: Connect\r\n        }\r\n\r\n        protected void onPostExecute(RSSFeed feed) {\r\n            // TODO: Check this.exception\r\n            // TODO: Do something with the feed\r\n        }\r\n    }\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":1280,"user_id":4286151,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/bf8ba2c9b6a2b96af1b5ffddf4d02715?s=128&d=identicon&r=PG&f=1","display_name":"BalaramNayak","link":"https://stackoverflow.com/users/4286151/balaramnayak"},"comment_count":0,"score":1,"creation_date":1453197176,"body_markdown":"The NetworkOnMainThread exception occurs because you have called some network operation on the default thread, that is, the UI thread. \r\nAs per Android version [Android&amp;nbsp;3][1] (Honeycomb) which is not allowed, you should call network operation outside the main thread.\r\n\r\nYou can use AsyncTask, IntentService, or creating your own thread and calling inside the run method.\r\nFor more information, visit *[Connecting to the Network][2]*.\r\n\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Android_version_history#Android_3.0_Honeycomb_.28API_level_11.29\r\n  [2]: http://developer.android.com/training/basics/network-ops/connecting.html","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":976,"user_id":2014374,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/57ad363424103144895c629c34fcf396?s=128&d=identicon&r=PG","display_name":"bpr10","link":"https://stackoverflow.com/users/2014374/bpr10"},"comment_count":0,"score":4,"creation_date":1463995935,"body_markdown":"We can also use RxJava to move network operations to a background thread. And it&#39;s fairly simple as well.\r\n\r\n    webService.doSomething(someData)\r\n              .subscribeOn(Schedulers.newThread())-- This for background thread\r\n              .observeOn(AndroidSchedulers.mainThread()) -- for callback on UI              \r\n              .subscribe(result -&gt; resultText.setText(&quot;It worked!&quot;),\r\n                  e -&gt; handleError(e));\r\n\r\nYou can do a lot more stuff with RxJava.Here are some links for RxJava. Feel free to dig in. \r\n\r\n[https://stackoverflow.com/questions/29670452/rxjava-async-task-in-android][1]\r\n\r\n[http://blog.stablekernel.com/replace-asynctask-asynctaskloader-rx-observable-rxjava-android-patterns/][2]\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/29670452/rxjava-async-task-in-android\r\n  [2]: http://blog.stablekernel.com/replace-asynctask-asynctaskloader-rx-observable-rxjava-android-patterns/","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":3128,"user_id":6175778,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4b8c79d13cbaa9aa0a445a6adba7b5d6?s=128&d=identicon&r=PG&f=1","display_name":"Alex Shutov","link":"https://stackoverflow.com/users/6175778/alex-shutov"},"comment_count":0,"score":9,"creation_date":1466719202,"body_markdown":"There is another very convenient way for tackling this issue - use rxJava&#39;s concurrency capabilities. You can execute any task in background and post results to main thread in a very convenient way, so these results will be handed to processing chain.\r\n\r\nThe first verified answer advice is to use AsynTask. Yes, this is a solution, but it is obsolete nowadays, because there are new tools around.\r\n\r\n    String getUrl() {\r\n        return &quot;SomeUrl&quot;;\r\n    }\r\n\r\n    private Object makeCallParseResponse(String url) {\r\n        return null;\r\n        //\r\n    }\r\n\r\n    private void processResponse(Object o) {\r\n\r\n    }\r\n\r\nThe getUrl method provides the URL address, and it will be executed on the main thread.\r\n\r\nmakeCallParseResponse(..) - does actual work\r\n\r\nprocessResponse(..) - will handle result on main thread.\r\n\r\nThe code for asynchronous execution will look like:\r\n\r\n    rx.Observable.defer(new Func0&lt;rx.Observable&lt;String&gt;&gt;() {\r\n        @Override\r\n        public rx.Observable&lt;String&gt; call() {\r\n            return rx.Observable.just(getUrl());\r\n        }\r\n    })\r\n        .subscribeOn(Schedulers.io())\r\n        .observeOn(Schedulers.io())\r\n        .map(new Func1&lt;String, Object&gt;() {\r\n            @Override\r\n            public Object call(final String s) {\r\n                return makeCallParseResponse(s);\r\n            }\r\n        })\r\n        .observeOn(AndroidSchedulers.mainThread())\r\n        .subscribe(new Action1&lt;Object&gt;() {\r\n            @Override\r\n            public void call(Object o) {\r\n                 processResponse(o);\r\n            }\r\n        },\r\n        new Action1&lt;Throwable&gt;() {\r\n            @Override\r\n            public void call(Throwable throwable) {\r\n                // Process error here, it will be posted on\r\n                // the main thread\r\n            }\r\n        });\r\n\r\nCompared to AsyncTask, this method allow to switch schedulers an arbitrary number of times (say, fetch data on one scheduler and process those data on another (say, Scheduler.computation()). You can also define you own schedulers.\r\n\r\nIn order to use this library, include following lines into you build.gradle file:\r\n\r\n       compile &#39;io.reactivex:rxjava:1.1.5&#39;\r\n       compile &#39;io.reactivex:rxandroid:1.2.0&#39;\r\n\r\nThe last dependency includes support for the .mainThread() scheduler.\r\n\r\nThere is [an excellent ebook for rx-java][1].\r\n\r\n  [1]: https://github.com/Froussios/Intro-To-RxJava\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":2267,"user_id":3306437,"user_type":"registered","profile_image":"https://i.stack.imgur.com/GR4Wx.jpg?s=128&g=1","display_name":"Lovekush Vishwakarma","link":"https://stackoverflow.com/users/3306437/lovekush-vishwakarma"},"comment_count":0,"score":4,"creation_date":1475568051,"body_markdown":"How to fix android.os.NetworkOnMainThreadException\r\n\r\nWhat is NetworkOnMainThreadException:\r\n\r\nIn Android all the UI operations we have to do on the UI thread (main thread). If we perform background operations or some network operation on the main thread then we risk this exception will occur and the app will not respond.\r\n\r\nHow to fix it:\r\n\r\nTo avoid this problem, you have to use another thread for background operations or network operations, like using asyncTask and use some library for network operations like Volley, AsyncHttp, etc.\r\n\r\n\r\n\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":1166,"user_id":3578677,"user_type":"registered","accept_rate":27,"profile_image":"https://i.stack.imgur.com/aSQbU.jpg?s=128&g=1","display_name":"Mansuu....","link":"https://stackoverflow.com/users/3578677/mansuu"},"comment_count":0,"score":4,"creation_date":1484542618,"body_markdown":"android.os.NetworkOnMainThreadException is thrown when network operations are performed on the main thread. You better do this in AsyncTask to remove this Exception. Write it this way:\r\n\r\n        new AsyncTask&lt;Void,String,String&gt;(){\r\n\r\n            @Override\r\n            protected Void doInBackground(Void... params) {\r\n                // Perform your network operation.\r\n                // Get JSON or XML string from the server.\r\n                // Store in a local variable (say response) and return.\r\n                return response;\r\n            }\r\n\r\n            protected void onPostExecute(String results){\r\n                // Response returned by doInBackGround() will be received\r\n                // by onPostExecute(String results).\r\n                // Now manipulate your jason/xml String(results).\r\n            }\r\n\r\n        }.execute();\r\n    }\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":107,"user_id":1511022,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0e5a855f463091028a64b36affdba416?s=128&d=identicon&r=PG","display_name":"Himanshu","link":"https://stackoverflow.com/users/1511022/himanshu"},"comment_count":0,"score":4,"creation_date":1487503871,"body_markdown":"You can also resolve this issue by using Strict Mode using the below code. It&#39;s also an alternative to resolving this issue.\r\n\r\n\tStrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n    StrictMode.setThreadPolicy(policy);\r\n\r\nBut the best practice would be to use AsyncTask.\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":85,"user_id":6136614,"user_type":"registered","accept_rate":17,"profile_image":"https://www.gravatar.com/avatar/ec7517d0c5497fa2f6add5f6da6bb4fd?s=128&d=identicon&r=PG&f=1","display_name":"aks","link":"https://stackoverflow.com/users/6136614/aks"},"comment_count":0,"score":2,"creation_date":1488471374,"body_markdown":"As Android is working on a single thread, you should not do any network operation on the main thread. There are various ways to avoid this.\r\n\r\nUse the following way to perform a network operation\r\n\r\n - **Asysnctask**: For small operations which don&#39;t take much time.\r\n - **Intent Service**: For network operation which take a big amount of time.\r\n - Use a custom library like **Volley** and **Retrofit** for handling\r\n   complex network operations\r\n\r\n**Never use StrictMode.setThreadPolicy(policy)**, as it will freeze your UI and is not at all a good idea.\r\n\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":79,"user_id":6180676,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-emttGcROwWU/AAAAAAAAAAI/AAAAAAAANa8/Ulmsa8KZ_oc/photo.jpg?sz=128","display_name":"Hossain Ahamed","link":"https://stackoverflow.com/users/6180676/hossain-ahamed"},"comment_count":0,"score":2,"creation_date":1489730444,"body_markdown":"You can not call network on the main thread or UI thread. On Android if you want to call network there are two options -\r\n\r\n 1. Call asynctask, which will run one background thread to handle the network operation.\r\n 2. You can create your own runnable thread to handle the network operation.\r\n\r\nPersonally I prefer asynctask. For further information you can refer [this link][1].\r\n\r\n  [1]: https://developer.android.com/training/basics/network-ops/connecting.html\r\n\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":41397,"user_id":4999394,"user_type":"registered","accept_rate":98,"profile_image":"https://i.stack.imgur.com/nAGmt.png?s=128&g=1","display_name":"Ravindra babu","link":"https://stackoverflow.com/users/4999394/ravindra-babu"},"comment_count":0,"score":11,"creation_date":1494015116,"body_markdown":"New `Thread` and [AsyncTask][1] solutions have been explained already.\r\n\r\n`AsyncTask` should ideally be used for short operations. Normal `Thread` is not preferable for Android. \r\n\r\nHave a look at alternate solution using [HandlerThread][2] and [Handler][3]\r\n\r\n**HandlerThread**\r\n\r\n&gt; Handy class for starting a new thread that has a looper. The looper can then be used to create handler classes. Note that `start()` must still be called.\r\n\r\n**Handler:**\r\n\r\n&gt;A Handler allows you to send and process Message and Runnable objects associated with a thread&#39;s MessageQueue. Each Handler instance is associated with a single thread and that thread&#39;s message queue. When you create a new Handler, it is bound to the thread / message queue of the thread that is creating it -- from that point on, it will deliver messages and runnables to that message queue and execute them as they come out of the message queue.\r\n\r\nSolution:\r\n\r\n1. Create `HandlerThread`\r\n\r\n2. Call `start()` on `HandlerThread`\r\n\r\n3. Create `Handler` by getting `Looper` from `HanlerThread`\r\n\r\n4. Embed your Network operation related code in `Runnable` object\r\n\r\n5. Submit `Runnable` task to `Handler`\r\n\r\nSample code snippet, which address  `NetworkOnMainThreadException`\r\n\r\n    HandlerThread handlerThread = new HandlerThread(&quot;URLConnection&quot;);\r\n    handlerThread.start();\r\n    handler mainHandler = new Handler(handlerThread.getLooper());\r\n    \r\n    Runnable myRunnable = new Runnable() {\r\n    \t@Override\r\n    \tpublic void run() {\r\n    \t\ttry {\r\n    \t\t\tLog.d(&quot;Ravi&quot;, &quot;Before IO call&quot;);\r\n    \t\t\tURL page = new URL(&quot;http://www.google.com&quot;);\r\n    \t\t\tStringBuffer text = new StringBuffer();\r\n    \t\t\tHttpURLConnection conn = (HttpURLConnection) page.openConnection();\r\n    \t\t\tconn.connect();\r\n    \t\t\tInputStreamReader in = new InputStreamReader((InputStream) conn.getContent());\r\n    \t\t\tBufferedReader buff = new BufferedReader(in);\r\n    \t\t\tString line;\r\n    \t\t\twhile ( (line =  buff.readLine()) != null) {\r\n    \t\t\t\ttext.append(line + &quot;\\n&quot;);\r\n    \t\t\t}\r\n    \t\t\tLog.d(&quot;Ravi&quot;, &quot;After IO call&quot;);\r\n    \t\t\tLog.d(&quot;Ravi&quot;,text.toString());\r\n    \r\n    \t\t}catch( Exception err){\r\n    \t\t\terr.printStackTrace();\r\n    \t\t}\r\n    \t}\r\n    };\r\n    mainHandler.post(myRunnable);\r\n\r\n\r\nPros of using this approach:\r\n\r\n1. Creating new `Thread/AsyncTask` for each network operation is expensive. The `Thread/AsyncTask` will be destroyed and re-created for next Network operations. But with `Handler` and `HandlerThread` approach, you can submit many network operations (as Runnable tasks) to single `HandlerThread` by using `Handler`. \r\n\r\n\r\n  [1]: https://developer.android.com/reference/android/os/AsyncTask.html\r\n  [2]: https://developer.android.com/reference/android/os/HandlerThread.html\r\n  [3]: https://developer.android.com/reference/android/os/Handler.html","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":559,"user_id":7856490,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/618ec36cb20d5db87a126e5e871d9eb5?s=128&d=identicon&r=PG&f=1","display_name":"Shinoo Goyal","link":"https://stackoverflow.com/users/7856490/shinoo-goyal"},"comment_count":0,"score":9,"creation_date":1496987845,"body_markdown":"`RxAndroid` is another better alternative to this problem and it saves us from hassles of creating threads and then posting results on Android UI thread.\r\nWe just need to specify threads on which tasks need to be executed and everything is handled internally.\r\n\r\n\r\n    Observable&lt;List&lt;String&gt;&gt; musicShowsObservable = Observable.fromCallable(new Callable&lt;List&lt;String&gt;&gt;() { \r\n\r\n      @Override \r\n      public List&lt;String&gt; call() { \r\n        return mRestClient.getFavoriteMusicShows(); \r\n      }\r\n    });\r\n\r\n\tmMusicShowSubscription = musicShowsObservable\r\n    .subscribeOn(Schedulers.io())\r\n    .observeOn(AndroidSchedulers.mainThread())\r\n    .subscribe(new Observer&lt;List&lt;String&gt;&gt;() {\r\n        \r\n        @Override \r\n        public void onCompleted() { }\r\n        \r\n        @Override \r\n        public void onError(Throwable e) { }\r\n\r\n        @Override \r\n        public void onNext(List&lt;String&gt; musicShows){\r\n            listMusicShows(musicShows);\r\n        }\r\n    });\r\n\r\n 1. By specifiying `(Schedulers.io())`,RxAndroid will run `getFavoriteMusicShows()`  on a different thread.\r\n\r\n 2. By using `AndroidSchedulers.mainThread()` we want to observe this Observable on the UI thread, i.e. we want our `onNext()` callback to be called on the UI thread","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":309,"user_id":6656818,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4e629ee2481c49d17f4c763c55ee34ae?s=128&d=identicon&r=PG&f=1","display_name":"J.D.1731","link":"https://stackoverflow.com/users/6656818/j-d-1731"},"comment_count":0,"score":7,"creation_date":1499677615,"body_markdown":"You can either use `KOTLIN` and `ANKO`. \r\n\r\n**Kotlin** is new official language for *Android* more about it you can find here\r\nhttps://kotlinlang.org/docs/tutorials/kotlin-android.html\r\n\r\n**Anko** supported library for Kotlin in Android, some doc here\r\nhttps://github.com/Kotlin/anko\r\n\r\nThe solution which is really useful and have only few lines of code written by @AntonioLeiva \r\nhttps://antonioleiva.com/anko-background-kotlin-android/\r\n\r\n\r\n\r\n    doAsync {\r\n        var result = runLongTask()\r\n        uiThread {\r\n            toast(result)\r\n        }\r\n    }\r\n\r\nSimple as it is, `NetworkOnMainThread` occurs when you run background job on `UI Thread` so one thing you have to do is to run your `longTask job` in the background. You can do this using this method and **Kotlin** with **Anko** in your Android App.","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":9399,"user_id":1380032,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/56881b805678c0352d3d4f92a908ffbf?s=128&d=identicon&r=PG","display_name":"Rahul","link":"https://stackoverflow.com/users/1380032/rahul"},"comment_count":0,"score":0,"creation_date":1501608694,"body_markdown":"Never do any long running work on UI thread, that long running work can be communication with server, read/write on file etc. These tasks should be on background thread, thats why `Service`, `AsyncTask`, `Threads` created. You can disable `StrictMode` that will prevent crash but that never recommended. \r\n\r\nI would suggest you take an advantage of `StrictMode` atleast in Debug mode. Use below code to get logs of any issue which slows down your App on main thread.\r\n\r\n    StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()\r\n                .detectAll()\r\n                .penaltyLog()\r\n                .build());\r\n\r\nYou can set different penalties - \r\n\r\n    penaltyLog() // to print log\r\n    penaltyDeath() // This will crash you App(so costly penalty)\r\n    penaltyDialog() // Show alert when something went lazy on Main thread\r\n\r\nThere is so much about https://developer.android.com/reference/android/os/StrictMode.html","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":3774,"user_id":6602675,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0fba4065805a535f33e4062872831559?s=128&d=identicon&r=PG&f=1","display_name":"Sharath kumar","link":"https://stackoverflow.com/users/6602675/sharath-kumar"},"comment_count":0,"score":9,"creation_date":1504521799,"body_markdown":"The main thread is the UI thread, and you cannot do an operation in the main thread which may block the user interaction. You can solve this in two ways:\r\n\r\nForce to do the task in the main thread like this\r\n\r\n    StrictMode.ThreadPolicy threadPolicy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n    StrictMode.setThreadPolicy(threadPolicy);\r\n\r\nOr create a simple handler and update the main thread if you want.\r\n\r\n    Runnable runnable;\r\n    Handler newHandler;\r\n\r\n    newHandler = new Handler();\r\n    runnable = new Runnable() {\r\n        @Override\r\n        public void run() {\r\n             try {\r\n                //update UI\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            } \r\n        }\r\n    };\r\n    newHandler.post(runnable);\r\n\r\nAnd to stop the thread use:\r\n\r\n    newHandler.removeCallbacks(runnable);\r\n\r\nFor more information check this out: *[Painless threading][1]*\r\n\r\n  [1]: https://android-developers.googleblog.com/2009/05/painless-threading.html\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":3221,"user_id":1024412,"user_type":"registered","accept_rate":54,"profile_image":"https://www.gravatar.com/avatar/86a328376ad10ede36774e864cb6efa4?s=128&d=identicon&r=PG","display_name":"KG6ZVP","link":"https://stackoverflow.com/users/1024412/kg6zvp"},"comment_count":0,"score":19,"creation_date":1508543407,"body_markdown":"There are many great answers already on this question, but a lot of great libraries have come out since those answers were posted. This is intended as a kind of newbie-guide.\r\n\r\nI will cover several use cases for performing network operations and *a* solution or two for each.\r\n\r\n# ReST over HTTP\r\n*Typically Json, can be XML or something else*\r\n\r\n## Full API Access\r\n\r\nLet&#39;s say you are writing an app that lets users track stock prices, interest rates and currecy exchange rates. You find an Json API that looks something like this:\r\n\r\n    http://api.example.com/stocks                       //ResponseWrapper&lt;String&gt; object containing a list of Srings with ticker symbols\r\n    http://api.example.com/stocks/$symbol               //Stock object\r\n    http://api.example.com/stocks/$symbol/prices        //PriceHistory&lt;Stock&gt; object\r\n    http://api.example.com/currencies                   //ResponseWrapper&lt;String&gt; object containing a list of currency abbreviation\r\n    http://api.example.com/currencies/$currency         //Currency object\r\n    http://api.example.com/currencies/$id1/values/$id2  //PriceHistory&lt;Currency&gt; object comparing the prices of the first currency (id1) to the second (id2)\r\n\r\n### Retrofit from Square\r\n\r\nThis is an excellent choice for an API with multiple endpoints and allows you to declare the ReST endpoints instead of having to code them individually as with other libraries like ion or Volley. (website: http://square.github.io/retrofit/)\r\n\r\nHow do you use it with the finances API?\r\n\r\n**build.gradle**\r\n\r\nAdd these lines to your Module level buid.gradle:\r\n\r\n    implementation &#39;com.squareup.retrofit2:retrofit:2.3.0&#39; //retrofit library, current as of September 21, 2017\r\n    implementation &#39;com.squareup.retrofit2:converter-gson:2.3.0&#39; //gson serialization and deserialization support for retrofit, version must match retrofit version\r\n\r\n**FinancesApi.java**\r\n\r\n    public interface FinancesApi {\r\n    \t@GET(&quot;stocks&quot;)\r\n    \tCall&lt;ResponseWrapper&lt;String&gt;&gt; listStocks();\r\n    \t@GET(&quot;stocks/{symbol}&quot;)\r\n    \tCall&lt;Stock&gt; getStock(@Path(&quot;symbol&quot;)String tickerSymbol);\r\n    \t@GET(&quot;stocks/{symbol}/prices&quot;)\r\n    \tCall&lt;PriceHistory&lt;Stock&gt;&gt; getPriceHistory(@Path(&quot;symbol&quot;)String tickerSymbol);\r\n    \t\r\n    \t@GET(&quot;currencies&quot;)\r\n    \tCall&lt;ResponseWrapper&lt;String&gt;&gt; listCurrencies();\r\n    \t@GET(&quot;currencies/{symbol}&quot;)\r\n    \tCall&lt;Currency&gt; getCurrency(@Path(&quot;symbol&quot;)String currencySymbol);\r\n    \t@GET(&quot;currencies/{symbol}/values/{compare_symbol}&quot;)\r\n    \tCall&lt;PriceHistory&lt;Currency&gt;&gt; getComparativeHistory(@Path(&quot;symbol&quot;)String currency, @Path(&quot;compare_symbol&quot;)String currencyToPriceAgainst);\r\n    }\r\n\r\n**FinancesApiBuilder**\r\n\r\n    public class FinancesApiBuilder {\r\n    \tpublic static FinancesApi build(String baseUrl){\r\n    \t\treturn new Retrofit.Builder()\r\n    \t\t\t\t\t.baseUrl(baseUrl)\r\n    \t\t\t\t\t.addConverterFactory(GsonConverterFactory.create())\r\n    \t\t\t\t\t.build()\r\n    \t\t\t\t\t.create(FinancesApi.class);\r\n    \t}\r\n    }\r\n\r\n**FinancesFragment snippet**\r\n\r\n\tFinancesApi api = FinancesApiBuilder.build(&quot;http://api.example.com/&quot;); //trailing &#39;/&#39; required for predictable behavior\r\n\tapi.getStock(&quot;INTC&quot;).enqueue(new Callback&lt;Stock&gt;(){\r\n\t\t@Override\r\n\t\tpublic void onResponse(Call&lt;Stock&gt; stockCall, Response&lt;Stock&gt; stockResponse){\r\n\t\t\tStock stock = stockCall.body();\r\n\t\t\t//do something with the stock\r\n\t\t}\r\n\t\t@Override\r\n\t\tpublic void onResponse(Call&lt;Stock&gt; stockCall, Throwable t){\r\n\t\t\t//something bad happened\r\n\t\t}\r\n\t}\r\n\r\n*If your API requires an API Key or other header like a user token, etc. to be sent, Retrofit makes this easy (see this awesome answer for details: https://stackoverflow.com/a/42899766/1024412).*\r\n\r\n## One off ReST API access\r\n\r\nLet&#39;s say you&#39;re building a &quot;mood weather&quot; app that looks up the users GPS location and checks the current temperature in that area and tells them the mood. This type of app doesn&#39;t need to declare API endpoints; it just needs to be able to access one API endpoint.\r\n\r\n### Ion\r\n\r\nThis is a great library for this type of access.\r\n\r\nPlease read msysmilu&#39;s great answer (https://stackoverflow.com/a/28559884/1024412)\r\n\r\n# Load images via HTTP\r\n\r\n## Volley\r\n\r\n*Volley can also be used for ReST APIs, but due to the more complicated setup required I prefer to use Retrofit from Square as above (http://square.github.io/retrofit/)*\r\n\r\nLet&#39;s say you are building a social networking app and want to load profile pictures of friends.\r\n\r\n**build.gradle**\r\n\r\nAdd this line to your Module level buid.gradle:\r\n\r\n    implementation &#39;com.android.volley:volley:1.0.0&#39;\r\n\r\n**ImageFetch.java**\r\n\r\nVolley requires more setup than Retrofit. You will need to create a class like this to setup a RequestQueue, an ImageLoader and an ImageCache, but it&#39;s not too bad:\r\n\r\n    public class ImageFetch {\r\n    \tprivate static ImageLoader imageLoader = null;\r\n    \tprivate static RequestQueue imageQueue = null;\r\n    \t\r\n    \tpublic static ImageLoader getImageLoader(Context ctx){\r\n    \t\tif(imageLoader == null){\r\n    \t\t\tif(imageQueue == null){\r\n    \t\t\t\timageQueue = Volley.newRequestQueue(ctx.getApplicationContext());\r\n    \t\t\t}\r\n    \t\t\timageLoader = new ImageLoader(imageQueue, new ImageLoader.ImageCache() {\r\n    \t\t\t\tMap&lt;String, Bitmap&gt; cache = new HashMap&lt;String, Bitmap&gt;();\r\n    \t\t\t\t@Override\r\n    \t\t\t\tpublic Bitmap getBitmap(String url) {\r\n    \t\t\t\t\treturn cache.get(url);\r\n    \t\t\t\t}\r\n    \t\t\t\t@Override\r\n    \t\t\t\tpublic void putBitmap(String url, Bitmap bitmap) {\r\n    \t\t\t\t\tcache.put(url, bitmap);\r\n    \t\t\t\t}\r\n    \t\t\t});\r\n    \t\t}\r\n    \t\treturn imageLoader;\r\n    \t}\r\n    }\r\n\r\n**user_view_dialog.xml**\r\n\r\nAdd the following to your layout xml file to add an image:\r\n\r\n    &lt;com.android.volley.toolbox.NetworkImageView\r\n    \tandroid:id=&quot;@+id/profile_picture&quot;\r\n    \tandroid:layout_width=&quot;32dp&quot;\r\n    \tandroid:layout_height=&quot;32dp&quot;\r\n    \tandroid:layout_alignParentTop=&quot;true&quot;\r\n    \tandroid:layout_centerHorizontal=&quot;true&quot;\r\n    \tapp:srcCompat=&quot;@android:drawable/spinner_background&quot;/&gt;\r\n\r\n**UserViewDialog.java**\r\n\r\nAdd the following code to the onCreate method (Fragment, Activity) or the constructor (Dialog):\r\n\r\n    NetworkImageView profilePicture = view.findViewById(R.id.profile_picture);\r\n    profilePicture.setImageUrl(&quot;http://example.com/users/images/profile.jpg&quot;, ImageFetch.getImageLoader(getContext());\r\n\r\n## Picasso\r\n\r\nAnother excellent library from Square. Please see the site for some great examples: http://square.github.io/picasso/","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":28005,"user_id":3286489,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/yTcB3.png?s=128&g=1","display_name":"Elye","link":"https://stackoverflow.com/users/3286489/elye"},"score":0,"creation_date":1516226163},{"owner":{"reputation":28005,"user_id":3286489,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/yTcB3.png?s=128&g=1","display_name":"Elye","link":"https://stackoverflow.com/users/3286489/elye"},"score":0,"creation_date":1516226210}],"owner":{"reputation":28005,"user_id":3286489,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/yTcB3.png?s=128&g=1","display_name":"Elye","link":"https://stackoverflow.com/users/3286489/elye"},"comment_count":2,"score":0,"creation_date":1516226096,"body_markdown":"As of 2018, I would recommend to use RxJava in Kotlin for network fetching. A simple example is below.\r\n\r\n    Single.fromCallable {\r\n            // Your Network Fetching Code\r\n            Network.fetchHttp(url) \r\n        }\r\n        .subscribeOn(Schedulers.io())\r\n        .observeOn(AndroidSchedulers.mainThread())\r\n        .subscribe {\r\n            // What you need to do with your result on the view \r\n            result -&gt; view.updateScreen(result) \r\n        }\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":11921,"user_id":4770877,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/cccebea2d190bf8f2054c1949ffa8677?s=128&d=identicon&r=PG&f=1","display_name":"yoAlex5","link":"https://stackoverflow.com/users/4770877/yoalex5"},"comment_count":0,"score":12,"creation_date":1521302329,"body_markdown":"You are able to move a part of your code into another thread to offload the `main thread` and avoid getting [ANR][1], [NetworkOnMainThreadException][2], [IllegalStateException][3](e.g. Cannot access database on the main thread since it may potentially lock the UI for a long period of time).  \r\n\r\nThere are some approaches that you should choose depends on the situation\r\n\r\nJava [Thread][4] or Android [HandlerThread][5]\r\n&gt;Java threads are one-time use only and die after executing its run method.\r\n&gt;\r\n&gt;HandlerThread is a handy class for starting a new thread that has a looper.\r\n\r\n[AsyncTask][6] (**deprecated** in API level 30)\r\n&gt;**AsyncTask** is designed to be a helper class around **Thread** and **Handler** and does not constitute a generic threading framework. AsyncTasks should ideally be used for short operations (a few seconds at the most.) If you need to keep threads running for long periods of time, it is highly recommended you use the various APIs provided by the java.util.concurrent package such as **Executor**, **ThreadPoolExecutor** and **FutureTask**.\r\n\r\nSince Main thread monopolizes UI components it is not possible to access to some View, that is why Handler is on the rescue    \r\n\r\n[\\[Executor framework\\]][7]\r\n\r\n&gt;ThreadPoolExecutor class that implements ExecutorService which gives fine control on the thread pool (Eg, core pool size, max pool size, keep alive time, etc.)\r\n&gt;\r\n&gt;ScheduledThreadPoolExecutor - a class that extends ThreadPoolExecutor. It can schedule tasks after a given delay or periodically.\r\n\r\n[FutureTask][10]\r\n&gt;FutureTask performs asynchronous processing, however, if the result is not ready yet or processing has not complete, calling get() will be block the thread \r\n\r\n[AsyncTaskLoaders][11] \r\n&gt;AsyncTaskLoaders as they solve a lot of problems that are inherent to AsyncTask\r\n\r\n[IntentService][12]\r\n&gt;This is the defacto choice for long running processing on Android, a good example would be to upload or download large files. The upload and download may continue even if the user exits the app and you certainly do not want to block the user from being able to use the app while these tasks are going on.\r\n\r\n[JobScheduler][13]\r\n&gt;Effectively, you have to create a Service and create a job using JobInfo.Builder that specifies your criteria for when to run the service.\r\n\r\n\r\n[RxJava][14]\r\n&gt;Library for composing asynchronous and event-based programs by using observable sequences.\r\n\r\n[Coroutines][15] (Kotlin)\r\n&gt;The main gist of it is, it makes asynchronous code looks so much like synchronous\r\n\r\nRead more [here][16], [here][17], [here][18], [here][19]\r\n\r\n\r\n  [1]: https://developer.android.com/topic/performance/vitals/anr.html\r\n  [2]: https://developer.android.com/reference/android/os/NetworkOnMainThreadException.html\r\n  [3]: https://developer.android.com/reference/java/lang/IllegalStateException.html\r\n  [4]: https://developer.android.com/reference/java/lang/Thread.html\r\n  [5]: https://developer.android.com/reference/android/os/HandlerThread.html\r\n  [6]: https://developer.android.com/reference/android/os/AsyncTask.html\r\n  [7]: https://stackoverflow.com/a/66567556/4770877\r\n  [8]: https://developer.android.com/reference/java/util/concurrent/ThreadPoolExecutor.html\r\n  [9]: https://developer.android.com/reference/java/util/concurrent/ScheduledThreadPoolExecutor.html\r\n  [10]: https://developer.android.com/reference/java/util/concurrent/FutureTask.html\r\n  [11]: https://developer.android.com/reference/android/content/AsyncTaskLoader.html\r\n  [12]: https://developer.android.com/reference/android/app/IntentService.html\r\n  [13]: https://developer.android.com/reference/android/app/job/JobScheduler.html\r\n  [14]: https://github.com/ReactiveX/RxJava\r\n  [15]: https://kotlinlang.org/docs/reference/coroutines.html\r\n  [16]: https://android.jlelse.eu/8-ways-to-do-asynchronous-processing-in-android-and-counting-f634dc6fae4e\r\n  [17]: https://medium.com/@elye.project/the-evolution-of-android-network-access-1e199fc6e9a2\r\n  [18]: https://medium.com/@frank.tan/using-a-thread-pool-in-android-e3c88f59d07f\r\n  [19]: https://guides.codepath.com/android/Managing-Threads-and-Custom-Services#handlerthread-caveats","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":1029,"user_id":6375170,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-zugq_QmaxMM/AAAAAAAAAAI/AAAAAAAAAPQ/U_tBeKw3rDg/photo.jpg?sz=128","display_name":"Ashok Kumar","link":"https://stackoverflow.com/users/6375170/ashok-kumar"},"comment_count":0,"score":0,"creation_date":1525944279,"body_markdown":"Different options:\r\n\r\n1. use normal java runnable thread to process network task and can use runOnUIThread() to update the UI\r\n\r\n2. intentservice/ async task can be used in case you want to update the UI after getting network response\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":69879,"user_id":2413303,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/kLhXq.jpg?s=128&g=1","display_name":"EpicPandaForce","link":"https://stackoverflow.com/users/2413303/epicpandaforce"},"score":0,"creation_date":1577793222}],"owner":{"reputation":325,"user_id":6728443,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/c2f16743be505a3a163831cc20e6c32c?s=128&d=identicon&r=PG&f=1","display_name":"Devix","link":"https://stackoverflow.com/users/6728443/devix"},"comment_count":1,"score":2,"creation_date":1544479777,"body_markdown":"If you are working in kotlin and anko you can add \r\n\r\n     doAsync {\r\n       method()\r\n    }","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":8351,"user_id":7258332,"user_type":"registered","accept_rate":33,"profile_image":"https://graph.facebook.com/1162962850406223/picture?type=large","display_name":"Santanu Sur","link":"https://stackoverflow.com/users/7258332/santanu-sur"},"comment_count":0,"score":2,"creation_date":1551461855,"body_markdown":"You can use `Kotlin-coroutines`\r\n\r\n     class YoutActivity : AppCompatActivity, CoroutineScope {\r\n          \r\n          override fun onCreate(...) {\r\n             launch {  yourHeavyMethod() }\r\n          }\r\n\r\n          suspend fun yourHeavyMethod() {\r\n             with(Dispatchers.IO){ yourNetworkCall() }\r\n             ...\r\n             ...\r\n          }\r\n     } \r\n\r\n&gt; You can follow [this] guide. \r\n\r\n\r\n  [this]: https://codelabs.developers.google.com/codelabs/kotlin-coroutines/#1","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":28420,"user_id":1084174,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/BsASP.png?s=128&g=1","display_name":"Sazzad Hissain Khan","link":"https://stackoverflow.com/users/1084174/sazzad-hissain-khan"},"comment_count":0,"score":0,"creation_date":1559374863,"body_markdown":"# Kotlin version\n\n    internal class RetrieveFeedTask : AsyncTask&lt;String, Void, RSSFeed&gt;() {\n\n        override fun doInBackground(vararg urls: String): RSSFeed? {\n\n            try {\n                 // download\n                 // prepare RSSFeeds\n                 return RSSFeeds\n\n             } catch (e: Exception) {\n    \n                //handle exception\n                return null\n            }\n        }\n\n        override fun onPostExecute(feed: RSSFeed) {\n            // TODO: check this.exception\n            // TODO: do something with the feed\n        }\n    }\n\nCall example,\n\n    RetrieveFeedTask().execute(url)","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":987,"user_id":10835287,"user_type":"registered","profile_image":"https://i.stack.imgur.com/tTarp.jpg?s=128&g=1","display_name":"Vipul Prajapati","link":"https://stackoverflow.com/users/10835287/vipul-prajapati"},"comment_count":0,"score":4,"creation_date":1560142255,"body_markdown":"Do this in Background Thread using `AsycTask`\r\n\r\n**Java**\r\n\r\n    class NetworkThread extends AsyncTask&lt;String, Void, String&gt; {\r\n\r\n        protected Void doInBackground(String... arg0) {\r\n            //Your implementation\r\n        }\r\n\r\n        protected void onPostExecute(String result) {\r\n            // TODO: do something with the feed\r\n        }\r\n    }\r\n\r\nCall wherever you need\r\n\r\n    new NetworkThread().execute(&quot;Your URL here&quot;);\r\n\r\n**Kotlin**\r\n\r\n    internal class MyNetworkTask : AsyncTask&lt;String, Void, RSSFeed&gt;() {\r\n\r\n        override fun doInBackground(vararg urls: String): RSSFeed? {\r\n            try {\r\n                 // download\r\n                 // prepare RSSFeeds\r\n                 return RSSFeeds\r\n             } catch (e: Exception) {\r\n                //handle exception\r\n                return null\r\n            }\r\n        }\r\n\r\n        override fun onPostExecute(feed: RSSFeed) {\r\n            // TODO: check this.exception\r\n            // TODO: do something with the feed\r\n        }\r\n    }\r\n\r\nCall in kotlin\r\n\r\n    MyNetworkTask().execute(url)","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":1326,"user_id":3999808,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/BVpV8.png?s=128&g=1","display_name":"Zun","link":"https://stackoverflow.com/users/3999808/zun"},"score":1,"creation_date":1566546692},{"owner":{"reputation":231,"user_id":10553536,"user_type":"registered","profile_image":"https://i.stack.imgur.com/P9aJT.png?s=128&g=1","display_name":"Shubham Suryawanshi","link":"https://stackoverflow.com/users/10553536/shubham-suryawanshi"},"score":0,"creation_date":1568360515},{"owner":{"reputation":113021,"user_id":250260,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/mLw78.png?s=128&g=1","display_name":"Jorgesys","link":"https://stackoverflow.com/users/250260/jorgesys"},"score":0,"creation_date":1572296689},{"owner":{"reputation":7696,"user_id":944593,"user_type":"registered","accept_rate":94,"profile_image":"https://www.gravatar.com/avatar/12ad4669bb7abadfcd47243e206bd170?s=128&d=identicon&r=PG","display_name":"shareef","link":"https://stackoverflow.com/users/944593/shareef"},"score":0,"creation_date":1583829778}],"owner":{"reputation":420,"user_id":9653703,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128","display_name":"Richard Kamere","link":"https://stackoverflow.com/users/9653703/richard-kamere"},"comment_count":4,"score":5,"creation_date":1566149221,"body_markdown":"I had a similar problem, I just used the following in oncreate method of your activity.\r\n\r\n\r\n    //allow strict mode\r\n    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n    StrictMode.setThreadPolicy(policy);\r\n\r\nand it worked well.\r\n\r\nCaveat is that using this for a network request that takes more than 100 miliseconds will cause noticeable UI freeze and potentially ANRs (Application Not Responding), so keep that in mind.","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":2518,"user_id":6295668,"user_type":"registered","accept_rate":57,"profile_image":"https://i.stack.imgur.com/I0Oia.png?s=128&g=1","display_name":"Jinesh Francis","link":"https://stackoverflow.com/users/6295668/jinesh-francis"},"comment_count":0,"score":0,"creation_date":1573015964,"body_markdown":"Android Jetpack introduced [`WorkManager`][1],which fixes the problem of background service restriction in Oreo and use of Alarm Manager below Lolipop and JobScheduler above Lolipop.\r\n\r\nPlease use [`WorkManager`][1] to run tasks on background thread and it&#39;s continue to run even after user closes the app.\r\n\r\n\r\n  [1]: https://developer.android.com/topic/libraries/architecture/workmanager","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":1525,"user_id":7765316,"user_type":"registered","profile_image":"https://i.stack.imgur.com/sbgMV.jpg?s=128&g=1","display_name":"majurageerthan","link":"https://stackoverflow.com/users/7765316/majurageerthan"},"comment_count":0,"score":3,"creation_date":1577890330,"body_markdown":"&gt; AsyncTasks should ideally be used for short operations (a few seconds\r\n&gt; at the most.) - [developer-android][1]\r\n\r\nUsing `newCachedThreadPool` is the good one. also you can consider other options like `newSingleThreadExecutor`, `newFixedThreadPool`\r\n\r\n        ExecutorService myExecutor = Executors.newCachedThreadPool();\r\n        myExecutor.execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                URL url = new URL(urls[0]);\r\n                SAXParserFactory factory = SAXParserFactory.newInstance();\r\n                SAXParser parser = factory.newSAXParser();\r\n                XMLReader xmlreader = parser.getXMLReader();\r\n                RssHandler theRSSHandler = new RssHandler();\r\n                xmlreader.setContentHandler(theRSSHandler);\r\n                InputSource is = new InputSource(url.openStream());\r\n                xmlreader.parse(is);\r\n            }\r\n        });\r\n\r\n&gt; [ThreadPoolExecutor][2] is a helper class to make this process easier. This\r\n&gt; class manages the creation of a group of threads, sets their\r\n&gt; priorities, and manages how work is distributed among those threads.\r\n&gt; As workload increases or decreases, the class spins up or destroys\r\n&gt; more threads to adjust to the workload.\r\n\r\nSee [this][3] for more info about Android threads\r\n\r\n\r\n  [1]: https://developer.android.com/reference/android/os/AsyncTask.html\r\n  [2]: https://developer.android.com/reference/java/util/concurrent/ThreadPoolExecutor.html\r\n  [3]: https://developer.android.com/topic/performance/threads","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":2306,"user_id":6138892,"user_type":"registered","accept_rate":40,"profile_image":"https://i.stack.imgur.com/EzIOa.jpg?s=128&g=1","display_name":"Rahul","link":"https://stackoverflow.com/users/6138892/rahul"},"comment_count":0,"score":5,"creation_date":1581416882,"body_markdown":"On Android, network operations cannot be run on the main thread. You can use `Thread`, `AsyncTask` (short-running tasks), `Service` (long-running tasks) to do network operations. `android.os.NetworkOnMainThreadException` is thrown when an application attempts to perform a networking operation on its main thread. If your task took above five seconds, it takes a force close.\r\n\r\nRun your code in `AsyncTask`:\r\n\r\n    class FeedTask extends AsyncTask&lt;String, Void, Boolean&gt; {\r\n    \r\n        protected RSSFeed doInBackground(String... urls) {\r\n           // TODO: Connect\r\n        }\r\n    \r\n        protected void onPostExecute(RSSFeed feed) {\r\n            // TODO: Check this.exception\r\n            // TODO: Do something with the feed\r\n        }\r\n    }\r\nOR\r\n\r\n    new Thread(new Runnable(){\r\n        @Override\r\n        public void run() {\r\n            try {\r\n                // Your implementation\r\n            }\r\n            catch (Exception ex) {\r\n                ex.printStackTrace();\r\n            }\r\n        }\r\n    }).start();\r\n\r\n\r\n**This is not recommended.**\r\nBut for DEBUG purpose you can disable the strict mode as well using the following code:\r\n\r\n    if (android.os.Build.VERSION.SDK_INT &gt; 9) {\r\n        StrictMode.ThreadPolicy policy = \r\n            new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n        StrictMode.setThreadPolicy(policy);\r\n    }\r\n\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":4161,"user_id":1152643,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/095bf83a49faf8a8c8282020b28dfb5b?s=128&d=identicon&r=PG","display_name":"Oleg Gryb","link":"https://stackoverflow.com/users/1152643/oleg-gryb"},"comment_count":0,"score":1,"creation_date":1584144717,"body_markdown":"These answers need to be updated to use more contemporary way to connect to servers on Internet and to process asynchronous tasks in general, e.g. you can find examples where **Tasks** are used in [Google Drive API sample][1]. The same should be used in this case. I&#39;ll use OP&#39;s original code to demonstrate this approach.\r\n\r\nFirst, you&#39;ll need to define an off-main thread executor and you need to do it only once:\r\n\r\n            private val mExecutor: Executor = Executors.newSingleThreadExecutor()\r\n\r\nThen process your logic in that executor, which will be running off main thread \r\n\r\n            Tasks.call (mExecutor, Callable&lt;String&gt; {\r\n\r\n                    val url = URL(urlToRssFeed)\r\n                    val factory = SAXParserFactory.newInstance()\r\n                    val parser = factory.newSAXParser()\r\n                    val xmlreader = parser.getXMLReader()\r\n                    val theRSSHandler = RssHandler()\r\n                    xmlreader.setContentHandler(theRSSHandler)\r\n                    val is = InputSource(url.openStream())\r\n                    xmlreader.parse(is)\r\n                    theRSSHandler.getFeed()\r\n                    // complete processing and return String or other object\r\n                    // e.g. you could return Boolean indicating a success or failure\r\n                    return@Callable someResult\r\n            }).continueWith{\r\n                // it.result here is what your asynchronous task has returned\r\n                processResult(it.result)\r\n            }\r\n\r\n\r\n**continueWith** clause will be executed after your asynchronous task is completed and you will have an access to a value that has been returned by the task through **it.result**.\r\n\r\n\r\n  [1]: https://github.com/gsuitedevs/android-samples/tree/master/drive/deprecation","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":100,"user_id":12232152,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/06047a38a129790eda78d5acbc5647d5?s=128&d=identicon&r=PG&f=1","display_name":"El Sushiboi","link":"https://stackoverflow.com/users/12232152/el-sushiboi"},"comment_count":0,"score":4,"creation_date":1597414783,"body_markdown":"&lt;h2&gt; Kotlin &lt;/h2&gt;\r\n\r\nIf you are using Kotlin, you can use a `coroutine`\r\n\r\n    fun doSomeNetworkStuff() {\r\n        GlobalScope.launch(Dispatchers.IO) {\r\n            // ...\r\n        }\r\n    }","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":63,"user_id":10089961,"user_type":"registered","profile_image":"https://graph.facebook.com/1024522111030263/picture?type=large","display_name":"Shay Ribera","link":"https://stackoverflow.com/users/10089961/shay-ribera"},"comment_count":0,"score":2,"creation_date":1602773794,"body_markdown":"\r\nGoogle deprecated the Android AsyncTask API in Android 11, even if you create a thread class outside the main activity, just by calling it in main you will get the same error, the calls must be inside a runnable thread, but if you need some asynchronous code to execute on the background or some on post afterwards here you can check out some alternatives for both Kotlin and Java\r\n\r\n    https://stackoverflow.com/questions/58767733/android-asynctask-api-deprecating-in-android-11-what-are-the-alternatives\r\n\r\nthe one that worked for me specifically was an answer by mayank1513 for a java 8 implementation of runnable thread found on the above link, code is as follows\r\n\r\n\r\n    new Thread(() -&gt; {\r\n            // do background stuff here\r\n            runOnUiThread(()-&gt;{\r\n                // OnPostExecute stuff here\r\n            });\r\n        }).start();\r\n\r\nHowever you can define the thread first in some part of your code and start it somewhere else like this \r\n\r\nthread definition\r\n \r\n\r\n    Thread thread = new Thread(() -&gt; {\r\n                // do background stuff here\r\n                runOnUiThread(()-&gt;{\r\n                    // OnPostExecute stuff here\r\n                });\r\n            });\r\n\r\n\r\nthread call\r\n\r\n    thread.start();\r\n\r\nhope this saves someone the headache of seeing deprecated AsyncTask\r\n","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"comments":[{"owner":{"reputation":1711,"user_id":7353562,"user_type":"registered","accept_rate":75,"profile_image":"https://graph.facebook.com/1358578430859865/picture?type=large","display_name":"Arpan Saini","link":"https://stackoverflow.com/users/7353562/arpan-saini"},"score":0,"creation_date":1612612458},{"owner":{"reputation":14567,"user_id":13365,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/c2c5b0152d840d838de072a4ef32453b?s=128&d=identicon&r=PG","display_name":"neu242","link":"https://stackoverflow.com/users/13365/neu242"},"score":0,"creation_date":1612781330}],"owner":{"reputation":14567,"user_id":13365,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/c2c5b0152d840d838de072a4ef32453b?s=128&d=identicon&r=PG","display_name":"neu242","link":"https://stackoverflow.com/users/13365/neu242"},"comment_count":2,"score":0,"creation_date":1611569567,"body_markdown":"Here&#39;s a simple solution using `OkHttp`, `Future`, `ExecutorService` and `Callable`:\r\n\r\n```\r\nfinal OkHttpClient httpClient = new OkHttpClient();\r\nfinal ExecutorService executor = newFixedThreadPool(3);\r\n\r\nfinal Request request = new Request.Builder().url(&quot;http://example.com&quot;).build();\r\n\r\nResponse response = executor.submit(new Callable&lt;Response&gt;() {\r\n   public Response call() throws IOException {\r\n      return httpClient.newCall(request).execute();\r\n   }\r\n}).get();\r\n```","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"owner":{"reputation":71,"user_id":12999770,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/a-/AOh14GjKfIEfobe4nO9No68FYiVLBLSaQQE9cZHKujlJ=k-s128","display_name":"Sunny Gupta","link":"https://stackoverflow.com/users/12999770/sunny-gupta"},"comment_count":0,"score":0,"creation_date":1613897689,"body_markdown":"Android does not allow to run long running operations on the main thread.\r\nSo just use a different thread and post result to main thread when needed.\r\n\r\n    new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                /*\r\n                // run operation here\r\n                */\r\n                //after getting result\r\n                runOnUiThread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        //post result to main thread\r\n                    }\r\n                });\r\n            }\r\n        }).start();","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"}],"owner":{"reputation":26847,"user_id":797593,"user_type":"registered","accept_rate":44,"profile_image":"https://www.gravatar.com/avatar/ed2f53c878a1477e24121d5d87d048c8?s=128&d=identicon&r=PG","display_name":"bejoy george","link":"https://stackoverflow.com/users/797593/bejoy-george"},"comment_count":5,"is_answered":true,"answer_count":63,"score":2497,"creation_date":1308052920,"question_id":6343166,"body_markdown":"I got an error while running my Android project for RssReader. \r\n\r\nCode:\r\n\r\n    URL url = new URL(urlToRssFeed);\r\n    SAXParserFactory factory = SAXParserFactory.newInstance();\r\n    SAXParser parser = factory.newSAXParser();\r\n    XMLReader xmlreader = parser.getXMLReader();\r\n    RssHandler theRSSHandler = new RssHandler();\r\n    xmlreader.setContentHandler(theRSSHandler);\r\n    InputSource is = new InputSource(url.openStream());\r\n    xmlreader.parse(is);\r\n    return theRSSHandler.getFeed();\r\n\r\nAnd it shows the below error:\r\n\r\n    android.os.NetworkOnMainThreadException\r\n\r\nHow can I fix this issue?\r\n","link":"https://stackoverflow.com/questions/6343166/how-to-fix-android-os-networkonmainthreadexception","title":"How to fix &#39;android.os.NetworkOnMainThreadException&#39;?"},{"tags":["java","error-handling","return","try-catch-finally"],"comments":[{"owner":{"reputation":51307,"user_id":154152,"user_type":"registered","profile_image":"https://i.stack.imgur.com/tbD5u.jpg?s=128&g=1","display_name":"Noon Silk","link":"https://stackoverflow.com/users/154152/noon-silk"},"score":559,"creation_date":1273731485},{"owner":{"reputation":44714,"user_id":964243,"user_type":"registered","accept_rate":66,"profile_image":"https://i.stack.imgur.com/fL1rH.png?s=128&g=1","display_name":"Boann","link":"https://stackoverflow.com/users/964243/boann"},"score":46,"creation_date":1379897524},{"owner":{"reputation":15591,"user_id":1068546,"user_type":"registered","accept_rate":94,"profile_image":"https://i.stack.imgur.com/VJvqA.jpg?s=128&g=1","display_name":"Binoy Babu","link":"https://stackoverflow.com/users/1068546/binoy-babu"},"score":3,"creation_date":1418526539},{"owner":{"reputation":10534,"user_id":1371329,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/oqbUC.png?s=128&g=1","display_name":"jaco0646","link":"https://stackoverflow.com/users/1371329/jaco0646"},"score":33,"creation_date":1468339895},{"owner":{"reputation":16837,"user_id":507738,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/7ghSp.jpg?s=128&g=1","display_name":"MC Emperor","link":"https://stackoverflow.com/users/507738/mc-emperor"},"score":4,"creation_date":1484854857},{"owner":{"reputation":1301,"user_id":4681187,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/7d025467f6b411aba51f9b973c47319c?s=128&d=identicon&r=PG&f=1","display_name":"Imperishable Night","link":"https://stackoverflow.com/users/4681187/imperishable-night"},"score":2,"creation_date":1540587724},{"owner":{"reputation":403,"user_id":4084636,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/1E6K5.jpg?s=128&g=1","display_name":"Adrian M.","link":"https://stackoverflow.com/users/4084636/adrian-m"},"score":0,"creation_date":1590628079},{"owner":{"reputation":6995,"user_id":816416,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/cea2d43b65bd3fbc1a0991c30ace34f6?s=128&d=identicon&r=PG","display_name":"Vishnu Haridas","link":"https://stackoverflow.com/users/816416/vishnu-haridas"},"score":0,"creation_date":1600795062}],"answers":[{"comments":[{"owner":{"reputation":13973,"user_id":65458,"user_type":"registered","accept_rate":88,"profile_image":"https://i.stack.imgur.com/Nm7Is.png?s=128&g=1","display_name":"Piotr Findeisen","link":"https://stackoverflow.com/users/65458/piotr-findeisen"},"score":45,"creation_date":1301519539},{"owner":{"reputation":96967,"user_id":45664,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/YPWiu.png?s=128&g=1","display_name":"Andrzej Doyle","link":"https://stackoverflow.com/users/45664/andrzej-doyle"},"score":194,"creation_date":1316172288},{"owner":{"reputation":1983,"user_id":696686,"user_type":"registered","accept_rate":48,"profile_image":"https://www.gravatar.com/avatar/47ade21a23e1adf85d6165e79430429e?s=128&d=identicon&r=PG","display_name":"dieend","link":"https://stackoverflow.com/users/696686/dieend"},"score":0,"creation_date":1366530249},{"owner":{"reputation":2745,"user_id":2071258,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/6da5a603fd4dcea53e578bcfac0c178b?s=128&d=identicon&r=PG","display_name":"Laurent LA RIZZA","link":"https://stackoverflow.com/users/2071258/laurent-la-rizza"},"score":1,"creation_date":1372395650},{"owner":{"reputation":4066,"user_id":1021970,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/xmiuH.jpg?s=128&g=1","display_name":"ruhungry","link":"https://stackoverflow.com/users/1021970/ruhungry"},"score":9,"creation_date":1395520774},{"owner":{"reputation":711,"user_id":3187521,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/11dcaa3d3173757107f075c0a45c2f39?s=128&d=identicon&r=PG&f=1","display_name":"Amrish Pandey","link":"https://stackoverflow.com/users/3187521/amrish-pandey"},"score":7,"creation_date":1410437266},{"owner":{"reputation":15591,"user_id":1068546,"user_type":"registered","accept_rate":94,"profile_image":"https://i.stack.imgur.com/VJvqA.jpg?s=128&g=1","display_name":"Binoy Babu","link":"https://stackoverflow.com/users/1068546/binoy-babu"},"score":1,"creation_date":1418526486},{"owner":{"reputation":558,"user_id":2942487,"user_type":"registered","accept_rate":70,"profile_image":"https://i.stack.imgur.com/JYegH.jpg?s=128&g=1","display_name":"Mikhail Krutov","link":"https://stackoverflow.com/users/2942487/mikhail-krutov"},"score":1,"creation_date":1439684562},{"owner":{"reputation":1508,"user_id":1526421,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/97Hjn.png?s=128&g=1","display_name":"avmohan","link":"https://stackoverflow.com/users/1526421/avmohan"},"score":15,"creation_date":1483611421},{"owner":{"reputation":30793,"user_id":2674303,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/411d782b77899035a96abb71b64e062a?s=128&d=identicon&r=PG","display_name":"gstackoverflow","link":"https://stackoverflow.com/users/2674303/gstackoverflow"},"score":3,"creation_date":1489394117},{"owner":{"reputation":1473,"user_id":5851520,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1050ad350ce5bed47c2db205b54c3f16?s=128&d=identicon&r=PG&f=1","display_name":"SusanW","link":"https://stackoverflow.com/users/5851520/susanw"},"score":2,"creation_date":1493125187},{"owner":{"reputation":711,"user_id":3187521,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/11dcaa3d3173757107f075c0a45c2f39?s=128&d=identicon&r=PG&f=1","display_name":"Amrish Pandey","link":"https://stackoverflow.com/users/3187521/amrish-pandey"},"score":0,"creation_date":1496681028},{"owner":{"reputation":711,"user_id":3187521,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/11dcaa3d3173757107f075c0a45c2f39?s=128&d=identicon&r=PG&f=1","display_name":"Amrish Pandey","link":"https://stackoverflow.com/users/3187521/amrish-pandey"},"score":0,"creation_date":1496681143},{"owner":{"reputation":1473,"user_id":5851520,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1050ad350ce5bed47c2db205b54c3f16?s=128&d=identicon&r=PG&f=1","display_name":"SusanW","link":"https://stackoverflow.com/users/5851520/susanw"},"score":4,"creation_date":1496686872},{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":1,"creation_date":1503191813},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":4,"creation_date":1514992639},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":2,"creation_date":1514992833},{"owner":{"reputation":16837,"user_id":507738,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/7ghSp.jpg?s=128&g=1","display_name":"MC Emperor","link":"https://stackoverflow.com/users/507738/mc-emperor"},"score":0,"creation_date":1519830023},{"owner":{"reputation":3248,"user_id":3948862,"user_type":"registered","accept_rate":57,"profile_image":"https://i.stack.imgur.com/pXuEe.jpg?s=128&g=1","display_name":"D&#225;vid Horv&#225;th","link":"https://stackoverflow.com/users/3948862/d%c3%a1vid-horv%c3%a1th"},"score":1,"creation_date":1525356275},{"owner":{"reputation":3024,"user_id":1941654,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a0e446b8cae7132038fefdb922b7d233?s=128&d=identicon&r=PG","display_name":"Mike Hill","link":"https://stackoverflow.com/users/1941654/mike-hill"},"score":2,"creation_date":1533136542},{"owner":{"reputation":1024,"user_id":209394,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7b41fcdb3406c69e82a480948bbc7f81?s=128&d=identicon&r=PG","display_name":"JugsteR","link":"https://stackoverflow.com/users/209394/jugster"},"score":2,"creation_date":1534231623},{"owner":{"reputation":5505,"user_id":1858327,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/i9v0b.jpg?s=128&g=1","display_name":"Captain Man","link":"https://stackoverflow.com/users/1858327/captain-man"},"score":0,"creation_date":1536863193},{"owner":{"reputation":3045,"user_id":956880,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/8wevB.png?s=128&g=1","display_name":"Anonymous Coward","link":"https://stackoverflow.com/users/956880/anonymous-coward"},"score":1,"creation_date":1540424284},{"owner":{"reputation":17303,"user_id":257299,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/cVFYE.png?s=128&g=1","display_name":"kevinarpe","link":"https://stackoverflow.com/users/257299/kevinarpe"},"score":0,"creation_date":1607602624}],"owner":{"reputation":47035,"user_id":4223,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/dd30e98147680eebcd4904bcca51cf3d?s=128&d=identicon&r=PG","display_name":"jodonnell","link":"https://stackoverflow.com/users/4223/jodonnell"},"comment_count":24,"score":2819,"creation_date":1221500739,"body_markdown":"Yes, `finally` will be called after the execution of the `try` or `catch` code blocks.\r\n\r\nThe only times `finally` won&#39;t be called are:\r\n\r\n1. If you invoke `System.exit()`\r\n2. If you invoke `Runtime.getRuntime().halt(exitStatus)`\r\n3. If the JVM crashes first\r\n4. If the JVM reaches an infinite loop (or some other non-interruptable, non-terminating statement) in the `try` or `catch` block\r\n5. If the OS forcibly terminates the JVM process; e.g., `kill -9 &lt;pid&gt;` on UNIX\r\n6. If the host system dies; e.g., power failure, hardware error, OS panic, et cetera\r\n7. If the `finally` block is going to be executed by a daemon thread and all other non-daemon threads exit before `finally` is called\r\n","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":8023,"user_id":7616,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/65200fa240ec9fd105e5aae657d22dbb?s=128&d=identicon&r=PG","display_name":"shyam","link":"https://stackoverflow.com/users/7616/shyam"},"comment_count":0,"score":20,"creation_date":1221500778,"body_markdown":"finally is always executed unless there is abnormal program termination (like calling System.exit(0)..). so, your sysout will get printed","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":34249,"user_id":3320,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/82b1a2cb56adfa86634e7310ff639064?s=128&d=identicon&r=PG","display_name":"Mendelt","link":"https://stackoverflow.com/users/3320/mendelt"},"comment_count":0,"score":9,"creation_date":1221500800,"body_markdown":"Yes it will get called. That&#39;s the whole point of having a finally keyword. If jumping out of the try/catch block could just skip the finally block it was the same as putting the System.out.println outside the try/catch.","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":7276,"user_id":448357,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/2a937e2f64c4fa7c3a0baf9d1b13a52d?s=128&d=identicon&r=PG","display_name":"Alexander Pacha","link":"https://stackoverflow.com/users/448357/alexander-pacha"},"score":18,"creation_date":1383206913},{"owner":{"reputation":6091,"user_id":2684342,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/wsLfH.jpg?s=128&g=1","display_name":"WoodenKitty","link":"https://stackoverflow.com/users/2684342/woodenkitty"},"score":15,"creation_date":1386113877},{"owner":{"reputation":1343,"user_id":1712683,"user_type":"registered","accept_rate":91,"profile_image":"https://www.gravatar.com/avatar/72d2f7808eddcfec4f7b3ab164de3fb1?s=128&d=identicon&r=PG&f=1","display_name":"Harry","link":"https://stackoverflow.com/users/1712683/harry"},"score":0,"creation_date":1414300803},{"owner":{"reputation":1270,"user_id":593146,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/2404c3e4304714294c0458b3feb39ff0?s=128&d=identicon&r=PG","display_name":"Zyl","link":"https://stackoverflow.com/users/593146/zyl"},"score":20,"creation_date":1429118733},{"owner":{"reputation":367,"user_id":2949494,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0753176b73a13711922576888755bdb3?s=128&d=identicon&r=PG&f=1","display_name":"Trimtab","link":"https://stackoverflow.com/users/2949494/trimtab"},"score":9,"creation_date":1466482819},{"owner":{"reputation":6332,"user_id":1058366,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6bb8c0b2d5a8664a0fb932a8c9f37b38?s=128&d=identicon&r=PG","display_name":"Kevin","link":"https://stackoverflow.com/users/1058366/kevin"},"score":0,"creation_date":1466539341},{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":22,"creation_date":1503192261},{"owner":{"reputation":1166,"user_id":8272600,"user_type":"registered","profile_image":"https://i.stack.imgur.com/pMuKT.jpg?s=128&g=1","display_name":"Julio Cezar Silva","link":"https://stackoverflow.com/users/8272600/julio-cezar-silva"},"score":3,"creation_date":1597422037}],"owner":{"reputation":6332,"user_id":1058366,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6bb8c0b2d5a8664a0fb932a8c9f37b38?s=128&d=identicon&r=PG","display_name":"Kevin","link":"https://stackoverflow.com/users/1058366/kevin"},"comment_count":8,"score":587,"creation_date":1221501592,"body_markdown":"Example code:\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(Test.test());\r\n    }\r\n\r\n    public static int test() {\r\n        try {\r\n            return 0;\r\n        }\r\n        finally {\r\n            System.out.println(&quot;finally trumps return.&quot;);\r\n        }\r\n    }\r\n\r\nOutput:\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n    finally trumps return. \r\n    0","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":40161,"user_id":1559,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/e74e26bfd345fdd80bedf436178c5829?s=128&d=identicon&r=PG","display_name":"Scott Dorman","link":"https://stackoverflow.com/users/1559/scott-dorman"},"comment_count":0,"score":6,"creation_date":1221501785,"body_markdown":"That&#39;s actually true in any language...finally will always execute before a return statement, no matter where that return is in the method body. If that wasn&#39;t the case, the finally block wouldn&#39;t have much meaning.","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":229,"user_id":9189,"user_type":"registered","display_name":"user9189","link":"https://stackoverflow.com/users/9189/user9189"},"comment_count":0,"score":17,"creation_date":1221502315,"body_markdown":"The finally block is always executed unless there is abnormal program termination, either resulting from a JVM crash or from a call to `System.exit(0)`.\r\n\r\nOn top of that, any value returned from within the finally block will override the value returned prior to execution of the finally block, so be careful of checking all exit points when using try finally.","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":20340,"user_id":3535,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/7b4287aaf0ec5c4432a3cea172c4ed99?s=128&d=identicon&r=PG","display_name":"John Meagher","link":"https://stackoverflow.com/users/3535/john-meagher"},"score":98,"creation_date":1221533276},{"owner":{"reputation":14567,"user_id":13365,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/c2c5b0152d840d838de072a4ef32453b?s=128&d=identicon&r=PG","display_name":"neu242","link":"https://stackoverflow.com/users/13365/neu242"},"score":23,"creation_date":1224659540},{"owner":{"reputation":2118,"user_id":682263,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/vYPIh.jpg?s=128&g=1","display_name":"dominicbri7","link":"https://stackoverflow.com/users/682263/dominicbri7"},"score":1,"creation_date":1310044468},{"owner":{"reputation":76229,"user_id":330057,"user_type":"registered","accept_rate":77,"profile_image":"https://i.stack.imgur.com/i6yM6.png?s=128&g=1","display_name":"corsiKa","link":"https://stackoverflow.com/users/330057/corsika"},"score":8,"creation_date":1310502396},{"owner":{"reputation":2118,"user_id":682263,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/vYPIh.jpg?s=128&g=1","display_name":"dominicbri7","link":"https://stackoverflow.com/users/682263/dominicbri7"},"score":8,"creation_date":1310557631},{"owner":{"reputation":141,"user_id":1135142,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/2df4ad9b48bba1df1ecbd09fd9f4be44?s=128&d=identicon&r=PG","display_name":"iHearGeoff","link":"https://stackoverflow.com/users/1135142/iheargeoff"},"score":16,"creation_date":1361575440},{"owner":{"reputation":16837,"user_id":507738,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/7ghSp.jpg?s=128&g=1","display_name":"MC Emperor","link":"https://stackoverflow.com/users/507738/mc-emperor"},"score":0,"creation_date":1403985966},{"owner":{"reputation":831,"user_id":1257384,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/1f017a62966e81d7a641becd180dea51?s=128&d=identicon&r=PG","display_name":"GregT","link":"https://stackoverflow.com/users/1257384/gregt"},"score":0,"creation_date":1496243616},{"owner":{"reputation":74856,"user_id":632951,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/77f196f4d3b4b89fc179071f3aa21e1e?s=128&d=identicon&r=PG","display_name":"Pacerier","link":"https://stackoverflow.com/users/632951/pacerier"},"score":0,"creation_date":1589074080},{"owner":{"reputation":673,"user_id":5119030,"user_type":"registered","accept_rate":71,"profile_image":"https://graph.facebook.com/10206413200742635/picture?type=large","display_name":"Mikheil Zhghenti","link":"https://stackoverflow.com/users/5119030/mikheil-zhghenti"},"score":0,"creation_date":1600636180}],"owner":{"reputation":4045,"user_id":9271,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/49d0b320a3031596677b56f3dcc9134e?s=128&d=identicon&r=PG","display_name":"MooBob42","link":"https://stackoverflow.com/users/9271/moobob42"},"comment_count":10,"score":402,"creation_date":1221502793,"body_markdown":"Also, although it&#39;s bad practice, if there is a return statement within the finally block, it will trump any other return from the regular block. That is, the following block would return false:\r\n\r\n    try { return true; } finally { return false; }\r\n\r\nSame thing with throwing exceptions from the finally block.","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":2571,"user_id":6770,"user_type":"registered","accept_rate":26,"profile_image":"https://www.gravatar.com/avatar/411bea3733c8d8d41e914b0b650d7f9e?s=128&d=identicon&r=PG","display_name":"James A. N. Stauffer","link":"https://stackoverflow.com/users/6770/james-a-n-stauffer"},"comment_count":0,"score":18,"creation_date":1221506775,"body_markdown":"Also a return in finally will throw away any exception.  [http://jamesjava.blogspot.com/2006/03/dont-return-in-finally-clause.html][1]\r\n\r\n\r\n  [1]: http://jamesjava.blogspot.com/2006/03/dont-return-in-finally-clause.html","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":565,"user_id":305487,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/16b3feebb5942965f36411566f66de2d?s=128&d=identicon&r=PG","display_name":"matias","link":"https://stackoverflow.com/users/305487/matias"},"score":10,"creation_date":1274902052}],"owner":{"reputation":10424,"user_id":2635682,"user_type":"registered","accept_rate":60,"profile_image":"https://graph.facebook.com/100000529711018/picture?type=large","display_name":"Garth Gilmour","link":"https://stackoverflow.com/users/2635682/garth-gilmour"},"comment_count":1,"score":41,"creation_date":1221506804,"body_markdown":"A logical way to think about this is:\r\n\r\n 1. Code placed in a finally block must be executed **whatever occurs** within the try block\r\n 2. So if code in the try block tries to return a value or throw an exception the item is placed &#39;on the shelf&#39; till the finally block can execute\r\n 3. Because code in the finally block has (by definition) a high priority it can return or throw whatever it likes. In which case anything left &#39;on the shelf&#39; is discarded.\r\n 4. The only exception to this is if the VM shuts down completely during the try block e.g. by &#39;System.exit&#39;","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":64779,"user_id":7671,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/4b6b8c8935300db9089a9277d7e76a88?s=128&d=identicon&r=PG","display_name":"Alex Miller","link":"https://stackoverflow.com/users/7671/alex-miller"},"comment_count":0,"score":6,"creation_date":1222874144,"body_markdown":"In addition to the point about return in finally replacing a return in the try block, the same is true of an exception.  A finally block that throws an exception will replace a return or exception thrown from within the try block.","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":1439,"user_id":5191731,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/ff87f873ff5492f763e544405c951fd8?s=128&d=identicon&r=PG&f=1","display_name":"HopefullyHelpful","link":"https://stackoverflow.com/users/5191731/hopefullyhelpful"},"score":11,"creation_date":1473325912},{"owner":{"reputation":1044,"user_id":1316459,"user_type":"registered","accept_rate":40,"profile_image":"https://i.stack.imgur.com/6XQL4.jpg?s=128&g=1","display_name":"Yamcha","link":"https://stackoverflow.com/users/1316459/yamcha"},"score":4,"creation_date":1473454222},{"owner":{"reputation":465,"user_id":1930283,"user_type":"registered","accept_rate":27,"profile_image":"https://www.gravatar.com/avatar/193057ef470dd5aca709d2de7e59c123?s=128&d=identicon&r=PG","display_name":"meexplorer","link":"https://stackoverflow.com/users/1930283/meexplorer"},"score":0,"creation_date":1479234079},{"owner":{"reputation":465,"user_id":1930283,"user_type":"registered","accept_rate":27,"profile_image":"https://www.gravatar.com/avatar/193057ef470dd5aca709d2de7e59c123?s=128&d=identicon&r=PG","display_name":"meexplorer","link":"https://stackoverflow.com/users/1930283/meexplorer"},"score":0,"creation_date":1479234431},{"owner":{"reputation":27490,"user_id":85421,"user_type":"registered","profile_image":"https://i.stack.imgur.com/kKvXH.gif?s=128&g=1","display_name":"user85421","link":"https://stackoverflow.com/users/85421/user85421"},"score":1,"creation_date":1495048696},{"owner":{"reputation":309,"user_id":1863039,"user_type":"registered","accept_rate":45,"profile_image":"https://www.gravatar.com/avatar/c86ddea17f6a22b13eeb16c1a4e026f3?s=128&d=identicon&r=PG","display_name":"Ngupta","link":"https://stackoverflow.com/users/1863039/ngupta"},"score":0,"creation_date":1496666156},{"owner":{"reputation":1359,"user_id":1588303,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/02fa7266adc9004d79339808f4f13127?s=128&d=identicon&r=PG","display_name":"Rodney P. Barbati","link":"https://stackoverflow.com/users/1588303/rodney-p-barbati"},"score":0,"creation_date":1526317520}],"owner":{"reputation":1219,"user_id":38266,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/39acc5e19eabed7db5dcdf3834cfd752?s=128&d=identicon&r=PG","display_name":"vibhash","link":"https://stackoverflow.com/users/38266/vibhash"},"comment_count":7,"score":121,"creation_date":1226939136,"body_markdown":"I tried the above example with slight modification-\r\n\r\n    public static void main(final String[] args) {\r\n        System.out.println(test());\r\n    }\r\n\r\n    public static int test() {\r\n        int i = 0;\r\n        try {\r\n            i = 2;\r\n            return i;\r\n        } finally {\r\n            i = 12;\r\n            System.out.println(&quot;finally trumps return.&quot;);\r\n        }\r\n    }\r\n\r\nThe above code outputs:\r\n\r\n&gt;finally trumps return.  \r\n&gt;2\r\n\r\nThis is because when `return i;` is executed `i` has a value 2. After this the `finally` block is executed where 12 is assigned to `i` and then `System.out` out is executed.\r\n\r\nAfter executing the `finally` block the `try` block returns 2, rather than returning 12, because this return statement is not executed again.\r\n\r\nIf you will debug this code in Eclipse then you&#39;ll get a feeling that after executing `System.out` of `finally` block the `return` statement of `try` block is executed again. But this is not the case. It simply returns the value 2.","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":98071,"user_id":3848,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/W10YY.jpg?s=128&g=1","display_name":"Motti","link":"https://stackoverflow.com/users/3848/motti"},"comment_count":0,"score":12,"creation_date":1273731503,"body_markdown":"Finally is always run that&#39;s the whole point, just because it appears in the code after the return doesn&#39;t mean that that&#39;s how it&#39;s implemented. The Java runtime has the responsibility to run this code when exiting the `try` block.\r\n\r\nFor example if you have the following:\r\n\r\n    int foo() { \r\n        try {\r\n            return 42;\r\n        }\r\n        finally {\r\n            System.out.println(&quot;done&quot;);\r\n        }\r\n    }\r\n\r\nThe runtime will generate something like this:\r\n\r\n    int foo() {\r\n        int ret = 42;\r\n        System.out.println(&quot;done&quot;);\r\n        return 42;\r\n    }\r\n    \r\nIf an uncaught exception is thrown the `finally` block will run and the exception will continue propagating. ","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":50749,"user_id":52249,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/44adec8d6f10bfc9c0219015a89eca61?s=128&d=identicon&r=PG","display_name":"Jay Riggs","link":"https://stackoverflow.com/users/52249/jay-riggs"},"comment_count":0,"score":9,"creation_date":1273731557,"body_markdown":"Because a finally block will always be called unless you call `System.exit()` (or the thread crashes).","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":21779,"user_id":715269,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/81265cf97af6195bd098512acbf47d03?s=128&d=identicon&r=PG","display_name":"Gangnus","link":"https://stackoverflow.com/users/715269/gangnus"},"score":0,"creation_date":1557253157}],"owner":{"reputation":16134,"user_id":300807,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/WxsTX.jpg?s=128&g=1","display_name":"Chris Cooper","link":"https://stackoverflow.com/users/300807/chris-cooper"},"comment_count":1,"score":53,"creation_date":1273731557,"body_markdown":"That is the whole idea of a finally block. It lets you make sure you do cleanups that might otherwise be skipped because you return, among other things, of course.\r\n\r\nFinally gets called **regardless of what happens** in the try block (*unless* you call `System.exit(int)` or the Java Virtual Machine kicks out for some other reason).","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":18246,"user_id":227698,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/874c1b0de39f3a9937e2744ad2431bf3?s=128&d=identicon&r=PG","display_name":"vodkhang","link":"https://stackoverflow.com/users/227698/vodkhang"},"comment_count":0,"score":3,"creation_date":1273731587,"body_markdown":"Because the final is always be called in whatever cases you have. You don&#39;t have exception, it is still called, catch exception, it is still called","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":8452,"user_id":162895,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/da3b58702a60fd2681ece7edddec2ccd?s=128&d=identicon&r=PG","display_name":"Dimitris Andreou","link":"https://stackoverflow.com/users/162895/dimitris-andreou"},"score":65,"creation_date":1273751646},{"owner":{"reputation":551,"user_id":4398194,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/27aa20e586603771aac6489468530905?s=128&d=identicon&r=PG&f=1","display_name":"RecursiveExceptionException","link":"https://stackoverflow.com/users/4398194/recursiveexceptionexception"},"score":2,"creation_date":1549562766},{"owner":{"reputation":78696,"user_id":589259,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/vJbKg.jpg?s=128&g=1","display_name":"Maarten Bodewes","link":"https://stackoverflow.com/users/589259/maarten-bodewes"},"score":0,"creation_date":1577030568}],"owner":{"reputation":20876,"user_id":196211,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/2a25b405968b6e5c2f1d45602365308e?s=128&d=identicon&r=PG","display_name":"Eyal Schneider","link":"https://stackoverflow.com/users/196211/eyal-schneider"},"comment_count":3,"score":166,"creation_date":1273734719,"body_markdown":"In addition to the other responses, it is important to point out that &#39;finally&#39; has the right to override any exception/returned value by the try..catch block. For example, the following code returns 12:\r\n\r\n    public static int getMonthsInYear() {\r\n        try {\r\n    \t\treturn 10;\r\n        }\r\n        finally {\r\n            return 12;\r\n        }\r\n    }\r\n\r\nSimilarly, the following method does not throw an exception:\r\n\r\n    public static int getMonthsInYear() {\r\n        try {\r\n            throw new RuntimeException();\r\n        }\r\n        finally {\r\n            return 12;\r\n        }\r\n    }\r\n\r\nWhile the following method does throw it:\r\n\r\n    public static int getMonthsInYear() {\r\n        try {\r\n            return 12;\t\t\t\r\n        }\r\n        finally {\r\n            throw new RuntimeException();\r\n        }\r\n    }","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":444,"user_id":338082,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/21566f3e76140136fe0db18983fb2df9?s=128&d=identicon&r=PG","display_name":"Gala101","link":"https://stackoverflow.com/users/338082/gala101"},"comment_count":0,"score":3,"creation_date":1273751414,"body_markdown":"Consider this in a normal course of execution (i.e without any Exception being thrown): if method is not &#39;void&#39; then it always explicitly returns something, yet, finally always gets executed","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":101,"user_id":349636,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/2bbe789485e82f25a9248b1855fa14a7?s=128&d=identicon&r=PG","display_name":"Wasim","link":"https://stackoverflow.com/users/349636/wasim"},"comment_count":0,"score":10,"creation_date":1274769389,"body_markdown":"This is because you assigned the value of i as 12, but did not return the value of i to the function. The correct code is as follows:\r\n\r\n    public static int test() {\r\n\t\tint i = 0;\r\n\t\ttry {\r\n\t\t\treturn i;\r\n\t\t} finally {\r\n\t\t\ti = 12;\r\n\t\t\tSystem.out.println(&quot;finally trumps return.&quot;);\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":344743,"user_id":276101,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/30fe97e726af0ea4ff8b756fbf2e6d15?s=128&d=identicon&r=PG","display_name":"polygenelubricants","link":"https://stackoverflow.com/users/276101/polygenelubricants"},"comment_count":0,"score":259,"creation_date":1274770216,"body_markdown":"Here&#39;s the official words from the Java Language Specification.\r\n\r\n[14.20.2. Execution of try-finally and try-catch-finally][1]\r\n\r\n&gt;**A `try` statement with a `finally` block is executed by first executing the `try` block. Then there is a choice:**\r\n\r\n&gt; * If execution of the `try` block completes normally, [...]\r\n&gt; * If execution of the `try` block completes abruptly because of a `throw` of a value _V_, [...]\r\n&gt; * **If execution of the `try` block completes abruptly for any other reason _R_, then the `finally` block is executed. Then there is a choice:**\r\n&gt;    * If the finally block completes normally, then the `try` statement completes abruptly for reason _R_. \r\n&gt;    * If the `finally` block completes abruptly for reason _S_, then the `try` statement completes abruptly for reason _S_ (**and reason _R_ is discarded**).\r\n\r\nThe specification for `return` actually makes this explicit:\r\n\r\n[JLS 14.17 The return Statement][2]\r\n\r\n&gt;     ReturnStatement:\r\n         return Expression(opt) ;\r\n\r\n\r\n&gt; A `return` statement with no `Expression` **attempts** to transfer control to the invoker of the method or constructor that contains it. \r\n&gt;\r\n&gt; A `return` statement with an `Expression` **attempts** to transfer control to the invoker of the method that contains it; the value of the `Expression` becomes the value of the method invocation.\r\n&gt;\r\n&gt; The preceding descriptions say &quot;_**attempts** to transfer control_&quot; rather than just &quot;_transfers control_&quot; because if there are any `try` statements within the method or constructor whose `try` blocks contain the `return` statement, then any `finally` clauses of those `try` statements will be executed, in order, innermost to outermost, before control is transferred to the invoker of the method or constructor. Abrupt completion of a `finally` clause can disrupt the transfer of control initiated by a `return` statement.\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.20.2\r\n  [2]: https://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.17","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":15775,"user_id":645226,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/230d51291a37cb1287650e40cdef4c78?s=128&d=identicon&r=PG&f=1","display_name":"Bhushan","link":"https://stackoverflow.com/users/645226/bhushan"},"comment_count":0,"score":4,"creation_date":1318521715,"body_markdown":"If an exception is thrown, finally runs. If an exception is not thrown, finally runs. If the exception is caught, finally runs. If the exception is not caught, finally runs.\r\n\r\nOnly time it does not run is when JVM exits.","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":3240,"user_id":44512,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/c98586dc2dccc7d6738e3c83c98bac12?s=128&d=identicon&r=PG&f=1","display_name":"eric2323223","link":"https://stackoverflow.com/users/44512/eric2323223"},"comment_count":0,"score":4,"creation_date":1334653616,"body_markdown":"Try this code, you will understand the **code in finally block is get executed after return statement**.\r\n\r\n    public class TestTryCatchFinally {\r\n    \tstatic int x = 0;\r\n    \t\r\n    \tpublic static void main(String[] args){\r\n    \t\tSystem.out.println(f1() );\r\n    \t\tSystem.out.println(f2() );\r\n    \t}\r\n    \t\r\n    \tpublic static int f1(){\r\n    \t\ttry{\r\n    \t\t\tx = 1;\r\n    \t\t\treturn x;\r\n    \t\t}finally{\r\n    \t\t\tx = 2;\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \tpublic static int f2(){\r\n    \t\treturn x;\r\n    \t}\r\n    }","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":929,"user_id":4610114,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/7HTdY.png?s=128&g=1","display_name":"Franz D.","link":"https://stackoverflow.com/users/4610114/franz-d"},"score":0,"creation_date":1536604463}],"owner":{"reputation":179,"user_id":2287871,"user_type":"registered","profile_image":"https://i.stack.imgur.com/oBa9U.jpg?s=128&g=1","display_name":"Rajendra Jadi","link":"https://stackoverflow.com/users/2287871/rajendra-jadi"},"comment_count":1,"score":18,"creation_date":1373756543,"body_markdown":"No, not always one exception case is//\r\nSystem.exit(0);\r\nbefore the finally block prevents finally to be  executed.\r\n\r\n  \r\n\r\n      class A {\r\n    \tpublic static void main(String args[]){\r\n    \t\tDataInputStream cin = new DataInputStream(System.in);\r\n    \t\ttry{\r\n    \t\t\tint i=Integer.parseInt(cin.readLine());\r\n    \t\t}catch(ArithmeticException e){\r\n    \t\t}catch(Exception e){\r\n    \t\t   System.exit(0);//Program terminates before executing finally block\r\n    \t\t}finally{\r\n                System.out.println(&quot;Won&#39;t be executed&quot;);\r\n    \t\t    System.out.println(&quot;No error&quot;);\r\n    \t\t}\r\n    \t}\r\n    }","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":2056,"user_id":1927543,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/ad92404d9739ea60c7c90e1a7d0c6742?s=128&d=identicon&r=PG","display_name":"Karthikeyan","link":"https://stackoverflow.com/users/1927543/karthikeyan"},"comment_count":0,"score":8,"creation_date":1376654420,"body_markdown":"Yes, it will. No matter what happens in your try or catch block unless otherwise System.exit() called or JVM crashed. if there is any return statement in the block(s),finally will be executed prior to that return statement.\r\n\r\n","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":16279,"user_id":1229624,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/33221e57892f65c519a16ff5cd30f874?s=128&d=identicon&r=PG","display_name":"Aminadav Glickshtein","link":"https://stackoverflow.com/users/1229624/aminadav-glickshtein"},"score":8,"creation_date":1530878819},{"owner":{"reputation":179,"user_id":11613795,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/76ac47f909b7c793860399429f818716?s=128&d=identicon&r=PG&f=1","display_name":"Albert","link":"https://stackoverflow.com/users/11613795/albert"},"score":0,"creation_date":1561546686},{"owner":{"reputation":74856,"user_id":632951,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/77f196f4d3b4b89fc179071f3aa21e1e?s=128&d=identicon&r=PG","display_name":"Pacerier","link":"https://stackoverflow.com/users/632951/pacerier"},"score":0,"creation_date":1589073689}],"owner":{"reputation":6091,"user_id":2684342,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/wsLfH.jpg?s=128&g=1","display_name":"WoodenKitty","link":"https://stackoverflow.com/users/2684342/woodenkitty"},"comment_count":3,"score":124,"creation_date":1386113773,"body_markdown":"Here&#39;s an elaboration of [Kevin&#39;s answer][1]. It&#39;s important to know that the expression to be returned is evaluated before `finally`, even if it is returned after.\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(Test.test());\r\n    }\r\n\r\n    public static int printX() {\r\n        System.out.println(&quot;X&quot;);\r\n        return 0;\r\n    }\r\n\r\n    public static int test() {\r\n        try {\r\n            return printX();\r\n        }\r\n        finally {\r\n            System.out.println(&quot;finally trumps return... sort of&quot;);\r\n        }\r\n    }\r\n\r\nOutput:\r\n\r\n&lt;!-- language: lang-none --&gt;\r\n\r\n    X\r\n    finally trumps return... sort of\r\n    0\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/65185/2684342","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":720,"user_id":1596606,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/0184381b11db880288cf5ff1165667c0?s=128&d=identicon&r=PG&f=1","display_name":"abhig","link":"https://stackoverflow.com/users/1596606/abhig"},"comment_count":0,"score":7,"creation_date":1389738557,"body_markdown":"Yes It will.\r\nOnly case it will not is JVM exits or crashes ","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":109,"user_id":3317784,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fee8b31207d07fa67eda34274411b373?s=128&d=identicon&r=PG&f=1","display_name":"Rohit Chugh","link":"https://stackoverflow.com/users/3317784/rohit-chugh"},"comment_count":0,"score":4,"creation_date":1392626905,"body_markdown":"Finally block always execute whether exception  handle or not .if any exception occurred before try block then finally block will not execute.","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":1295,"user_id":3149356,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Fi2yu.jpg?s=128&g=1","display_name":"bikz05","link":"https://stackoverflow.com/users/3149356/bikz05"},"comment_count":0,"score":9,"creation_date":1413237110,"body_markdown":"Concisely, in the official Java Documentation (Click [here][1]), it is written that - \r\n\r\n&gt; If the JVM exits while the try or catch code is being executed, then\r\n&gt; the finally block may not execute. Likewise, if the thread executing\r\n&gt; the try or catch code is interrupted or killed, the finally block may\r\n&gt; not execute even though the application as a whole continues.\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/tutorial/essential/exceptions/finally.html","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":447,"user_id":4315585,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/bdaaa73c0f032ca9c4d67f41169aa105?s=128&d=identicon&r=PG&f=1","display_name":"Gautam Viradiya","link":"https://stackoverflow.com/users/4315585/gautam-viradiya"},"comment_count":0,"score":8,"creation_date":1417523414,"body_markdown":"Yes, finally block is always execute. Most of developer use this block the closing the database connection, resultset object, statement object and also uses into the java hibernate to rollback the transaction.","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":133,"user_id":3201107,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/92921ae751862284d2f3ba7b8e245ceb?s=128&d=identicon&r=PG","display_name":"Utkash Bhatt","link":"https://stackoverflow.com/users/3201107/utkash-bhatt"},"comment_count":0,"score":7,"creation_date":1418884616,"body_markdown":"`finally` will execute and that is for sure.\r\n\r\n`finally` will not execute in below cases: \r\n\r\ncase 1 :\r\n\r\nWhen you are executing `System.exit()`.\r\n\r\ncase 2 :\r\n\r\nWhen your JVM / Thread crashes.\r\n\r\ncase 3 : \r\n\r\nWhen your execution is stopped in between manually.\r\n\r\n","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":69,"user_id":873900,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/04856efa68392eba3fce33a05f3889bb?s=128&d=identicon&r=PG","display_name":"milton","link":"https://stackoverflow.com/users/873900/milton"},"comment_count":0,"score":6,"creation_date":1431515461,"body_markdown":"I was very confused with all the answers provided on different forums and decided to finally code and see. The ouput is :\n\n**finally will be executed even if there is return in try and catch block.**\n\n    try {  \n      System.out.println(&quot;try&quot;); \n      return;\n      //int  i =5/0;\n      //System.exit(0 ) ;\n    } catch (Exception e) {   \n      System.out.println(&quot;catch&quot;);\n      return;\n      //int  i =5/0;\n      //System.exit(0 ) ;\n    } finally {  \n       System.out.println(&quot;Print me FINALLY&quot;);\n    }\n\n**Output**\n&gt; try\n&gt;\n&gt; Print me FINALLY\n\n 2. If return is replaced by `System.exit(0)` in try and catch block in above code and an exception occurs before it,for any reason.","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":3045,"user_id":956880,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/8wevB.png?s=128&g=1","display_name":"Anonymous Coward","link":"https://stackoverflow.com/users/956880/anonymous-coward"},"comment_count":0,"score":9,"creation_date":1449930653,"body_markdown":"&lt;h1&gt;NOT ALWAYS&lt;/h1&gt;\r\n\r\nThe Java Language specification describes how `try`-`catch`-`finally` and `try`-`catch` blocks work at [14.20.2][1]  \r\nIn no place it specifies that the `finally` block is always executed.\r\nBut for all cases in which the `try`-`catch`-`finally` and `try`-`finally` blocks complete it does specify that before completion `finally` must be executed.\r\n\r\n    try {\r\n      CODE inside the try block\r\n    }\r\n    finally {\r\n      FIN code inside finally block\r\n    }\r\n    NEXT code executed after the try-finally block (may be in a different method).\r\n\r\nThe JLS does not guarantee that **FIN** is executed after **CODE**.\r\nThe JLS guarantees that if **CODE** and **NEXT** are executed then **FIN** will always be executed after **CODE** and before **NEXT**.\r\n\r\nWhy doesn&#39;t the JLS guarantee that the `finally` block is always executed after the `try` block? *Because it is impossible.* It is unlikely but possible that the JVM will be aborted (kill, crash, power off) just after completing the `try` block but before execution of the `finally` block. There is nothing the JLS can do to avoid this.\r\n\r\nThus, any software which for their proper behaviour depends on `finally` blocks always being executed after their `try` blocks complete are bugged.\r\n\r\n`return` instructions in the `try` block are irrelevant to this issue. If execution reaches code after the `try`-`catch`-`finally` it is guaranteed that the `finally` block will have been executed before, with or without `return` instructions inside the `try` block.\r\n\r\n  [1]: https://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html#jls-14.20.2","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":4,"creation_date":1503192460}],"owner":{"reputation":3120,"user_id":2987755,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/gHWsA.jpg?s=128&g=1","display_name":"dkb","link":"https://stackoverflow.com/users/2987755/dkb"},"comment_count":1,"score":8,"creation_date":1458490842,"body_markdown":"I tried this,\r\nIt is single threaded.\r\n\r\n    public static void main(String args[]) throws Exception {\r\n\t\tObject obj = new Object();\r\n\t\ttry {\r\n\t\t\tsynchronized (obj) {\r\n\t\t\t\tobj.wait();\r\n            \tSystem.out.println(&quot;after wait()&quot;);\r\n\t\t\t}\r\n\t\t} catch (Exception ignored) {\r\n\t\t} finally {\r\n\t\t\tSystem.out.println(&quot;finally&quot;);\r\n\t    }\r\n    }\r\n\r\nThe `main` `Thread` will be on `wait` state forever, hence *`finally` will never be called*,\r\n\r\nso console output will not `print` `String`: after `wait()` or `finally`\r\n\r\nAgreed with @Stephen C, the above example is one of the 3rd case mention [here][1]:\r\n\r\nAdding some more such infinite loop possibilities in following code:\r\n\r\n    // import java.util.concurrent.Semaphore;\r\n\r\n    public static void main(String[] args) {\r\n    \ttry {\r\n        \t// Thread.sleep(Long.MAX_VALUE);\r\n        \t// Thread.currentThread().join();\r\n        \t// new Semaphore(0).acquire();\r\n        \t// while (true){}\r\n            System.out.println(&quot;after sleep join semaphore exit infinite while loop&quot;);\r\n        } catch (Exception ignored) {\r\n        } finally {\r\n            System.out.println(&quot;finally&quot;);\r\n        }\r\n    }\r\n\r\n\r\nCase 2: If the JVM crashes first\r\n\r\n\r\n    import sun.misc.Unsafe;\r\n    import java.lang.reflect.Field;\r\n\r\n    public static void main(String args[]) {\r\n    \ttry {\r\n        \tunsafeMethod();\r\n            //Runtime.getRuntime().halt(123);\r\n            System.out.println(&quot;After Jvm Crash!&quot;);\r\n     \t} catch (Exception e) {\r\n        } finally {\r\n        \tSystem.out.println(&quot;finally&quot;);\r\n        }\r\n    }\r\n    \r\n    private static void unsafeMethod() throws NoSuchFieldException, IllegalAccessException {\r\n    \tField f = Unsafe.class.getDeclaredField(&quot;theUnsafe&quot;);\r\n        f.setAccessible(true);\r\n        Unsafe unsafe = (Unsafe) f.get(null);\r\n        unsafe.putAddress(0, 0);\r\n    }\r\n\r\nRef: https://stackoverflow.com/q/65200/2987755\r\n\r\n\r\nCase 6: If `finally` block is going to be executed by daemon `Thread` and all other non-daemon `Threads` exit before `finally` is called.\r\n\r\n\r\n    public static void main(String args[]) {\r\n        Runnable runnable = new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                try {\r\n                    printThreads(&quot;Daemon Thread printing&quot;);\r\n                    // just to ensure this thread will live longer than main thread\r\n                    Thread.sleep(10000);\r\n                } catch (Exception e) {\r\n                } finally {\r\n                    System.out.println(&quot;finally&quot;);\r\n                }\r\n            }\r\n        };\r\n        Thread daemonThread = new Thread(runnable);\r\n        daemonThread.setDaemon(Boolean.TRUE);\r\n        daemonThread.setName(&quot;My Daemon Thread&quot;);\r\n        daemonThread.start();\r\n        printThreads(&quot;main Thread Printing&quot;);\r\n    }\r\n\r\n    private static synchronized void printThreads(String str) {\r\n        System.out.println(str);\r\n        int threadCount = 0;\r\n        Set&lt;Thread&gt; threadSet = Thread.getAllStackTraces().keySet();\r\n        for (Thread t : threadSet) {\r\n            if (t.getThreadGroup() == Thread.currentThread().getThreadGroup()) {\r\n                System.out.println(&quot;Thread :&quot; + t + &quot;:&quot; + &quot;state:&quot; + t.getState());\r\n                ++threadCount;\r\n            }\r\n        }\r\n        System.out.println(&quot;Thread count started by Main thread:&quot; + threadCount);\r\n        System.out.println(&quot;-------------------------------------------------&quot;);\r\n    }\r\n\r\noutput: This does not print &quot;finally&quot; which implies &quot;Finally block&quot; in &quot;daemon thread&quot; did not execute  \r\n\r\n&gt;     main Thread Printing  \r\n&gt;     Thread :Thread[My Daemon Thread,5,main]:state:BLOCKED  \r\n&gt;     Thread :Thread[main,5,main]:state:RUNNABLE  \r\n&gt;     Thread :Thread[Monitor Ctrl-Break,5,main]:state:RUNNABLE   \r\n&gt;     Thread count started by Main thread:3  \r\n&gt;     -------------------------------------------------  \r\n&gt;     Daemon Thread printing  \r\n&gt;     Thread :Thread[My Daemon Thread,5,main]:state:RUNNABLE  \r\n&gt;     Thread :Thread[Monitor Ctrl-Break,5,main]:state:RUNNABLE  \r\n&gt;     Thread count started by Main thread:2  \r\n&gt;     -------------------------------------------------  \r\n&gt;     \r\n&gt;     Process finished with exit code 0\r\n\r\n\r\n  [1]: https://stackoverflow.com/a/65049/2987755","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":1,"creation_date":1514991911},{"owner":{"reputation":1439,"user_id":5191731,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/ff87f873ff5492f763e544405c951fd8?s=128&d=identicon&r=PG&f=1","display_name":"HopefullyHelpful","link":"https://stackoverflow.com/users/5191731/hopefullyhelpful"},"score":0,"creation_date":1515013001},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":1,"creation_date":1515025473},{"owner":{"reputation":1822,"user_id":369604,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/613ba412b35c0d51e4de306d92858bd4?s=128&d=identicon&r=PG","display_name":"Loduwijk","link":"https://stackoverflow.com/users/369604/loduwijk"},"score":2,"creation_date":1515025760}],"owner":{"reputation":1439,"user_id":5191731,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/ff87f873ff5492f763e544405c951fd8?s=128&d=identicon&r=PG&f=1","display_name":"HopefullyHelpful","link":"https://stackoverflow.com/users/5191731/hopefullyhelpful"},"comment_count":4,"score":3,"creation_date":1461881492,"body_markdown":"`finally` can also be exited prematurely if an `Exception` is `throw`n inside a *nested `finally` block*. The compiler will warn you that the `finally` block does not complete normally or give an error that you have unreachable code. The error for unreachable code will be shown only if the `throw` is not behind a conditional statement or inside a loop.\r\n\r\n    try{\r\n    }finally{\r\n       try{\r\n       }finally{\r\n          //if(someCondition) --&gt; no error because of unreachable code\r\n          throw new RunTimeException();\r\n       }\r\n       int a = 5;//unreachable code\r\n    }","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":0,"creation_date":1503192353}],"owner":{"reputation":67,"user_id":6547976,"user_type":"registered","profile_image":"https://i.stack.imgur.com/AlQ2Q.gif?s=128&g=1","display_name":"dibo","link":"https://stackoverflow.com/users/6547976/dibo"},"comment_count":1,"score":3,"creation_date":1467644033,"body_markdown":"Same with the following code:\r\n\r\n    static int f() {\r\n        while (true) {\r\n            try {\r\n                return 1;\r\n            } finally {\r\n                break;\r\n            }\r\n        }\r\n        return 2;\r\n    }\r\n\r\nf will return 2!\r\n\r\n\r\n","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":13302,"user_id":657427,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/dd071a6a7c97ba637c558c5e71137c7b?s=128&d=identicon&r=PG","display_name":"Christophe Roussy","link":"https://stackoverflow.com/users/657427/christophe-roussy"},"score":1,"creation_date":1513239947},{"owner":{"reputation":2393,"user_id":5373110,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/Yo7Ni.jpg?s=128&g=1","display_name":"Meet Vora","link":"https://stackoverflow.com/users/5373110/meet-vora"},"score":1,"creation_date":1513243489},{"owner":{"reputation":13302,"user_id":657427,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/dd071a6a7c97ba637c558c5e71137c7b?s=128&d=identicon&r=PG","display_name":"Christophe Roussy","link":"https://stackoverflow.com/users/657427/christophe-roussy"},"score":1,"creation_date":1513245495},{"owner":{"reputation":2393,"user_id":5373110,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/Yo7Ni.jpg?s=128&g=1","display_name":"Meet Vora","link":"https://stackoverflow.com/users/5373110/meet-vora"},"score":0,"creation_date":1513334468},{"owner":{"reputation":13302,"user_id":657427,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/dd071a6a7c97ba637c558c5e71137c7b?s=128&d=identicon&r=PG","display_name":"Christophe Roussy","link":"https://stackoverflow.com/users/657427/christophe-roussy"},"score":0,"creation_date":1513589857}],"owner":{"reputation":2393,"user_id":5373110,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/Yo7Ni.jpg?s=128&g=1","display_name":"Meet Vora","link":"https://stackoverflow.com/users/5373110/meet-vora"},"comment_count":5,"score":10,"creation_date":1471071638,"body_markdown":"&gt; Answer is simple **YES**.\r\n\r\n**INPUT:**\r\n\r\n    try{\r\n    \tint divideByZeroException = 5 / 0;\r\n    } catch (Exception e){\r\n        System.out.println(&quot;catch&quot;);\r\n        return;    // also tried with break; in switch-case, got same output\r\n    } finally {\r\n        System.out.println(&quot;finally&quot;);\r\n    }\r\n\r\n**OUTPUT:**\r\n\r\n    catch\r\n    finally","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":623206,"user_id":139985,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG","display_name":"Stephen C","link":"https://stackoverflow.com/users/139985/stephen-c"},"score":0,"creation_date":1503192321},{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":0,"creation_date":1565262143}],"owner":{"reputation":181,"user_id":5089473,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/EVfDj.jpg?s=128&g=1","display_name":"Akash Manngroliya","link":"https://stackoverflow.com/users/5089473/akash-manngroliya"},"comment_count":2,"score":3,"creation_date":1473744990,"body_markdown":"Yes it will always called but in one situation it not call when you use System.exit()\r\n\r\n    try{\r\n    //risky code\r\n    }catch(Exception e){\r\n    //exception handling code\r\n    }\r\n    finally(){\r\n    //It always execute but before this block if there is any statement like System.exit(0); then this block not execute.\r\n    }","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":13742,"user_id":3824919,"user_type":"registered","profile_image":"https://i.stack.imgur.com/0HpYR.png?s=128&g=1","display_name":"Tom","link":"https://stackoverflow.com/users/3824919/tom"},"score":2,"creation_date":1495282776}],"owner":{"reputation":1240,"user_id":4295595,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-zBPNiEhjJA8/AAAAAAAAAAI/AAAAAAAAAGQ/UG2qTkgD0ME/photo.jpg?sz=128","display_name":"Avinash Pande","link":"https://stackoverflow.com/users/4295595/avinash-pande"},"comment_count":1,"score":6,"creation_date":1495282569,"body_markdown":" 1. Finally  Block always get executed. Unless and until\r\n    **System.exit()** statement exists there (first statement in finally block).\r\n 2. If **system.exit()** is first statement then finally block won&#39;t get executed and control come out of the finally block.\r\nWhenever System.exit() statement gets in finally block till that statement finally block executed and when System.exit() appears then control force fully come out of the finally block.\r\n\r\n ","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":494,"user_id":7504001,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/21b4b79917b04d5e0b5d13b54b25b5fb?s=128&d=identicon&r=PG&f=1","display_name":"Vikas Suryawanshi","link":"https://stackoverflow.com/users/7504001/vikas-suryawanshi"},"comment_count":0,"score":6,"creation_date":1496925700,"body_markdown":"If you don&#39;t handle exception, before terminating the program, JVM executes finally block. It will not executed only if normal execution of program will fail mean&#39;s termination of program due to these following reasons..\r\n\r\n1. By causing a fatal error that causes the process to abort.\r\n\r\n2. Termination of program due to memory corrupt.\r\n\r\n3. By calling System.exit()\r\n\r\n4. If program goes into infinity loop.","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":594,"user_id":6826372,"user_type":"registered","accept_rate":75,"profile_image":"https://lh6.googleusercontent.com/-68hU4fK0fPM/AAAAAAAAAAI/AAAAAAAAFOA/G3UMUf35OGQ/photo.jpg?sz=128","display_name":"Sandip Solanki","link":"https://stackoverflow.com/users/6826372/sandip-solanki"},"comment_count":0,"score":5,"creation_date":1510220501,"body_markdown":"The finally block will not be called after return in a couple of unique scenarios: if System.exit() is called first, or if the JVM crashes.\r\n\r\nLet me try to answer your question in the easiest possible way.\r\n\r\n**Rule 1** : The finally block always run\r\n (Though there are exceptions to it. But let&#39;s stick to this for sometime.)\r\n\r\n**Rule 2** : the statements in the finally block run when control leaves a try or a catch block.The transfer of control can occur as a result of normal execution ,of execution of a break , continue, goto or a return statement, or of a propogation of an exception.\r\n\r\nIn case of a return statement specifically (since its captioned), the control has to leave the calling method , And hence calls the finally block of the corresponding  try-finally structure. The return statement is executed after the finally block.\r\n\r\nIn case there&#39;s a return statement in the finally block also, it will definitely override the one pending at the try block , since its clearing the call stack.\r\n\r\nYou can refer a better explanation here : http://msdn.microsoft.com/en-us/.... the concept is mostly same in all the high level languages.","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":3248,"user_id":3948862,"user_type":"registered","accept_rate":57,"profile_image":"https://i.stack.imgur.com/pXuEe.jpg?s=128&g=1","display_name":"D&#225;vid Horv&#225;th","link":"https://stackoverflow.com/users/3948862/d%c3%a1vid-horv%c3%a1th"},"comment_count":0,"score":6,"creation_date":1513438596,"body_markdown":"Yes, because **no control statement** can prevent `finally` from being executed.\r\n\r\nHere is a reference example, where all code blocks will be executed:\r\n\r\n    | x | Current result | Code \r\n    |---|----------------|------ - - -\r\n    |   |                |     \r\n    |   |                | public static int finallyTest() {\r\n    | 3 |                |     int x = 3;\r\n    |   |                |     try {\r\n    |   |                |        try {\r\n    | 4 |                |             x++;\r\n    | 4 | return 4       |             return x;\r\n    |   |                |         } finally {\r\n    | 3 |                |             x--;\r\n    | 3 | throw          |             throw new RuntimeException(&quot;Ahh!&quot;);\r\n    |   |                |         }\r\n    |   |                |     } catch (RuntimeException e) {\r\n    | 4 | return 4       |         return ++x;\r\n    |   |                |     } finally {\r\n    | 3 |                |         x--;\r\n    |   |                |     }\r\n    |   |                | }\r\n    |   |                |\r\n    |---|----------------|------ - - -\r\n    |   | Result: 4      |\r\n\r\nIn the variant below, `return x;` will be skipped. Result is still `4`:\r\n\r\n    public static int finallyTest() {\r\n        int x = 3;\r\n        try {\r\n            try {\r\n                x++;\r\n                if (true) throw new RuntimeException(&quot;Ahh!&quot;);\r\n                return x; // skipped\r\n            } finally {\r\n                x--;\r\n            }\r\n        } catch (RuntimeException e) {\r\n            return ++x;\r\n        } finally {\r\n            x--;\r\n        }\r\n    }\r\n\r\nReferences, of course, track their status. This example returns a reference with `value = 4`:\r\n\r\n    static class IntRef { public int value; }\r\n    public static IntRef finallyTest() {\r\n        IntRef x = new IntRef();\r\n        x.value = 3;\r\n        try {\r\n            return x;\r\n        } finally {\r\n            x.value++; // will be tracked even after return\r\n        }\r\n    }\r\n","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":287563,"user_id":207421,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG","display_name":"user207421","link":"https://stackoverflow.com/users/207421/user207421"},"score":2,"creation_date":1565262255}],"owner":{"reputation":353,"user_id":5635466,"user_type":"registered","profile_image":"https://i.stack.imgur.com/952fW.jpg?s=128&g=1","display_name":"Danail Tsvetanov","link":"https://stackoverflow.com/users/5635466/danail-tsvetanov"},"comment_count":1,"score":5,"creation_date":1522685172,"body_markdown":"Yes, it is written [here][1]\r\n\r\n&gt; If the JVM exits while the try or catch code is being executed, then the finally block may not execute. Likewise, if the thread executing the try or catch code is interrupted or killed, the finally block may not execute even though the application as a whole continues.\r\n\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/tutorial/essential/exceptions/finally.html","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":1413,"user_id":7538821,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/FaRRO.jpg?s=128&g=1","display_name":"sam","link":"https://stackoverflow.com/users/7538821/sam"},"score":0,"creation_date":1525076919}],"owner":{"reputation":189,"user_id":2851699,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/e35f1153b008e115ad68058bd00cb961?s=128&d=identicon&r=PG&f=1","display_name":"Pradeep Kumaresan","link":"https://stackoverflow.com/users/2851699/pradeep-kumaresan"},"comment_count":1,"score":8,"creation_date":1523360014,"body_markdown":"Adding to [@vibhash&#39;s answer][1] as no other answer explains what happens in the case of a mutable object like the one below.\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(test().toString());\r\n    }\r\n\r\n    public static StringBuffer test() {\r\n        StringBuffer s = new StringBuffer();\r\n        try {\r\n            s.append(&quot;sb&quot;);\r\n            return s;\r\n        } finally {\r\n            s.append(&quot;updated &quot;);\r\n        }\r\n    }\r\nWill output\r\n&gt;     sbupdated \r\n\r\n\r\n  [1]: https://stackoverflow.com/a/296053/4298200","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":1170,"user_id":8111997,"user_type":"registered","profile_image":"https://i.stack.imgur.com/9g7aA.jpg?s=128&g=1","display_name":"Poorna Senani Gamage","link":"https://stackoverflow.com/users/8111997/poorna-senani-gamage"},"comment_count":0,"score":5,"creation_date":1523858469,"body_markdown":"`try`- `catch`- `finally` are the key words for using exception handling case.&lt;br&gt; \r\nAs normal explanotory\r\n\r\n    try {\r\n    \t //code statements\r\n         //exception thrown here\r\n    \t //lines not reached if exception thrown\r\n    } catch (Exception e) {\r\n    \t//lines reached only when exception is thrown\r\n    } finally {\r\n    \t// always executed when the try block is exited\r\n    \t//independent of an exception thrown or not\r\n    }\r\n\r\n The finally block  prevent executing...\r\n\r\n - When you called `System.exit(0);`\r\n - If JVM exits.\r\n - Errors in the JVM\r\n\r\n","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":394,"user_id":6706261,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/1009089699a99d83537d305ba795d17a?s=128&d=identicon&r=PG&f=1","display_name":"Sabrina","link":"https://stackoverflow.com/users/6706261/sabrina"},"comment_count":0,"score":2,"creation_date":1524268652,"body_markdown":"finally block is executed always even if you put a return statement in the try block. The finally block will be executed before the return statement.","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":45780,"user_id":7294900,"user_type":"registered","accept_rate":94,"profile_image":"https://i.stack.imgur.com/Pdqi4.gif?s=128&g=1","display_name":"user7294900","link":"https://stackoverflow.com/users/7294900/user7294900"},"score":0,"creation_date":1536129512},{"owner":{"reputation":1413,"user_id":7538821,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/FaRRO.jpg?s=128&g=1","display_name":"sam","link":"https://stackoverflow.com/users/7538821/sam"},"score":0,"creation_date":1536167816},{"owner":{"reputation":1283,"user_id":3361335,"user_type":"registered","accept_rate":15,"profile_image":"https://www.gravatar.com/avatar/52beaaa0b4c2e49ea752e12fd656c111?s=128&d=identicon&r=PG&f=1","display_name":"fresko","link":"https://stackoverflow.com/users/3361335/fresko"},"score":0,"creation_date":1550053378},{"owner":{"reputation":1413,"user_id":7538821,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/FaRRO.jpg?s=128&g=1","display_name":"sam","link":"https://stackoverflow.com/users/7538821/sam"},"score":0,"creation_date":1550071273},{"owner":{"reputation":9021,"user_id":2191890,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/pA1bu.jpg?s=128&g=1","display_name":"Roc Boronat","link":"https://stackoverflow.com/users/2191890/roc-boronat"},"score":2,"creation_date":1550275114},{"owner":{"reputation":1283,"user_id":3361335,"user_type":"registered","accept_rate":15,"profile_image":"https://www.gravatar.com/avatar/52beaaa0b4c2e49ea752e12fd656c111?s=128&d=identicon&r=PG&f=1","display_name":"fresko","link":"https://stackoverflow.com/users/3361335/fresko"},"score":1,"creation_date":1550581717}],"owner":{"reputation":1413,"user_id":7538821,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/FaRRO.jpg?s=128&g=1","display_name":"sam","link":"https://stackoverflow.com/users/7538821/sam"},"comment_count":6,"score":7,"creation_date":1525077405,"body_markdown":"Consider the following program:\r\n\r\n    public class SomeTest {\r\n    \r\n        private static StringBuilder sb = new StringBuilder();\r\n    \r\n        public static void main(String args[]) {\r\n    \r\n            System.out.println(someString());\r\n            System.out.println(&quot;---AGAIN---&quot;);\r\n            System.out.println(someString());\r\n            System.out.println(&quot;---PRINT THE RESULT---&quot;);\r\n            System.out.println(sb.toString());\r\n        }\r\n    \r\n        private static String someString() {\r\n    \r\n            try {\r\n                sb.append(&quot;-abc-&quot;);\r\n                return sb.toString();\r\n    \r\n            } finally {\r\n                sb.append(&quot;xyz&quot;);\r\n            }\r\n        }\r\n    }\r\n\r\nAs of Java 1.8.162, the above code block gives the following output:\r\n\r\n    -abc-\r\n    ---AGAIN---\r\n    -abc-xyz-abc-\r\n    ---PRINT THE RESULT---\r\n    -abc-xyz-abc-xyz\r\n\r\n\r\nthis means that using `finally` to free up objects is a good practice like the following code:\r\n\r\n    private static String someString() {\r\n    \r\n        StringBuilder sb = new StringBuilder();\r\n    \r\n        try {\r\n            sb.append(&quot;abc&quot;);\r\n            return sb.toString();\r\n    \r\n        } finally {\r\n            sb = null; // Just an example, but you can close streams or DB connections this way.\r\n        }\r\n    }","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":41,"user_id":6929015,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/486bff80652848b2d0bd443e1be3505b?s=128&d=identicon&r=PG&f=1","display_name":"Rubin Luitel","link":"https://stackoverflow.com/users/6929015/rubin-luitel"},"comment_count":0,"score":2,"creation_date":1525902727,"body_markdown":"Finally is always called at the end\r\n\r\nwhen you try, it executes some code, if something happens in try, then catch will catch that exception and you could print some mssg out or throw an error, then finally block is executed.\r\n\r\nFinally is normally used when doing cleanups, for instance, if you use a scanner in java, you should probably close the scanner as it leads to other problems such as not being able to open some file","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":16765,"user_id":448078,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/0cea45314cdd61d5e1f9dc6f0c1c0582?s=128&d=identicon&r=PG","display_name":"Mike","link":"https://stackoverflow.com/users/448078/mike"},"comment_count":0,"score":2,"creation_date":1565214838,"body_markdown":"Here are some conditions which can bypass a finally block:\r\n\r\n1. If the JVM exits while the try or catch code is being executed, then the finally block may not execute. More on [sun tutorial](http://download.oracle.com/javase/tutorial/essential/exceptions/finally.html)  \r\n2. Normal Shutdown - this occurs either when the last non-daemon thread exits OR when Runtime.exit() ([some good blog](http://geekexplains.blogspot.com/2008/06/jvm-shutdown-jvm-shutdown-sequence.html)). When a thread exits, the JVM performs an inventory of running threads, and if the only threads that are left are daemon threads, it initiates an orderly shutdown. When the JVM halts, any remaining daemon threads are abandoned finally blocks are not executed, stacks are not unwound the JVM just exits. Daemon threads should be used sparingly few processing activities can be safely abandoned at any time with no cleanup. In particular, it is dangerous to use daemon threads for tasks that might perform any sort of I/O. Daemon threads are best saved for &quot;housekeeping&quot; tasks, such as a background thread that periodically removes expired entries from an in-memory cache ([source](http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601))\r\n\r\nLast non-daemon thread exits example:  \r\n\r\n\tpublic class TestDaemon {\r\n\t\tprivate static Runnable runnable = new Runnable() {\r\n\t\t\t@Override\r\n\t\t\tpublic void run() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\tSystem.out.println(&quot;Is alive&quot;);\r\n\t\t\t\t\t\tThread.sleep(10);\r\n\t\t\t\t\t\t// throw new RuntimeException();\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (Throwable t) {\r\n\t\t\t\t\tt.printStackTrace();\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tSystem.out.println(&quot;This will never be executed.&quot;);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tpublic static void main(String[] args) throws InterruptedException {\r\n\t\t\tThread daemon = new Thread(runnable);\r\n\t\t\tdaemon.setDaemon(true);\r\n\t\t\tdaemon.start();\r\n\t\t\tThread.sleep(100);\r\n\t\t\t// daemon.stop();\r\n\t\t\tSystem.out.println(&quot;Last non-daemon thread exits.&quot;);\r\n\t\t}\r\n\t}\r\n\r\nOutput:  \r\n\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n\tLast non-daemon thread exits.\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n\tIs alive\r\n","title":"Does a finally block always get executed in Java?"},{"comments":[{"owner":{"reputation":36186,"user_id":238704,"user_type":"registered","profile_image":"https://i.stack.imgur.com/VgOZI.png?s=128&g=1","display_name":"President James K. Polk","link":"https://stackoverflow.com/users/238704/president-james-k-polk"},"score":0,"creation_date":1580845032}],"owner":{"reputation":4273,"user_id":1379734,"user_type":"registered","accept_rate":61,"profile_image":"https://i.stack.imgur.com/I2sHw.png?s=128&g=1","display_name":"hellzone","link":"https://stackoverflow.com/users/1379734/hellzone"},"comment_count":1,"score":7,"creation_date":1580131461,"body_markdown":"`finally` is always executed and before returning `x`&#39;s (calculated) value.\r\n\r\n    System.out.println(foo());\r\n\r\n    ....\r\n\r\n    int foo(){\r\n        int x = 2;\r\n        try{\r\n            return x++;\r\n        } finally{\r\n            System.out.println(x);\r\n        }\r\n    }\r\n\r\nOutput:\r\n   \r\n    3\r\n    2","title":"Does a finally block always get executed in Java?"},{"owner":{"reputation":89,"user_id":2862834,"user_type":"registered","profile_image":"https://i.stack.imgur.com/5ITAM.png?s=128&g=1","display_name":"Youngrok Ko","link":"https://stackoverflow.com/users/2862834/youngrok-ko"},"comment_count":0,"score":0,"creation_date":1581137125,"body_markdown":"try-with-resoruce example\r\n\r\n    static class IamAutoCloseable implements AutoCloseable {\r\n        private final String name;\r\n        IamAutoCloseable(String name) {\r\n            this.name = name;\r\n        }\r\n        public void close() {\r\n            System.out.println(name);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void withResourceFinally() {\r\n        try (IamAutoCloseable closeable1 = new IamAutoCloseable(&quot;closeable1&quot;);\r\n             IamAutoCloseable closeable2 = new IamAutoCloseable(&quot;closeable2&quot;)) {\r\n            System.out.println(&quot;try&quot;);\r\n        } finally {\r\n            System.out.println(&quot;finally&quot;);\r\n        }\r\n    }\r\n\r\nTest output:\r\n\r\n    try\r\n    closeable2\r\n    closeable1\r\n    finally\r\n\r\n","title":"Does a finally block always get executed in Java?"}],"owner":{"reputation":25262,"user_id":885027,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/b822dd193d8b86b734967ec5f4a8a92b?s=128&d=identicon&r=PG","display_name":"jonny five","link":"https://stackoverflow.com/users/885027/jonny-five"},"comment_count":8,"is_answered":true,"answer_count":49,"score":2484,"creation_date":1221500634,"question_id":65035,"body_markdown":"Considering this code, can I be *absolutely sure* that the `finally` block always executes, no matter what `something()` is?\r\n\r\n    try {  \r\n        something();  \r\n        return success;  \r\n    }  \r\n    catch (Exception e) {   \r\n        return failure;  \r\n    }  \r\n    finally {  \r\n        System.out.println(&quot;I don&#39;t know if this will get printed out&quot;);\r\n    }\r\n","link":"https://stackoverflow.com/questions/65035/does-a-finally-block-always-get-executed-in-java","title":"Does a finally block always get executed in Java?"},{"tags":["java","arrays"],"comments":[{"owner":{"reputation":2394,"user_id":63609,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/ce7af87d7b9cd5fc61267c49aa988ae4?s=128&d=identicon&r=PG","display_name":"Zack","link":"https://stackoverflow.com/users/63609/zack"},"score":5,"creation_date":1247619067},{"owner":{"reputation":30052,"user_id":16534,"user_type":"registered","accept_rate":95,"profile_image":"https://i.stack.imgur.com/JnmCP.jpg?s=128&g=1","display_name":"Mike Sickler","link":"https://stackoverflow.com/users/16534/mike-sickler"},"score":0,"creation_date":1247620853},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":3,"creation_date":1367218236},{"owner":{"reputation":51983,"user_id":197229,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/80a68e69526f81d2dc560c47eedd198a?s=128&d=identicon&r=PG","display_name":"Mr. Boy","link":"https://stackoverflow.com/users/197229/mr-boy"},"score":1,"creation_date":1384290332},{"owner":{"reputation":2158,"user_id":1980925,"user_type":"registered","profile_image":"https://i.stack.imgur.com/UgYrw.jpg?s=128&g=1","display_name":"Alex Mazzariol","link":"https://stackoverflow.com/users/1980925/alex-mazzariol"},"score":0,"creation_date":1413816720},{"owner":{"reputation":1845,"user_id":4714970,"user_type":"registered","accept_rate":53,"profile_image":"https://www.gravatar.com/avatar/e29b1cd1e24528881ced8e0f15cc18db?s=128&d=identicon&r=PG&f=1","display_name":"Aequitas","link":"https://stackoverflow.com/users/4714970/aequitas"},"score":38,"creation_date":1437360086},{"owner":{"reputation":15402,"user_id":15472,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/9b4128da626e5b0049cd4fb88033e3b3?s=128&d=identicon&r=PG","display_name":"tucuxi","link":"https://stackoverflow.com/users/15472/tucuxi"},"score":0,"creation_date":1588329498}],"answers":[{"comments":[{"owner":{"reputation":106835,"user_id":572,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/Ct4o3.jpg?s=128&g=1","display_name":"Thomas Owens","link":"https://stackoverflow.com/users/572/thomas-owens"},"score":96,"creation_date":1247616367},{"owner":{"reputation":57795,"user_id":24396,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/160d6580f280b5e9e5a1188b32c4ef2d?s=128&d=identicon&r=PG","display_name":"Steve Kuo","link":"https://stackoverflow.com/users/24396/steve-kuo"},"score":3,"creation_date":1247616476},{"owner":{"reputation":84171,"user_id":23072,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/ad19b9146f4ffd608bf137323f68de0c?s=128&d=identicon&r=PG","display_name":"Uri","link":"https://stackoverflow.com/users/23072/uri"},"score":0,"creation_date":1247616545},{"owner":{"reputation":312474,"user_id":73070,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/d54ed51c0f03cb461741c3ec77a837b2?s=128&d=identicon&r=PG","display_name":"Joey","link":"https://stackoverflow.com/users/73070/joey"},"score":190,"creation_date":1247616547},{"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"score":1,"creation_date":1247619934},{"owner":{"reputation":4564,"user_id":395685,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/506a37c8660a6faa6382086e4a538811?s=128&d=identicon&r=PG","display_name":"Nyerguds","link":"https://stackoverflow.com/users/395685/nyerguds"},"score":18,"creation_date":1289654159},{"owner":{"reputation":4437,"user_id":737842,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/dbcb75bedd35b2394cceda5df9c2f58e?s=128&d=identicon&r=PG","display_name":"Stas Jaro","link":"https://stackoverflow.com/users/737842/stas-jaro"},"score":2,"creation_date":1307724208},{"owner":{"reputation":3346,"user_id":371623,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/29d0ef68605f89889a48a8fbc64f5ce1?s=128&d=identicon&r=PG","display_name":"CromTheDestroyer","link":"https://stackoverflow.com/users/371623/cromthedestroyer"},"score":62,"creation_date":1308070280},{"owner":{"reputation":38341,"user_id":253468,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/eump2.jpg?s=128&g=1","display_name":"TWiStErRob","link":"https://stackoverflow.com/users/253468/twisterrob"},"score":28,"creation_date":1350465372},{"owner":{"reputation":312474,"user_id":73070,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/d54ed51c0f03cb461741c3ec77a837b2?s=128&d=identicon&r=PG","display_name":"Joey","link":"https://stackoverflow.com/users/73070/joey"},"score":0,"creation_date":1350471164},{"owner":{"reputation":9864,"user_id":27011,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/cac1dd7e6f0f7c42b6378c3b2c8e92c6?s=128&d=identicon&r=PG","display_name":"Simon Lehmann","link":"https://stackoverflow.com/users/27011/simon-lehmann"},"score":11,"creation_date":1374168875},{"owner":{"reputation":23137,"user_id":1527084,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/3c93245c8f90bb4256781ab91e212821?s=128&d=identicon&r=PG","display_name":"Geek","link":"https://stackoverflow.com/users/1527084/geek"},"score":0,"creation_date":1377843576},{"owner":{"reputation":304870,"user_id":131872,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a0ced8e21d2a761db718acb6362b9225?s=128&d=identicon&r=PG","display_name":"camickr","link":"https://stackoverflow.com/users/131872/camickr"},"score":2,"creation_date":1386390714},{"owner":{"reputation":1792,"user_id":269361,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/124cda7f0e8d259e69d49ed43868639e?s=128&d=identicon&r=PG","display_name":"fool4jesus","link":"https://stackoverflow.com/users/269361/fool4jesus"},"score":2,"creation_date":1398091485},{"owner":{"reputation":304870,"user_id":131872,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a0ced8e21d2a761db718acb6362b9225?s=128&d=identicon&r=PG","display_name":"camickr","link":"https://stackoverflow.com/users/131872/camickr"},"score":0,"creation_date":1398092653},{"owner":{"reputation":1792,"user_id":269361,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/124cda7f0e8d259e69d49ed43868639e?s=128&d=identicon&r=PG","display_name":"fool4jesus","link":"https://stackoverflow.com/users/269361/fool4jesus"},"score":0,"creation_date":1398126003},{"owner":{"reputation":508,"user_id":1495769,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/dbe7df74434a1f22c4a94d8f0af91592?s=128&d=identicon&r=PG","display_name":"Jack","link":"https://stackoverflow.com/users/1495769/jack"},"score":0,"creation_date":1412764057},{"owner":{"reputation":31073,"user_id":286685,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/9c8897ea40c61eeab099efd60ffa7466?s=128&d=identicon&r=PG","display_name":"Stijn de Witt","link":"https://stackoverflow.com/users/286685/stijn-de-witt"},"score":0,"creation_date":1415626899},{"owner":{"user_type":"does_not_exist","display_name":"user4229245"},"score":1,"creation_date":1430579754},{"owner":{"reputation":234360,"user_id":224132,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/N4ivW.png?s=128&g=1","display_name":"Peter Cordes","link":"https://stackoverflow.com/users/224132/peter-cordes"},"score":2,"creation_date":1441965264},{"owner":{"user_type":"does_not_exist","display_name":"user4229245"},"score":0,"creation_date":1441976723},{"owner":{"reputation":234360,"user_id":224132,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/N4ivW.png?s=128&g=1","display_name":"Peter Cordes","link":"https://stackoverflow.com/users/224132/peter-cordes"},"score":0,"creation_date":1441978592},{"owner":{"user_type":"does_not_exist","display_name":"user4229245"},"score":1,"creation_date":1441979546},{"owner":{"reputation":8528,"user_id":837722,"user_type":"registered","accept_rate":87,"profile_image":"https://i.stack.imgur.com/sKLRI.png?s=128&g=1","display_name":"Si8","link":"https://stackoverflow.com/users/837722/si8"},"score":0,"creation_date":1460243384},{"owner":{"reputation":2219,"user_id":2680254,"user_type":"registered","accept_rate":54,"profile_image":"https://graph.facebook.com/100000442252147/picture?type=large","display_name":"Gilberto Ibarra","link":"https://stackoverflow.com/users/2680254/gilberto-ibarra"},"score":0,"creation_date":1467302530},{"owner":{"reputation":759,"user_id":1800992,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/cPtIT.jpg?s=128&g=1","display_name":"Salah Alshaal","link":"https://stackoverflow.com/users/1800992/salah-alshaal"},"score":0,"creation_date":1467874878},{"owner":{"reputation":2150,"user_id":4173303,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Zeu9V.png?s=128&g=1","display_name":"Christophe Weis","link":"https://stackoverflow.com/users/4173303/christophe-weis"},"score":0,"creation_date":1488526167},{"owner":{"reputation":507,"user_id":7496806,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/fsK1X.png?s=128&g=1","display_name":"Asqiir","link":"https://stackoverflow.com/users/7496806/asqiir"},"score":0,"creation_date":1524316256},{"owner":{"reputation":2117,"user_id":2856202,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/AHuOz.png?s=128&g=1","display_name":"eigenfield","link":"https://stackoverflow.com/users/2856202/eigenfield"},"score":0,"creation_date":1581575798},{"owner":{"reputation":708,"user_id":1430630,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0ca01cd7793eaa85141f73bb0a65456b?s=128&d=identicon&r=PG","display_name":"Luke","link":"https://stackoverflow.com/users/1430630/luke"},"score":1,"creation_date":1592973161},{"owner":{"reputation":304870,"user_id":131872,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a0ced8e21d2a761db718acb6362b9225?s=128&d=identicon&r=PG","display_name":"camickr","link":"https://stackoverflow.com/users/131872/camickr"},"score":0,"creation_date":1593007800}],"owner":{"reputation":304870,"user_id":131872,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a0ced8e21d2a761db718acb6362b9225?s=128&d=identicon&r=PG","display_name":"camickr","link":"https://stackoverflow.com/users/131872/camickr"},"comment_count":31,"score":3071,"creation_date":1247616289,"body_markdown":"    Arrays.asList(yourArray).contains(yourValue)\r\n\r\nWarning: this doesn&#39;t work for arrays of primitives (see the comments).\r\n\r\n-----\r\n\r\nSince [tag:Java-8] you can now use Streams.\r\n-\r\n\r\n    String[] values = {&quot;AB&quot;,&quot;BC&quot;,&quot;CD&quot;,&quot;AE&quot;};\r\n    boolean contains = Arrays.stream(values).anyMatch(&quot;s&quot;::equals);\r\n\r\nTo check whether an array of `int`, `double` or `long` contains a value use `IntStream`, `DoubleStream` or `LongStream` respectively.\r\n\r\nExample\r\n-\r\n\r\n\tint[] a = {1,2,3,4};\r\n\tboolean contains = IntStream.of(a).anyMatch(x -&gt; x == 4);\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":106835,"user_id":572,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/Ct4o3.jpg?s=128&g=1","display_name":"Thomas Owens","link":"https://stackoverflow.com/users/572/thomas-owens"},"score":0,"creation_date":1247616404},{"owner":{"reputation":312474,"user_id":73070,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/d54ed51c0f03cb461741c3ec77a837b2?s=128&d=identicon&r=PG","display_name":"Joey","link":"https://stackoverflow.com/users/73070/joey"},"score":1,"creation_date":1247616656},{"owner":{"reputation":106835,"user_id":572,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/Ct4o3.jpg?s=128&g=1","display_name":"Thomas Owens","link":"https://stackoverflow.com/users/572/thomas-owens"},"score":0,"creation_date":1247616828},{"owner":{"reputation":2427,"user_id":2378429,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c3208c57486859807197c6d3125ba137?s=128&d=identicon&r=PG","display_name":"O.O.Balance","link":"https://stackoverflow.com/users/2378429/o-o-balance"},"score":0,"creation_date":1515888707},{"owner":{"reputation":259,"user_id":3126558,"user_type":"registered","accept_rate":14,"profile_image":"https://i.stack.imgur.com/pSaLQ.jpg?s=128&g=1","display_name":"arunwithasmile","link":"https://stackoverflow.com/users/3126558/arunwithasmile"},"score":0,"creation_date":1518601879}],"owner":{"reputation":106835,"user_id":572,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/Ct4o3.jpg?s=128&g=1","display_name":"Thomas Owens","link":"https://stackoverflow.com/users/572/thomas-owens"},"comment_count":5,"score":28,"creation_date":1247616300,"body_markdown":"You can use the [Arrays class][1] to perform a binary search for the value. If your array is not sorted, you will have to use the sort functions in the same class to sort the array, then search through it.\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":106835,"user_id":572,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/Ct4o3.jpg?s=128&g=1","display_name":"Thomas Owens","link":"https://stackoverflow.com/users/572/thomas-owens"},"score":1,"creation_date":1247616639},{"owner":{"reputation":84171,"user_id":23072,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/ad19b9146f4ffd608bf137323f68de0c?s=128&d=identicon&r=PG","display_name":"Uri","link":"https://stackoverflow.com/users/23072/uri"},"score":1,"creation_date":1247616899}],"owner":{"reputation":84171,"user_id":23072,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/ad19b9146f4ffd608bf137323f68de0c?s=128&d=identicon&r=PG","display_name":"Uri","link":"https://stackoverflow.com/users/23072/uri"},"comment_count":2,"score":71,"creation_date":1247616348,"body_markdown":"If the array is not sorted, you will have to iterate over everything and make a call to equals on each.\r\n\r\nIf the array is sorted, you can do a binary search, there&#39;s one in the [Arrays][1] class.\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html\r\n\r\nGenerally speaking, if you are going to do a lot of membership checks, you may want to store everything in a Set, not in an array. ","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":261877,"user_id":24874,"user_type":"registered","accept_rate":78,"profile_image":"https://www.gravatar.com/avatar/b85169daf0d165b94ea4fa70f409686c?s=128&d=identicon&r=PG","display_name":"Drew Noakes","link":"https://stackoverflow.com/users/24874/drew-noakes"},"score":191,"creation_date":1303714461},{"owner":{"reputation":1392,"user_id":109813,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f58ab1513827e8dbe312a8a550be993b?s=128&d=identicon&r=PG","display_name":"Xr.","link":"https://stackoverflow.com/users/109813/xr"},"score":65,"creation_date":1318448344},{"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"score":1,"creation_date":1331126589},{"owner":{"reputation":206732,"user_id":642706,"user_type":"registered","accept_rate":58,"profile_image":"https://i.stack.imgur.com/ZWEI3.jpg?s=128&g=1","display_name":"Basil Bourque","link":"https://stackoverflow.com/users/642706/basil-bourque"},"score":2,"creation_date":1409288690},{"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"score":1,"creation_date":1409318986},{"owner":{"reputation":15823,"user_id":580677,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/4b386c750d5f10ac62b6547f67e6a7a6?s=128&d=identicon&r=PG","display_name":"nmr","link":"https://stackoverflow.com/users/580677/nmr"},"score":0,"creation_date":1410299367},{"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"score":6,"creation_date":1410306714},{"owner":{"reputation":68745,"user_id":53897,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG","display_name":"Thorbj&#248;rn Ravn Andersen","link":"https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"},"score":0,"creation_date":1436095364},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":0,"creation_date":1537821871},{"owner":{"reputation":2225,"user_id":2075782,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/3ac57ec623ff8de6d42bcd4bff45e69e?s=128&d=identicon&r=PG&f=1","display_name":"Paulo Oliveira","link":"https://stackoverflow.com/users/2075782/paulo-oliveira"},"score":0,"creation_date":1560262880},{"owner":{"reputation":3481,"user_id":10630900,"user_type":"registered","profile_image":"https://i.stack.imgur.com/ece5V.png?s=128&g=1","display_name":"Minn","link":"https://stackoverflow.com/users/10630900/minn"},"score":1,"creation_date":1566160677},{"owner":{"reputation":28448,"user_id":12299000,"user_type":"registered","profile_image":"https://i.stack.imgur.com/0pja9.png?s=128&g=1","display_name":"kaya3","link":"https://stackoverflow.com/users/12299000/kaya3"},"score":0,"creation_date":1572485364},{"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"score":0,"creation_date":1572487684}],"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"comment_count":13,"score":379,"creation_date":1247620382,"body_markdown":"## Concise update for Java SE 9 ##\n\nReference arrays are bad. For this case we are after a set. Since Java SE 9 we have `Set.of`.\n\n    private static final Set&lt;String&gt; VALUES = Set.of(\n        &quot;AB&quot;,&quot;BC&quot;,&quot;CD&quot;,&quot;AE&quot;\n    );\n\n&quot;Given String s, is there a good way of testing whether VALUES contains s?&quot;\n\n    VALUES.contains(s)\n\nO(1).\n\nThe **right type**, **immutable**, **O(1)** and **concise**. Beautiful.*\n\n\n## Original answer details ##\n\n\nJust to clear the code up to start with. We have (corrected):\n\n    public static final String[] VALUES = new String[] {&quot;AB&quot;,&quot;BC&quot;,&quot;CD&quot;,&quot;AE&quot;};\n\nThis is a mutable static which FindBugs will tell you is very naughty. Do not modify statics and do not allow other code to do so also. At an absolute minimum, the field should be private:\n\n    private static final String[] VALUES = new String[] {&quot;AB&quot;,&quot;BC&quot;,&quot;CD&quot;,&quot;AE&quot;};\n\n(Note, you can actually drop the `new String[];` bit.)\n\nReference arrays are still bad and we want a set:\n\n    private static final Set&lt;String&gt; VALUES = new HashSet&lt;String&gt;(Arrays.asList(\n         new String[] {&quot;AB&quot;,&quot;BC&quot;,&quot;CD&quot;,&quot;AE&quot;}\n    ));\n\n(Paranoid people, such as myself, may feel more at ease if this was wrapped in `Collections.unmodifiableSet` - it could then even be made public.)\n\n\n(*To be a little more on brand, the collections API is predictably still missing immutable collection types and the syntax is still far too verbose, for my tastes.)","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":17809,"user_id":225899,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/2d205a5ec26e812c3694335b819d68c9?s=128&d=identicon&r=PG","display_name":"James P.","link":"https://stackoverflow.com/users/225899/james-p"},"score":1,"creation_date":1307038836}],"owner":{"reputation":140398,"user_id":4725,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B53xA.jpg?s=128&g=1","display_name":"Tom Hawtin - tackline","link":"https://stackoverflow.com/users/4725/tom-hawtin-tackline"},"comment_count":1,"score":17,"creation_date":1247620706,"body_markdown":"ObStupidAnswer (but I think there&#39;s a lesson in here somewhere):\r\n\r\n    enum Values {\r\n        AB, BC, CD, AE\r\n    }\r\n\r\n    try {\r\n        Values.valueOf(s);\r\n        return true;\r\n    } catch (IllegalArgumentException exc) {\r\n        return false;\r\n    }","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":1912,"user_id":161995,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/f2f7d62ddeeb7b96c338131837eb1c6a?s=128&d=identicon&r=PG","display_name":"Erik","link":"https://stackoverflow.com/users/161995/erik"},"score":6,"creation_date":1369905414},{"owner":{"reputation":1912,"user_id":161995,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/f2f7d62ddeeb7b96c338131837eb1c6a?s=128&d=identicon&r=PG","display_name":"Erik","link":"https://stackoverflow.com/users/161995/erik"},"score":0,"creation_date":1369905531},{"owner":{"reputation":5267,"user_id":692560,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/H4sk0.png?s=128&g=1","display_name":"Thor84no","link":"https://stackoverflow.com/users/692560/thor84no"},"score":0,"creation_date":1382617537},{"owner":{"reputation":57795,"user_id":24396,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/160d6580f280b5e9e5a1188b32c4ef2d?s=128&d=identicon&r=PG","display_name":"Steve Kuo","link":"https://stackoverflow.com/users/24396/steve-kuo"},"score":7,"creation_date":1389400743},{"owner":{"reputation":962,"user_id":554966,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/07897bc81bcaff9e5cdfb8c77b0197fc?s=128&d=identicon&r=PG","display_name":"dragn","link":"https://stackoverflow.com/users/554966/dragn"},"score":4,"creation_date":1410443234}],"owner":{"reputation":304870,"user_id":131872,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/a0ced8e21d2a761db718acb6362b9225?s=128&d=identicon&r=PG","display_name":"camickr","link":"https://stackoverflow.com/users/131872/camickr"},"comment_count":5,"score":50,"creation_date":1247621331,"body_markdown":"For what it&#39;s worth I ran a test comparing the 3 suggestions for speed. I generated random integers, converted them to a String and added them to an array. I then searched for the highest possible number/string, which would be a worst case scenario for the `asList().contains()`.\r\n\r\nWhen using a 10K array size the results were:\r\n&lt;pre&gt;\r\nSort &amp; Search   : 15\r\nBinary Search   : 0\r\nasList.contains : 0\r\n&lt;/pre&gt;\r\nWhen using a 100K array the results were:\r\n&lt;pre&gt;\r\nSort &amp; Search   : 156\r\nBinary Search   : 0\r\nasList.contains : 32\r\n&lt;/pre&gt;\r\nSo if the array is created in sorted order the binary search is the fastest, otherwise the `asList().contains` would be the way to go. If you have many searches, then it may be worthwhile to sort the array so you can use the binary search. It all depends on your application.  \r\n\r\nI would think those are the results most people would expect. Here is the test code:\r\n\r\n    import java.util.*;\r\n    \r\n    public class Test\r\n    {\r\n    \tpublic static void main(String args[])\r\n    \t{\r\n    \t\tlong start = 0;\r\n    \t\tint size = 100000;\r\n    \t\tString[] strings = new String[size];\r\n    \t\tRandom random = new Random();\r\n    \r\n    \r\n    \t\tfor (int i = 0; i &lt; size; i++)\r\n    \t\t\tstrings[i] = &quot;&quot; + random.nextInt( size );\r\n    \r\n    \t\tstart = System.currentTimeMillis();\r\n    \t\tArrays.sort(strings);\r\n    \t\tSystem.out.println(Arrays.binarySearch(strings, &quot;&quot; + (size - 1) ));\r\n    \t\tSystem.out.println(&quot;Sort &amp; Search : &quot; + (System.currentTimeMillis() - start));\r\n    \r\n    \t\tstart = System.currentTimeMillis();\r\n    \t\tSystem.out.println(Arrays.binarySearch(strings, &quot;&quot; + (size - 1) ));\r\n    \t\tSystem.out.println(&quot;Search        : &quot; + (System.currentTimeMillis() - start));\r\n    \r\n    \t\tstart = System.currentTimeMillis();\r\n    \t\tSystem.out.println(Arrays.asList(strings).contains( &quot;&quot; + (size - 1) ));\r\n    \t\tSystem.out.println(&quot;Contains      : &quot; + (System.currentTimeMillis() - start));\r\n    \t}\r\n    }\r\n\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":9843,"user_id":177293,"user_type":"registered","accept_rate":55,"profile_image":"https://www.gravatar.com/avatar/ae4384c9130c9b1707a15584f6b75333?s=128&d=identicon&r=PG","display_name":"Skylar Saveland","link":"https://stackoverflow.com/users/177293/skylar-saveland"},"score":2,"creation_date":1404408067}],"owner":{"reputation":131,"user_id":364147,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/4304b7d2380f2f674768550919bded13?s=128&d=identicon&r=PG","display_name":"not","link":"https://stackoverflow.com/users/364147/not"},"comment_count":1,"score":13,"creation_date":1276223876,"body_markdown":"Actually, if you use HashSet&amp;lt;String&gt; as Tom Hawtin proposed you don&#39;t need to worry about sorting, and your speed is the same as with binary search on a presorted array, probably even faster.\r\n\r\nIt all depends on how your code is set up, obviously, but from where I stand, the order would be:\r\n\r\nOn an *unsorted* array:\r\n\r\n 1. HashSet\r\n 2. asList\r\n 3. sort &amp; binary\r\n\r\nOn a sorted array:\r\n\r\n 1. HashSet\r\n 2. Binary\r\n 3. asList\r\n\r\nSo either way, HashSet for the win.\r\n\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"owner":{"reputation":9275,"user_id":509619,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/fd23036b365ac4d5492207da6dbe0248?s=128&d=identicon&r=PG","display_name":"Mark Rhodes","link":"https://stackoverflow.com/users/509619/mark-rhodes"},"comment_count":0,"score":39,"creation_date":1295531884,"body_markdown":"Instead of using the quick array initialisation syntax too, you could just initialise it as a List straight away in a similar manner using the Arrays.asList method, e.g.:\r\n\r\n    public static final List&lt;String&gt; STRINGS = Arrays.asList(&quot;firstString&quot;, &quot;secondString&quot; ...., &quot;lastString&quot;);\r\n\r\nThen you can do (like above): \r\n\r\n    STRINGS.contains(&quot;the string you want to find&quot;);\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":1921,"user_id":526664,"user_type":"registered","accept_rate":54,"profile_image":"https://i.stack.imgur.com/jsQUy.jpg?s=128&g=1","display_name":"Jason","link":"https://stackoverflow.com/users/526664/jason"},"score":4,"creation_date":1354902491},{"owner":{"reputation":1167,"user_id":2101529,"user_type":"registered","profile_image":"https://i.stack.imgur.com/ae4yL.jpg?s=128&g=1","display_name":"slamborne","link":"https://stackoverflow.com/users/2101529/slamborne"},"score":2,"creation_date":1391135956},{"owner":{"reputation":6547,"user_id":116301,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/e5e0253aafe7650f7819f5285cfec7f0?s=128&d=identicon&r=PG","display_name":"GuiSim","link":"https://stackoverflow.com/users/116301/guisim"},"score":40,"creation_date":1398195057},{"owner":{"reputation":3318,"user_id":688843,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/8d3b2b2d2535e5c11b68ad7866d7a7c8?s=128&d=identicon&r=PG","display_name":"Buffalo","link":"https://stackoverflow.com/users/688843/buffalo"},"score":1,"creation_date":1425902350},{"owner":{"reputation":1323,"user_id":3811599,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/miUke.png?s=128&g=1","display_name":"Marcel","link":"https://stackoverflow.com/users/3811599/marcel"},"score":0,"creation_date":1456240759},{"owner":{"reputation":1915,"user_id":1998944,"user_type":"registered","accept_rate":40,"profile_image":"https://i.stack.imgur.com/MC5Cy.jpg?s=128&g=1","display_name":"Kenyakorn Ketsombut","link":"https://stackoverflow.com/users/1998944/kenyakorn-ketsombut"},"score":10,"creation_date":1471007516},{"owner":{"reputation":5009,"user_id":7851115,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/uyswM.jpg?s=128&g=1","display_name":"Joshua Detwiler","link":"https://stackoverflow.com/users/7851115/joshua-detwiler"},"score":1,"creation_date":1498499544},{"owner":{"reputation":169,"user_id":6723771,"user_type":"registered","profile_image":"https://i.stack.imgur.com/GC6Lx.png?s=128&g=1","display_name":"Andrew","link":"https://stackoverflow.com/users/6723771/andrew"},"score":1,"creation_date":1529937487}],"owner":{"reputation":2681,"user_id":324907,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5a49e8f0d3e979d7d21fc71c36eb64ac?s=128&d=identicon&r=PG","display_name":"Intracer","link":"https://stackoverflow.com/users/324907/intracer"},"comment_count":8,"score":217,"creation_date":1306847849,"body_markdown":"You can use `ArrayUtils.contains` from [Apache Commons Lang][1]\r\n\r\n[`public static boolean contains(Object[] array, Object objectToFind)`][2]\r\n\r\nNote that this method returns `false` if the passed array is `null`.\r\n\r\nThere are also methods available for primitive arrays of all kinds.\r\n\r\n### Example:\r\n\r\n    String[] fieldsToInclude = { &quot;id&quot;, &quot;name&quot;, &quot;location&quot; };\r\n\r\n    if ( ArrayUtils.contains( fieldsToInclude, &quot;id&quot; ) ) {\r\n        // Do some stuff.\r\n    }\r\n\r\n\r\n[1]: https://commons.apache.org/proper/commons-lang/\r\n[2]: http://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/ArrayUtils.html#contains(java.lang.Object[],%20java.lang.Object)","title":"How do I determine whether an array contains a particular value in Java?"},{"owner":{"reputation":2812,"user_id":642389,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/e94c71eefa1583686434e57e2dee1edc?s=128&d=identicon&r=PG","display_name":"jhodges","link":"https://stackoverflow.com/users/642389/jhodges"},"comment_count":0,"score":11,"creation_date":1348064020,"body_markdown":"If you have the google collections library, Tom&#39;s answer can be simplified a lot by using ImmutableSet (http://google-collections.googlecode.com/svn/trunk/javadoc/com/google/common/collect/ImmutableSet.html)\r\n\r\nThis really removes a lot of clutter from the initialization proposed\r\n\r\n\tprivate static final Set&lt;String&gt; VALUES =  ImmutableSet.of(&quot;AB&quot;,&quot;BC&quot;,&quot;CD&quot;,&quot;AE&quot;);","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":2307,"user_id":130804,"user_type":"registered","accept_rate":95,"profile_image":"https://www.gravatar.com/avatar/de70e06942e0ba7be60ff08b53c18308?s=128&d=identicon&r=PG","display_name":"Phoexo","link":"https://stackoverflow.com/users/130804/phoexo"},"score":1,"creation_date":1349791697},{"owner":{"reputation":278608,"user_id":1705598,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/aTFoe.jpg?s=128&g=1","display_name":"icza","link":"https://stackoverflow.com/users/1705598/icza"},"score":9,"creation_date":1349868321},{"owner":{"reputation":1693,"user_id":1647211,"user_type":"registered","accept_rate":55,"profile_image":"https://i.stack.imgur.com/njH5r.jpg?s=128&g=1","display_name":"Alastor Moody","link":"https://stackoverflow.com/users/1647211/alastor-moody"},"score":1,"creation_date":1358181485},{"owner":{"reputation":278608,"user_id":1705598,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/aTFoe.jpg?s=128&g=1","display_name":"icza","link":"https://stackoverflow.com/users/1705598/icza"},"score":10,"creation_date":1358239150},{"owner":{"reputation":13269,"user_id":473201,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/028566a6d9c6f09b0c01eb9949e9e7c5?s=128&d=identicon&r=PG","display_name":"phreakhead","link":"https://stackoverflow.com/users/473201/phreakhead"},"score":22,"creation_date":1364931041},{"owner":{"reputation":57795,"user_id":24396,"user_type":"registered","accept_rate":74,"profile_image":"https://www.gravatar.com/avatar/160d6580f280b5e9e5a1188b32c4ef2d?s=128&d=identicon&r=PG","display_name":"Steve Kuo","link":"https://stackoverflow.com/users/24396/steve-kuo"},"score":4,"creation_date":1389400646},{"owner":{"reputation":13134,"user_id":341291,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/LmEnh.jpg?s=128&g=1","display_name":"Axel","link":"https://stackoverflow.com/users/341291/axel"},"score":12,"creation_date":1392104482},{"owner":{"reputation":278608,"user_id":1705598,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/aTFoe.jpg?s=128&g=1","display_name":"icza","link":"https://stackoverflow.com/users/1705598/icza"},"score":0,"creation_date":1392130377},{"owner":{"reputation":9843,"user_id":177293,"user_type":"registered","accept_rate":55,"profile_image":"https://www.gravatar.com/avatar/ae4384c9130c9b1707a15584f6b75333?s=128&d=identicon&r=PG","display_name":"Skylar Saveland","link":"https://stackoverflow.com/users/177293/skylar-saveland"},"score":2,"creation_date":1404407440},{"owner":{"reputation":2451,"user_id":14250,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/UNO2C.jpg?s=128&g=1","display_name":"deworde","link":"https://stackoverflow.com/users/14250/deworde"},"score":1,"creation_date":1427895748},{"owner":{"reputation":278608,"user_id":1705598,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/aTFoe.jpg?s=128&g=1","display_name":"icza","link":"https://stackoverflow.com/users/1705598/icza"},"score":4,"creation_date":1427897809},{"owner":{"user_type":"does_not_exist","display_name":"user4229245"},"score":1,"creation_date":1430580278},{"owner":{"reputation":2228,"user_id":321302,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/i0esA.jpg?s=128&g=1","display_name":"Steves","link":"https://stackoverflow.com/users/321302/steves"},"score":1,"creation_date":1466680508},{"owner":{"reputation":2228,"user_id":321302,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/i0esA.jpg?s=128&g=1","display_name":"Steves","link":"https://stackoverflow.com/users/321302/steves"},"score":0,"creation_date":1466680617},{"owner":{"reputation":217,"user_id":2568638,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/cf006a6562eb0b88b4a03cbb14f4e049?s=128&d=identicon&r=PG","display_name":"AustrianDude","link":"https://stackoverflow.com/users/2568638/austriandude"},"score":0,"creation_date":1499267357}],"owner":{"reputation":278608,"user_id":1705598,"user_type":"registered","accept_rate":92,"profile_image":"https://i.stack.imgur.com/aTFoe.jpg?s=128&g=1","display_name":"icza","link":"https://stackoverflow.com/users/1705598/icza"},"comment_count":15,"score":160,"creation_date":1348818346,"body_markdown":"Just simply implement it by hand:\r\n\r\n    public static &lt;T&gt; boolean contains(final T[] array, final T v) {\r\n        for (final T e : array)\r\n            if (e == v || v != null &amp;&amp; v.equals(e))\r\n                return true;\r\n\r\n        return false;\r\n    }\r\n\r\n**Improvement:**\r\n\r\nThe `v != null` condition is constant inside the method. It always evaluates to the same Boolean value during the method call. So if the input `array` is big, it is more efficient to evaluate this condition only once, and we can use a simplified/faster condition inside the `for` loop based on the result. The improved `contains()` method:\r\n\r\n    public static &lt;T&gt; boolean contains2(final T[] array, final T v) {\r\n        if (v == null) {\r\n            for (final T e : array)\r\n                if (e == null)\r\n                    return true;\r\n        } \r\n        else {\r\n            for (final T e : array)\r\n                if (e == v || v.equals(e))\r\n                    return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":63444,"user_id":64174,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/1151371a864ddfe69499e8c8e5a401d7?s=128&d=identicon&r=PG","display_name":"Sean Owen","link":"https://stackoverflow.com/users/64174/sean-owen"},"score":4,"creation_date":1388397230}],"owner":{"reputation":21239,"user_id":1528401,"user_type":"registered","profile_image":"https://i.stack.imgur.com/VsfsM.jpg?s=128&g=1","display_name":"Glen Best","link":"https://stackoverflow.com/users/1528401/glen-best"},"comment_count":1,"score":5,"creation_date":1369035298,"body_markdown":"1. For arrays of limited length use the following (as given by **camickr**).  This is slow for repeated checks, especially for longer arrays (linear search).  \r\n\r\n         Arrays.asList(...).contains(...)\r\n\r\n   \r\n\r\n2. For fast performance if you repeatedly check against a larger set of elements\r\n\r\n- An array is the wrong structure.  Use a **`TreeSet`** and add each element to it.  It sorts elements and has a fast `exist()` method (binary search).\r\n\r\n- **If the elements implement `Comparable` &amp; you want the `TreeSet` sorted accordingly:**\r\n\r\n       `ElementClass.compareTo()` method must be compatable with `ElementClass.equals()`: see https://stackoverflow.com/questions/15795058/triads-not-showing-up-to-fight-java-set-missing-an-item/16453349#16453349 \r\n\r\n            TreeSet myElements = new TreeSet();\r\n \r\n            // Do this for each element (implementing *Comparable*)\r\n            myElements.add(nextElement);\r\n\r\n            // *Alternatively*, if an array is forceably provided from other code:\r\n            myElements.addAll(Arrays.asList(myArray));\r\n\r\n-  **Otherwise, use your own `Comparator`:**\r\n\r\n            class MyComparator implements Comparator&lt;ElementClass&gt; {\r\n                 int compareTo(ElementClass element1; ElementClass element2) {\r\n                      // Your comparison of elements\r\n                      // Should be consistent with object equality\r\n                 }\r\n\r\n                 boolean equals(Object otherComparator) {\r\n                      // Your equality of comparators\r\n                 }\r\n            }\r\n\r\n\r\n            // construct TreeSet with the comparator\r\n            TreeSet myElements = new TreeSet(new MyComparator());\r\n \r\n            // Do this for each element (implementing *Comparable*)\r\n            myElements.add(nextElement);\r\n\r\n- **The payoff: check existence of some element:**\r\n \r\n            // Fast binary search through sorted elements (performance ~ log(size)):\r\n            boolean containsElement = myElements.exists(someElement);\r\n            \r\n\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":59801,"user_id":190201,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/142c3537ba70a0cadb1b241f9eb69540?s=128&d=identicon&r=PG","display_name":"ataylor","link":"https://stackoverflow.com/users/190201/ataylor"},"score":4,"creation_date":1372363385},{"owner":{"reputation":2466,"user_id":51966,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/03996efe5445c299c9ca8e9fdfcf8d06?s=128&d=identicon&r=PG","display_name":"mente","link":"https://stackoverflow.com/users/51966/mente"},"score":0,"creation_date":1377674825},{"owner":{"reputation":2568,"user_id":6790326,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/--0W1SyomlMg/AAAAAAAAAAI/AAAAAAAAAGY/w5Ja9a3U4zE/photo.jpg?sz=128","display_name":"Dorian Gray","link":"https://stackoverflow.com/users/6790326/dorian-gray"},"score":0,"creation_date":1576790243}],"owner":{"reputation":185,"user_id":2184966,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/c54306f98bc81eac10a9157b7606a3ef?s=128&d=identicon&r=PG","display_name":"Avenger","link":"https://stackoverflow.com/users/2184966/avenger"},"comment_count":3,"score":2,"creation_date":1369897157,"body_markdown":"Use `Array.BinarySearch(array,obj)` for finding the given object in array or not.\r\n\r\nExample:\r\n\r\n    if (Array.BinarySearch(str, i) &gt; -1)` → true --exists\r\n\r\nfalse --not exists","title":"How do I determine whether an array contains a particular value in Java?"},{"owner":{"reputation":2923,"user_id":3048442,"user_type":"registered","accept_rate":17,"profile_image":"https://i.stack.imgur.com/pwlbD.jpg?s=128&g=1","display_name":"Mr.G","link":"https://stackoverflow.com/users/3048442/mr-g"},"comment_count":0,"score":4,"creation_date":1386389998,"body_markdown":"Try this:\r\n\r\n    ArrayList&lt;Integer&gt; arrlist = new ArrayList&lt;Integer&gt;(8);\r\n    \r\n\t// use add() method to add elements in the list\r\n\tarrlist.add(20);\r\n\tarrlist.add(25);\r\n\tarrlist.add(10);\r\n\tarrlist.add(15);\r\n\r\n    boolean retval = arrlist.contains(10);\r\n\tif (retval == true) {\r\n\t\tSystem.out.println(&quot;10 is contained in the list&quot;);\r\n\t}\r\n\telse {\r\n\t\tSystem.out.println(&quot;10 is not contained in the list&quot;);\r\n\t}","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":58083,"user_id":2057294,"user_type":"registered","accept_rate":63,"profile_image":"https://i.stack.imgur.com/7qZho.jpg?s=128&g=1","display_name":"skiwi","link":"https://stackoverflow.com/users/2057294/skiwi"},"score":3,"creation_date":1396901488},{"owner":{"reputation":33627,"user_id":627727,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/uOIWL.jpg?s=128&g=1","display_name":"mkobit","link":"https://stackoverflow.com/users/627727/mkobit"},"score":0,"creation_date":1418664078}],"owner":{"reputation":294197,"user_id":829571,"user_type":"registered","accept_rate":94,"profile_image":"https://i.stack.imgur.com/zflGZ.png?s=128&g=1","display_name":"assylias","link":"https://stackoverflow.com/users/829571/assylias"},"comment_count":2,"score":36,"creation_date":1394722426,"body_markdown":"With Java 8 you can create a stream and check if any entries in the stream matches `&quot;s&quot;`:\r\n\r\n    String[] values = {&quot;AB&quot;,&quot;BC&quot;,&quot;CD&quot;,&quot;AE&quot;};\r\n    boolean sInArray = Arrays.stream(values).anyMatch(&quot;s&quot;::equals);\r\n\r\nOr as a generic method:\r\n\r\n    public static &lt;T&gt; boolean arrayContains(T[] array, T value) {\r\n        return Arrays.stream(array).anyMatch(value::equals);\r\n    }\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":6115,"user_id":894885,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/96b3d11d987edfac71b38328edf04b44?s=128&d=identicon&r=PG","display_name":"Samuel Edwin Ward","link":"https://stackoverflow.com/users/894885/samuel-edwin-ward"},"score":0,"creation_date":1450665948},{"owner":{"reputation":283,"user_id":4752024,"user_type":"registered","profile_image":"https://i.stack.imgur.com/xMLG5.gif?s=128&g=1","display_name":"TheArchon","link":"https://stackoverflow.com/users/4752024/thearchon"},"score":1,"creation_date":1462239425},{"owner":{"reputation":1175,"user_id":9278333,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4ab8d001c810261fc510a15c5e191f74?s=128&d=identicon&r=PG&f=1","display_name":"trilogy","link":"https://stackoverflow.com/users/9278333/trilogy"},"score":0,"creation_date":1564765946}],"owner":{"reputation":2679,"user_id":127859,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/XQrlZ.jpg?s=128&g=1","display_name":"Ryan","link":"https://stackoverflow.com/users/127859/ryan"},"comment_count":3,"score":6,"creation_date":1396900437,"body_markdown":"Using a simple loop is the most efficient way of doing this. \r\n\r\n    boolean useLoop(String[] arr, String targetValue) {\r\n    \tfor(String s: arr){\r\n    \t\tif(s.equals(targetValue))\r\n    \t\t\treturn true;\r\n    \t}\r\n    \treturn false;\r\n    }\r\n\r\nCourtesy to [Programcreek][1]\r\n\r\n\r\n  [1]: http://www.programcreek.com/2014/04/check-if-array-contains-a-value-java/","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":1464,"user_id":2255185,"user_type":"registered","accept_rate":47,"profile_image":"https://i.stack.imgur.com/6zKke.jpg?s=128&g=1","display_name":"Will Sherwood","link":"https://stackoverflow.com/users/2255185/will-sherwood"},"score":5,"creation_date":1427420019},{"owner":{"reputation":1073,"user_id":1547018,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/09d5ba1ccb1d483f325be93f520cd755?s=128&d=identicon&r=PG","display_name":"mbelow","link":"https://stackoverflow.com/users/1547018/mbelow"},"score":6,"creation_date":1464189770},{"owner":{"reputation":2846,"user_id":8868289,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/984bb123a4de58126dc1166e43927c5a?s=128&d=identicon&r=PG","display_name":"Yoory N.","link":"https://stackoverflow.com/users/8868289/yoory-n"},"score":2,"creation_date":1512047336},{"owner":{"reputation":198,"user_id":2415632,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/p4aWF.png?s=128&g=1","display_name":"Willians Martins","link":"https://stackoverflow.com/users/2415632/willians-martins"},"score":0,"creation_date":1558472225}],"owner":{"reputation":10276,"user_id":2057902,"user_type":"registered","accept_rate":80,"profile_image":"https://i.stack.imgur.com/6q1nz.jpg?s=128&g=1","display_name":"Sireesh Yarlagadda","link":"https://stackoverflow.com/users/2057902/sireesh-yarlagadda"},"comment_count":4,"score":79,"creation_date":1399490082,"body_markdown":"[Four Different Ways to Check If an Array Contains a Value][1]\r\n\r\n1. Using `List`:\r\n    \r\n        public static boolean useList(String[] arr, String targetValue) {\r\n        \treturn Arrays.asList(arr).contains(targetValue);\r\n        }\r\n\r\n2. Using `Set`:\r\n    \r\n        public static boolean useSet(String[] arr, String targetValue) {\r\n        \tSet&lt;String&gt; set = new HashSet&lt;String&gt;(Arrays.asList(arr));\r\n        \treturn set.contains(targetValue);\r\n        }\r\n    \r\n3. Using a simple loop:\r\n    \r\n        public static boolean useLoop(String[] arr, String targetValue) {\r\n        \tfor (String s: arr) {\r\n        \t\tif (s.equals(targetValue))\r\n        \t\t\treturn true;\r\n        \t}\r\n        \treturn false;\r\n        }\r\n    \r\n4. Using `Arrays.binarySearch()`:\r\n    \r\n    The code below is wrong, it is listed here for completeness. **`binarySearch()` can ONLY be used on sorted arrays.** You will find the result is weird below. This is the best option when array is sorted.\r\n    \r\n        public static boolean binarySearch(String[] arr, String targetValue) {\t\r\n            return Arrays.binarySearch(arr, targetValue) &gt;= 0;\r\n        }\r\n\r\n### Quick Example:\r\n\r\n    String testValue=&quot;test&quot;;\r\n    String newValueNotInList=&quot;newValue&quot;;\r\n    String[] valueArray = { &quot;this&quot;, &quot;is&quot;, &quot;java&quot; , &quot;test&quot; };\r\n    Arrays.asList(valueArray).contains(testValue); // returns true\r\n    Arrays.asList(valueArray).contains(newValueNotInList); // returns false\r\n\r\n\r\n  [1]: https://www.programcreek.com/2014/04/check-if-array-contains-a-value-java/","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":50351,"user_id":1711796,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/6pRI7.png?s=128&g=1","display_name":"Bernhard Barker","link":"https://stackoverflow.com/users/1711796/bernhard-barker"},"score":1,"creation_date":1515069744}],"owner":{"reputation":72,"user_id":3676027,"user_type":"registered","profile_image":"https://graph.facebook.com/100002296147119/picture?type=large","display_name":"SubbaRao Boddu","link":"https://stackoverflow.com/users/3676027/subbarao-boddu"},"comment_count":1,"score":3,"creation_date":1401963566,"body_markdown":"Check this\r\n\r\n\tString[] VALUES = new String[] {&quot;AB&quot;,&quot;BC&quot;,&quot;CD&quot;,&quot;AE&quot;};\r\n\tString s;\r\n\r\n\tfor(int i=0; i&lt; VALUES.length ; i++)\r\n\t{\r\n\t\tif ( VALUES[i].equals(s) )\r\n\t\t{ \r\n\t\t\t// do your stuff\r\n\t\t} \r\n\t\telse{    \r\n\t\t\t//do your stuff\r\n\t\t}\r\n\t}\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"owner":{"reputation":30325,"user_id":3496570,"user_type":"registered","accept_rate":39,"profile_image":"https://i.stack.imgur.com/fhSKV.jpg?s=128&g=1","display_name":"AndroidGeek","link":"https://stackoverflow.com/users/3496570/androidgeek"},"comment_count":0,"score":8,"creation_date":1403681052,"body_markdown":"\r\nDevelopers often do:\r\n\r\n    Set&lt;String&gt; set = new HashSet&lt;String&gt;(Arrays.asList(arr));\r\n    return set.contains(targetValue);\r\n\r\nThe above code works, but there is no need to convert a list to set first. Converting a list to a set requires extra time. It can as simple as:\r\n\r\n    Arrays.asList(arr).contains(targetValue);\r\n\r\nor\r\n\r\n \r\n\r\n       for(String s: arr){\r\n        \tif(s.equals(targetValue))\r\n        \t\treturn true;\r\n        }\r\n    \r\n    return false;\r\n\r\n\r\nThe first one is more readable than the second one.","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":2832,"user_id":444028,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/9dc65aeb146c0a632eefe07b54c83403?s=128&d=identicon&r=PG","display_name":"Abhishek Oza","link":"https://stackoverflow.com/users/444028/abhishek-oza"},"score":0,"creation_date":1546683764}],"owner":{"reputation":2832,"user_id":444028,"user_type":"registered","accept_rate":90,"profile_image":"https://www.gravatar.com/avatar/9dc65aeb146c0a632eefe07b54c83403?s=128&d=identicon&r=PG","display_name":"Abhishek Oza","link":"https://stackoverflow.com/users/444028/abhishek-oza"},"comment_count":1,"score":5,"creation_date":1406121935,"body_markdown":"Use the following (the `contains()` method is `ArrayUtils.in()` in this code):\r\n\r\n*ObjectUtils.java*\r\n\r\n    public class ObjectUtils{\r\n\r\n        /**\r\n         * A null safe method to detect if two objects are equal.\r\n         * @param object1\r\n         * @param object2\r\n         * @return true if either both objects are null, or equal, else returns false.\r\n         */\r\n        public static boolean equals(Object object1, Object object2){\r\n            return object1==null ? object2==null : object1.equals(object2);\r\n        }\r\n\r\n    }\r\n\r\n*ArrayUtils.java*\r\n\r\n    public class ArrayUtils{\r\n\r\n        /**\r\n         * Find the index of of an object is in given array, starting from given inclusive index.\r\n         * @param ts  Array to be searched in.\r\n         * @param t  Object to be searched.\r\n         * @param start  The index from where the search must start.\r\n         * @return Index of the given object in the array if it is there, else -1.\r\n         */\r\n        public static &lt;T&gt; int indexOf(final T[] ts, final T t, int start){\r\n            for(int i = start; i &lt; ts.length; ++i)\r\n                if(ObjectUtils.equals(ts[i], t))\r\n                    return i;\r\n            return -1;\r\n        }\r\n\r\n        /**\r\n         * Find the index of of an object is in given array, starting from 0;\r\n         * @param ts  Array to be searched in.\r\n         * @param t  Object to be searched.\r\n         * @return  indexOf(ts, t, 0)\r\n         */\r\n        public static &lt;T&gt; int indexOf(final T[] ts, final T t){\r\n            return indexOf(ts, t, 0);\r\n        }\r\n\r\n        /**\r\n         * Detect if the given object is in the given array.\r\n         * @param ts  Array to be searched in.\r\n         * @param t  Object to be searched.\r\n         * @return  If indexOf(ts, t) is greater than -1.\r\n         */\r\n        public static &lt;T&gt; boolean in(final T[] ts, final T t){\r\n            return indexOf(ts, t) &gt; -1 ;\r\n        }\r\n\r\n    }\r\n\r\nAs you can see in the code above, that there are other utility methods `ObjectUtils.equals()` and `ArrayUtils.indexOf()`, that were used at other places as well.\r\n\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"owner":{"reputation":115,"user_id":4359708,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-Q9krKtv1iQI/AAAAAAAAAAI/AAAAAAAAAUw/cHDVdG2VZPE/photo.jpg?sz=128","display_name":"Christian Gim&#233;nez","link":"https://stackoverflow.com/users/4359708/christian-gim%c3%a9nez"},"comment_count":0,"score":10,"creation_date":1418593764,"body_markdown":"One possible solution:\r\n\r\n    import java.util.Arrays;\r\n    import java.util.List;\r\n    \r\n    public class ArrayContainsElement {\r\n      public static final List&lt;String&gt; VALUES = Arrays.asList(&quot;AB&quot;, &quot;BC&quot;, &quot;CD&quot;, &quot;AE&quot;);\r\n    \r\n      public static void main(String args[]) {\r\n    \r\n          if (VALUES.contains(&quot;AB&quot;)) {\r\n              System.out.println(&quot;Contains&quot;);\r\n          } else {\r\n              System.out.println(&quot;Not contains&quot;);\r\n          }\r\n      }\r\n    }","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":543,"user_id":1967127,"user_type":"registered","profile_image":"https://i.stack.imgur.com/LNqaX.png?s=128&g=1","display_name":"Johannes Stadler","link":"https://stackoverflow.com/users/1967127/johannes-stadler"},"score":7,"creation_date":1433925676},{"owner":{"reputation":1178,"user_id":3450840,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/okH8Y.jpg?s=128&g=1","display_name":"Florian F","link":"https://stackoverflow.com/users/3450840/florian-f"},"score":2,"creation_date":1540564614}],"owner":{"reputation":492,"user_id":2501328,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/66dd712d11de7f7bcdda4b50190540ab?s=128&d=identicon&r=PG","display_name":"Shineed Basheer","link":"https://stackoverflow.com/users/2501328/shineed-basheer"},"comment_count":2,"score":7,"creation_date":1430203226,"body_markdown":"In **Java 8** use Streams.\r\n\r\n    List&lt;String&gt; myList =\r\n    Arrays.asList(&quot;a1&quot;, &quot;a2&quot;, &quot;b1&quot;, &quot;c2&quot;, &quot;c1&quot;);\r\n\r\n    myList\r\n    .stream()\r\n    .filter(s -&gt; s.startsWith(&quot;c&quot;))\r\n    .map(String::toUpperCase)\r\n    .sorted()\r\n    .forEach(System.out::println);\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":4327,"user_id":7098259,"user_type":"registered","profile_image":"https://i.stack.imgur.com/b6nWr.jpg?s=128&g=1","display_name":"Patrick Parker","link":"https://stackoverflow.com/users/7098259/patrick-parker"},"score":0,"creation_date":1536389064}],"owner":{"reputation":283,"user_id":4752024,"user_type":"registered","profile_image":"https://i.stack.imgur.com/xMLG5.gif?s=128&g=1","display_name":"TheArchon","link":"https://stackoverflow.com/users/4752024/thearchon"},"comment_count":1,"score":3,"creation_date":1430362627,"body_markdown":"Arrays.asList() -&gt; then calling the contains() method will always work, but a search algorithm is much better since you don&#39;t need to create a lightweight list wrapper around the array, which is what Arrays.asList() does.\r\n\r\n    public boolean findString(String[] strings, String desired){\r\n       for (String str : strings){\r\n           if (desired.equals(str)) {\r\n               return true;\r\n           }\r\n       }\r\n       return false; //if we get here… there is no desired String, return false.\r\n    }","title":"How do I determine whether an array contains a particular value in Java?"},{"owner":{"reputation":381,"user_id":6836652,"user_type":"registered","profile_image":"https://i.stack.imgur.com/JnbIG.jpg?s=128&g=1","display_name":"mandy1339","link":"https://stackoverflow.com/users/6836652/mandy1339"},"comment_count":0,"score":1,"creation_date":1526585860,"body_markdown":"Create a boolean initially set to false. Run a loop to check every value in the array and compare to the value you are checking against. If you ever get a match, set boolean to true and stop the looping. Then assert that the boolean is true.","title":"How do I determine whether an array contains a particular value in Java?"},{"owner":{"reputation":78,"user_id":5405851,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-aKsBKim8Dy4/AAAAAAAAAAI/AAAAAAAAEe4/Z8QjvDReiq0/photo.jpg?sz=128","display_name":"Akhil babu K","link":"https://stackoverflow.com/users/5405851/akhil-babu-k"},"comment_count":0,"score":3,"creation_date":1537550182,"body_markdown":"If you don&#39;t want it to be case sensitive \r\n\r\n    Arrays.stream(VALUES).anyMatch(s::equalsIgnoreCase);","title":"How do I determine whether an array contains a particular value in Java?"},{"comments":[{"owner":{"reputation":491,"user_id":2738148,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/22ee18a28885cf8d73eaef501e0a2e95?s=128&d=identicon&r=PG&f=1","display_name":"Atuos","link":"https://stackoverflow.com/users/2738148/atuos"},"score":1,"creation_date":1566489884}],"owner":{"reputation":38,"user_id":11754064,"user_type":"registered","profile_image":"https://graph.facebook.com/2072322392877489/picture?type=large","display_name":"Syed Salman Hassan","link":"https://stackoverflow.com/users/11754064/syed-salman-hassan"},"comment_count":1,"score":-2,"creation_date":1564925368,"body_markdown":"You can check it by two methods \r\n\r\nA)By converting the array into string and then check the required string by .contains method \r\n\r\n     String a=Arrays.toString(VALUES);\r\n        System.out.println(a.contains(&quot;AB&quot;));\r\n        System.out.println(a.contains(&quot;BC&quot;));\r\n        System.out.println(a.contains(&quot;CD&quot;));\r\n        System.out.println(a.contains(&quot;AE&quot;));\r\n\r\nB)this is a more efficent method\r\n\r\n     Scanner s=new Scanner(System.in);\r\n       \r\n      \r\n       String u=s.next();\r\n       boolean d=true;\r\n        for(int i=0;i&lt;VAL.length;i++)\r\n        {\r\n            if(VAL[i].equals(u)==d)\r\n                System.out.println(VAL[i] +&quot; &quot;+u+VAL[i].equals(u));  \r\n           \r\n        }\r\n\r\n \r\n\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"owner":{"reputation":485,"user_id":1076703,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d4ada444fee0f9d9bfdd851f09e8b1d0?s=128&d=identicon&r=PG","display_name":"Vipul Gulhane","link":"https://stackoverflow.com/users/1076703/vipul-gulhane"},"comment_count":0,"score":1,"creation_date":1570029875,"body_markdown":"Try using Java 8 predicate test method\r\n\r\nHere is a full example of it.\r\n\r\n\r\n\r\n    import java.util.Arrays;\r\n    import java.util.List;\r\n    import java.util.function.Predicate;\r\n    public class Test {\r\n     public static final List&lt;String&gt; VALUES = Arrays.asList(&quot;AA&quot;, &quot;AB&quot;, &quot;BC&quot;, &quot;CD&quot;, &quot;AE&quot;);\r\n   \r\n     public static void main(String args[]) {\r\n      Predicate&lt;String&gt; containsLetterA = VALUES -&gt; VALUES.contains(&quot;AB&quot;);\r\n      for (String i : VALUES) {\r\n   \r\n       System.out.println(containsLetterA.test(i));\r\n      } \r\n     }\r\n    }\r\n\r\n\r\n\r\nhttp://mytechnologythought.blogspot.com/2019/10/java-8-predicate-test-method-example.html\r\n\r\nhttps://github.com/VipulGulhane1/java8/blob/master/Test.java\r\n\r\n","title":"How do I determine whether an array contains a particular value in Java?"},{"owner":{"reputation":2117,"user_id":2856202,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/AHuOz.png?s=128&g=1","display_name":"eigenfield","link":"https://stackoverflow.com/users/2856202/eigenfield"},"comment_count":0,"score":1,"creation_date":1582705154,"body_markdown":"As I&#39;m dealing with low level Java using primitive types byte and byte[], the best so far I got is from **bytes-java** https://github.com/patrickfav/bytes-java seems a fine piece of work","title":"How do I determine whether an array contains a particular value in Java?"},{"owner":{"reputation":629,"user_id":11199879,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a0a9c56c2190957960c9463c03486df8?s=128&d=identicon&r=PG&f=1","display_name":"Kaplan","link":"https://stackoverflow.com/users/11199879/kaplan"},"comment_count":0,"score":0,"creation_date":1615013110,"body_markdown":"*the shortest solution if my array contains duplicates*&lt;br /&gt;\r\nsince Java 9\r\n\r\n    List.of(VALUES).contains(s);\r\n","title":"How do I determine whether an array contains a particular value in Java?"}],"owner":{"reputation":30052,"user_id":16534,"user_type":"registered","accept_rate":95,"profile_image":"https://i.stack.imgur.com/JnmCP.jpg?s=128&g=1","display_name":"Mike Sickler","link":"https://stackoverflow.com/users/16534/mike-sickler"},"comment_count":7,"is_answered":true,"answer_count":29,"score":2390,"creation_date":1247616201,"question_id":1128723,"body_markdown":"I have a `String[]` with values like so:\r\n\r\n    public static final String[] VALUES = new String[] {&quot;AB&quot;,&quot;BC&quot;,&quot;CD&quot;,&quot;AE&quot;};\r\n\r\nGiven `String s`, is there a good way of testing whether `VALUES` contains `s`?\r\n","link":"https://stackoverflow.com/questions/1128723/how-do-i-determine-whether-an-array-contains-a-particular-value-in-java","title":"How do I determine whether an array contains a particular value in Java?"},{"tags":["java","constructor"],"comments":[{"owner":{"reputation":3970,"user_id":219658,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/3cf4a05b544cce274d053d70fd6dc00d?s=128&d=identicon&r=PG","display_name":"David Medinets","link":"https://stackoverflow.com/users/219658/david-medinets"},"score":2,"creation_date":1530906557},{"owner":{"reputation":1346,"user_id":3599399,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8ad3f8bf1140ae9fbf1113e8bd46aecc?s=128&d=identicon&r=PG&f=1","display_name":"Richard","link":"https://stackoverflow.com/users/3599399/richard"},"score":1,"creation_date":1548073665},{"owner":{"reputation":93,"user_id":6603613,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-S-6IGaodr4w/AAAAAAAAAAI/AAAAAAAAAEg/Jl1HYK6Evqo/photo.jpg?sz=128","display_name":"Augusto","link":"https://stackoverflow.com/users/6603613/augusto"},"score":0,"creation_date":1563995776}],"answers":[{"comments":[{"owner":{"reputation":10952,"user_id":803801,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/bf4b894dd2fe6b48c4e0265ce6956a31?s=128&d=identicon&r=PG","display_name":"gsingh2011","link":"https://stackoverflow.com/users/803801/gsingh2011"},"score":35,"creation_date":1351879351},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":33,"creation_date":1351879567},{"owner":{"reputation":13809,"user_id":231397,"user_type":"registered","accept_rate":24,"profile_image":"https://www.gravatar.com/avatar/69f8f115389438fc8f636ae73e7991ff?s=128&d=identicon&r=PG","display_name":"Christian Fries","link":"https://stackoverflow.com/users/231397/christian-fries"},"score":46,"creation_date":1363034067},{"owner":{"reputation":1369,"user_id":1482508,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/fd0c6421c87eef2c454212d846833f11?s=128&d=identicon&r=PG","display_name":"Ali","link":"https://stackoverflow.com/users/1482508/ali"},"score":10,"creation_date":1368429785},{"owner":{"reputation":10507,"user_id":1215724,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/akx0v.jpg?s=128&g=1","display_name":"Trikaldarshiii","link":"https://stackoverflow.com/users/1215724/trikaldarshiii"},"score":0,"creation_date":1374010725},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":0,"creation_date":1374011215},{"owner":{"reputation":10507,"user_id":1215724,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/akx0v.jpg?s=128&g=1","display_name":"Trikaldarshiii","link":"https://stackoverflow.com/users/1215724/trikaldarshiii"},"score":0,"creation_date":1374012821},{"owner":{"reputation":629,"user_id":4837155,"user_type":"registered","accept_rate":46,"profile_image":"https://www.gravatar.com/avatar/4b9b8192c04ec0d2e2e40d37dfaf4583?s=128&d=identicon&r=PG&f=1","display_name":"Harshit Gupta","link":"https://stackoverflow.com/users/4837155/harshit-gupta"},"score":0,"creation_date":1435403923},{"owner":{"reputation":84,"user_id":3319870,"user_type":"registered","profile_image":"https://i.stack.imgur.com/zIMzH.jpg?s=128&g=1","display_name":"Francis","link":"https://stackoverflow.com/users/3319870/francis"},"score":0,"creation_date":1435507300},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":0,"creation_date":1435509125},{"owner":{"reputation":84,"user_id":3319870,"user_type":"registered","profile_image":"https://i.stack.imgur.com/zIMzH.jpg?s=128&g=1","display_name":"Francis","link":"https://stackoverflow.com/users/3319870/francis"},"score":0,"creation_date":1435576000},{"owner":{"reputation":3731,"user_id":5386374,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/fGuXb.png?s=128&g=1","display_name":"Justin Time - Reinstate Monica","link":"https://stackoverflow.com/users/5386374/justin-time-reinstate-monica"},"score":0,"creation_date":1455043846},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":0,"creation_date":1455043959},{"owner":{"reputation":3731,"user_id":5386374,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/fGuXb.png?s=128&g=1","display_name":"Justin Time - Reinstate Monica","link":"https://stackoverflow.com/users/5386374/justin-time-reinstate-monica"},"score":0,"creation_date":1455044361},{"owner":{"reputation":3731,"user_id":5386374,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/fGuXb.png?s=128&g=1","display_name":"Justin Time - Reinstate Monica","link":"https://stackoverflow.com/users/5386374/justin-time-reinstate-monica"},"score":0,"creation_date":1455044515},{"owner":{"reputation":3731,"user_id":5386374,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/fGuXb.png?s=128&g=1","display_name":"Justin Time - Reinstate Monica","link":"https://stackoverflow.com/users/5386374/justin-time-reinstate-monica"},"score":0,"creation_date":1455045304},{"owner":{"reputation":374,"user_id":2972374,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/9e7c0b7d91d5d50ba5733e5bd0bba6f9?s=128&d=identicon&r=PG&f=1","display_name":"Andrej","link":"https://stackoverflow.com/users/2972374/andrej"},"score":1,"creation_date":1569524844},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":2,"creation_date":1569535805},{"owner":{"reputation":133,"user_id":2563309,"user_type":"registered","profile_image":"https://i.stack.imgur.com/zfwuy.jpg?s=128&g=1","display_name":"mrhotroad","link":"https://stackoverflow.com/users/2563309/mrhotroad"},"score":0,"creation_date":1590071001},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":0,"creation_date":1590071284}],"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"comment_count":20,"score":3117,"creation_date":1226520734,"body_markdown":"Yes, it is possible:\r\n\r\n    public class Foo {\r\n        private int x;\r\n    \r\n        public Foo() {\r\n            this(1);\r\n        }\r\n    \r\n        public Foo(int x) {\r\n            this.x = x;\r\n        }\r\n    }\r\n\r\nTo chain to a particular superclass constructor instead of one in the same class, use `super` instead of `this`. Note that **you can only chain to one constructor**, and **it has to be the first statement in your constructor body**.\r\n\r\nSee also [this related question][1], which is about C# but where the same principles apply.\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/284896","title":"How do I call one constructor from another in Java?"},{"comments":[{"owner":{"reputation":14364,"user_id":873282,"user_type":"registered","accept_rate":55,"profile_image":"https://www.gravatar.com/avatar/1e6ae94f84a34641ccc5abc86a664694?s=128&d=identicon&r=PG","display_name":"koppor","link":"https://stackoverflow.com/users/873282/koppor"},"score":28,"creation_date":1352837760},{"owner":{"reputation":7656,"user_id":744133,"user_type":"registered","accept_rate":57,"profile_image":"https://i.stack.imgur.com/z21Fe.jpg?s=128&g=1","display_name":"YoYo","link":"https://stackoverflow.com/users/744133/yoyo"},"score":5,"creation_date":1454136385},{"owner":{"reputation":113,"user_id":8346787,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5e103a0d97acd232feb3785941d21fcf?s=128&d=identicon&r=PG&f=1","display_name":"LordHieros","link":"https://stackoverflow.com/users/8346787/lordhieros"},"score":2,"creation_date":1523885483},{"owner":{"reputation":80350,"user_id":1281433,"user_type":"registered","accept_rate":43,"profile_image":"https://i.stack.imgur.com/O8XCE.png?s=128&g=1","display_name":"Joshua Taylor","link":"https://stackoverflow.com/users/1281433/joshua-taylor"},"score":3,"creation_date":1526562775},{"owner":{"reputation":80350,"user_id":1281433,"user_type":"registered","accept_rate":43,"profile_image":"https://i.stack.imgur.com/O8XCE.png?s=128&g=1","display_name":"Joshua Taylor","link":"https://stackoverflow.com/users/1281433/joshua-taylor"},"score":0,"creation_date":1526562888},{"owner":{"reputation":14849,"user_id":355456,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/7da0a69f5ee1cf4fc8512f5ff14f4111?s=128&d=identicon&r=PG&f=1","display_name":"Hong","link":"https://stackoverflow.com/users/355456/hong"},"score":0,"creation_date":1543953822}],"owner":{"reputation":15648,"user_id":2204759,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/DqQca.jpg?s=128&g=1","display_name":"Josh","link":"https://stackoverflow.com/users/2204759/josh"},"comment_count":6,"score":266,"creation_date":1226520802,"body_markdown":"Using `this(args)`. The preferred pattern is to work from the smallest constructor to the largest.\r\n\r\n    public class Cons {\r\n\r\n        public Cons() {\r\n            // A no arguments constructor that sends default values to the largest\r\n            this(madeUpArg1Value,madeUpArg2Value,madeUpArg3Value);\r\n        }\r\n\r\n        public Cons(int arg1, int arg2) {\r\n           // An example of a partial constructor that uses the passed in arguments\r\n            // and sends a hidden default value to the largest\r\n            this(arg1,arg2, madeUpArg3Value);\r\n        }\r\n\r\n        // Largest constructor that does the work\r\n        public Cons(int arg1, int arg2, int arg3) {\r\n            this.arg1 = arg1;\r\n            this.arg2 = arg2;\r\n            this.arg3 = arg3;\r\n        }\r\n    }\r\n\r\nYou can also use a more recently advocated approach of valueOf or just &quot;of&quot;:\r\n\r\n    public class Cons {\r\n        public static Cons newCons(int arg1,...) {\r\n            // This function is commonly called valueOf, like Integer.valueOf(..)\r\n            // More recently called &quot;of&quot;, like EnumSet.of(..)\r\n            Cons c = new Cons(...);\r\n            c.setArg1(....);\r\n            return c;\r\n        }\r\n    } \r\n\r\nTo call a super class, use `super(someValue)`. The call to super must be the first call in the constructor or you will get a compiler error.\r\n","title":"How do I call one constructor from another in Java?"},{"comments":[{"owner":{"reputation":13029,"user_id":2051454,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/sZBFW.jpg?s=128&g=1","display_name":"Software Engineer","link":"https://stackoverflow.com/users/2051454/software-engineer"},"score":16,"creation_date":1465426808},{"owner":{"reputation":13809,"user_id":231397,"user_type":"registered","accept_rate":24,"profile_image":"https://www.gravatar.com/avatar/69f8f115389438fc8f636ae73e7991ff?s=128&d=identicon&r=PG","display_name":"Christian Fries","link":"https://stackoverflow.com/users/231397/christian-fries"},"score":16,"creation_date":1466098603},{"owner":{"reputation":13809,"user_id":231397,"user_type":"registered","accept_rate":24,"profile_image":"https://www.gravatar.com/avatar/69f8f115389438fc8f636ae73e7991ff?s=128&d=identicon&r=PG","display_name":"Christian Fries","link":"https://stackoverflow.com/users/231397/christian-fries"},"score":2,"creation_date":1528869993},{"owner":{"reputation":13809,"user_id":231397,"user_type":"registered","accept_rate":24,"profile_image":"https://www.gravatar.com/avatar/69f8f115389438fc8f636ae73e7991ff?s=128&d=identicon&r=PG","display_name":"Christian Fries","link":"https://stackoverflow.com/users/231397/christian-fries"},"score":1,"creation_date":1528877608},{"owner":{"reputation":3126,"user_id":9772691,"user_type":"registered","profile_image":"https://i.stack.imgur.com/NRRPE.jpg?s=128&g=1","display_name":"John McClane","link":"https://stackoverflow.com/users/9772691/john-mcclane"},"score":0,"creation_date":1532828050}],"owner":{"reputation":13809,"user_id":231397,"user_type":"registered","accept_rate":24,"profile_image":"https://www.gravatar.com/avatar/69f8f115389438fc8f636ae73e7991ff?s=128&d=identicon&r=PG","display_name":"Christian Fries","link":"https://stackoverflow.com/users/231397/christian-fries"},"comment_count":5,"score":224,"creation_date":1363033992,"body_markdown":"[*Note: I just want to add one aspect, which I did not see in the other answers: how to overcome limitations of the requirement that this() has to be on the first line).*]\r\n\r\nIn Java another constructor of the same class can be called from a constructor via `this()`. Note however that `this` has to be on the first line.\r\n\r\n    public class MyClass {\r\n\r\n      public MyClass(double argument1, double argument2) {\r\n        this(argument1, argument2, 0.0);\r\n      }\r\n\r\n      public MyClass(double argument1, double argument2, double argument3) {\r\n        this.argument1 = argument1;\r\n        this.argument2 = argument2;\r\n        this.argument3 = argument3;\r\n      }\r\n    }\r\n\r\nThat `this` has to appear on the first line looks like a big limitation, but you can construct the arguments of other constructors via static methods. For example:\r\n\r\n    public class MyClass {\r\n\r\n      public MyClass(double argument1, double argument2) {\r\n        this(argument1, argument2, getDefaultArg3(argument1, argument2));\r\n      }\r\n\r\n      public MyClass(double argument1, double argument2, double argument3) {\r\n        this.argument1 = argument1;\r\n        this.argument2 = argument2;\r\n        this.argument3 = argument3;\r\n      }\r\n\r\n      private static double getDefaultArg3(double argument1, double argument2) {\r\n        double argument3 = 0;\r\n\r\n        // Calculate argument3 here if you like.\r\n\r\n        return argument3;\r\n\r\n      }\r\n\r\n    }","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":1782,"user_id":2295938,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f0c4d019a26e305fe1e305f5f8bf5253?s=128&d=identicon&r=PG&f=1","display_name":"Kaamel","link":"https://stackoverflow.com/users/2295938/kaamel"},"comment_count":0,"score":41,"creation_date":1366758744,"body_markdown":"When I need to call another constructor from inside the code (not on the first line), I usually use a helper method like this:\r\n\r\n    class MyClass {\r\n       int field;\r\n\r\n \r\n       MyClass() {\r\n          init(0);\r\n       } \r\n       MyClass(int value) {\r\n          if (value&lt;0) {\r\n              init(0);\r\n          } \r\n          else { \r\n              init(value);\r\n          }\r\n       }\r\n       void init(int x) {\r\n          field = x;\r\n       }\r\n    }\r\n\r\n \r\nBut most often I try to do it the other way around by calling the more complex constructors from the simpler ones on the first line, to the extent possible. For the above example\r\n\r\n    class MyClass {\r\n       int field;\r\n     \r\n       MyClass(int value) {\r\n          if (value&lt;0)\r\n             field = 0;\r\n          else\r\n             field = value;\r\n       }\r\n       MyClass() {\r\n          this(0);\r\n       }\r\n    }\r\n\r\n\r\n\r\n\r\n","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":1894,"user_id":147808,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/6b5c1e7d6b890de9288c7aac3d884329?s=128&d=identicon&r=PG","display_name":"olovb","link":"https://stackoverflow.com/users/147808/olovb"},"comment_count":0,"score":17,"creation_date":1431039123,"body_markdown":"As everybody already have said, you use `this(…)`, which is called an *explicit constructor invocation*.\r\n\r\n**However, keep in mind that** within such an explicit constructor invocation statement **you may not refer to**\r\n\r\n- any *instance variables* or \r\n- any *instance methods* or \r\n- any *inner classes* declared in this class or any superclass, or \r\n- `this` or \r\n- `super`.\r\n\r\nAs stated in JLS (&#167;8.8.7.1).","title":"How do I call one constructor from another in Java?"},{"comments":[{"owner":{"reputation":1334,"user_id":2156785,"user_type":"registered","profile_image":"https://i.stack.imgur.com/oQr9B.jpg?s=128&g=1","display_name":"ANjaNA","link":"https://stackoverflow.com/users/2156785/anjana"},"score":1,"creation_date":1437188284},{"owner":{"reputation":5647,"user_id":117421,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/d41dcb11ae454085a38f69b10e6ae631?s=128&d=identicon&r=PG","display_name":"Wes","link":"https://stackoverflow.com/users/117421/wes"},"score":1,"creation_date":1540297855}],"owner":{"reputation":952,"user_id":4395148,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/B1SrS.jpg?s=128&g=1","display_name":"amila isura","link":"https://stackoverflow.com/users/4395148/amila-isura"},"comment_count":2,"score":29,"creation_date":1432652957,"body_markdown":"Within a constructor, you can use the `this` keyword to invoke another constructor in the same class. Doing so is called an **explicit constructor invocation**. \r\n\r\nHere&#39;s another Rectangle class, with a different implementation from the one in the Objects section.\r\n\r\n    public class Rectangle {\r\n        private int x, y;\r\n        private int width, height;\r\n            \r\n        public Rectangle() {\r\n            this(1, 1);\r\n        }\r\n        public Rectangle(int width, int height) {\r\n            this( 0,0,width, height);\r\n        }\r\n        public Rectangle(int x, int y, int width, int height) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n        \r\n    }\r\nThis class contains a set of constructors. Each constructor initializes some or all of the rectangle&#39;s member variables.","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":311,"user_id":5182313,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/4b73a077b784c8967e497fccfb928933?s=128&d=identicon&r=PG&f=1","display_name":"ABHISHEK RANA","link":"https://stackoverflow.com/users/5182313/abhishek-rana"},"comment_count":0,"score":8,"creation_date":1448650884,"body_markdown":"You can a constructor from another constructor of same class by using &quot;this&quot; keyword.\r\nExample -\r\n\r\n    class This1\r\n    {\r\n    \tThis1()\r\n    \t{\r\n    \t\tthis(&quot;Hello&quot;);\r\n    \t\tSystem.out.println(&quot;Default constructor..&quot;);\r\n    \t}\r\n    \tThis1(int a)\r\n    \t{\r\n    \t\tthis();\r\n    \t\tSystem.out.println(&quot;int as arg constructor..&quot;);\t\r\n    \t}\r\n    \tThis1(String s)\r\n    \t{\r\n    \t\tSystem.out.println(&quot;string as arg constructor..&quot;);\t\r\n    \t}\r\n    \t\r\n    \tpublic static void main(String args[])\r\n    \t{\r\n    \t\tnew This1(100);\r\n    \t}\r\n    }\r\n\r\nOutput -\r\nstring as arg constructor..\r\nDefault constructor..\r\nint as arg constructor..","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":181,"user_id":5089473,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/EVfDj.jpg?s=128&g=1","display_name":"Akash Manngroliya","link":"https://stackoverflow.com/users/5089473/akash-manngroliya"},"comment_count":0,"score":7,"creation_date":1473745706,"body_markdown":"Yes it is possible to call one constructor from another with use of `this()`\r\n\r\n    class Example{\r\n       private int a = 1;\r\n       Example(){\r\n            this(5); //here another constructor called based on constructor argument\r\n            System.out.println(&quot;number a is &quot;+a);   \r\n       }\r\n       Example(int b){\r\n            System.out.println(&quot;number b is &quot;+b);\r\n       }\r\n\r\n ","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":1956,"user_id":2106934,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/7d29cd79756208cfd1a7c814c477ddd6?s=128&d=identicon&r=PG","display_name":"Utsav","link":"https://stackoverflow.com/users/2106934/utsav"},"comment_count":0,"score":14,"creation_date":1479312857,"body_markdown":"Yes, any number of constructors can be present in a class and they can be called by another constructor using `this()` [Please do not confuse `this()` constructor call with `this` keyword]. `this()` or `this(args)` should be the first line in the constructor.\r\n\r\nExample:\r\n\r\n    Class Test {\r\n        Test() {\r\n            this(10); // calls the constructor with integer args, Test(int a)\r\n        }\r\n        Test(int a) {\r\n            this(10.5); // call the constructor with double arg, Test(double a)\r\n        }\r\n        Test(double a) {\r\n            System.out.println(&quot;I am a double arg constructor&quot;);\r\n        }\r\n    }\r\n\r\n \r\nThis is known as constructor overloading.  \r\nPlease note that for constructor, only overloading concept is applicable and not inheritance or overriding.","title":"How do I call one constructor from another in Java?"},{"comments":[{"owner":{"reputation":550,"user_id":4543733,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4606926b80aa5489adb8bda5cc7ae45f?s=128&d=identicon&r=PG&f=1","display_name":"S R Chaitanya","link":"https://stackoverflow.com/users/4543733/s-r-chaitanya"},"score":4,"creation_date":1483795912}],"owner":{"reputation":1288,"user_id":5340833,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FbzRg.jpg?s=128&g=1","display_name":"Shivanandam","link":"https://stackoverflow.com/users/5340833/shivanandam"},"comment_count":1,"score":9,"creation_date":1479734074,"body_markdown":"**I will tell you an easy way**\r\n\r\nThere are **two** types of constructors:\r\n\r\n 1. **Default constructor**\r\n 2. **Parameterized constructor**\r\n\r\nI will explain in one Example\r\n\r\n    class ConstructorDemo \r\n    {\r\n          ConstructorDemo()//Default Constructor\r\n          {\r\n             System.out.println(&quot;D.constructor &quot;);\r\n          }\r\n         \r\n          ConstructorDemo(int k)//Parameterized constructor\r\n          {\r\n\t         this();//-------------(1)\r\n             System.out.println(&quot;P.Constructor =&quot;+k);       \r\n          }\r\n\r\n\t      public static void main(String[] args) \r\n\t      {\r\n             //this(); error because &quot;must be first statement in constructor\r\n\t\t     new ConstructorDemo();//-------(2)\r\n             ConstructorDemo g=new ConstructorDemo(3);---(3)\t\r\n\t       }\r\n       }                  \r\n\r\nIn the above example I showed 3 types of calling\r\n\r\n 1. this() call to this must be first statement in constructor\r\n 2. This is Name less Object. this automatically calls the default constructor.\r\n 3.This calls the Parameterized constructor.\r\n\r\nNote:\r\n**this must be the first statement in the constructor.**","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":550,"user_id":4543733,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4606926b80aa5489adb8bda5cc7ae45f?s=128&d=identicon&r=PG&f=1","display_name":"S R Chaitanya","link":"https://stackoverflow.com/users/4543733/s-r-chaitanya"},"comment_count":0,"score":12,"creation_date":1483795278,"body_markdown":"Yes it is possible to call one constructor from another. But there is a rule to it. If a call is made from one constructor to another, then \r\n\r\n&gt; _that new constructor call must be the first statement in the current constructor_\r\n\r\n    public class Product {\r\n\t     private int productId;\r\n\t     private String productName;\r\n         private double productPrice;\r\n      \t private String category;\r\n\t \r\n     \tpublic Product(int id, String name) {\r\n\t     \tthis(id,name,1.0);\r\n\t    }\r\n\t\r\n      \tpublic Product(int id, String name, double price) {\r\n\t    \tthis(id,name,price,&quot;DEFAULT&quot;);\r\n\t    }\r\n\t\r\n      \tpublic Product(int id,String name,double price, String category){\r\n\t\t    this.productId=id;\r\n\t\t    this.productName=name;\r\n\t    \tthis.productPrice=price;\r\n\t    \tthis.category=category;\r\n    \t}\r\n    }\r\n\r\n\r\nSo, something like below will not work.\r\n\r\n    public Product(int id, String name, double price) {\r\n        System.out.println(&quot;Calling constructor with price&quot;);\r\n        this(id,name,price,&quot;DEFAULT&quot;);\r\n    }\r\n\r\nAlso, in the case of inheritance, when sub-class&#39;s object is created, the super class constructor is first called.\r\n\r\n    public class SuperClass {\r\n     \tpublic SuperClass() {\r\n           System.out.println(&quot;Inside super class constructor&quot;);\r\n\t    }\r\n\t}\r\n    public class SubClass extends SuperClass {\r\n     \tpublic SubClass () {\r\n           //Even if we do not add, Java adds the call to super class&#39;s constructor like \r\n           // super();\r\n           System.out.println(&quot;Inside sub class constructor&quot;);\r\n\t    }\r\n\t}\r\n   \r\nThus, in this case also another constructor call is first declared before any other statements.\r\n","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":360,"user_id":6069781,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/IvazJ.jpg?s=128&g=1","display_name":"Akshay Gaikwad","link":"https://stackoverflow.com/users/6069781/akshay-gaikwad"},"comment_count":0,"score":8,"creation_date":1488533250,"body_markdown":"Calling constructor from another constructor\r\n\r\n\r\n\r\n    class MyConstructorDemo extends ConstructorDemo\r\n    {\r\n        MyConstructorDemo()\r\n        {\r\n            this(&quot;calling another constructor&quot;);\r\n        }\r\n        MyConstructorDemo(String arg)\r\n        {\r\n            System.out.print(&quot;This is passed String by another constructor :&quot;+arg);\r\n        }\r\n    }\r\n\r\n\r\n\r\nAlso you can call parent constructor by using `super()` call","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":1797,"user_id":4066742,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/VebTa.jpg?s=128&g=1","display_name":"S. Mayol","link":"https://stackoverflow.com/users/4066742/s-mayol"},"comment_count":0,"score":6,"creation_date":1489535596,"body_markdown":"The keyword ***this*** can be used to call a constructor from a constructor, when writing several constructor for a class, there are times when you&#39;d like to call one constructor from another to avoid duplicate code.\r\n\r\nBellow is a link that I explain other topic about constructor and getters() and setters() and I used a class with two constructors. I hope the explanations and examples help you.\r\n\r\n[Setter methods or constructors][1]\r\n\r\n\r\n\r\n \r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/19359548/setter-methods-or-constructors/42798426#42798426","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":1359,"user_id":1588303,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/02fa7266adc9004d79339808f4f13127?s=128&d=identicon&r=PG","display_name":"Rodney P. Barbati","link":"https://stackoverflow.com/users/1588303/rodney-p-barbati"},"comment_count":0,"score":6,"creation_date":1510614082,"body_markdown":"There are design patterns that cover the need for complex construction - if it can&#39;t be done succinctly, create a factory method or a factory class.\r\n\r\nWith the latest java and the addition of lambdas, it is easy to create a constructor which can accept any initialization code you desire.\r\n\r\n    class LambdaInitedClass {\r\n    \r\n       public LamdaInitedClass(Consumer&lt;LambdaInitedClass&gt; init) {\r\n           init.accept(this);\r\n       }\r\n    }\r\n\r\nCall it with...\r\n\r\n   \r\n\r\n     new LambdaInitedClass(l -&gt; { // init l any way you want });\r\n","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":410,"user_id":2576702,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/e055e4be0d5d395f3c9b5f3223019a34?s=128&d=identicon&r=PG","display_name":"GetBackerZ","link":"https://stackoverflow.com/users/2576702/getbackerz"},"comment_count":0,"score":8,"creation_date":1511273031,"body_markdown":"Pretty simple \r\n\r\n    public class SomeClass{\r\n\r\n        private int number;\r\n        private String someString;\r\n        \r\n        public SomeClass(){\r\n            number = 0;\r\n            someString = new String();\r\n        }\r\n        \r\n        public SomeClass(int number){\r\n            this(); //set the class to 0\r\n            this.setNumber(number); \r\n        }\r\n\r\n        public SomeClass(int number, String someString){\r\n            this(number); //call public SomeClass( int number )\r\n            this.setString(someString);\r\n        }\r\n\r\n        public void setNumber(int number){\r\n            this.number = number;\r\n        }\r\n        public void setString(String someString){\r\n            this.someString = someString;\r\n        }\r\n        //.... add some accessors\r\n    }\r\n\r\n\r\nnow here is some small extra credit:\r\n\r\n    public SomeOtherClass extends SomeClass {\r\n        public SomeOtherClass(int number, String someString){\r\n             super(number, someString); //calls public SomeClass(int number, String someString)\r\n        }\r\n        //.... Some other code.\r\n    }\r\n\r\nHope this helps.","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":3305,"user_id":5483580,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-_nU33sjf1SI/AAAAAAAAAAI/AAAAAAAASgQ/VOkKnOIxP8g/photo.jpg?sz=128","display_name":"Negi Rox","link":"https://stackoverflow.com/users/5483580/negi-rox"},"comment_count":0,"score":4,"creation_date":1516772757,"body_markdown":"I know there are so many examples of this question but what I found I am putting here to share my Idea. there are two ways to chain constructor. In Same class you can use this keyword. in Inheritance, you need to use super keyword.\r\n\r\n        import java.util.*;\r\n\t\timport java.lang.*;\r\n\r\n\t\tclass Test\r\n\t\t{  \r\n\t\t\tpublic static void main(String args[])\r\n\t\t\t{\r\n\t\t\t\tDog d = new Dog(); // Both Calling Same Constructor of Parent Class i.e. 0 args Constructor.\r\n\t\t\t\tDog cs = new Dog(&quot;Bite&quot;); // Both Calling Same Constructor of Parent Class i.e. 0 args Constructor.\r\n\r\n\t\t\t\t// You need to Explicitly tell the java compiler to use Argument constructor so you need to use &quot;super&quot; key word\r\n\t\t\t\tSystem.out.println(&quot;------------------------------&quot;);\r\n\t\t\t\tCat c = new Cat();\r\n\t\t\t\tCat caty = new Cat(&quot;10&quot;);\r\n\r\n\t\t\t\tSystem.out.println(&quot;------------------------------&quot;);\r\n\t\t\t\t// Self s = new Self();\r\n\t\t\t\tSelf ss = new Self(&quot;self&quot;);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclass Animal\r\n\t\t{\r\n\t\t\tString i;\r\n\r\n\t\t\tpublic Animal()\r\n\t\t\t{\r\n\t\t\t\ti = &quot;10&quot;;\r\n\t\t\t\tSystem.out.println(&quot;Animal Constructor :&quot; +i);\r\n\t\t\t}\r\n\t\t\tpublic Animal(String h)\r\n\t\t\t{\r\n\t\t\t\ti = &quot;20&quot;;\r\n\t\t\t\tSystem.out.println(&quot;Animal Constructor Habit :&quot;+ i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclass Dog extends Animal\r\n\t\t{\r\n\t\t\tpublic Dog()\r\n\t\t\t{\r\n\t\t\t\tSystem.out.println(&quot;Dog Constructor&quot;);\r\n\t\t\t}\r\n\t\t\tpublic Dog(String h)\r\n\t\t\t{\r\n\t\t\t\tSystem.out.println(&quot;Dog Constructor with habit&quot;);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclass Cat extends Animal\r\n\t\t{\r\n\t\t\tpublic Cat()\r\n\t\t\t{\r\n\t\t\t\tSystem.out.println(&quot;Cat Constructor&quot;);\r\n\t\t\t}\r\n\t\t\tpublic Cat(String i)\r\n\t\t\t{\r\n\t\t\t\tsuper(i); // Calling Super Class Paremetrize Constructor.\r\n\t\t\t\tSystem.out.println(&quot;Cat Constructor with habit&quot;);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclass Self\r\n\t\t{\r\n\t\t\tpublic Self()\r\n\t\t\t{\r\n\t\t\t\tSystem.out.println(&quot;Self Constructor&quot;);\r\n\t\t\t}\r\n\t\t\tpublic Self(String h)\r\n\t\t\t{\r\n\t\t\t\tthis(); // Explicitly calling 0 args constructor. \r\n\t\t\t\tSystem.out.println(&quot;Slef Constructor with value&quot;);\r\n\t\t\t}\r\n\t\t}","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":2294,"user_id":3254692,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/pg8j6.jpg?s=128&g=1","display_name":"Omar Faroque Anik","link":"https://stackoverflow.com/users/3254692/omar-faroque-anik"},"comment_count":0,"score":4,"creation_date":1528313792,"body_markdown":"It is called Telescoping Constructor anti-pattern or constructor chaining. Yes, you can definitely do. I see many examples above and I want to add by saying that if you know that you need only two or three constructor, it might be ok. But if you need more, please try to use different design pattern like Builder pattern. As for example: \r\n\r\n\r\n     public Omar(){};\r\n     public Omar(a){};\r\n     public Omar(a,b){};\r\n     public Omar(a,b,c){};\r\n     public Omar(a,b,c,d){};\r\n     ...\r\nYou may need more. Builder pattern would be a great solution in this case. Here is an article, it might be helpful\r\nhttps://medium.com/@modestofiguereo/design-patterns-2-the-builder-pattern-and-the-telescoping-constructor-anti-pattern-60a33de7522e\r\n\r\n","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":3126,"user_id":9772691,"user_type":"registered","profile_image":"https://i.stack.imgur.com/NRRPE.jpg?s=128&g=1","display_name":"John McClane","link":"https://stackoverflow.com/users/9772691/john-mcclane"},"comment_count":0,"score":4,"creation_date":1532826844,"body_markdown":"You can call another constructor via the [`this(...)`](https://docs.oracle.com/javase/tutorial/java/javaOO/thiskey.html) keyword (when you need to call a constructor from the same class) or the [`super(...)`](https://docs.oracle.com/javase/tutorial/java/IandI/super.html) keyword\r\n(when you need to call a constructor from a superclass).\r\n\r\nHowever, such a call must be the **first** statement of your constructor. To **overcome** this limitation, use [this answer](https://stackoverflow.com/a/51571736/9772691).","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":49377,"user_id":32453,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/bec38d63650c8912b6ba9b557fb953b9?s=128&d=identicon&r=PG","display_name":"rogerdpack","link":"https://stackoverflow.com/users/32453/rogerdpack"},"comment_count":0,"score":1,"creation_date":1554769859,"body_markdown":"Originally from an anser by Mirko Klemm, slightly modified to address the question:\r\n\r\nJust for completeness: There is also the [Instance initialization block][1] that gets executed always and before any other constructor is called. It consists simply of a block of statements &quot;{ ... }&quot; somewhere in the body of your class definition.  You can even have more than one.  You can&#39;t call them, but they&#39;re like &quot;shared constructor&quot; code if you want to reuse some code across constructors, similar to calling methods.\r\n\r\nSo in your case\r\n\r\n\r\n    { \r\n      System.out.println(&quot;this is shared constructor code executed before the constructor&quot;);\r\n      field1 = 3;\r\n    }\r\n\r\n\r\nThere is also a &quot;static&quot; version of this to initialize static members: &quot;static { ... }&quot;\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/3987428/what-is-an-initialization-block","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":698,"user_id":7500651,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/Qgw3Q.jpg?s=128&g=1","display_name":"ansh sachdeva","link":"https://stackoverflow.com/users/7500651/ansh-sachdeva"},"comment_count":0,"score":0,"creation_date":1560933516,"body_markdown":"I prefer this way:  \r\n\r\n        class User {\r\n            private long id;\r\n            private String username;\r\n            private int imageRes;\r\n\r\n        public User() {\r\n            init(defaultID,defaultUsername,defaultRes);\r\n        }\r\n        public User(String username) {\r\n            init(defaultID,username, defaultRes());\r\n        }\r\n\r\n        public User(String username, int imageRes) {\r\n            init(defaultID,username, imageRes);\r\n        }\r\n\r\n        public User(long id, String username, int imageRes) {\r\n            init(id,username, imageRes);\r\n\r\n        }\r\n\r\n        private void init(long id, String username, int imageRes) {\r\n            this.id=id;\r\n            this.username = username;\r\n            this.imageRes = imageRes;\r\n        }\r\n    }","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":112,"user_id":6505685,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/015a2d7180535446c7d6f1df6baf0718?s=128&d=identicon&r=PG&f=1","display_name":"Soni Vashisht","link":"https://stackoverflow.com/users/6505685/soni-vashisht"},"comment_count":0,"score":2,"creation_date":1564680925,"body_markdown":"Yes, you can call constructors from another constructor. For example:\n\n    public class Animal {\n        private int animalType;\n    \n        public Animal() {\n            this(1); //here this(1) internally make call to Animal(1);\n        }\n    \n        public Animal(int animalType) {\n            this.animalType = animalType;\n        }\n    }\n\nyou can also read in details from \n[Constructor Chaining in Java][1]  \n\n  [1]: https://beginnersbook.com/2013/12/java-constructor-chaining-with-example/\n","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":980,"user_id":8450064,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-sUFHZf-glew/AAAAAAAAAAI/AAAAAAAAAJU/DskFo5Z8xZ8/photo.jpg?sz=128","display_name":"Anil Nivargi","link":"https://stackoverflow.com/users/8450064/anil-nivargi"},"comment_count":0,"score":0,"creation_date":1610763175,"body_markdown":"Using this keyword we can call one constructor in another constructor within same class.\r\n\r\nExample :-\r\n\r\n     public class Example {\r\n       \r\n          private String name;\r\n       \r\n          public Example() {\r\n              this(&quot;Mahesh&quot;);\r\n          }\r\n\r\n          public Example(String name) {\r\n              this.name = name;\r\n          }\r\n\r\n     }","title":"How do I call one constructor from another in Java?"},{"owner":{"reputation":23,"user_id":14558434,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/66e45ad92c6a84be1acaf4fa37b781bc?s=128&d=identicon&r=PG&f=1","display_name":"anar1501","link":"https://stackoverflow.com/users/14558434/anar1501"},"comment_count":0,"score":0,"creation_date":1613241955,"body_markdown":"Yes it is possible\r\n    \r\n\r\n    public class User {\r\n\r\n     private String name = &quot;&quot;;\r\n     private String surname = &quot;&quot;;\r\n     private int age = 0;\r\n     public User(){\r\n        this(&quot;name is undefined&quot;,&quot;surname is undefined&quot;,0);\r\n     }\r\n        public User(String name,String surname){\r\n          this(name,surname,0);\r\n       }\r\n    \r\n\r\n        public User(String name, String surname, int age) {\r\n          this.name = name;\r\n          this.surname = surname;\r\n          this.age = age;\r\n      }\r\n    }","title":"How do I call one constructor from another in Java?"}],"owner":{"reputation":73738,"user_id":33203,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/07856b52198509b8bd0d2e5418d0bf37?s=128&d=identicon&r=PG","display_name":"ashokgelal","link":"https://stackoverflow.com/users/33203/ashokgelal"},"comment_count":3,"is_answered":true,"answer_count":23,"score":2383,"creation_date":1226520619,"question_id":285177,"body_markdown":"Is it possible to call a constructor from another (within the same class, not from a subclass)? If yes how? And what could be the best way to call another constructor (if there are several ways to do it)?","link":"https://stackoverflow.com/questions/285177/how-do-i-call-one-constructor-from-another-in-java","title":"How do I call one constructor from another in Java?"},{"tags":["java","reflection","terminology"],"comments":[{"owner":{"reputation":9471,"user_id":2770850,"user_type":"registered","accept_rate":85,"profile_image":"https://i.stack.imgur.com/fwn9J.jpg?s=128&g=1","display_name":"Nabin","link":"https://stackoverflow.com/users/2770850/nabin"},"score":11,"creation_date":1478149337},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":73,"creation_date":1491342345},{"owner":{"reputation":12820,"user_id":7852,"user_type":"registered","accept_rate":74,"profile_image":"https://i.stack.imgur.com/HP5eX.jpg?s=128&g=1","display_name":"givanse","link":"https://stackoverflow.com/users/7852/givanse"},"score":2,"creation_date":1524263686},{"owner":{"reputation":16837,"user_id":507738,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/7ghSp.jpg?s=128&g=1","display_name":"MC Emperor","link":"https://stackoverflow.com/users/507738/mc-emperor"},"score":5,"creation_date":1542891776},{"owner":{"reputation":874,"user_id":507563,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/bc60a77f84badd72d4bde6c46cb9b71d?s=128&d=identicon&r=PG","display_name":"Scott","link":"https://stackoverflow.com/users/507563/scott"},"score":0,"creation_date":1544835245},{"owner":{"reputation":11070,"user_id":7839,"user_type":"registered","accept_rate":96,"profile_image":"https://www.gravatar.com/avatar/3ebc7baf5b572cd893874b81890621fa?s=128&d=identicon&r=PG","display_name":"Trap","link":"https://stackoverflow.com/users/7839/trap"},"score":0,"creation_date":1591839694},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":0,"creation_date":1591995824}],"answers":[{"comments":[{"owner":{"reputation":301,"user_id":1641086,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/ZO4Cd.jpg?s=128&g=1","display_name":"Krsna Chaitanya","link":"https://stackoverflow.com/users/1641086/krsna-chaitanya"},"score":35,"creation_date":1353650377},{"owner":{"reputation":110149,"user_id":797,"user_type":"registered","accept_rate":66,"profile_image":"https://www.gravatar.com/avatar/aef85130bf44caa9b4de0a3153e758f2?s=128&d=identicon&r=PG","display_name":"Matt Sheppard","link":"https://stackoverflow.com/users/797/matt-sheppard"},"score":56,"creation_date":1353978859},{"owner":{"reputation":4293,"user_id":1177198,"user_type":"registered","accept_rate":66,"profile_image":"https://www.gravatar.com/avatar/4ea56c658e69eef33b6557b20c7a19ab?s=128&d=identicon&r=PG","display_name":"bigtunacan","link":"https://stackoverflow.com/users/1177198/bigtunacan"},"score":819,"creation_date":1363059991},{"owner":{"reputation":59643,"user_id":12943,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/d6a9924b767fe91c46def7edc7bce035?s=128&d=identicon&r=PG","display_name":"Bill K","link":"https://stackoverflow.com/users/12943/bill-k"},"score":42,"creation_date":1375113001},{"owner":{"reputation":2224,"user_id":63730,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/3ebb5fa10152f25f788221ae03ca172d?s=128&d=identicon&r=PG","display_name":"geschema","link":"https://stackoverflow.com/users/63730/geschema"},"score":3,"creation_date":1403185863},{"owner":{"reputation":1611,"user_id":1593007,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/sF5gl.jpg?s=128&g=1","display_name":"Neon Warge","link":"https://stackoverflow.com/users/1593007/neon-warge"},"score":0,"creation_date":1453907094},{"owner":{"reputation":665,"user_id":1841956,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/56e7af2b73d6866cd7b009e731bd1fe6?s=128&d=identicon&r=PG","display_name":"RestInPeace","link":"https://stackoverflow.com/users/1841956/restinpeace"},"score":6,"creation_date":1461922466},{"owner":{"reputation":4293,"user_id":1177198,"user_type":"registered","accept_rate":66,"profile_image":"https://www.gravatar.com/avatar/4ea56c658e69eef33b6557b20c7a19ab?s=128&d=identicon&r=PG","display_name":"bigtunacan","link":"https://stackoverflow.com/users/1177198/bigtunacan"},"score":5,"creation_date":1461934409},{"owner":{"reputation":60438,"user_id":8922,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG","display_name":"Sebastian Redl","link":"https://stackoverflow.com/users/8922/sebastian-redl"},"score":0,"creation_date":1486371966},{"owner":{"reputation":989,"user_id":5872507,"user_type":"registered","accept_rate":80,"profile_image":"https://graph.facebook.com/1048582751859135/picture?type=large","display_name":"Lucas","link":"https://stackoverflow.com/users/5872507/lucas"},"score":0,"creation_date":1490363471},{"owner":{"reputation":1195,"user_id":5768269,"user_type":"registered","accept_rate":79,"profile_image":"https://graph.facebook.com/1043660518990589/picture?type=large","display_name":"Wesos de Queso","link":"https://stackoverflow.com/users/5768269/wesos-de-queso"},"score":0,"creation_date":1501454867},{"owner":{"reputation":1358,"user_id":4483113,"user_type":"registered","profile_image":"https://i.stack.imgur.com/v2ENl.jpg?s=128&g=1","display_name":"idelvall","link":"https://stackoverflow.com/users/4483113/idelvall"},"score":0,"creation_date":1529304876}],"owner":{"reputation":110149,"user_id":797,"user_type":"registered","accept_rate":66,"profile_image":"https://www.gravatar.com/avatar/aef85130bf44caa9b4de0a3153e758f2?s=128&d=identicon&r=PG","display_name":"Matt Sheppard","link":"https://stackoverflow.com/users/797/matt-sheppard"},"comment_count":12,"score":1803,"creation_date":1220258698,"body_markdown":"The name reflection is used to describe code which is able to inspect other code in the same system (or itself).\r\n\r\nFor example, say you have an object of an unknown type in Java, and you would like to call a &#39;doSomething&#39; method on it if one exists. Java&#39;s static typing system isn&#39;t really designed to support this unless the object conforms to a known interface, but using reflection, your code can look at the object and find out if it has a method called &#39;doSomething&#39; and then call it if you want to.\r\n\r\nSo, to give you a code example of this in Java (imagine the object in question is foo) :\r\n\r\n    Method method = foo.getClass().getMethod(&quot;doSomething&quot;, null);\r\n    method.invoke(foo, null);\r\n\r\nOne very common use case in Java is the usage with annotations. JUnit 4, for example, will use reflection to look through your classes for methods tagged with the @Test annotation, and will then call them when running the unit test.\r\n\r\nThere are some good reflection examples to get you started at http://docs.oracle.com/javase/tutorial/reflect/index.html\r\n\r\nAnd finally, yes, the concepts are pretty much similar in other statically typed languages which support reflection (like C#). In dynamically typed languages, the use case described above is less necessary (since the compiler will allow any method to be called on any object, failing at runtime if it does not exist), but the second case of looking for methods which are marked or work in a certain way is still common.\r\n\r\n**Update from a comment:**\r\n\r\n&gt; The ability to inspect the code in the system and see object types is\r\n&gt; not reflection, but rather Type Introspection. Reflection is then the\r\n&gt; ability to make modifications at runtime by making use of\r\n&gt; introspection. The distinction is necessary here as some languages\r\n&gt; support introspection, but do not support reflection. One such example\r\n&gt; is C++\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/tutorial/reflect/index.html","title":"What is reflection and why is it useful?"},{"owner":{"reputation":46993,"user_id":2695,"user_type":"registered","accept_rate":85,"profile_image":"https://i.stack.imgur.com/kfUsM.jpg?s=128&g=1","display_name":"Jorge C&#243;rdoba","link":"https://stackoverflow.com/users/2695/jorge-c%c3%b3rdoba"},"comment_count":0,"score":15,"creation_date":1220259052,"body_markdown":"Reflection is a set of functions which allows you to access the runtime information of your program and modify it behavior (with some limitations).\r\n\r\nIt&#39;s useful because it allows you to change the runtime behavior depending on the meta information of your program, that is, you can check the return type of a function and change the way you handle the situation.\r\n\r\nIn C# for example you can load an assembly (a .dll) in runtime an examine it, navigating through the classes and taking actions according to what you found. It also let you create an instance of a class on runtime, invoke its method, etc.\r\n\r\nWhere can it be useful? Is not useful every time but for concrete situations. For example you can use it to get the name of the class for logging purposes, to dynamically create handlers for events according to what&#39;s specified on a configuration file and so on...","title":"What is reflection and why is it useful?"},{"owner":{"reputation":34249,"user_id":3320,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/82b1a2cb56adfa86634e7310ff639064?s=128&d=identicon&r=PG","display_name":"Mendelt","link":"https://stackoverflow.com/users/3320/mendelt"},"comment_count":0,"score":40,"creation_date":1220259057,"body_markdown":"Not every language supports reflection, but the principles are usually the same in languages that support it.\r\n\r\nReflection is the ability to &quot;reflect&quot; on the structure of your program. Or more concrete. To look at the objects and classes you have and programmatically get back information on the methods, fields, and interfaces they implement. You can also look at things like annotations.\r\n\r\nIt&#39;s useful in a lot of situations. Everywhere you want to be able to dynamically plug in classes into your code. Lots of object relational mappers use reflection to be able to instantiate objects from databases without knowing in advance what objects they&#39;re going to use. Plug-in architectures is another place where reflection is useful. Being able to dynamically load code and determine if there are types there that implement the right interface to use as a plugin is important in those situations.","title":"What is reflection and why is it useful?"},{"comments":[{"owner":{"reputation":973,"user_id":717290,"user_type":"registered","accept_rate":33,"profile_image":"https://graph.facebook.com/812988293/picture?type=large","display_name":"Fernando Gabrieli","link":"https://stackoverflow.com/users/717290/fernando-gabrieli"},"score":3,"creation_date":1543700404},{"owner":{"reputation":9331,"user_id":890,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/ca7b97ac1c6eed7a3b0e13d9f65e27ae?s=128&d=identicon&r=PG","display_name":"Liedman","link":"https://stackoverflow.com/users/890/liedman"},"score":4,"creation_date":1547555134},{"owner":{"reputation":16289,"user_id":10147399,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4a6d433902192f8bb03857ae1b849d4f?s=128&d=identicon&r=PG&f=1","display_name":"Ayxan Haqverdili","link":"https://stackoverflow.com/users/10147399/ayxan-haqverdili"},"score":1,"creation_date":1576009930}],"owner":{"reputation":9331,"user_id":890,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/ca7b97ac1c6eed7a3b0e13d9f65e27ae?s=128&d=identicon&r=PG","display_name":"Liedman","link":"https://stackoverflow.com/users/890/liedman"},"comment_count":3,"score":268,"creation_date":1220259149,"body_markdown":"&gt; **Reflection** is a language&#39;s ability to inspect and dynamically call classes, methods, attributes, etc. at runtime.\r\n\r\nFor example, all objects in Java have the method `getClass()`, which lets you determine the object&#39;s class even if you don&#39;t know it at compile time (e.g. if you declared it as an `Object`) - this might seem trivial, but such reflection is not possible in less dynamic languages such as `C++`. More advanced uses lets you list and call methods, constructors, etc.\r\n\r\nReflection is important since it lets you write programs that do not have to &quot;know&quot; everything at compile time, making them more dynamic, since they can be tied together at runtime. The code can be written against known interfaces, but the actual classes to be used can be instantiated using reflection from configuration files.\r\n\r\nLots of modern frameworks use reflection extensively for this very reason. Most other modern languages use reflection as well, and in scripting languages (such as Python) they are even more tightly integrated, since it feels more natural within the general programming model of those languages.","title":"What is reflection and why is it useful?"},{"owner":{"reputation":47261,"user_id":3295,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/7331c9c20d99e89d6537645dd1deb34c?s=128&d=identicon&r=PG","display_name":"toolkit","link":"https://stackoverflow.com/users/3295/toolkit"},"comment_count":0,"score":48,"creation_date":1220261455,"body_markdown":"Reflection is a key mechanism to allow an application or framework to work with code that might not have even been written yet!\r\n\r\nTake for example your typical web.xml file. This will contain a list of servlet elements, which contain nested servlet-class elements. The servlet container will process the web.xml file, and create new a new instance of each servlet class through reflection.\r\n\r\nAnother example would be the Java API for XML Parsing [(JAXP)](http://en.wikipedia.org/wiki/Java_API_for_XML_Processing). Where an XML parser provider is &#39;plugged-in&#39; via well-known system properties, which are used to construct new instances through reflection.\r\n\r\nAnd finally, the most comprehensive example is [Spring](http://www.springframework.org/) which uses reflection to create its beans, and for its heavy use of proxies","title":"What is reflection and why is it useful?"},{"comments":[{"owner":{"reputation":8247,"user_id":45974,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/04361eba6e039eecdd3458e2545f03e6?s=128&d=identicon&r=PG","display_name":"Tom","link":"https://stackoverflow.com/users/45974/tom"},"score":8,"creation_date":1272546371},{"owner":{"reputation":8247,"user_id":45974,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/04361eba6e039eecdd3458e2545f03e6?s=128&d=identicon&r=PG","display_name":"Tom","link":"https://stackoverflow.com/users/45974/tom"},"score":8,"creation_date":1272546801},{"owner":{"reputation":23816,"user_id":390897,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/bb90a39b77596fcffbab96de88f0ee34?s=128&d=identicon&r=PG","display_name":"fny","link":"https://stackoverflow.com/users/390897/fny"},"score":3,"creation_date":1353650971},{"owner":{"reputation":9375,"user_id":777285,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/I1WDv.png?s=128&g=1","display_name":"Arnaud P","link":"https://stackoverflow.com/users/777285/arnaud-p"},"score":1,"creation_date":1372719782},{"owner":{"reputation":4971,"user_id":39334,"user_type":"registered","accept_rate":81,"profile_image":"https://graph.facebook.com/520402061/picture?type=large","display_name":"stolsvik","link":"https://stackoverflow.com/users/39334/stolsvik"},"score":4,"creation_date":1381226787},{"owner":{"reputation":1226,"user_id":1219213,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/IBSdb.jpg?s=128&g=1","display_name":"TheRealChx101","link":"https://stackoverflow.com/users/1219213/therealchx101"},"score":0,"creation_date":1575997105},{"owner":{"reputation":2715,"user_id":401712,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/8ab83e913223d2bee3eb4c4b5629122a?s=128&d=identicon&r=PG","display_name":"Dario Seidl","link":"https://stackoverflow.com/users/401712/dario-seidl"},"score":0,"creation_date":1590005387}],"owner":{"reputation":2227,"user_id":2453,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/d3fd8d97dd52ec385cd8865a83912fe8?s=128&d=identicon&r=PG","display_name":"Ben Williams","link":"https://stackoverflow.com/users/2453/ben-williams"},"comment_count":7,"score":121,"creation_date":1220372128,"body_markdown":"One of my favorite uses of reflection is the below Java dump method. It takes any object as a parameter and uses the Java reflection API to print out every field name and value.\r\n\r\n    import java.lang.reflect.Array;\r\n    import java.lang.reflect.Field;\r\n    \r\n    public static String dump(Object o, int callCount) {\r\n        callCount++;\r\n        StringBuffer tabs = new StringBuffer();\r\n        for (int k = 0; k &lt; callCount; k++) {\r\n            tabs.append(&quot;\\t&quot;);\r\n        }\r\n        StringBuffer buffer = new StringBuffer();\r\n        Class oClass = o.getClass();\r\n        if (oClass.isArray()) {\r\n            buffer.append(&quot;\\n&quot;);\r\n            buffer.append(tabs.toString());\r\n            buffer.append(&quot;[&quot;);\r\n            for (int i = 0; i &lt; Array.getLength(o); i++) {\r\n                if (i &lt; 0)\r\n                    buffer.append(&quot;,&quot;);\r\n                Object value = Array.get(o, i);\r\n                if (value.getClass().isPrimitive() ||\r\n                        value.getClass() == java.lang.Long.class ||\r\n                        value.getClass() == java.lang.String.class ||\r\n                        value.getClass() == java.lang.Integer.class ||\r\n                        value.getClass() == java.lang.Boolean.class\r\n                        ) {\r\n                    buffer.append(value);\r\n                } else {\r\n                    buffer.append(dump(value, callCount));\r\n                }\r\n            }\r\n            buffer.append(tabs.toString());\r\n            buffer.append(&quot;]\\n&quot;);\r\n        } else {\r\n            buffer.append(&quot;\\n&quot;);\r\n            buffer.append(tabs.toString());\r\n            buffer.append(&quot;{\\n&quot;);\r\n            while (oClass != null) {\r\n                Field[] fields = oClass.getDeclaredFields();\r\n                for (int i = 0; i &lt; fields.length; i++) {\r\n                    buffer.append(tabs.toString());\r\n                    fields[i].setAccessible(true);\r\n                    buffer.append(fields[i].getName());\r\n                    buffer.append(&quot;=&quot;);\r\n                    try {\r\n                        Object value = fields[i].get(o);\r\n                        if (value != null) {\r\n                            if (value.getClass().isPrimitive() ||\r\n                                    value.getClass() == java.lang.Long.class ||\r\n                                    value.getClass() == java.lang.String.class ||\r\n                                    value.getClass() == java.lang.Integer.class ||\r\n                                    value.getClass() == java.lang.Boolean.class\r\n                                    ) {\r\n                                buffer.append(value);\r\n                            } else {\r\n                                buffer.append(dump(value, callCount));\r\n                            }\r\n                        }\r\n                    } catch (IllegalAccessException e) {\r\n                        buffer.append(e.getMessage());\r\n                    }\r\n                    buffer.append(&quot;\\n&quot;);\r\n                }\r\n                oClass = oClass.getSuperclass();\r\n            }\r\n            buffer.append(tabs.toString());\r\n            buffer.append(&quot;}\\n&quot;);\r\n        }\r\n        return buffer.toString();\r\n    }","title":"What is reflection and why is it useful?"},{"owner":{"reputation":171,"user_id":1191613,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/0b06a0894fa1fa56d095bff54a3579ee?s=128&d=identicon&r=PG","display_name":"pramod","link":"https://stackoverflow.com/users/1191613/pramod"},"comment_count":0,"score":17,"creation_date":1328506645,"body_markdown":"As per my understanding:\r\n\r\nReflection allows programmer to access entities in program dynamically. i.e. while coding an application if programmer is unaware about a class or its methods, he can make use of such class dynamically (at run time) by using reflection.\r\n\r\n\r\nIt is frequently used in scenarios where a class name changes frequently. If such a situation arises, then it is complicated for the programmer to rewrite the application and change the name of the class again and again.\r\n\r\nInstead, by using reflection, there is need to worry about a possibly changing class name.","title":"What is reflection and why is it useful?"},{"comments":[{"owner":{"reputation":728,"user_id":1818295,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/54c7655345241846d7373548c8874293?s=128&d=identicon&r=PG","display_name":"Atom","link":"https://stackoverflow.com/users/1818295/atom"},"score":0,"creation_date":1434998531},{"owner":{"reputation":1047,"user_id":2133216,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/89a46427b32c76c7d44fb4ddb524b902?s=128&d=identicon&r=PG","display_name":"ndm13","link":"https://stackoverflow.com/users/2133216/ndm13"},"score":2,"creation_date":1515636577}],"owner":{"reputation":1237,"user_id":1198898,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/4b3f146a1aa7414e40b0cf3d4fa440a1?s=128&d=identicon&r=PG&f=1","display_name":"human.js","link":"https://stackoverflow.com/users/1198898/human-js"},"comment_count":2,"score":21,"creation_date":1340379355,"body_markdown":"**Example:**\r\n\r\nTake for example a remote application which gives your application an object which you obtain using their API Methods . Now based on the object you might need to perform some sort of computation . \r\n\r\nThe provider guarantees that object can be of 3 types and we need to perform computation based on what type of object .\r\n\r\nSo we might implement in 3 classes each containing a different logic .Obviously the object  information is available in runtime so you cannot statically code to perform computation hence reflection is used to instantiate the object of the class that you require to perform the computation based on the object received from the provider .","title":"What is reflection and why is it useful?"},{"comments":[{"owner":{"reputation":11918,"user_id":1161948,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/718b2745cc695cefd5418995742dca6a?s=128&d=identicon&r=PG","display_name":"ThisClark","link":"https://stackoverflow.com/users/1161948/thisclark"},"score":1,"creation_date":1487123639},{"owner":{"reputation":598,"user_id":2267583,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/adxtN.jpg?s=128&g=1","display_name":"Ess Kay","link":"https://stackoverflow.com/users/2267583/ess-kay"},"score":0,"creation_date":1487270471},{"owner":{"reputation":598,"user_id":2267583,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/adxtN.jpg?s=128&g=1","display_name":"Ess Kay","link":"https://stackoverflow.com/users/2267583/ess-kay"},"score":0,"creation_date":1487270710}],"owner":{"reputation":598,"user_id":2267583,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/adxtN.jpg?s=128&g=1","display_name":"Ess Kay","link":"https://stackoverflow.com/users/2267583/ess-kay"},"comment_count":3,"score":6,"creation_date":1367871388,"body_markdown":"`Reflection` has many **uses**. The one I am more familiar with, is to be able to create code on the fly. \r\n\r\n&gt; IE: dynamic classes, functions, constructors - based on any data\r\n&gt; (xml/array/sql results/hardcoded/etc..)","title":"What is reflection and why is it useful?"},{"owner":{"reputation":516,"user_id":1772534,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3e53bdb09c1e055d324d955efb4b341d?s=128&d=identicon&r=PG","display_name":"Nikhil Shekhar","link":"https://stackoverflow.com/users/1772534/nikhil-shekhar"},"comment_count":0,"score":36,"creation_date":1373299924,"body_markdown":"Reflection allows instantiation of new objects, invocation of methods, and get/set operations on class variables dynamically at run time without having prior knowledge of its implementation.\r\n\r\n\r\n    Class myObjectClass = MyObject.class;\r\n    Method[] method = myObjectClass.getMethods();\r\n    \r\n    //Here the method takes a string parameter if there is no param, put null.\r\n    Method method = aClass.getMethod(&quot;method_name&quot;, String.class); \r\n    \r\n    Object returnValue = method.invoke(null, &quot;parameter-value1&quot;);\r\n\r\nIn above example the null parameter is the object you want to invoke the method on. If the method is static you supply null. If the method is not static, then while invoking you need to supply a valid MyObject instance instead of null.\r\n\r\nReflection also allows you to access private member/methods of a class:\r\n\r\n\r\n    public class A{\r\n\r\n      private String str= null;\r\n\r\n      public A(String str) {\r\n      this.str= str;\r\n      }\r\n    }\r\n\r\n.\r\n\r\n    A obj= new A(&quot;Some value&quot;);\r\n\r\n    Field privateStringField = A.class.getDeclaredField(&quot;privateString&quot;);\r\n\r\n    //Turn off access check for this field\r\n    privateStringField.setAccessible(true);\r\n\r\n    String fieldValue = (String) privateStringField.get(obj);\r\n    System.out.println(&quot;fieldValue = &quot; + fieldValue);\r\n\r\n\r\n\r\n* For inspection of classes (also know as introspection) you don&#39;t need to import the reflection package (`java.lang.reflect`). Class metadata can be accessed through `java.lang.Class`.\r\n\r\nReflection is a very powerful API but it may slow down the application if used in excess, as it resolves all the types at runtime.","title":"What is reflection and why is it useful?"},{"owner":{"reputation":7852,"user_id":1878022,"user_type":"registered","accept_rate":96,"profile_image":"https://i.stack.imgur.com/Iwcbd.jpg?s=128&g=1","display_name":"Vedant Kekan","link":"https://stackoverflow.com/users/1878022/vedant-kekan"},"comment_count":0,"score":25,"creation_date":1410169202,"body_markdown":"Java Reflection is quite powerful and can be very useful.\r\nJava Reflection makes it possible **to inspect classes, interfaces, fields and methods at runtime,** without knowing the names of the classes, methods etc. at compile time.\r\nIt is also possible to **instantiate new objects, invoke methods and get/set field values using reflection.**\r\n\r\n**A quick Java Reflection example to show you what using reflection looks like:**\r\n    \r\n    Method[] methods = MyObject.class.getMethods();\r\n        \r\n        for(Method method : methods){\r\n            System.out.println(&quot;method = &quot; + method.getName());\r\n        }\r\n\r\nThis example obtains the Class object from the class called MyObject. Using the class object the example gets a list of the methods in that class, iterates the methods and print out their names.\r\n\r\n[Exactly how all this works is explained here][1]\r\n\r\n**Edit**: After almost 1 year I am editing this answer as while reading about reflection I got few more uses of Reflection.\r\n\r\n - Spring uses bean configuration such as:\r\n\r\n&lt;br&gt;\r\n\r\n    &lt;bean id=&quot;someID&quot; class=&quot;com.example.Foo&quot;&gt;\r\n        &lt;property name=&quot;someField&quot; value=&quot;someValue&quot; /&gt;\r\n    &lt;/bean&gt;\r\n\r\nWhen the Spring context processes this &lt; bean &gt; element, it will use Class.forName(String) with the argument &quot;com.example.Foo&quot; to instantiate that Class. \r\n\r\nIt will then again use reflection to get the appropriate setter for the &lt; property &gt; element and set its value to the specified value.\r\n\r\n - Junit uses Reflection especially for testing Private/Protected methods.\r\n\r\n\r\nFor Private methods,\r\n\r\n    Method method = targetClass.getDeclaredMethod(methodName, argClasses);\r\n    method.setAccessible(true);\r\n    return method.invoke(targetObject, argObjects);\r\n\r\nFor private fields,\r\n\r\n    Field field = targetClass.getDeclaredField(fieldName);\r\n    field.setAccessible(true);\r\n    field.set(object, value);\r\n\r\n  [1]: http://tutorials.jenkov.com/java-reflection/classes.html","title":"What is reflection and why is it useful?"},{"owner":{"reputation":13421,"user_id":1498427,"user_type":"registered","accept_rate":89,"profile_image":"https://i.stack.imgur.com/zMjyh.jpg?s=128&g=1","display_name":"catch23","link":"https://stackoverflow.com/users/1498427/catch23"},"comment_count":0,"score":12,"creation_date":1411251723,"body_markdown":"I just want to add some point to all that was listed.\r\n\r\nWith **Reflection API** you can write universal `toString()` method for any object.\r\n\r\nIt is useful at debugging.\r\n\r\nHere is some example:\r\n\r\n    class ObjectAnalyzer {\r\n\r\n       private ArrayList&lt;Object&gt; visited = new ArrayList&lt;Object&gt;();\r\n\r\n       /**\r\n        * Converts an object to a string representation that lists all fields.\r\n        * @param obj an object\r\n        * @return a string with the object&#39;s class name and all field names and\r\n        * values\r\n        */\r\n       public String toString(Object obj) {\r\n          if (obj == null) return &quot;null&quot;;\r\n          if (visited.contains(obj)) return &quot;...&quot;;\r\n          visited.add(obj);\r\n          Class cl = obj.getClass();\r\n          if (cl == String.class) return (String) obj;\r\n          if (cl.isArray()) {\r\n             String r = cl.getComponentType() + &quot;[]{&quot;;\r\n             for (int i = 0; i &lt; Array.getLength(obj); i++) {\r\n                if (i &gt; 0) r += &quot;,&quot;;\r\n                Object val = Array.get(obj, i);\r\n                if (cl.getComponentType().isPrimitive()) r += val;\r\n                else r += toString(val);\r\n             }\r\n             return r + &quot;}&quot;;\r\n          }\r\n    \r\n          String r = cl.getName();\r\n          // inspect the fields of this class and all superclasses\r\n          do {\r\n             r += &quot;[&quot;;\r\n             Field[] fields = cl.getDeclaredFields();\r\n             AccessibleObject.setAccessible(fields, true);\r\n             // get the names and values of all fields\r\n             for (Field f : fields) {\r\n                if (!Modifier.isStatic(f.getModifiers())) {\r\n                   if (!r.endsWith(&quot;[&quot;)) r += &quot;,&quot;;\r\n                   r += f.getName() + &quot;=&quot;;\r\n                   try {\r\n                      Class t = f.getType();\r\n                      Object val = f.get(obj);\r\n                      if (t.isPrimitive()) r += val;\r\n                      else r += toString(val);\r\n                   } catch (Exception e) {\r\n                      e.printStackTrace();\r\n                   }\r\n                }\r\n             }\r\n             r += &quot;]&quot;;\r\n             cl = cl.getSuperclass();\r\n          } while (cl != null);\r\n    \r\n          return r;\r\n       }    \r\n    }","title":"What is reflection and why is it useful?"},{"owner":{"reputation":1079,"user_id":2115148,"user_type":"registered","accept_rate":38,"profile_image":"https://i.stack.imgur.com/AipKT.jpg?s=128&g=1","display_name":"Desmond Smith","link":"https://stackoverflow.com/users/2115148/desmond-smith"},"comment_count":0,"score":90,"creation_date":1413547173,"body_markdown":"**Uses of Reflection**\r\n\r\nReflection is commonly used by programs which require the ability to examine or modify the runtime behavior of applications running in the Java virtual machine. This is a relatively advanced feature and should be used only by developers who have a strong grasp of the fundamentals of the language. With that caveat in mind, reflection is a powerful technique and can enable applications to perform operations which would otherwise be impossible.\r\n\r\n**Extensibility Features**\r\n\r\nAn application may make use of external, user-defined classes by creating instances of extensibility objects using their fully-qualified names.\r\nClass Browsers and Visual Development Environments\r\nA class browser needs to be able to enumerate the members of classes. Visual development environments can benefit from making use of type information available in reflection to aid the developer in writing correct code.\r\nDebuggers and Test Tools\r\nDebuggers need to be able to examine private members in classes. Test harnesses can make use of reflection to systematically call a discoverable set APIs defined on a class, to ensure a high level of code coverage in a test suite.\r\n\r\n**Drawbacks of Reflection**\r\n\r\nReflection is powerful, but should not be used indiscriminately. If it is possible to perform an operation without using reflection, then it is preferable to avoid using it. The following concerns should be kept in mind when accessing code via reflection.\r\n\r\n - **Performance Overhead**\r\n\r\nBecause reflection involves types that are dynamically resolved, certain Java virtual machine optimizations cannot be performed. Consequently, reflective operations have slower performance than their non-reflective counterparts and should be avoided in sections of code which are called frequently in performance-sensitive applications.\r\n\r\n - **Security Restrictions**\r\n\r\n\r\nReflection requires a runtime permission which may not be present when running under a security manager. This is in an important consideration for code which has to run in a restricted security context, such as in an Applet.\r\n\r\n - **Exposure of Internals**\r\n\r\nSince reflection allows code to perform operations that would be illegal in non-reflective code, such as accessing private fields and methods, the use of reflection can result in unexpected side-effects, which may render code dysfunctional and may destroy portability. Reflective code breaks abstractions and therefore may change behavior with upgrades of the platform.\r\n\r\nsource: [The Reflection API][1]\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/tutorial/reflect/","title":"What is reflection and why is it useful?"},{"owner":{"reputation":258,"user_id":4216954,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-QmvhwgPeY5c/AAAAAAAAAAI/AAAAAAAAAPc/7ysOFb0U7Gs/photo.jpg?sz=128","display_name":"Isuru Jayakantha","link":"https://stackoverflow.com/users/4216954/isuru-jayakantha"},"comment_count":0,"score":19,"creation_date":1415248951,"body_markdown":"Simple example for reflection.\r\nIn a chess game, you do not know what will be moved by the user at run time. reflection can be used to call methods which are already implemented at run time:\r\n\r\n    public class Test {\r\n\r\n    \tpublic void firstMoveChoice(){\r\n    \t\tSystem.out.println(&quot;First Move&quot;);\r\n    \t} \r\n    \tpublic void secondMOveChoice(){\r\n    \t\tSystem.out.println(&quot;Second Move&quot;);\r\n    \t}\r\n    \tpublic void thirdMoveChoice(){\r\n    \t\tSystem.out.println(&quot;Third Move&quot;);\r\n    \t}\r\n    \t\r\n    \tpublic static void main(String[] args) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException { \r\n    \t\tTest test = new Test();\r\n    \t\tMethod[] method = test.getClass().getMethods();\r\n    \t\t//firstMoveChoice\r\n    \t\tmethod[0].invoke(test, null);\r\n    \t\t//secondMoveChoice\r\n    \t\tmethod[1].invoke(test, null);\r\n    \t\t//thirdMoveChoice\r\n    \t\tmethod[2].invoke(test, null);\r\n    \t}\r\n    \t\r\n    }\r\n\r\n","title":"What is reflection and why is it useful?"},{"comments":[{"owner":{"reputation":960,"user_id":1092670,"user_type":"registered","accept_rate":93,"profile_image":"https://i.stack.imgur.com/sZiEO.jpg?s=128&g=1","display_name":"AnthonyJClink","link":"https://stackoverflow.com/users/1092670/anthonyjclink"},"score":0,"creation_date":1517328862}],"owner":{"reputation":4995,"user_id":2288882,"user_type":"registered","accept_rate":52,"profile_image":"https://www.gravatar.com/avatar/fbefc3abe38dfc80b207905af1794924?s=128&d=identicon&r=PG","display_name":"Marcus Thornton","link":"https://stackoverflow.com/users/2288882/marcus-thornton"},"comment_count":1,"score":11,"creation_date":1449558139,"body_markdown":"Reflection is to let object to see their appearance. This argument seems nothing to do with reflection. In fact, this is the &quot;self-identify&quot; ability.\r\n\r\nReflection itself is a word for such languages that lack the capability of self-knowledge and self-sensing as Java and C#. Because they do not have the capability of self-knowledge, when we want to observe how it looks like, we must have another thing to reflect on how it looks like. Excellent dynamic languages such as Ruby and Python can perceive the reflection of their own without the help of other individuals. We can say that the object of Java cannot perceive how it looks like without a mirror, which is an object of the reflection class, but an object in Python can perceive it without a mirror. So that&#39;s why we need reflection in Java.\r\n","title":"What is reflection and why is it useful?"},{"comments":[{"owner":{"reputation":68430,"user_id":363751,"user_type":"registered","accept_rate":35,"profile_image":"https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG","display_name":"supercat","link":"https://stackoverflow.com/users/363751/supercat"},"score":0,"creation_date":1580583181}],"owner":{"reputation":41397,"user_id":4999394,"user_type":"registered","accept_rate":98,"profile_image":"https://i.stack.imgur.com/nAGmt.png?s=128&g=1","display_name":"Ravindra babu","link":"https://stackoverflow.com/users/4999394/ravindra-babu"},"comment_count":1,"score":9,"creation_date":1455366825,"body_markdown":"From java documentation [page][1]\r\n\r\n&gt;`java.lang.reflect` package provides classes and interfaces for obtaining reflective information about classes and objects. Reflection allows programmatic access to information about the fields, methods and constructors of loaded classes, and the use of reflected fields, methods, and constructors to operate on their underlying counterparts, within security restrictions.\r\n\r\n`AccessibleObject` allows suppression of access checks if the necessary `ReflectPermission` is available.\r\n\r\nClasses in this package, along with `java.lang.Class` accommodate applications such as debuggers, interpreters, object inspectors, class browsers, and services such as `Object Serialization` and `JavaBeans` that need access to either the public members of a target object (based on its runtime class) or the members declared by a given class\r\n\r\nIt includes following functionality.\r\n\r\n1. Obtaining Class objects,\r\n2. Examining properties of a class (fields, methods, constructors),\r\n3. Setting and getting field values,\r\n4. Invoking methods,\r\n5. Creating new instances of objects.\r\n\r\nHave a look at this [documentation][2] link for the methods exposed by ***`Class`*** class.\r\n\r\nFrom this [article][3] (by Dennis Sosnoski, President, Sosnoski Software Solutions, Inc)  and this [article][4] (security-explorations pdf):\r\n\r\nI can see considerable drawbacks than uses of using Reflection\r\n\r\n***User of Reflection:***\r\n\r\n1. It provides very versatile way of dynamically linking program components\r\n2. It is useful for creating libraries that work with objects in very general ways\r\n\r\n***Drawbacks of Reflection:***\r\n\r\n1. Reflection is much slower than direct code when used for field and method access.\r\n2. It can obscure what&#39;s actually going on inside your code\r\n3. It bypasses the source code can create maintenance problems\r\n4. Reflection code is also more complex than the corresponding direct code\r\n5. It  allows violation of key Java security constraints such\r\nas data access protection and type safety\r\n\r\n\r\n***General abuses:***\r\n\r\n1. Loading of restricted classes,\r\n2. Obtaining references to constructors, methods or fields of a restricted class,\r\n3. Creation of new object instances, methods invocation, getting or setting field values of a restricted class.\r\n\r\nHave a look at this SE question regarding abuse of reflection feature:\r\n\r\nhttps://stackoverflow.com/questions/1196192/how-do-i-read-a-private-field-in-java\r\n\r\n\r\n**Summary:**\r\n\r\n*Insecure use of its functions conducted from within a system code can also easily lead to the compromise of a Java security mode*l. ***So use this feature sparingly***\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/package-summary.html\r\n  [2]: https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\r\n  [3]: http://www.ibm.com/developerworks/library/j-dyn0603/\r\n  [4]: http://www.security-explorations.com/materials/se-2012-01-report.pdf","title":"What is reflection and why is it useful?"},{"owner":{"reputation":167,"user_id":2774441,"user_type":"registered","profile_image":"https://i.stack.imgur.com/LLPAR.jpg?s=128&g=1","display_name":"saumik gupta","link":"https://stackoverflow.com/users/2774441/saumik-gupta"},"comment_count":0,"score":7,"creation_date":1461711289,"body_markdown":"Reflection gives you the ability to write more generic code. It allows you to create an object at runtime and call its method at runtime. Hence the program can be made highly parameterized. It also allows introspecting the object and class to detect its variables and method exposed to the outer world.","title":"What is reflection and why is it useful?"},{"comments":[{"owner":{"reputation":1387,"user_id":2814308,"user_type":"registered","accept_rate":87,"profile_image":"https://i.stack.imgur.com/pz7MQ.jpg?s=128&g=1","display_name":"SantiBailors","link":"https://stackoverflow.com/users/2814308/santibailors"},"score":4,"creation_date":1513769253},{"owner":{"reputation":973,"user_id":717290,"user_type":"registered","accept_rate":33,"profile_image":"https://graph.facebook.com/812988293/picture?type=large","display_name":"Fernando Gabrieli","link":"https://stackoverflow.com/users/717290/fernando-gabrieli"},"score":0,"creation_date":1543699684}],"owner":{"reputation":6153,"user_id":5167682,"user_type":"registered","accept_rate":29,"profile_image":"https://i.stack.imgur.com/2vexc.jpg?s=128&g=1","display_name":"roottraveller","link":"https://stackoverflow.com/users/5167682/roottraveller"},"comment_count":2,"score":18,"creation_date":1490167628,"body_markdown":"**Reflection** is an API which is used to examine or modify the behaviour of *methods, classes, interfaces* at runtime.\r\n\r\n 1. The required classes for reflection are provided under `java.lang.reflect package`.\r\n 2. Reflection gives us information about the class to which an object belongs and also the methods of that class which can be executed by using the object.\r\n 3. Through reflection we can invoke methods at runtime irrespective of the access specifier used with them.\r\n\r\nThe `java.lang` and `java.lang.reflect` packages provide classes for java reflection.\r\n\r\n**Reflection** can be used to get information about –\r\n\r\n 1. **Class** The `getClass()` method is used to get the name of the class to which an object belongs.\r\n\r\n 2. **Constructors** The `getConstructors()` method is used to get the public constructors of the class to which an object belongs.\r\n\r\n 3. **Methods** The `getMethods()` method is used to get the public methods of the class to which an objects belongs.\r\n\r\nThe **Reflection API** is mainly used in:\r\n\r\nIDE (Integrated Development Environment) e.g. Eclipse, MyEclipse, NetBeans etc.&lt;br&gt;\r\nDebugger and Test Tools etc.\r\n\r\n[![][1]][1]\r\n\r\n**Advantages of Using Reflection:**\r\n\r\n*Extensibility Features:* An application may make use of external, user-defined classes by creating instances of extensibility objects using their fully-qualified names.\r\n\r\n*Debugging and testing tools:* Debuggers use the property of reflection to examine private members on classes.\r\n \r\n\r\n**Drawbacks:**\r\n\r\n*Performance Overhead:* Reflective operations have slower performance than their non-reflective counterparts, and should be avoided in sections of code which are called frequently in performance-sensitive applications.\r\n\r\n*Exposure of Internals:* Reflective code breaks abstractions and therefore may change behaviour with upgrades of the platform.\r\n\r\n\r\nRef: [Java Reflection][2]  [javarevisited.blogspot.in][3]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/zEXW5.png\r\n  [2]: http://www.geeksforgeeks.org/reflection-in-java/\r\n  [3]: http://javarevisited.blogspot.in/2012/05/how-to-access-private-field-and-method.html","title":"What is reflection and why is it useful?"},{"owner":{"reputation":330,"user_id":4651104,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-tSdWLWO7Yb0/AAAAAAAAAAI/AAAAAAAABDk/wWMAUX7DPlA/photo.jpg?sz=128","display_name":"Mohammed Sarfaraz","link":"https://stackoverflow.com/users/4651104/mohammed-sarfaraz"},"comment_count":0,"score":9,"creation_date":1491704974,"body_markdown":"As name itself suggest it reflects what it holds for example class method,etc apart from providing feature to invoke method creating instance dynamically at runtime.\n\nIt is used by many frameworks and application under the wood to invoke services without actually knowing the code. \n\n","title":"What is reflection and why is it useful?"},{"owner":{"reputation":2371,"user_id":3631743,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/Y1ASY.jpg?s=128&g=1","display_name":"BSeitkazin","link":"https://stackoverflow.com/users/3631743/bseitkazin"},"comment_count":0,"score":3,"creation_date":1543991757,"body_markdown":"I want to answer this question by example. First of all `Hibernate` project uses `Reflection API` to generate `CRUD` statements to bridge the chasm between the running application and the persistence store. When things change in the domain, the `Hibernate` has to know about them to persist them to the data store and vice versa.\r\n\r\nAlternatively works `Lombok Project`. It just injects code at compile time, result in code being inserted into your domain classes. (I think it is OK for getters and setters)\r\n\r\n`Hibernate` chose `reflection` because it has minimal impact on the build process for an application.\r\n\r\nAnd from Java 7 we have `MethodHandles`, which works as `Reflection API`. In projects, to work with loggers we just copy-paste the next code:\r\n\r\n    Logger LOGGER = Logger.getLogger(MethodHandles.lookup().lookupClass().getName());\r\n\r\nBecause it is hard to make typo-error in this case. ","title":"What is reflection and why is it useful?"},{"owner":{"reputation":839,"user_id":1347707,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/ff08d150225ce24ae812052a7fc71dfc?s=128&d=identicon&r=PG","display_name":"cprn","link":"https://stackoverflow.com/users/1347707/cprn"},"comment_count":0,"score":3,"creation_date":1556271275,"body_markdown":"As I find it best to explain by example and none of the answers seem to do that...\r\n\r\nA practical example of using reflections would be a Java Language Server written in Java or a PHP Language Server written in PHP, etc. Language Server gives your IDE abilities like autocomplete, jump to definition, context help, hinting types and more. In order to have all tag names (words that can be autocompleted) to show all the possible matches as you type the Language Server has to inspect everything about the class including doc blocks and private members. For that it needs a reflection of said class.\r\n\r\nA different example would be a unit-test of a private method. One way to do so is to create a reflection and change the method&#39;s scope to public in the test&#39;s set-up phase. Of course one can argue private methods shouldn&#39;t be tested directly but that&#39;s not the point.","title":"What is reflection and why is it useful?"},{"owner":{"reputation":309,"user_id":4704305,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-CIHhk9c6JPQ/AAAAAAAAAAI/AAAAAAAAAAA/LCzwKK2NPzs/photo.jpg?sz=128","display_name":"RSG","link":"https://stackoverflow.com/users/4704305/rsg"},"comment_count":0,"score":1,"creation_date":1606172512,"body_markdown":"**IMPORTANT**\r\n\r\nStarting from Java 9 you cannot longer use reflection unless the package-info.java **opens** the module to reflection access.\r\n\r\nBy default reflection access to all packages in the module is denied.\r\n\r\n\r\nSee [Understanding Java 9 Modules][1]\r\n\r\n\r\n  [1]: https://www.oracle.com/corporate/features/understanding-java-9-modules.html","title":"What is reflection and why is it useful?"}],"owner":{"reputation":41920,"user_id":142,"user_type":"registered","accept_rate":97,"profile_image":"https://www.gravatar.com/avatar/73f6b2c26b7b1a8974a2a2f94a14706c?s=128&d=identicon&r=PG","display_name":"Lehane","link":"https://stackoverflow.com/users/142/lehane"},"comment_count":7,"is_answered":true,"answer_count":22,"score":2238,"creation_date":1220258361,"question_id":37628,"body_markdown":"What is reflection, and why is it useful?\r\n\r\nI&#39;m particularly interested in Java, but I assume the principles are the same in any language.","link":"https://stackoverflow.com/questions/37628/what-is-reflection-and-why-is-it-useful","title":"What is reflection and why is it useful?"},{"tags":["java","spring","spring-mvc","annotations"],"comments":[{"owner":{"reputation":8089,"user_id":795158,"user_type":"registered","accept_rate":95,"profile_image":"https://i.stack.imgur.com/46saQ.jpg?s=128&g=1","display_name":"Ivaylo Slavov","link":"https://stackoverflow.com/users/795158/ivaylo-slavov"},"score":11,"creation_date":1447171012},{"owner":{"reputation":1581,"user_id":1052099,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/758bb1797d9e4fd8d2165f55ac71a47b?s=128&d=identicon&r=PG","display_name":"TriCore","link":"https://stackoverflow.com/users/1052099/tricore"},"score":3,"creation_date":1499229944},{"owner":{"reputation":5235,"user_id":5070577,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/719712211549bdac23e2b1dcaaa6e01b?s=128&d=identicon&r=PG&f=1","display_name":"Walfrat","link":"https://stackoverflow.com/users/5070577/walfrat"},"score":40,"creation_date":1506610859}],"answers":[{"comments":[{"owner":{"reputation":1871,"user_id":2041542,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/b371d04f1710a8d17f0d835fe88c3820?s=128&d=identicon&r=PG","display_name":"kapil das","link":"https://stackoverflow.com/users/2041542/kapil-das"},"score":1,"creation_date":1382101714},{"owner":{"reputation":1731,"user_id":1901896,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/77b2651b08f4279ec5a29169d6c40c3d?s=128&d=identicon&r=PG","display_name":"Akash5288","link":"https://stackoverflow.com/users/1901896/akash5288"},"score":23,"creation_date":1418753250},{"owner":{"reputation":4611,"user_id":538921,"user_type":"registered","accept_rate":91,"profile_image":"https://www.gravatar.com/avatar/efe3dcebff1c01cdbb1d8ce459f23343?s=128&d=identicon&r=PG","display_name":"Eddie B","link":"https://stackoverflow.com/users/538921/eddie-b"},"score":1,"creation_date":1424482534}],"owner":{"reputation":548952,"user_id":203907,"user_type":"registered","accept_rate":81,"profile_image":"https://i.stack.imgur.com/07ej2.jpg?s=128&g=1","display_name":"Bozho","link":"https://stackoverflow.com/users/203907/bozho"},"comment_count":3,"score":441,"creation_date":1311671761,"body_markdown":"They are almost the same - all of them mean that the class is a Spring bean. `@Service`, `@Repository` and `@Controller` are specialized `@Component`s. You can choose to perform specific actions with them. For example:\r\n\r\n- `@Controller` beans are used by spring-mvc\r\n- `@Repository` beans are eligible for persistence exception translation\r\n\r\nAnother thing is that you designate the components semantically to different layers.\r\n\r\nOne thing that `@Component` offers is that you can annotate other annotations with it, and then use them the same way as `@Service`.\r\n\r\nFor example recently I made:\r\n\r\n    @Component\r\n    @Scope(&quot;prototype&quot;)\r\n    public @interface ScheduledJob {..}\r\n\r\nSo all classes annotated with `@ScheduledJob` are spring beans and in addition to that are registered as quartz jobs. You just have to provide code that handles the specific annotation.","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"comments":[{"owner":{"reputation":1970,"user_id":251914,"user_type":"registered","accept_rate":43,"profile_image":"https://www.gravatar.com/avatar/8809800aec2460f291384b794d7e6f8f?s=128&d=identicon&r=PG","display_name":"Rick","link":"https://stackoverflow.com/users/251914/rick"},"score":6,"creation_date":1394532521},{"owner":{"reputation":5356,"user_id":3470841,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/39baa24f1e7778a959522c337ca474b3?s=128&d=identicon&r=PG&f=1","display_name":"Jack","link":"https://stackoverflow.com/users/3470841/jack"},"score":1,"creation_date":1426850146},{"owner":{"reputation":76313,"user_id":445543,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/f5a3631b359d5fa1451372810c10d65e?s=128&d=identicon&r=PG","display_name":"stivlo","link":"https://stackoverflow.com/users/445543/stivlo"},"score":10,"creation_date":1426852217},{"owner":{"reputation":54199,"user_id":1697099,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/gerXo.png?s=128&g=1","display_name":"Premraj","link":"https://stackoverflow.com/users/1697099/premraj"},"score":4,"creation_date":1435843492},{"owner":{"reputation":13526,"user_id":206466,"user_type":"registered","accept_rate":70,"profile_image":"https://www.gravatar.com/avatar/e990c7cdac81e570939c4d5b17303b42?s=128&d=identicon&r=PG","display_name":"xenoterracide","link":"https://stackoverflow.com/users/206466/xenoterracide"},"score":6,"creation_date":1461353025},{"owner":{"reputation":183744,"user_id":135589,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/dbd98f264c64096af168747c3ae71a7d?s=128&d=identicon&r=PG","display_name":"Jesper","link":"https://stackoverflow.com/users/135589/jesper"},"score":4,"creation_date":1464686625},{"owner":{"reputation":10316,"user_id":2889165,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/c8d9d5e8699011436c3bc854fbc8324c?s=128&d=identicon&r=PG&f=1","display_name":"Andreas Lundgren","link":"https://stackoverflow.com/users/2889165/andreas-lundgren"},"score":0,"creation_date":1472825037},{"owner":{"reputation":133349,"user_id":5221149,"user_type":"registered","profile_image":"https://i.stack.imgur.com/s4qlq.png?s=128&g=1","display_name":"Andreas","link":"https://stackoverflow.com/users/5221149/andreas"},"score":1,"creation_date":1503595421},{"owner":{"reputation":406,"user_id":1984342,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/0c84f2f5ed182d7801150fafaa3cbd78?s=128&d=identicon&r=PG","display_name":"Neeraj Singh","link":"https://stackoverflow.com/users/1984342/neeraj-singh"},"score":0,"creation_date":1548875499},{"owner":{"reputation":768,"user_id":1356874,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/c8bac5749f60487fa6d983f89985f016?s=128&d=identicon&r=PG","display_name":"http8086","link":"https://stackoverflow.com/users/1356874/http8086"},"score":0,"creation_date":1565946096}],"owner":{"reputation":76313,"user_id":445543,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/f5a3631b359d5fa1451372810c10d65e?s=128&d=identicon&r=PG","display_name":"stivlo","link":"https://stackoverflow.com/users/445543/stivlo"},"comment_count":10,"score":1596,"creation_date":1312194012,"body_markdown":"From [Spring Documentation](https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-stereotype-annotations):\r\n\r\n&gt; The `@Repository` annotation is a marker for any class that fulfils the\r\n&gt; role or stereotype of a repository (also known as Data Access Object\r\n&gt; or DAO). Among the uses of this marker is the automatic translation of\r\n&gt; exceptions, as described in [Exception Translation][1].\r\n&gt; \r\n&gt; Spring provides further stereotype annotations: `@Component`, `@Service`,\r\n&gt; and `@Controller`. `@Component` is a generic stereotype for any\r\n&gt; Spring-managed component. `@Repository`, `@Service`, and `@Controller` are\r\n&gt; specializations of `@Component` for more specific use cases (in the\r\n&gt; persistence, service, and presentation layers, respectively).\r\n&gt; Therefore, you can annotate your component classes with `@Component`,\r\n&gt; but, by annotating them with `@Repository`, `@Service`, or `@Controller`\r\n&gt; instead, your classes are more properly suited for processing by tools\r\n&gt; or associating with aspects. \r\n&gt;\r\n&gt; For example, these stereotype annotations\r\n&gt; make ideal targets for pointcuts. `@Repository`, `@Service`, and\r\n&gt; `@Controller` can also carry additional semantics in future releases of\r\n&gt; the Spring Framework. Thus, if you are choosing between using\r\n&gt; `@Component` or `@Service` for your service layer, `@Service` is clearly the\r\n&gt; better choice. Similarly, as stated earlier, `@Repository` is already\r\n&gt; supported as a marker for automatic exception translation in your\r\n&gt; persistence layer.\r\n\r\n| Annotation     | Meaning                                             |\r\n| -------------- | --------------------------------------------------- |\r\n|  `@Component`  | generic stereotype for any Spring-managed component |\r\n|  `@Repository` | stereotype for persistence layer                    |\r\n|  `@Service`    | stereotype for service layer                        |\r\n|  `@Controller` | stereotype for presentation layer (spring-mvc)      |\r\n\r\n\r\n  [1]: https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/data-access.html#orm-exception-translation","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"comments":[{"owner":{"reputation":603,"user_id":2513788,"user_type":"registered","accept_rate":29,"profile_image":"https://i.stack.imgur.com/AnNV2.jpg?s=128&g=1","display_name":"Nayeem","link":"https://stackoverflow.com/users/2513788/nayeem"},"score":0,"creation_date":1543596999},{"owner":{"reputation":2987,"user_id":1188047,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/fs94t.jpg?s=128&g=1","display_name":"Ben","link":"https://stackoverflow.com/users/1188047/ben"},"score":0,"creation_date":1543598977}],"owner":{"reputation":507,"user_id":1794781,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a4dcb1ff6dfc4cffe3b1f634ca7cacfa?s=128&d=identicon&r=PG","display_name":"Das","link":"https://stackoverflow.com/users/1794781/das"},"comment_count":2,"score":49,"creation_date":1351872345,"body_markdown":"Use of `@Service` and `@Repository` annotations are important from database connection perspective.\r\n\r\n1. Use `@Service` for all your web service type of DB connections\r\n2. Use `@Repository` for all your stored proc DB connections\r\n\r\nIf you do not use the proper annotations, you may face commit exceptions overridden by rollback transactions. You will see exceptions during stress load test that is related to roll back JDBC transactions.","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":2202,"user_id":2334534,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/jsorb.jpg?s=128&g=1","display_name":"Ajit Singh","link":"https://stackoverflow.com/users/2334534/ajit-singh"},"comment_count":0,"score":76,"creation_date":1368622125,"body_markdown":"&gt; Spring 2.5 introduces further stereotype annotations: @Component, @Service and @Controller. @Component serves as a generic stereotype for any Spring-managed component; whereas, @Repository, @Service, and @Controller serve as specializations of @Component for more specific use cases (e.g., in the persistence, service, and presentation layers, respectively). What this means is that you can annotate your component classes with @Component, but by annotating them with @Repository, @Service, or @Controller instead, your classes are more properly suited for processing by tools or associating with aspects. For example, these stereotype annotations make ideal targets for pointcuts. Of course, it is also possible that @Repository, @Service, and @Controller may carry additional semantics in future releases of the Spring Framework. Thus, if you are making a decision between using @Component or @Service for your service layer, @Service is clearly the better choice. Similarly, as stated above, @Repository is already supported as a marker for automatic exception translation in your persistence layer.\r\n\r\n&gt;     @Component – Indicates a auto scan component.\r\n    @Repository – Indicates DAO component in the persistence layer.\r\n    @Service – Indicates a Service component in the business layer.\r\n    @Controller – Indicates a controller component in the presentation layer.\r\n\r\n\r\nreference :- [Spring Documentation - Classpath scanning, managed components and writing configurations using Java ][1]  \r\n\r\n\r\n  [1]: https://docs.spring.io/spring/docs/3.0.0.M3/reference/html/ch04s12.html","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":494,"user_id":1009686,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/6eb2435dc6f7767f0f5554298516db6b?s=128&d=identicon&r=PG","display_name":"Manjush","link":"https://stackoverflow.com/users/1009686/manjush"},"comment_count":0,"score":19,"creation_date":1392056497,"body_markdown":"Even if we interchange @Component or @Repository or @service\r\n\r\nIt will behave the same , but one aspect is that they wont be able to catch some specific exception related to DAO instead of Repository if we use component or @ service","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"comments":[{"owner":{"reputation":1576,"user_id":921075,"user_type":"registered","accept_rate":87,"profile_image":"https://i.stack.imgur.com/hsvpu.jpg?s=128&g=1","display_name":"dtc","link":"https://stackoverflow.com/users/921075/dtc"},"score":26,"creation_date":1461704712},{"owner":{"reputation":77131,"user_id":238134,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/d80ce5271185447eb06b360959acd71f?s=128&d=identicon&r=PG","display_name":"deamon","link":"https://stackoverflow.com/users/238134/deamon"},"score":2,"creation_date":1493240254},{"owner":{"reputation":6211,"user_id":3244185,"user_type":"registered","profile_image":"https://i.stack.imgur.com/ocJBK.jpg?s=128&g=1","display_name":"Harshal Patil","link":"https://stackoverflow.com/users/3244185/harshal-patil"},"score":0,"creation_date":1493274817},{"owner":{"reputation":77131,"user_id":238134,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/d80ce5271185447eb06b360959acd71f?s=128&d=identicon&r=PG","display_name":"deamon","link":"https://stackoverflow.com/users/238134/deamon"},"score":4,"creation_date":1493278483},{"owner":{"reputation":2705,"user_id":2102748,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/2a1adcb8ed924ecd1045fd6252a7df18?s=128&d=identicon&r=PG","display_name":"milosmns","link":"https://stackoverflow.com/users/2102748/milosmns"},"score":1,"creation_date":1543577481},{"owner":{"reputation":6211,"user_id":3244185,"user_type":"registered","profile_image":"https://i.stack.imgur.com/ocJBK.jpg?s=128&g=1","display_name":"Harshal Patil","link":"https://stackoverflow.com/users/3244185/harshal-patil"},"score":0,"creation_date":1543664461},{"owner":{"reputation":3437,"user_id":1039774,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/e98163c769e5dc8243bfef700edded42?s=128&d=identicon&r=PG","display_name":"Devabc","link":"https://stackoverflow.com/users/1039774/devabc"},"score":0,"creation_date":1547592050}],"owner":{"reputation":6211,"user_id":3244185,"user_type":"registered","profile_image":"https://i.stack.imgur.com/ocJBK.jpg?s=128&g=1","display_name":"Harshal Patil","link":"https://stackoverflow.com/users/3244185/harshal-patil"},"comment_count":7,"score":230,"creation_date":1395734401,"body_markdown":"In Spring `@Component`, `@Service`, `@Controller`, and `@Repository` are Stereotype annotations which are used for:\r\n\r\n`@Controller:` where your **request** **mapping from presentation page** done i.e. Presentation layer won&#39;t go to any other file it goes directly to `@Controller` class and checks for requested path in `@RequestMapping` annotation which written before method calls if necessary.\r\n\r\n`@Service`: All business logic is here i.e. Data related calculations and all.This annotation of business layer in which our user not directly call persistence method so it will call this method using this annotation. **It will request @Repository as per user request**\r\n\r\n`@Repository`: This is Persistence layer(Data Access Layer) of application which used to get data from the database. i.e. **all the Database related operations are done by the repository.**\r\n\r\n`@Component` - Annotate your other components (for example REST resource classes) with a component stereotype.\r\n\r\n&gt; Indicates that an annotated class is a &quot;[component][1]&quot;. Such classes are\r\n&gt; considered as candidates for auto-detection when using\r\n&gt; annotation-based configuration and classpath scanning.\r\n&gt; \r\n&gt; Other class-level annotations may be considered as identifying a\r\n&gt; component as well, typically a special kind of component: e.g. the\r\n&gt; @Repository annotation or AspectJ&#39;s @Aspect annotation.\r\n\r\n\r\n\r\n[![enter image description here][2]][1]\r\n\r\n\r\n  [1]: http://docs.spring.io/spring-framework/docs/2.5.x/api/org/springframework/stereotype/Component.html\r\n  [2]: http://i.stack.imgur.com/nXfyV.jpg","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"comments":[{"owner":{"reputation":1073,"user_id":3170609,"user_type":"registered","accept_rate":32,"profile_image":"https://www.gravatar.com/avatar/926567e804e68978e812749378a66d64?s=128&d=identicon&r=PG&f=1","display_name":"user107986","link":"https://stackoverflow.com/users/3170609/user107986"},"score":9,"creation_date":1441538962},{"owner":{"reputation":5695,"user_id":1984049,"user_type":"registered","accept_rate":74,"profile_image":"https://i.stack.imgur.com/ruHJK.jpg?s=128&g=1","display_name":"Oliver","link":"https://stackoverflow.com/users/1984049/oliver"},"score":28,"creation_date":1441975079},{"owner":{"reputation":398,"user_id":4044412,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b35a668f4d5925bd63d4fd5475ad9d5c?s=128&d=identicon&r=PG&f=1","display_name":"Moni","link":"https://stackoverflow.com/users/4044412/moni"},"score":0,"creation_date":1454104504},{"owner":{"reputation":599,"user_id":2033761,"user_type":"registered","accept_rate":64,"profile_image":"https://i.stack.imgur.com/svYSa.jpg?s=128&g=1","display_name":"codecitrus","link":"https://stackoverflow.com/users/2033761/codecitrus"},"score":0,"creation_date":1491786324}],"owner":{"reputation":5695,"user_id":1984049,"user_type":"registered","accept_rate":74,"profile_image":"https://i.stack.imgur.com/ruHJK.jpg?s=128&g=1","display_name":"Oliver","link":"https://stackoverflow.com/users/1984049/oliver"},"comment_count":4,"score":394,"creation_date":1400822142,"body_markdown":"@Component is equivalent to \r\n\r\n    &lt;bean&gt;\r\n\r\n**@Service, @Controller, @Repository = {@Component + some more special functionality}**\r\n\r\nThat mean Service, The Controller and Repository are functionally the same. \r\n\r\n The three annotations are used to separate **&quot;Layers&quot;** in your application, \r\n\r\n - Controllers just do stuff like dispatching, forwarding, calling service methods etc.\r\n - Service Hold business Logic, Calculations etc.\r\n - Repository are the DAOs (Data Access Objects), they access the database directly.\r\n\r\nNow you may ask why separate them: (I assume you know AOP-Aspect Oriented Programming) \r\n\r\nLet&#39;s say you want to Monitors the Activity of the DAO Layer only. You will write an Aspect (A class) class that does some logging before and after every method of your DAO is invoked, you are able to do that using AOP as you have three distinct Layers and are not mixed.\r\n\r\nSo you can do logging of DAO  &quot;around&quot;, &quot;before&quot; or &quot;after&quot; the DAO methods. You could do that because you had a DAO in the first place. What you just achieved is **Separation of concerns or tasks.**\r\n\r\nImagine if there were only one annotation @Controller, then this component will have dispatching, business logic and accessing database all mixed, so dirty code!\r\n\r\n*Above mentioned is one very common scenario, there are many more use cases of why to use three annotations.*\r\n\r\n\r\n","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":4401,"user_id":1245337,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/rQev9.jpg?s=128&g=1","display_name":"atish shimpi","link":"https://stackoverflow.com/users/1245337/atish-shimpi"},"comment_count":0,"score":29,"creation_date":1405682581,"body_markdown":"**@Repository** **@Service** and **@Controller** are serves as specialization of @Component for more specific use on that basis you can replace @Service to @Component but in this case you loose the specialization.\r\n\r\n    1. **@Repository**   - Automatic exception translation in your persistence layer.\r\n    2. **@Service**      - It indicates that the annotated class is providing a business service to other layers within the application.","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":525,"user_id":3083363,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/ZnQxw.jpg?s=128&g=1","display_name":"Anil Amane","link":"https://stackoverflow.com/users/3083363/anil-amane"},"comment_count":0,"score":28,"creation_date":1429978768,"body_markdown":"all these annotations are type of stereo type type of annotation,the difference between these three annotations are \r\n\r\n&gt;  - If we add the @Component then it tells the role of class is a component class it means it is a class consisting some logic,but it\r\n&gt; does not tell whether a class containing a specifically business or\r\n&gt; persistence or controller logic so we don&#39;t use directly this\r\n&gt; @Component annotation\r\n&gt;  - If we add @Service annotation then it tells that a role of class consisting business logic\r\n&gt;  - If we add @Repository on top of class then it tells that a class consisting persistence logic\r\n&gt;  - Here @Component is a base annotation for @Service,@Repository and @Controller annotations\r\n\r\nfor example \r\n\r\n    package com.spring.anno;\r\n    @Service\r\n    public class TestBean\r\n    {\r\n        public void m1()\r\n        {\r\n           //business code\r\n        }\r\n    }\r\n    \r\n    package com.spring.anno;\r\n    @Repository\r\n    public class TestBean\r\n    {\r\n        public void update()\r\n        {\r\n           //persistence code\r\n        }\r\n    }\r\n\r\n - whenever we adds the `@Service` or `@Repositroy` or `@Controller` annotation by default `@Component` annotation is going to existence on top of the class\r\n\r\n  \r\n\r\n \r\n\r\n ","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":536,"user_id":5426099,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7e5bdef46ce67ddf4577d16100151d12?s=128&d=identicon&r=PG&f=1","display_name":"tech.yenduri","link":"https://stackoverflow.com/users/5426099/tech-yenduri"},"comment_count":0,"score":21,"creation_date":1448514633,"body_markdown":"There is no difference between `@Component`, `@Service`, `@Controller`, `@Repository`.\r\n`@Component` is the Generic annotation to represent the component of our MVC. But there will be several components as part of our MVC application like service layer components, persistence layer components and presentation layer components. So to differentiate them Spring people have given the other three annotations also.\r\n\r\n - To represent persistence layer components: `@Repository`\r\n - To represent service layer components: `@Service`\r\n - To represent presentation layer components: `@Controller`\r\n - or else you can use `@Component` for all of them.","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":301,"user_id":1392352,"user_type":"registered","profile_image":"https://i.stack.imgur.com/3QVFY.png?s=128&g=1","display_name":"hardeep thakur","link":"https://stackoverflow.com/users/1392352/hardeep-thakur"},"comment_count":0,"score":25,"creation_date":1451797848,"body_markdown":"Spring provides four different types of auto component scan annotations, they are `@Component`, `@Service`, `@Repository` and `@Controller`. Technically, there is no difference between them, but every auto component scan annotation should be used for a special purpose and within the defined layer. \r\n\r\n`@Component`: It is a basic auto component scan annotation, it indicates annotated class is an auto scan component.\r\n\r\n`@Controller`: Annotated class indicates that it is a controller component, and mainly used at the presentation layer.\r\n\r\n`@Service`: It indicates annotated class is a Service component in the business layer.\r\n\r\n`@Repository`: You need to use this annotation within the persistence layer, this acts like database repository.\r\n\r\nOne should choose a more specialised form of `@Component` while annotating their class as this annotation may contain specific behavior going forward.\r\n","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"comments":[{"owner":{"reputation":749,"user_id":7778972,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-TwbDcuULkWA/AAAAAAAAAAI/AAAAAAAAGxU/KLydkW0KpHQ/photo.jpg?sz=128","display_name":"Rahul Gupta","link":"https://stackoverflow.com/users/7778972/rahul-gupta"},"score":0,"creation_date":1535096697}],"owner":{"reputation":32609,"user_id":2648077,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/fd10f51a1b9acf80448616c0a03cd261?s=128&d=identicon&r=PG&f=1","display_name":"Alireza Fattahi","link":"https://stackoverflow.com/users/2648077/alireza-fattahi"},"comment_count":1,"score":21,"creation_date":1462335824,"body_markdown":"We can answer this according to java standard\r\n\r\nReferring to `JSR-330`, which is now supported by spring, you can only use `@Named` to define a bean (Somehow `@Named=@Component`). So according to this standard, there seems that there is no use to define stereotypes (like `@Repository`, `@Service`, `@Controller`) to categories beans. \r\n\r\nBut spring user these different annotations in different for the specific use, for example: \r\n\r\n 1. Help developers define a better category for the competent. This categorizing may become helpful in some cases. (For example when you are using `aspect-oriented`, these can be a good candidate for `pointcuts`)\r\n 2. `@Repository` annotation will add some functionality to your bean (some automatic exception translation to your bean persistence layer).\r\n 3. If you are using spring MVC, the `@RequestMapping` can only be added to classes which are annotated by `@Controller`.\r\n","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":678,"user_id":5167492,"user_type":"registered","accept_rate":81,"profile_image":"https://graph.facebook.com/426050827586525/picture?type=large","display_name":"Quan Nguyen","link":"https://stackoverflow.com/users/5167492/quan-nguyen"},"comment_count":0,"score":15,"creation_date":1466415023,"body_markdown":"In Spring 4, latest version:\r\n\r\n&gt; The @Repository annotation is a marker for any class that fulfills the\r\n&gt; role or stereotype of a repository (also known as Data Access Object\r\n&gt; or DAO). Among the uses of this marker is the automatic translation of\r\n&gt; exceptions as described in Section 20.2.2, “Exception translation”.\r\n&gt; \r\n&gt; Spring provides further stereotype annotations: @Component, @Service,\r\n&gt; and @Controller. @Component is a generic stereotype for any\r\n&gt; Spring-managed component. @Repository, @Service, and @Controller are\r\n&gt; specializations of @Component for more specific use cases, for\r\n&gt; example, in the persistence, service, and presentation layers,\r\n&gt; respectively. Therefore, you can annotate your component classes with\r\n&gt; @Component, but by annotating them with @Repository, @Service, or\r\n&gt; @Controller instead, your classes are more properly suited for\r\n&gt; processing by tools or associating with aspects. For example, these\r\n&gt; stereotype annotations make ideal targets for pointcuts. It is also\r\n&gt; possible that @Repository, @Service, and @Controller may carry\r\n&gt; additional semantics in future releases of the Spring Framework. Thus,\r\n&gt; if you are choosing between using @Component or @Service for your\r\n&gt; service layer, @Service is clearly the better choice. Similarly, as\r\n&gt; stated above, @Repository is already supported as a marker for\r\n&gt; automatic exception translation in your persistence layer.","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"comments":[{"owner":{"reputation":3055,"user_id":1448509,"user_type":"registered","accept_rate":38,"profile_image":"https://www.gravatar.com/avatar/621f32ebd7d46fb2cd89d656cb232e95?s=128&d=identicon&r=PG","display_name":"Olga","link":"https://stackoverflow.com/users/1448509/olga"},"score":0,"creation_date":1495439346},{"owner":{"reputation":315,"user_id":6891873,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/36cc6f7e6fa12e635d3f5ad2773c240c?s=128&d=identicon&r=PG&f=1","display_name":"NodziGames","link":"https://stackoverflow.com/users/6891873/nodzigames"},"score":31,"creation_date":1530086741},{"owner":{"reputation":2007,"user_id":4720910,"user_type":"registered","profile_image":"https://i.stack.imgur.com/DHew5.jpg?s=128&g=1","display_name":"Musa","link":"https://stackoverflow.com/users/4720910/musa"},"score":0,"creation_date":1532700727},{"owner":{"reputation":3608,"user_id":758991,"user_type":"registered","accept_rate":55,"profile_image":"https://www.gravatar.com/avatar/8b8a49d5233ea23bef3a41060a129b4c?s=128&d=identicon&r=PG","display_name":"Ruslan Stelmachenko","link":"https://stackoverflow.com/users/758991/ruslan-stelmachenko"},"score":1,"creation_date":1558232470},{"owner":{"reputation":24255,"user_id":2815219,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d10432298a6eacf6be2f263d8fc3776b?s=128&d=identicon&r=PG","display_name":"Raman Sahasi","link":"https://stackoverflow.com/users/2815219/raman-sahasi"},"score":0,"creation_date":1558520407},{"owner":{"reputation":3608,"user_id":758991,"user_type":"registered","accept_rate":55,"profile_image":"https://www.gravatar.com/avatar/8b8a49d5233ea23bef3a41060a129b4c?s=128&d=identicon&r=PG","display_name":"Ruslan Stelmachenko","link":"https://stackoverflow.com/users/758991/ruslan-stelmachenko"},"score":0,"creation_date":1558538715},{"owner":{"reputation":3102,"user_id":3886961,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/772368ba3e38aa724fc0a4da29e977fe?s=128&d=identicon&r=PG&f=1","display_name":"kiedysktos","link":"https://stackoverflow.com/users/3886961/kiedysktos"},"score":3,"creation_date":1581501867}],"owner":{"reputation":24255,"user_id":2815219,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d10432298a6eacf6be2f263d8fc3776b?s=128&d=identicon&r=PG","display_name":"Raman Sahasi","link":"https://stackoverflow.com/users/2815219/raman-sahasi"},"comment_count":7,"score":859,"creation_date":1469342603,"body_markdown":"As many of the answers already state what these annotations are used for, we&#39;ll here focus on some minor differences among them.  \r\n\r\n&gt; First the **Similarity**   \r\n&gt;\r\n&gt; First point worth highlighting again is that **with respect to scan-auto-detection and dependency injection for BeanDefinition** all these annotations (viz., @Component, @Service,\r\n&gt; @Repository, @Controller) are the same. **We can use one in place\r\n&gt; of another and can still get our way around.**\r\n\r\n\r\n----------\r\n\r\n## Differences between @Component, @Repository, @Controller and @Service ##\r\n\r\n&gt; **@Component**\r\n\r\nThis is a general-purpose stereotype annotation indicating that the class is a spring component.\r\n \r\n***What’s special about @Component***  \r\n`&lt;context:component-scan&gt;` only scans `@Component` and does not look for `@Controller`, `@Service` and `@Repository` in general. They are scanned because they themselves are annotated with `@Component`.\r\n\r\nJust take a look at `@Controller`, `@Service` and `@Repository` annotation definitions:\r\n\r\n    @Component\r\n    public @interface Service {\r\n    \t….\r\n    }\r\n\r\n&#160;\r\n\r\n    @Component\r\n    public @interface Repository {\r\n    \t….\r\n    }\r\n\r\n&#160;\r\n\r\n    @Component\r\n    public @interface Controller {\r\n    \t…\r\n    }\r\n\r\n\r\nThus, it’s not wrong to say that `@Controller`, `@Service` and `@Repository` are special types of `@Component` annotation. `&lt;context:component-scan&gt;` picks them up and registers their following classes as beans, just as if they were annotated with `@Component`.\r\n\r\nSpecial type annotations are also scanned, because they themselves are annotated with `@Component` annotation, which means they are also `@Component`s. If we define our own custom annotation and annotate it with `@Component`, it will also get scanned with `&lt;context:component-scan&gt;`\r\n\r\n\r\n----------\r\n\r\n\r\n&gt; **@Repository**\r\n\r\nThis is to indicate that the class defines a data repository.\r\n\r\n***What’s special about @Repository?***  \r\n\r\nIn addition to pointing out, that this is an *Annotation based Configuration*, `@Repository`’s job is to catch platform specific exceptions and re-throw them as one of Spring’s unified unchecked exception. For this, we’re provided with `PersistenceExceptionTranslationPostProcessor`, that we are required to add in our Spring’s application context like this:\r\n\r\n    &lt;bean class=&quot;org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor&quot;/&gt;\r\n\r\nThis bean post processor adds an advisor to any bean that’s annotated with `@Repository` so that any platform-specific exceptions are caught and then re-thrown as one of Spring’s unchecked data access exceptions.\r\n\r\n\r\n----------\r\n\r\n\r\n&gt; **@Controller**\r\n\r\nThe `@Controller` annotation indicates that a particular class serves the role of a controller. The `@Controller` annotation acts as a stereotype for the annotated class, indicating its role.\r\n\r\n***What’s special about @Controller?***  \r\n\r\nWe cannot switch this annotation with any other like `@Service` or `@Repository`, even though they look same. \r\nThe dispatcher scans the classes annotated with `@Controller` and detects methods annotated with `@RequestMapping` annotations within them. We can use `@RequestMapping` on/in only those methods whose classes are annotated with `@Controller` and it will **NOT** work with `@Component`, `@Service`, `@Repository` etc...\r\n\r\n&lt;sub&gt;_Note: If a class is already registered as a bean through any alternate method, like through `@Bean` or through `@Component`, `@Service` etc... annotations, then `@RequestMapping` can be picked if the class is also annotated with `@RequestMapping` annotation. But that&#39;s a different scenario._&lt;/sub&gt;\r\n\r\n\r\n----------\r\n\r\n\r\n&gt; **@Service**\r\n\r\n`@Service` beans hold the business logic and call methods in the repository layer. \r\n\r\n***What’s special about @Service?***  \r\n\r\nApart from the fact that it&#39;s used to indicate, that it&#39;s holding the business logic, there’s nothing else noticeable in this annotation; but who knows, Spring may add some additional exceptional in future.\r\n\r\n\r\n----------\r\n\r\n\r\n&gt; ***What else?***\r\n\r\nSimilar to above, in the future Spring may add special functionalities for `@Service`, `@Controller` and `@Repository` based on their layering conventions. Hence, it&#39;s always a good idea to respect the convention and use it in line with layers.\r\n","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":513,"user_id":3912516,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/0WD1E.png?s=128&g=1","display_name":"Amol Dixit","link":"https://stackoverflow.com/users/3912516/amol-dixit"},"comment_count":0,"score":13,"creation_date":1482311530,"body_markdown":"`@Component` is the top level generic annotation which makes the annotated bean to be scanned and available in the DI container\r\n\r\n`@Repository` is specialized annotation and it brings the feature of converting all the unchecked exceptions from the DAO classes\r\n\r\n`@Service` is specialized annotation. it do not bring any new feature as of now but it clarifies the intent of the bean\r\n\r\n@Controller is specialized annotation which makes the bean MVC aware and allows the use of further annotation like `@RequestMapping` and all such\r\n\r\nHere are more [details][1]\r\n\r\n\r\n  [1]: http://howtodoinjava.com/spring/spring-core/how-to-use-spring-component-repository-service-and-controller-annotations/","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":1629,"user_id":992706,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/c4157893cac7f2758cdce7f48120828e?s=128&d=identicon&r=PG","display_name":"Bharath","link":"https://stackoverflow.com/users/992706/bharath"},"comment_count":0,"score":11,"creation_date":1482913139,"body_markdown":"A `@Service` to quote spring documentation,\r\n\r\n&gt; Indicates that an annotated class is a &quot;Service&quot;, **originally defined\r\n&gt; by Domain-Driven Design (Evans, 2003) as &quot;an operation offered as an\r\n&gt; interface that stands alone in the model, with no encapsulated state.&quot;**\r\n&gt; May also indicate that a class is a &quot;Business Service Facade&quot; (in the\r\n&gt; Core J2EE patterns sense), or something similar. This annotation is a\r\n&gt; general-purpose stereotype and individual teams may narrow their\r\n&gt; semantics and use as appropriate.\r\n\r\nIf you look at domain driven design by eric evans, \r\n\r\n&gt; A SERVICE is an operation offered as an interface that stands alone in\r\n&gt; the model, without encapsulating state, as ENTITIES and VALUE OBJECTS\r\n&gt; do. SERVICES are a common pattern in technical frameworks, but they\r\n&gt; can also apply in the domain layer. The name service emphasizes the\r\n&gt; relationship with other objects. Unlike ENTITIES and VALUE OBJECTS, it\r\n&gt; is defined purely in terms of what it can do for a client. A SERVICE\r\n&gt; tends to be named for an activity, rather than an entity—a verb rather\r\n&gt; than a noun. A SERVICE can still have an abstract, intentional\r\n&gt; definition; it just has a different flavor than the definition of an\r\n&gt; object. A SERVICE should still have a defined responsibility, and that\r\n&gt; responsibility and the interface fulfilling it should be defined as\r\n&gt; part of the domain model. Operation names should come from the\r\n&gt; UBIQUITOUS LANGUAGE or be introduced into it. Parameters and results\r\n&gt; should be domain objects. SERVICES should be used judiciously and not\r\n&gt; allowed to strip the ENTITIES and VALUE OBJECTS of all their behavior.\r\n&gt; But when an operation is actually an important domain concept, a\r\n&gt; SERVICE forms a natural part of a MODEL-DRIVEN DESIGN. Declared in the\r\n&gt; model as a SERVICE, rather than as a phony object that doesn&#39;t\r\n&gt; actually represent anything, the standalone operation will not mislead\r\n&gt; anyone. \r\n\r\nand a `Repository` as per Eric Evans,\r\n\r\n&gt; A REPOSITORY represents all objects of a certain type as a conceptual\r\n&gt; set (usually emulated). It acts like a collection, except with more\r\n&gt; elaborate querying capability. Objects of the appropriate type are\r\n&gt; added and removed, and the machinery behind the REPOSITORY inserts\r\n&gt; them or deletes them from the database. This definition gathers a\r\n&gt; cohesive set of responsibilities for providing access to the roots of\r\n&gt; AGGREGATES from early life cycle through the end.\r\n","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"comments":[{"owner":{"reputation":1449,"user_id":6440372,"user_type":"registered","profile_image":"https://graph.facebook.com/1554765301494639/picture?type=large","display_name":"Ashish Kamble","link":"https://stackoverflow.com/users/6440372/ashish-kamble"},"score":2,"creation_date":1571316618}],"owner":{"reputation":1212,"user_id":5536695,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/462842ef9c0d576967057065b4b962d6?s=128&d=identicon&r=PG&f=1","display_name":"YogendraR","link":"https://stackoverflow.com/users/5536695/yogendrar"},"comment_count":1,"score":50,"creation_date":1501150832,"body_markdown":"Technically `@Controller`, `@Service`, `@Repository` are all same. All of them extends `@Component`.\r\n\r\nFrom the Spring source code:\r\n\r\nIndicates that an annotated class is a &quot;component&quot;. Such classes are considered as candidates for auto-detection when using annotation-based configuration and classpath scanning.\r\n\r\n\r\nWe can directly use `@Component` for each and every bean, but for better understanding and maintainability of a large application, we use `@Controller`, `@Service`, `@Repository`.\r\n\r\nPurpose of each annotation:\r\n\r\n 1. `@Controller` -&gt; Classes annotated with this, are intended to receive a request from the client side. The first request comes to the Dispatcher Servlet, from where it passes the request to the particular controller using the value of `@RequestMapping` annotation.\r\n 2. `@Service` -&gt; Classes annotated with this, are intended to manipulate data, that we receive from the client or fetch from the database. All the manipulation with data should be done in this layer.\r\n 3. `@Repository` -&gt; Classes annotated with this, are intended to connect with database. It can also be considered as DAO(Data Access Object) layer. This layer should be restricted to CRUD (create, retrieve, update, delete) operations only.\r\nIf any manipulation is required, data should be sent be send back to @Service layer.\r\n\r\n \r\nIf we interchange their place(use `@Repository` in place of `@Controller`), our application will work fine.\r\n\r\nThe main purpose of using three different `@annotations` is to provide better Modularity to the Enterprise application.","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":1500,"user_id":4334162,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-5tBwtP88Td8/AAAAAAAAAAI/AAAAAAAAAL4/Kljmv21tq9E/photo.jpg?sz=128","display_name":"Arun Raaj","link":"https://stackoverflow.com/users/4334162/arun-raaj"},"comment_count":0,"score":19,"creation_date":1510234330,"body_markdown":"**@Component**: you annotate a class `@Component`, it tells hibernate that it is a Bean.\r\n\r\n**@Repository**: you annotate a class `@Repository`, it tells hibernate it is a DAO class and treat it as DAO class. Means it makes the unchecked exceptions (thrown from DAO methods) eligible for translation into Spring `DataAccessException`.\r\n\r\n**@Service**: This tells hibernate it is a Service class where you will have `@Transactional` etc Service layer annotations so hibernate treats it as a Service component.\r\n\r\nPlus `@Service` is advance of `@Component`. Assume the bean class name is `CustomerService`, since you did not choose XML bean configuration way so you annotated the bean with `@Component` to indicate it as a Bean. So while getting the bean object `CustomerService cust = (CustomerService)context.getBean(&quot;customerService&quot;);` By default, Spring will lower case the first character of the component – from ‘CustomerService’ to ‘customerService’. And you can retrieve this component with name ‘customerService’.\r\nBut if you use `@Service` annotation for the bean class you can provide a specific bean name by \r\n\r\n    @Service(&quot;AAA&quot;)\r\n    public class CustomerService{\r\nand you can get the bean object by \r\n\r\n    CustomerService cust = (CustomerService)context.getBean(&quot;AAA&quot;);\r\n\r\n","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":980,"user_id":8450064,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-sUFHZf-glew/AAAAAAAAAAI/AAAAAAAAAJU/DskFo5Z8xZ8/photo.jpg?sz=128","display_name":"Anil Nivargi","link":"https://stackoverflow.com/users/8450064/anil-nivargi"},"comment_count":0,"score":21,"creation_date":1511376123,"body_markdown":" Annotate other components with @Component, for example REST Resource classes.\n\n    @Component\n    public class AdressComp{\n        .......\n        ...//some code here    \n    }\n\n\n@Component is a generic stereotype for any Spring managed component. \n\n@Controller, @Service and @Repository are Specializations of @Component for specific use cases.\n\n### @Component in Spring\n\n[![&quot;Component Specialization&quot;][1]][1]\n\n\n  [1]: https://i.stack.imgur.com/FFIdh.png\n\n","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":5823,"user_id":1194067,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/ODFpP.jpg?s=128&g=1","display_name":"Jeevan Patil","link":"https://stackoverflow.com/users/1194067/jeevan-patil"},"comment_count":0,"score":6,"creation_date":1521615785,"body_markdown":"**Explanation of stereotypes :** \r\n\r\n - `@Service` - Annotate all your service classes with @Service. This layer knows the unit of work. All your business logic will be in Service classes. Generally methods of service layer are covered under transaction. You can make multiple DAO calls from service method, if one transaction fails all transactions should rollback.\r\n - `@Repository` - Annotate all your DAO classes with @Repository. All your database access logic should be in DAO classes.\r\n - `@Component` - Annotate your other components (for example REST resource classes) with component stereotype.\r\n - `@Autowired` - Let Spring auto-wire other beans into your classes using @Autowired annotation. \r\n\r\n`@Component` is a generic stereotype for any Spring-managed component. `@Repository`, `@Service`, and `@Controller` are specializations of `@Component` for more specific use cases, for example, in the persistence, service, and presentation layers, respectively. \r\n\r\nOriginally answered [here][1].\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/16051656/advantages-of-using-spring-stereotypes/16105106#16105106","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":475,"user_id":9112160,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/02d01bb0489ca0dcfb3cf4d3a0a5d505?s=128&d=identicon&r=PG","display_name":"UHDante","link":"https://stackoverflow.com/users/9112160/uhdante"},"comment_count":0,"score":2,"creation_date":1529539817,"body_markdown":"`@Component`, `@ Repository`, `@ Service`, `@Controller`:\r\n\r\n`@Component` is a generic stereotype for the components managed by Spring `@Repository`, `@Service`, and `@Controller` are `@Component` specializations for more specific uses:\r\n\r\n- `@Repository` for persistence\r\n- `@Service` for services and transactions\r\n- `@Controller` for MVC controllers\r\n\r\nWhy use `@Repository`, `@Service`, `@Controller` over `@Component`?\r\nWe can mark our component classes with @Component, but if instead we use the alternative that adapts to the expected functionality. Our classes are better suited to the functionality expected in each particular case.\r\n\r\nA class annotated with `@Repository` has a better translation and readable error handling with org.springframework.dao.DataAccessException. Ideal for implementing components that access data (DataAccessObject or DAO).\r\n\r\nAn annotated class with `@Controller` plays a controller role in a Spring Web MVC application\r\n\r\nAn annotated class with `@Service` plays a role in business logic services, example Facade pattern for DAO Manager (Facade) and transaction handling","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":1217,"user_id":3950690,"user_type":"registered","profile_image":"https://i.stack.imgur.com/pGASh.png?s=128&g=1","display_name":"Brajesh","link":"https://stackoverflow.com/users/3950690/brajesh"},"comment_count":0,"score":3,"creation_date":1530817917,"body_markdown":"In spring framework provides some special type of annotations,called stereotype annotations.\r\nThese are following:-\r\n\r\n    @RestController- Declare at controller level.\r\n    @Controller – Declare at controller level.\r\n    @Component – Declare at Bean/entity level.\r\n    @Repository – Declare at DAO level.\r\n    @Service – Declare at BO level.\r\n\r\nabove declared annotations are special because when we add `&lt;context:component-scan&gt;` into xxx-servlet.xml file ,spring will automatically create the object of those classes which are annotated with above annotation during context creation/loading phase.\r\n\r\n\r\n\r\n","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":75,"user_id":9609300,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/87c141f7644c790e1ec31107d0d89f49?s=128&d=identicon&r=PG&f=1","display_name":"siddartha kamble","link":"https://stackoverflow.com/users/9609300/siddartha-kamble"},"comment_count":0,"score":-15,"creation_date":1535568380,"body_markdown":"    @Component\r\n    @Controller\r\n    @Repository\r\n    @Service\r\n    @RestController\r\n    \r\nThese are all StereoType annotations.this are usefull for the making our classes as spring beans in ioc container, ","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":161,"user_id":8411174,"user_type":"registered","profile_image":"https://graph.facebook.com/1341521072627028/picture?type=large","display_name":"Maria Pomazkina-Karpikova","link":"https://stackoverflow.com/users/8411174/maria-pomazkina-karpikova"},"comment_count":0,"score":9,"creation_date":1538533964,"body_markdown":"*Repository* and *Service* are children of *Component* annotation. So, all of them are *Component*. *Repository* and *Service* just expand it. \r\nHow exactly?\r\n*Service* has only ideological difference: we use it for services. *Repository* has particular exception handler.","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":820,"user_id":4177869,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/CilJt.jpg?s=128&g=1","display_name":"Mohamed Sweelam","link":"https://stackoverflow.com/users/4177869/mohamed-sweelam"},"comment_count":0,"score":1,"creation_date":1556655712,"body_markdown":"In order to simplify this illustration, let us consider technicality by use case, These annotations are used to be injected and as I said literally &quot;_Used to be injected_&quot; , that mean, if you know how to use **Dependency Injection &quot;DI&quot;**  and you should, then you will always look for these annotations, and by annotating the classes with these **Stereo Types**, you are informing the _DI_ container to scan them to be ready for Injection on other places, this is the practical target.\r\n\r\nNow lets move to each one; first **@Service**, If you are building some logic for specific business case you need to separate that in a place which will contain your business logic, this service is normal Class or you can use it as interface if you want , and it is written like this \r\n\r\n```lang-java\r\n@Service\r\npublic class Doer {\r\n   // Your logic \r\n}\r\n\r\n// To use it in another class, suppose in Controller \r\n@Controller\r\npublic class XController {\r\n // You have to inject it like this \r\n @Autowired \r\n private Doer doer;\r\n}\r\n```\r\n\r\nAll are the same way when you inject them, **@Repository** it&#39;s an interface which apply the implementation for the Repository Pattern https://stackoverflow.com/questions/5166888/repository-design-pattern, generally it&#39;s used when you are dealing with some data store or database, and you will find that, it contains multiple ready implementation for you to handle database operations; it can be  _CrudRepository_, _JpaRepository_ etc.\r\n```lang-java\r\n// For example\r\npublic interface DoerRepository implements JpaRepository&lt;Long, XEntity&gt; {}\r\n```\r\n\r\nFinally the **@Component**, this is the generic form for registered beans in Spring, that&#39;s spring is always looking for bean marked with @Component to be registered, then both @Service and @Repository are special cases of @Component, however the common use case for component is when you&#39;re making something purely technical not for covering direct business case! like formatting dates or handing special request serialization mechanism and so on.","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":8590,"user_id":10961238,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-1Tz8-GsqpuU/AAAAAAAAAAI/AAAAAAAAAaQ/xTj_-pz1PhI/photo.jpg?sz=128","display_name":"Patel Romil","link":"https://stackoverflow.com/users/10961238/patel-romil"},"comment_count":0,"score":12,"creation_date":1562224923,"body_markdown":"Good enough answers are here to explain the whats-the-difference-between-component-repository-service-annotations. I would like to share the difference between `@Controller &amp; @RestController`\r\n\r\n**`@Controller`** vs **`RestController`**\r\n=========================================\r\n\r\n**`@RestController`**:\r\n----------------------\r\n\r\n[![enter image description here][1]][1]\r\n\r\n - This annotation is a specialized version of `@Controller` which adds\r\n   `@Controller` and `@ResponseBody` annotation automatically. so we do not have to add `@ResponseBody` to our mapping methods. That means\r\n   `@ResponseBody` is default active.\r\n - If you use `@RestController` you cannot return a view (By using\r\n   `Viewresolver` in Spring/Spring-Boot)\r\n - `@RestController` also converts the response to `JSON/XML automatically` as `@ResponseBody` makes the returned objects to something that could be in the body, `e.g. JSON or XML` \r\n\r\n\r\n----------\r\n\r\n\r\n**`@Controller`**\r\n-----------------\r\n\r\n[![enter image description here][2]][2]\r\n\r\n - `@Controller` is used to mark classes as Spring MVC Controller. This\r\n   annotation is just a specialized version of `@Component` and it\r\n   allows the controller classes to be auto-detected based on classpath\r\n   scanning.\r\n - `@Controller` you can return a view in Spring web MVC.\r\n\r\n[More Detailed View][3]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/U9mP2.png\r\n  [2]: https://i.stack.imgur.com/BKR7s.png\r\n  [3]: https://www.genuitec.com/spring-frameworkrestcontroller-vs-controller/","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":1931,"user_id":5256337,"user_type":"registered","profile_image":"https://i.stack.imgur.com/d3GFu.jpg?s=128&g=1","display_name":"Lova Chittumuri","link":"https://stackoverflow.com/users/5256337/lova-chittumuri"},"comment_count":0,"score":5,"creation_date":1565076350,"body_markdown":"**Difference between @Component, @Repository, @Controller &amp; @Service annotations**\r\n\r\n&gt; @Component – generic and can be used across application.&lt;br&gt; @Service\r\n&gt; – annotate classes at service layer level.&lt;br&gt; @Controller – annotate\r\n&gt; classes at presentation layers level, mainly used in Spring MVC.&lt;br&gt;\r\n&gt; @Repository – annotate classes at persistence layer, which will act as\r\n&gt; database repository.\r\n\r\n`@Controller` = @Component ( Internal Annotation ) + Presentation layer Features &lt;br&gt;\r\n`@Service` = @Component ( Internal Annotation ) + Service layer Features&lt;br&gt;\r\n`@Component` = Actual Components ( Beans )&lt;br&gt;\r\n`@Repository` = @Component ( Internal Annotation ) + Data Layer Features ( use for handling the Domain Beans )&lt;br&gt;","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":1531,"user_id":10610826,"user_type":"registered","profile_image":"https://i.stack.imgur.com/lhqqt.png?s=128&g=1","display_name":"Mykhailo Moskura","link":"https://stackoverflow.com/users/10610826/mykhailo-moskura"},"comment_count":0,"score":0,"creation_date":1587257408,"body_markdown":"**@Component** acts as @Bean annotation in configuration class , register bean in spring context. Also it is parent for @Service, @Repository and @Controller annotation.\r\n\r\n**@Service**, extends @Component annotation and has only naming difference.\r\n\r\n**@Repository** - extends @Component annotation and translate all database exceptions into \r\n[DataAccessException][1].\r\n\r\n**@Controller** - acts as controller in MVC pattern. The dispatcher will scan such annotated classes for mapped methods, detecting @RequestMapping annotations.\r\n\r\n\r\n  [1]: https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/dao/DataAccessException.html","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"owner":{"reputation":13029,"user_id":2051454,"user_type":"registered","accept_rate":60,"profile_image":"https://i.stack.imgur.com/sZBFW.jpg?s=128&g=1","display_name":"Software Engineer","link":"https://stackoverflow.com/users/2051454/software-engineer"},"comment_count":0,"score":7,"creation_date":1588944349,"body_markdown":"The answers presented here are largely technically correct, but even though the response list is long and this will be at the bottom I thought it was worth putting an actually correct response in here too, just in case somebody stumbles upon it and learns something valuable from it. It&#39;s not that the rest of the answers are wrong, it&#39;s just that they aren&#39;t right. And, to stop the hordes of trolls, yes, I know that technically these annotations are effectively the same thing and most interchangeable even unto spring 5. Now, for the right answer:\r\n\r\nThese three annotations are completely different things and are not interchangeable. You can tell that because there are three of them rather than just one. They are not intended to be interchangeable, they&#39;re just implemented that way out of elegance and convenience. \r\n\r\nModern programming is invention, art, technique, and communication, in varying proportions. The communication bit is usually very important because code is usually read much more often than its written. As a programmer you&#39;re not only trying to solve the technical problem, you&#39;re also trying to communicate your intent to future programmers who read your code. These programmers may not share your native language, nor your social environment, and it is possible that they may be reading your code 50-years in the future (it&#39;s not as unlikely as you may think). It&#39;s difficult to communicate effectively that far into the future. Therefore, it is vital that we use the clearest, most efficient, correct, and communicative language available to us. That we chose our words carefully to have maximum impact and to be as clear as possible as to our intent.\r\n\r\nFor example, it is vital that `@Repository` is used when we&#39;re writing a repository, rather than `@Component`. The latter is a very poor choice of annotation for a repository because it does not indicate that we&#39;re looking at a repository. We can assume that a repository is also a spring-bean, but not that a component is a repository. With `@Repository` we are being clear and specific in our language. We are stating clearly that this is a repository. With `@Component` we are leaving it to the reader to decide what type of component they are reading, and they will have to read the whole class (and possibly a tree of subclasses and interfaces) to infer meaning. The class could then possibly be misinterpreted by a reader in the distant future as not being a repository, and we would have been partially responsible for this mistake because we, who knew full well that this is a repository, failed to be specific in our language and communicate effectively our intent.\r\n\r\nI won&#39;t go into the other examples, but will state as clearly as I can: these annotations are completely different things and should be used appropriately, as per their intent. `@Repository` is for storage repositories and no other annotation is correct. `@Service` is for services and no other annotation is correct. `@Component` is for components that are neither repositories nor services, and to use either of these in its place would also be incorrect. It might compile, it might even run and pass your tests, but it would be wrong and I would think less of you (professionally) if you were to do this.\r\n\r\nThere are examples of this throughout spring (and programming in general). You must not use `@Controller` when writing a REST API, because `@RestController` is available. You must not use `@RequestMapping` when `@GetMapping` is a valid alternative. Etc. Etc. Etc. You *must* chose the most specific exact and correct language you can to communicate your intent to your readers, otherwise, you are introducing risks into your system, and risk has a cost.\r\n","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"}],"owner":{"reputation":22387,"user_id":863084,"user_type":"unregistered","profile_image":"https://www.gravatar.com/avatar/be273143043ed0ff5b55406ac70ff41e?s=128&d=identicon&r=PG","display_name":"Colin McCree","link":"https://stackoverflow.com/users/863084/colin-mccree"},"comment_count":3,"is_answered":true,"answer_count":29,"score":2233,"creation_date":1311671446,"question_id":6827752,"body_markdown":"Can [`@Component`][1], [`@Repository`][2] and [`@Service`][3] annotations be used interchangeably in Spring or do they provide any particular functionality besides acting as a notation device?\r\n\r\nIn other words, if I have a Service class and I change the annotation from `@Service` to `@Component`, will it still behave the same way? \r\n\r\nOr does the annotation also influence the behavior and functionality of the class?\r\n\r\n\r\n  [1]: https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Component.html\r\n  [2]: https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Repository.html\r\n  [3]: https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Service.html","link":"https://stackoverflow.com/questions/6827752/whats-the-difference-between-component-repository-service-annotations-in","title":"What&#39;s the difference between @Component, @Repository &amp; @Service annotations in Spring?"},{"tags":["java","multithreading","runnable","implements","java-threads"],"comments":[{"owner":{"reputation":44716,"user_id":20774,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/3e32e31d4c24c1558abd6567f2ab60ba?s=128&d=identicon&r=PG","display_name":"James McMahon","link":"https://stackoverflow.com/users/20774/james-mcmahon"},"score":62,"creation_date":1241816188},{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":5,"creation_date":1297553037},{"owner":{"user_type":"does_not_exist","display_name":"user285594"},"score":0,"creation_date":1302084368},{"owner":{"reputation":21713,"user_id":5812,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/6ac7f38eea4d771f9ffcd45f52fd1132?s=128&d=identicon&r=PG","display_name":"Bob Cross","link":"https://stackoverflow.com/users/5812/bob-cross"},"score":0,"creation_date":1303738168},{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":0,"creation_date":1303939088},{"owner":{"reputation":10756,"user_id":554431,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7df9b99b5d8ac9eda9330768ca1acf09?s=128&d=identicon&r=PG","display_name":"bestsss","link":"https://stackoverflow.com/users/554431/bestsss"},"score":0,"creation_date":1303939468},{"owner":{"reputation":391,"user_id":1801817,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d612626155f6a3aace979336935c7c9e?s=128&d=identicon&r=PG","display_name":"mani deepak","link":"https://stackoverflow.com/users/1801817/mani-deepak"},"score":8,"creation_date":1390811516},{"owner":{"reputation":1800,"user_id":37370,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/4aa184d0463590af1e79c3edf6d46873?s=128&d=identicon&r=PG&f=1","display_name":"RichieHH","link":"https://stackoverflow.com/users/37370/richiehh"},"score":0,"creation_date":1406519294},{"owner":{"reputation":5557,"user_id":199364,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/75807746d41c9905452d252595f7b89d?s=128&d=identicon&r=PG","display_name":"ToolmakerSteve","link":"https://stackoverflow.com/users/199364/toolmakersteve"},"score":0,"creation_date":1441454388},{"owner":{"reputation":119,"user_id":1723149,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/685996fd7cdd68713c49669372c08aba?s=128&d=identicon&r=PG","display_name":"ancm","link":"https://stackoverflow.com/users/1723149/ancm"},"score":0,"creation_date":1457971014},{"owner":{"reputation":4458,"user_id":358193,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/A5uit.jpg?s=128&g=1","display_name":"Peeyush","link":"https://stackoverflow.com/users/358193/peeyush"},"score":0,"creation_date":1471117866},{"owner":{"reputation":1677,"user_id":1722245,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/0302671df4dba46f92d23a5f9446547d?s=128&d=identicon&r=PG","display_name":"user1722245","link":"https://stackoverflow.com/users/1722245/user1722245"},"score":0,"creation_date":1539936675},{"owner":{"reputation":336,"user_id":9465588,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c47aff6d21c7afd79ed02d054dc94d2b?s=128&d=identicon&r=PG&f=1","display_name":"DGoiko","link":"https://stackoverflow.com/users/9465588/dgoiko"},"score":0,"creation_date":1563706367}],"answers":[{"comments":[{"owner":{"reputation":939,"user_id":1341584,"user_type":"registered","accept_rate":40,"profile_image":"https://i.stack.imgur.com/yOhDD.jpg?s=128&g=1","display_name":"Nabeel Thobani","link":"https://stackoverflow.com/users/1341584/nabeel-thobani"},"score":0,"creation_date":1413436616},{"owner":{"reputation":81686,"user_id":15880,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/7618ff7a4952a494b8f41bd0df646790?s=128&d=identicon&r=PG","display_name":"Powerlord","link":"https://stackoverflow.com/users/15880/powerlord"},"score":0,"creation_date":1413465318},{"owner":{"reputation":22794,"user_id":898478,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/EhSlm.jpg?s=128&g=1","display_name":"m0skit0","link":"https://stackoverflow.com/users/898478/m0skit0"},"score":1,"creation_date":1420744281}],"owner":{"reputation":81686,"user_id":15880,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/7618ff7a4952a494b8f41bd0df646790?s=128&d=identicon&r=PG","display_name":"Powerlord","link":"https://stackoverflow.com/users/15880/powerlord"},"comment_count":3,"score":35,"creation_date":1234449121,"body_markdown":"I&#39;m not an expert, but I can think of one reason to implement Runnable instead of extend Thread: Java only supports single inheritance, so you can only extend one class.\r\n\r\nEdit: This originally said &quot;Implementing an interface requires less resources.&quot; as well, but you need to create a new Thread instance either way, so this was wrong.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":4225,"user_id":42962,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/09ba269cddb5021eed4a1fceed49965c?s=128&d=identicon&r=PG","display_name":"hooknc","link":"https://stackoverflow.com/users/42962/hooknc"},"score":153,"creation_date":1234457422},{"owner":{"reputation":5889,"user_id":1026132,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/8af2eb5ad219bfc905ea0dd03b5bd6cc?s=128&d=identicon&r=PG","display_name":"Nacho Coloma","link":"https://stackoverflow.com/users/1026132/nacho-coloma"},"score":92,"creation_date":1360244882},{"owner":{"reputation":14472,"user_id":949300,"user_type":"registered","accept_rate":65,"profile_image":"https://www.gravatar.com/avatar/59e52b46611567bd018e865500cf92fd?s=128&d=identicon&r=PG","display_name":"user949300","link":"https://stackoverflow.com/users/949300/user949300"},"score":25,"creation_date":1362598218},{"owner":{"reputation":22794,"user_id":898478,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/EhSlm.jpg?s=128&g=1","display_name":"m0skit0","link":"https://stackoverflow.com/users/898478/m0skit0"},"score":11,"creation_date":1366704952},{"owner":{"reputation":9645,"user_id":431356,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/a77c53b185d8de37395e7f2af3de78d3?s=128&d=identicon&r=PG","display_name":"brettw","link":"https://stackoverflow.com/users/431356/brettw"},"score":5,"creation_date":1374119174},{"owner":{"reputation":11110,"user_id":653708,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/bch50.jpg?s=128&g=1","display_name":"8bitjunkie","link":"https://stackoverflow.com/users/653708/8bitjunkie"},"score":32,"creation_date":1392197280},{"owner":{"reputation":15542,"user_id":443716,"user_type":"registered","accept_rate":92,"profile_image":"https://www.gravatar.com/avatar/070adae503b9c7c61952065c7384bdc5?s=128&d=identicon&r=PG","display_name":"Isaac","link":"https://stackoverflow.com/users/443716/isaac"},"score":4,"creation_date":1400895303},{"owner":{"reputation":12967,"user_id":1622847,"user_type":"registered","accept_rate":70,"profile_image":"https://i.stack.imgur.com/66Vi0.jpg?s=128&g=1","display_name":"lolski","link":"https://stackoverflow.com/users/1622847/lolski"},"score":1,"creation_date":1408376084},{"owner":{"reputation":22794,"user_id":898478,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/EhSlm.jpg?s=128&g=1","display_name":"m0skit0","link":"https://stackoverflow.com/users/898478/m0skit0"},"score":0,"creation_date":1408377383},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":6,"creation_date":1408377820},{"owner":{"reputation":22794,"user_id":898478,"user_type":"registered","accept_rate":86,"profile_image":"https://i.stack.imgur.com/EhSlm.jpg?s=128&g=1","display_name":"m0skit0","link":"https://stackoverflow.com/users/898478/m0skit0"},"score":0,"creation_date":1408382132},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":2,"creation_date":1408383161},{"owner":{"reputation":44507,"user_id":106104,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG","display_name":"user253751","link":"https://stackoverflow.com/users/106104/user253751"},"score":2,"creation_date":1423785119},{"owner":{"reputation":16695,"user_id":3426825,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/6DcUx.png?s=128&g=1","display_name":"homerun","link":"https://stackoverflow.com/users/3426825/homerun"},"score":0,"creation_date":1425383308},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":6,"creation_date":1425383400},{"owner":{"reputation":1475,"user_id":1206341,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/32ef3f02bee00683732a240bb6afdd63?s=128&d=identicon&r=PG","display_name":"greenmarker","link":"https://stackoverflow.com/users/1206341/greenmarker"},"score":0,"creation_date":1435428175},{"owner":{"reputation":8206,"user_id":2580516,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3e83e511e401770207ffbb0d31b8ffb4?s=128&d=identicon&r=PG","display_name":"Warren Dew","link":"https://stackoverflow.com/users/2580516/warren-dew"},"score":0,"creation_date":1445358900},{"owner":{"reputation":733,"user_id":4332532,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/c433aa24e1afeef1045647e454e69c2a?s=128&d=identicon&r=PG&f=1","display_name":"Small Legend","link":"https://stackoverflow.com/users/4332532/small-legend"},"score":0,"creation_date":1463841074},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":0,"creation_date":1463841186},{"owner":{"reputation":733,"user_id":4332532,"user_type":"registered","accept_rate":84,"profile_image":"https://www.gravatar.com/avatar/c433aa24e1afeef1045647e454e69c2a?s=128&d=identicon&r=PG&f=1","display_name":"Small Legend","link":"https://stackoverflow.com/users/4332532/small-legend"},"score":0,"creation_date":1463841396},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":0,"creation_date":1463841849},{"owner":{"reputation":8423,"user_id":427155,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/2e80ec10ce18ae74b90001a0b7afdcfe?s=128&d=identicon&r=PG","display_name":"H2ONaCl","link":"https://stackoverflow.com/users/427155/h2onacl"},"score":0,"creation_date":1475794095},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":4,"creation_date":1475794640},{"owner":{"reputation":1604,"user_id":3721259,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/5399e5ad3e7ec0d567ca258bf93bf63c?s=128&d=identicon&r=PG&f=1","display_name":"AV94","link":"https://stackoverflow.com/users/3721259/av94"},"score":0,"creation_date":1479443978},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":1,"creation_date":1479453899},{"owner":{"reputation":195,"user_id":7775986,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7fdea8665a116d1574b4f4c9976b0935?s=128&d=identicon&r=PG&f=1","display_name":"Lealo","link":"https://stackoverflow.com/users/7775986/lealo"},"score":0,"creation_date":1502661198},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":0,"creation_date":1502661423},{"owner":{"reputation":195,"user_id":7775986,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/7fdea8665a116d1574b4f4c9976b0935?s=128&d=identicon&r=PG&f=1","display_name":"Lealo","link":"https://stackoverflow.com/users/7775986/lealo"},"score":0,"creation_date":1502670210},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":0,"creation_date":1502688921},{"owner":{"reputation":44507,"user_id":106104,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG","display_name":"user253751","link":"https://stackoverflow.com/users/106104/user253751"},"score":0,"creation_date":1575310424},{"owner":{"reputation":9820,"user_id":452775,"user_type":"registered","accept_rate":63,"profile_image":"https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG","display_name":"Lii","link":"https://stackoverflow.com/users/452775/lii"},"score":0,"creation_date":1603716627},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":0,"creation_date":1603720906},{"owner":{"reputation":110,"user_id":14194579,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/a-/AOh14Gg30ZHupYdC5gfd0STpwpP8W-MKqgkpKMkkC83z3wg=k-s128","display_name":"Moussa Kare Gueye","link":"https://stackoverflow.com/users/14194579/moussa-kare-gueye"},"score":0,"creation_date":1613989609},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":1,"creation_date":1613990016}],"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"comment_count":34,"score":1734,"creation_date":1234449174,"body_markdown":"Yes: implements `Runnable` is the preferred way to do it, IMO. You&#39;re not really specialising the thread&#39;s behaviour.  You&#39;re just giving it something to run. That means [composition][1] is the *philosophically* &quot;purer&quot; way to go.\r\n\r\nIn *practical* terms, it means you can implement `Runnable` and extend from another class as well... and you can also implement `Runnable` via a lambda expression as of Java 8.\r\n\r\n  [1]: http://en.wikipedia.org/wiki/Object_composition","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":51269,"user_id":49246,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG","display_name":"starblue","link":"https://stackoverflow.com/users/49246/starblue"},"comment_count":0,"score":18,"creation_date":1234449189,"body_markdown":"Instantiating an interface gives a cleaner separation between your code and the implementation of threads, so I&#39;d prefer to implement Runnable in this case.\r\n","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":30506,"user_id":116509,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/GsYqn.jpg?s=128&g=1","display_name":"artbristol","link":"https://stackoverflow.com/users/116509/artbristol"},"score":40,"creation_date":1353324421},{"owner":{"reputation":21713,"user_id":5812,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/6ac7f38eea4d771f9ffcd45f52fd1132?s=128&d=identicon&r=PG","display_name":"Bob Cross","link":"https://stackoverflow.com/users/5812/bob-cross"},"score":8,"creation_date":1353331721},{"owner":{"reputation":81686,"user_id":15880,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/7618ff7a4952a494b8f41bd0df646790?s=128&d=identicon&r=PG","display_name":"Powerlord","link":"https://stackoverflow.com/users/15880/powerlord"},"score":5,"creation_date":1430228659},{"owner":{"reputation":21713,"user_id":5812,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/6ac7f38eea4d771f9ffcd45f52fd1132?s=128&d=identicon&r=PG","display_name":"Bob Cross","link":"https://stackoverflow.com/users/5812/bob-cross"},"score":3,"creation_date":1430240641}],"owner":{"reputation":21713,"user_id":5812,"user_type":"registered","accept_rate":56,"profile_image":"https://www.gravatar.com/avatar/6ac7f38eea4d771f9ffcd45f52fd1132?s=128&d=identicon&r=PG","display_name":"Bob Cross","link":"https://stackoverflow.com/users/5812/bob-cross"},"comment_count":4,"score":590,"creation_date":1234449425,"body_markdown":"**tl;dr: implements Runnable is better.  However, the caveat is important**\r\n\r\nIn general, I would recommend using something like `Runnable` rather than `Thread` because it allows you to keep your work only loosely coupled with your choice of concurrency.  For example, if you use a `Runnable` and decide later on that this doesn&#39;t in fact require it&#39;s own `Thread`, you can just call threadA.run().\r\n\r\n**Caveat:** Around here, I strongly discourage the use of raw Threads.  I much prefer the use of [Callables][1] and [FutureTasks][2] (From the javadoc: &quot;A cancellable asynchronous computation&quot;).  The integration of timeouts, proper cancelling and the thread pooling of the modern concurrency support are all much more useful to me than piles of raw Threads.\r\n\r\n**Follow-up:** there is a [`FutureTask` constructor][3] that allows you to use Runnables (if that&#39;s what you are most comfortable with) and still get the benefit of the modern concurrency tools.  [To quote the javadoc][3]:\r\n\r\nIf you don&#39;t need a particular result, consider using constructions of the form: \r\n\r\n    Future&lt;?&gt; f = new FutureTask&lt;Object&gt;(runnable, null)\r\n\r\nSo, if we replace their `runnable` with your `threadA`, we get the following:\r\n\r\n    new FutureTask&lt;Object&gt;(threadA, null)\r\n\r\nAnother option that allows you to stay closer to Runnables is a [ThreadPoolExecutor][4].  You can use the [execute][5] method to pass in a Runnable to execute &quot;the given task sometime in the future.&quot;\r\n\r\nIf you&#39;d like to try using a thread pool, the code fragment above would become something like the following (using the [Executors.newCachedThreadPool()][6] factory method):\r\n\r\n    ExecutorService es = Executors.newCachedThreadPool();\r\n    es.execute(new ThreadA());\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n  [1]: https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html\n  [2]: https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html\n  [3]: https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html#FutureTask-java.lang.Runnable-V-\n  [4]: http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html\n  [5]: http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html#execute%28java.lang.Runnable%29\n  [6]: http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool%28%29","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":81686,"user_id":15880,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/7618ff7a4952a494b8f41bd0df646790?s=128&d=identicon&r=PG","display_name":"Powerlord","link":"https://stackoverflow.com/users/15880/powerlord"},"score":5,"creation_date":1234450447},{"owner":{"reputation":42525,"user_id":18154,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/528394f867632bcca8497088cd71a6d4?s=128&d=identicon&r=PG","display_name":"Fabian Steeg","link":"https://stackoverflow.com/users/18154/fabian-steeg"},"score":1,"creation_date":1234451768},{"owner":{"reputation":1226,"user_id":1920968,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d86485848ffa24e80357abe78325a56d?s=128&d=identicon&r=PG","display_name":"zEro","link":"https://stackoverflow.com/users/1920968/zero"},"score":4,"creation_date":1371935763},{"owner":{"reputation":196,"user_id":588702,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/c992aac7727eefb8910e741996415cd7?s=128&d=identicon&r=PG","display_name":"porcoesphino","link":"https://stackoverflow.com/users/588702/porcoesphino"},"score":1,"creation_date":1387811271}],"owner":{"reputation":42525,"user_id":18154,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/528394f867632bcca8497088cd71a6d4?s=128&d=identicon&r=PG","display_name":"Fabian Steeg","link":"https://stackoverflow.com/users/18154/fabian-steeg"},"comment_count":4,"score":45,"creation_date":1234449682,"body_markdown":"You should implement Runnable, but if you are running on Java 5 or higher, you should not start it with `new Thread` but use an [ExecutorService][1] instead. For details see: [How to implement simple threading in Java][2].\r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html\r\n  [2]: https://stackoverflow.com/questions/125333/how-to-implement-simple-threading-in-java","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":4609,"user_id":1347968,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/60ac5d1887465fa8a299e94810aa5fec?s=128&d=identicon&r=PG","display_name":"siegi","link":"https://stackoverflow.com/users/1347968/siegi"},"score":7,"creation_date":1335474790},{"owner":{"reputation":33535,"user_id":1409,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/2bd9e4e00647ecf35aba651054861e5e?s=128&d=identicon&r=PG","display_name":"Herms","link":"https://stackoverflow.com/users/1409/herms"},"score":9,"creation_date":1335532771}],"owner":{"reputation":33535,"user_id":1409,"user_type":"registered","accept_rate":87,"profile_image":"https://www.gravatar.com/avatar/2bd9e4e00647ecf35aba651054861e5e?s=128&d=identicon&r=PG","display_name":"Herms","link":"https://stackoverflow.com/users/1409/herms"},"comment_count":2,"score":83,"creation_date":1234450295,"body_markdown":"One thing that I&#39;m surprised hasn&#39;t been mentioned yet is that implementing `Runnable` makes your class more flexible.\r\n\r\nIf you extend thread then the action you&#39;re doing is always going to be in a thread.  However, if you implement `Runnable` it doesn&#39;t have to be.  You can run it in a thread, or pass it to some kind of executor service, or just pass it around as a task within a single threaded application (maybe to be run at a later time, but within the same thread).  The options are a lot more open if you just use `Runnable` than if you bind yourself to `Thread`.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":173,"user_id":152317,"user_type":"registered","accept_rate":14,"profile_image":"https://www.gravatar.com/avatar/d78537df8243a4d014dffd776badc95e?s=128&d=identicon&r=PG","display_name":"Govula Srinivas","link":"https://stackoverflow.com/users/152317/govula-srinivas"},"comment_count":0,"score":6,"creation_date":1268031786,"body_markdown":" Separating the Thread class from the Runnable implementation also avoids potential synchronization problems between the thread and the run() method. A separate Runnable generally gives greater flexibility in the way that runnable code is referenced and executed.\r\n\r\n","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":88,"user_id":4328206,"user_type":"registered","profile_image":"https://i.stack.imgur.com/mMt5g.jpg?s=128&g=1","display_name":"Liebertee","link":"https://stackoverflow.com/users/4328206/liebertee"},"score":1,"creation_date":1445414355},{"owner":{"reputation":8206,"user_id":2580516,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/3e83e511e401770207ffbb0d31b8ffb4?s=128&d=identicon&r=PG","display_name":"Warren Dew","link":"https://stackoverflow.com/users/2580516/warren-dew"},"score":5,"creation_date":1465272095},{"owner":{"reputation":6347,"user_id":508957,"user_type":"registered","accept_rate":58,"profile_image":"https://www.gravatar.com/avatar/7b59b9843e2bac733cdc3c2e4d548e6c?s=128&d=identicon&r=PG","display_name":"sura2k","link":"https://stackoverflow.com/users/508957/sura2k"},"score":1,"creation_date":1467797289},{"owner":{"reputation":680,"user_id":3617261,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/61768b3b21241db80aff8d9374c2832d?s=128&d=identicon&r=PG&f=1","display_name":"peja","link":"https://stackoverflow.com/users/3617261/peja"},"score":0,"creation_date":1535636477}],"owner":{"reputation":3352,"user_id":214626,"user_type":"registered","accept_rate":82,"profile_image":"https://www.gravatar.com/avatar/13325290c48cc81d4a957ff3e37b2374?s=128&d=identicon&r=PG","display_name":"panzerschreck","link":"https://stackoverflow.com/users/214626/panzerschreck"},"comment_count":4,"score":270,"creation_date":1268322654,"body_markdown":"Moral of the story:\r\n\r\n*Inherit only if you want to override some behavior.*\r\n\r\nOr rather it should be read as:\r\n\r\n*Inherit less, interface more.*","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":6538,"user_id":129213,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5f14c071faa96070ed9d80efaf72e4e1?s=128&d=identicon&r=PG","display_name":"n13","link":"https://stackoverflow.com/users/129213/n13"},"comment_count":0,"score":12,"creation_date":1273206537,"body_markdown":"Runnable because: \r\n\r\n - Leaves more flexibility for the\r\n   Runnable implementation to extend\r\n   another class \r\n - Separates the code from\r\n   execution\r\n - Allows you to run your\r\n   runnable from a Thread Pool, the\r\n   event thread, or in any other way in\r\n   the future.\r\n \r\nEven if you don&#39;t need any of this now, you may in the future. Since there is no benefit to overriding Thread, Runnable is a better solution.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":38959,"user_id":220834,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/a8qUy.jpg?s=128&g=1","display_name":"Don Roby","link":"https://stackoverflow.com/users/220834/don-roby"},"score":38,"creation_date":1294858217},{"owner":{"reputation":39915,"user_id":85821,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/28d7fc76db803c6757e7cfd2cde20354?s=128&d=identicon&r=PG","display_name":"Bart van Heukelom","link":"https://stackoverflow.com/users/85821/bart-van-heukelom"},"score":2,"creation_date":1294912778},{"owner":{"reputation":6720,"user_id":1178016,"user_type":"registered","accept_rate":73,"profile_image":"https://i.stack.imgur.com/HOI7f.png?s=128&g=1","display_name":"xehpuk","link":"https://stackoverflow.com/users/1178016/xehpuk"},"score":6,"creation_date":1420507710}],"owner":{"reputation":39915,"user_id":85821,"user_type":"registered","accept_rate":73,"profile_image":"https://www.gravatar.com/avatar/28d7fc76db803c6757e7cfd2cde20354?s=128&d=identicon&r=PG","display_name":"Bart van Heukelom","link":"https://stackoverflow.com/users/85821/bart-van-heukelom"},"comment_count":3,"score":21,"creation_date":1288042860,"body_markdown":"I would say there is a third way:\r\n\r\n    public class Something {\r\n    \r\n    \tpublic void justAnotherMethod() { ... }\r\n    \r\n    }\r\n    \r\n    new Thread(new Runnable() {\r\n       public void run() {\r\n    \tinstanceOfSomething.justAnotherMethod();\r\n       }\r\n    }).start();\r\n\r\nMaybe this is influenced a bit by my recent heavy usage of Javascript and Actionscript 3, but this way your class doesn&#39;t need to implement a pretty vague interface like `Runnable`.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":587,"user_id":730911,"user_type":"registered","accept_rate":77,"profile_image":"https://www.gravatar.com/avatar/bbcfac3b887c452f36180c23288b2179?s=128&d=identicon&r=PG","display_name":"Manoj Kumar","link":"https://stackoverflow.com/users/730911/manoj-kumar"},"comment_count":0,"score":5,"creation_date":1327739476,"body_markdown":"Yes,\r\nIf you call ThreadA call , then  not need to call the start method and run method is call after call the ThreadA class only.\r\nBut If use the ThreadB call then need to necessary the start thread for call run method.\r\nIf you have any more help, reply me.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":97,"user_id":1314112,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/62b8ec2e8f538b741b60de37227a6d52?s=128&d=identicon&r=PG","display_name":"Tarvaris Jackson","link":"https://stackoverflow.com/users/1314112/tarvaris-jackson"},"comment_count":0,"score":5,"creation_date":1339268955,"body_markdown":"I find it is most useful to use Runnable for all the reasons mentioned, but sometimes I like to extend Thread so I can create my own thread stopping method and call it directly on the thread I have created.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":963,"user_id":1397969,"user_type":"registered","accept_rate":20,"profile_image":"https://www.gravatar.com/avatar/aff0a6970dfdb511e74b31efe92965b5?s=128&d=identicon&r=PG","display_name":"Himanshu Mohta","link":"https://stackoverflow.com/users/1397969/himanshu-mohta"},"comment_count":0,"score":5,"creation_date":1339270111,"body_markdown":"Java does not support multiple inheritence so if you extends Thread class then no other class will be extended. \r\n\r\nFor Example: If you create an applet then it must extends Applet class so here the only way to create thread is by implementing Runnable interface","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":1572,"user_id":1068314,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d078f84b5830144dcbe7ab4959520f6a?s=128&d=identicon&r=PG","display_name":"AntonyM","link":"https://stackoverflow.com/users/1068314/antonym"},"score":0,"creation_date":1351864571},{"owner":{"reputation":78117,"user_id":319403,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/e92a9af9e53cc8e5af575c4b18b34c21?s=128&d=identicon&r=PG","display_name":"cHao","link":"https://stackoverflow.com/users/319403/chao"},"score":8,"creation_date":1351864964},{"owner":{"reputation":1800,"user_id":37370,"user_type":"registered","accept_rate":67,"profile_image":"https://www.gravatar.com/avatar/4aa184d0463590af1e79c3edf6d46873?s=128&d=identicon&r=PG&f=1","display_name":"RichieHH","link":"https://stackoverflow.com/users/37370/richiehh"},"score":0,"creation_date":1406516376}],"owner":{"reputation":1572,"user_id":1068314,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d078f84b5830144dcbe7ab4959520f6a?s=128&d=identicon&r=PG","display_name":"AntonyM","link":"https://stackoverflow.com/users/1068314/antonym"},"comment_count":3,"score":13,"creation_date":1340147569,"body_markdown":"Everyone here seems to think that implementing Runnable is the way to go and I don&#39;t really disagree with them but there is also a case for extending Thread in my opinion, in fact you have sort of demonstrated it in your code.\r\n\r\nIf you implement Runnable then the class that implements Runnable has no control over the thread name, it is the calling code that can set the thread name, like so:\r\n\r\n    new Thread(myRunnable,&quot;WhateverNameiFeelLike&quot;);\r\n\r\nbut if you extend Thread then you get to manage this within the class itself (just like in your example you name the thread &#39;ThreadB&#39;).  In this case you:\r\n\r\nA) might give it a more useful name for debugging purposes \r\n\r\nB) are forcing that that name be used for all instances of that class (unless you ignore the fact that it is a thread and do the above with it as if it is a Runnable but we are talking about convention here in any case so can ignore that possibility I feel).\r\n\r\nYou might even for example take a stack trace of its creation and use that as the thread name.  This might seem odd but depending on how your code is structured it can be very useful for debugging purposes.\r\n\r\nThis might seem like a small thing but where you have a very complex application with a lot of threads and all of a sudden things &#39;have stopped&#39; (either for reasons of deadlock or possibly because of a flaw in a network protocol which would be less obvious - or other endless reasons) then getting a stack dump from Java where all the threads are called &#39;Thread-1&#39;,&#39;Thread-2&#39;,&#39;Thread-3&#39; is not always very useful (it depends on how your threads are structured and whether you can usefully tell which is which just by their stack trace - not always possible if you are using groups of multiple threads all running the same code).\r\n\r\nHaving said that you could of course also do the above in a generic way by creating an extension of the thread class which sets its name to a stack trace of its creation call and then use that with your Runnable implementations instead of the standard java Thread class (see below) but in addition to the stack trace there might be more context specific information that would be useful in the thread name for debugging (a reference to one of many queues or sockets it could processing for example in which case you might prefer to extend Thread specifically for that case so that you can have the compiler force you (or others using your libraries) to pass in certain info (e.g. the queue/socket in question) for use in the name).\r\n\r\nHere&#39;s an example of the generic thread with the calling stack trace as its name:\r\n\r\n    public class DebuggableThread extends Thread {\r\n    \tprivate static String getStackTrace(String name) {\r\n    \t\tThrowable t= new Throwable(&quot;DebuggableThread-&quot;+name);\r\n    \t\tByteArrayOutputStream os = new ByteArrayOutputStream();\r\n    \t\tPrintStream ps = new PrintStream(os);\r\n    \t\tt.printStackTrace(ps);\r\n    \t\treturn os.toString();\r\n    \t}\r\n    \r\n    \tpublic DebuggableThread(String name) {\r\n    \t\tsuper(getStackTrace(name));\r\n    \t}\r\n    \t\r\n    \tpublic static void main(String[] args) throws Exception {\r\n    \t\tSystem.out.println(new Thread());\r\n    \t\tSystem.out.println(new DebuggableThread(&quot;MainTest&quot;));\r\n    \t}\r\n    }\r\n\r\nand here&#39;s a sample of the output comparing the two names:\r\n\r\n    Thread[Thread-1,5,main]\r\n    Thread[java.lang.Throwable: DebuggableThread-MainTest\r\n    \tat DebuggableThread.getStackTrace(DebuggableThread.java:6)\r\n    \tat DebuggableThread.&lt;init&gt;(DebuggableThread.java:14)\r\n    \tat DebuggableThread.main(DebuggableThread.java:19)\r\n    ,5,main]\r\n\r\n\r\n\r\n\r\n","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":63,"user_id":1189632,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f927fcb9ea51faa4ad3074bb407bbf1f?s=128&d=identicon&r=PG","display_name":"AHugoH","link":"https://stackoverflow.com/users/1189632/ahugoh"},"comment_count":0,"score":2,"creation_date":1341587559,"body_markdown":"This maybe isn&#39;t an answer but anyway; there is one more way to create threads:\r\n\r\n    Thread t = new Thread() {\r\n        public void run() {\r\n            // Code here\r\n        }\r\n    }\r\n","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":468,"user_id":1458183,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/dba872f7ddc2b9f69a4165b39ff570cc?s=128&d=identicon&r=PG","display_name":"developer110","link":"https://stackoverflow.com/users/1458183/developer110"},"comment_count":0,"score":6,"creation_date":1345312031,"body_markdown":"`Runnable` is an interface, while `Thread` is a class which implements this interface. From a design point of view, there should be a clean separation between how a task is defined and between how it is executed. The former is the responsibility of a `Runnalbe` implementation, and the latter is job of the `Thread` class. In most of the cases implementing `Runnable` is the right way to follow.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":1226,"user_id":1920968,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d86485848ffa24e80357abe78325a56d?s=128&d=identicon&r=PG","display_name":"zEro","link":"https://stackoverflow.com/users/1920968/zero"},"score":43,"creation_date":1370845508},{"owner":{"reputation":1226,"user_id":1920968,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d86485848ffa24e80357abe78325a56d?s=128&d=identicon&r=PG","display_name":"zEro","link":"https://stackoverflow.com/users/1920968/zero"},"score":41,"creation_date":1370845885},{"owner":{"reputation":14052,"user_id":918472,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/d4GgD.jpg?s=128&g=1","display_name":"Rupesh Yadav","link":"https://stackoverflow.com/users/918472/rupesh-yadav"},"score":0,"creation_date":1370859541},{"owner":{"reputation":1226,"user_id":1920968,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d86485848ffa24e80357abe78325a56d?s=128&d=identicon&r=PG","display_name":"zEro","link":"https://stackoverflow.com/users/1920968/zero"},"score":20,"creation_date":1370867357},{"owner":{"reputation":1126,"user_id":1344935,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/beb1bb0aef7f0230567cbf69cba83373?s=128&d=identicon&r=PG","display_name":"Evil Washing Machine","link":"https://stackoverflow.com/users/1344935/evil-washing-machine"},"score":3,"creation_date":1423480994},{"owner":{"reputation":1226,"user_id":1920968,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d86485848ffa24e80357abe78325a56d?s=128&d=identicon&r=PG","display_name":"zEro","link":"https://stackoverflow.com/users/1920968/zero"},"score":1,"creation_date":1423484041},{"owner":{"reputation":1126,"user_id":1344935,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/beb1bb0aef7f0230567cbf69cba83373?s=128&d=identicon&r=PG","display_name":"Evil Washing Machine","link":"https://stackoverflow.com/users/1344935/evil-washing-machine"},"score":0,"creation_date":1423489741},{"owner":{"reputation":1126,"user_id":1344935,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/beb1bb0aef7f0230567cbf69cba83373?s=128&d=identicon&r=PG","display_name":"Evil Washing Machine","link":"https://stackoverflow.com/users/1344935/evil-washing-machine"},"score":0,"creation_date":1423490179},{"owner":{"reputation":1226,"user_id":1920968,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d86485848ffa24e80357abe78325a56d?s=128&d=identicon&r=PG","display_name":"zEro","link":"https://stackoverflow.com/users/1920968/zero"},"score":3,"creation_date":1431979661},{"owner":{"reputation":1226,"user_id":1920968,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d86485848ffa24e80357abe78325a56d?s=128&d=identicon&r=PG","display_name":"zEro","link":"https://stackoverflow.com/users/1920968/zero"},"score":2,"creation_date":1431980281},{"owner":{"reputation":1126,"user_id":1344935,"user_type":"registered","accept_rate":69,"profile_image":"https://www.gravatar.com/avatar/beb1bb0aef7f0230567cbf69cba83373?s=128&d=identicon&r=PG","display_name":"Evil Washing Machine","link":"https://stackoverflow.com/users/1344935/evil-washing-machine"},"score":1,"creation_date":1432053022},{"owner":{"reputation":1226,"user_id":1920968,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d86485848ffa24e80357abe78325a56d?s=128&d=identicon&r=PG","display_name":"zEro","link":"https://stackoverflow.com/users/1920968/zero"},"score":1,"creation_date":1432057809},{"owner":{"reputation":435,"user_id":2267126,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/b2f95a11dc420bad2958eb03d91e857a?s=128&d=identicon&r=PG","display_name":"zeal","link":"https://stackoverflow.com/users/2267126/zeal"},"score":1,"creation_date":1432497430},{"owner":{"reputation":435,"user_id":2267126,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/b2f95a11dc420bad2958eb03d91e857a?s=128&d=identicon&r=PG","display_name":"zeal","link":"https://stackoverflow.com/users/2267126/zeal"},"score":2,"creation_date":1432497495},{"owner":{"reputation":12274,"user_id":33204,"user_type":"registered","accept_rate":69,"profile_image":"https://i.stack.imgur.com/6fMZI.png?s=128&g=1","display_name":"slm","link":"https://stackoverflow.com/users/33204/slm"},"score":0,"creation_date":1572185715},{"owner":{"reputation":193,"user_id":1868371,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/4naT1.png?s=128&g=1","display_name":"Gerardo Cauich","link":"https://stackoverflow.com/users/1868371/gerardo-cauich"},"score":0,"creation_date":1574932058},{"owner":{"reputation":5645,"user_id":908621,"user_type":"registered","accept_rate":61,"profile_image":"https://www.gravatar.com/avatar/f275c40d3a1fefc35699d94b20bb4acd?s=128&d=identicon&r=PG","display_name":"fishinear","link":"https://stackoverflow.com/users/908621/fishinear"},"score":0,"creation_date":1609707265}],"owner":{"reputation":14052,"user_id":918472,"user_type":"registered","accept_rate":71,"profile_image":"https://i.stack.imgur.com/d4GgD.jpg?s=128&g=1","display_name":"Rupesh Yadav","link":"https://stackoverflow.com/users/918472/rupesh-yadav"},"comment_count":17,"score":247,"creation_date":1362493564,"body_markdown":"Well so many good Answers, I want to add more on this. This will help to understand `Extending v/s Implementing Thread`.&lt;br&gt;Extends binds two class files very closely and can cause some pretty hard to deal with code.\r\n\r\nBoth approaches do the same job but there have been some differences.&lt;br&gt;\r\n_The most common difference is_ \r\n\r\n 1. When you extend Thread class, after that you can’t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).\r\n 2. When you implement Runnable, you can save space for your class to extend any other class in the future or now.\r\n\r\n_However, one **significant difference** between implementing Runnable and extending Thread is that&lt;br&gt;_ `by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.`\r\n\r\n**The following example will help you to understand more clearly**\r\n\r\n```\r\n//Implement Runnable Interface...\r\nclass ImplementsRunnable implements Runnable {\r\n\r\n\tprivate int counter = 0;\r\n\r\n\tpublic void run() {\r\n\t\tcounter++;\r\n\t\tSystem.out.println(&quot;ImplementsRunnable : Counter : &quot; + counter);\r\n\t}\r\n}\r\n\r\n//Extend Thread class...\r\nclass ExtendsThread extends Thread {\r\n\r\n\tprivate int counter = 0;\r\n\r\n\tpublic void run() {\r\n\t\tcounter++;\r\n\t\tSystem.out.println(&quot;ExtendsThread : Counter : &quot; + counter);\r\n\t}\r\n}\r\n    \r\n//Use the above classes here in main to understand the differences more clearly...\r\npublic class ThreadVsRunnable {\r\n\r\n\tpublic static void main(String args[]) throws Exception {\r\n\t\t// Multiple threads share the same object.\r\n\t\tImplementsRunnable rc = new ImplementsRunnable();\r\n\t\tThread t1 = new Thread(rc);\r\n\t\tt1.start();\r\n\t\tThread.sleep(1000); // Waiting for 1 second before starting next thread\r\n\t\tThread t2 = new Thread(rc);\r\n\t\tt2.start();\r\n\t\tThread.sleep(1000); // Waiting for 1 second before starting next thread\r\n\t\tThread t3 = new Thread(rc);\r\n\t\tt3.start();\r\n\r\n\t\t// Creating new instance for every thread access.\r\n\t\tExtendsThread tc1 = new ExtendsThread();\r\n\t\ttc1.start();\r\n\t\tThread.sleep(1000); // Waiting for 1 second before starting next thread\r\n\t\tExtendsThread tc2 = new ExtendsThread();\r\n\t\ttc2.start();\r\n\t\tThread.sleep(1000); // Waiting for 1 second before starting next thread\r\n\t\tExtendsThread tc3 = new ExtendsThread();\r\n\t\ttc3.start();\r\n\t}\r\n}\r\n```\r\n\r\n**Output of the above program.**\r\n\r\n```\r\nImplementsRunnable : Counter : 1\r\nImplementsRunnable : Counter : 2\r\nImplementsRunnable : Counter : 3\r\nExtendsThread : Counter : 1\r\nExtendsThread : Counter : 1\r\nExtendsThread : Counter : 1\r\n```\r\n\r\nIn the Runnable interface approach, only one instance of a class is being created and it has been shared by different threads. So the value of counter is incremented for each and every thread access.\r\n\r\nWhereas, Thread class approach, you must have to create separate instance for every thread access. Hence different memory is allocated for every class instances and each has separate counter, the value remains same, which means no increment will happen because none of the object reference is same.\r\n\r\n**When to use Runnable?**&lt;br&gt;\r\nUse Runnable interface when you want to access the same resources from the group of threads. Avoid using Thread class here, because multiple objects creation consumes more memory and it becomes a big performance overhead.\r\n\r\nA class that implements Runnable is not a thread and just a class. For a Runnable to become a Thread, You need to create an instance of Thread and passing itself in as the target.\r\n\r\nIn most cases, the Runnable interface should be used if you are only planning to override the `run()` method and no other Thread methods. This is important because classes should not be subclassed unless the programmer intends on modifying or enhancing the fundamental behavior of the class.\r\n\r\nWhen there is a need to extend a superclass, implementing the Runnable interface is more appropriate than using the Thread class. Because we can extend another class while implementing Runnable interface to make a thread.&lt;br&gt;\r\n\r\n \r\nI hope this will help! \r\n\r\n","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":14014,"user_id":1769720,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/5815db653a13a7122066f811caa020a7?s=128&d=identicon&r=PG","display_name":"didierc","link":"https://stackoverflow.com/users/1769720/didierc"},"comment_count":0,"score":6,"creation_date":1363601671,"body_markdown":"That&#39;s the [S][2] of [SOLID][1]: Single responsibility. \r\n\r\nA _thread_ embodies the **running context** (as in execution context: stack frame, thread id, etc.) of the _asynchronous execution_ of a piece of code. That _piece of code_ ideally should be the same implementation, whether _synchronous_ or _asynchronous_.\r\n\r\nIf you bundle them together in one implementation, you give the resulting object two _unrelated_ causes of change:\r\n\r\n1. thread handling in your application (ie. querying and modifying the execution context)\r\n2. algorithm implemented by the piece of code (the runnable part)\r\n\r\nIf the language you use supports partial classes or multiple inheritance, then you can segregate each cause in its own super class, but it boils down to the same as composing the two objects, since their feature sets don&#39;t overlap. That&#39;s for the theory. \r\n\r\nIn practice, generally speaking, a programme does not need to carry more complexity than necessary. If you have one thread working on a specific task, without ever changing that task, there is probably no point in making the tasks separate classes, and your code remains simpler.  \r\n\r\n In the context of _Java_, since the facility is **already there**, it is probably easier to start directly with stand alone `Runnable` classes, and pass their instances to `Thread` (or `Executor`) instances. Once _used_ to that pattern, it is not harder to use (or even read) than the simple runnable thread case.\r\n\r\n\r\n\r\n[1]: http://en.wikipedia.org/wiki/SOLID_(object-oriented_design)\r\n[2]: http://en.wikipedia.org/wiki/Single_responsibility_principle","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":19581,"user_id":1575570,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/VxyEw.jpg?s=128&g=1","display_name":"Nidhish Krishnan","link":"https://stackoverflow.com/users/1575570/nidhish-krishnan"},"comment_count":0,"score":79,"creation_date":1368262782,"body_markdown":"If you want to implements or extends any other class then `Runnable` interface is most preferable, otherwise, if you do not want any other class to extend or implement then `Thread` class is preferable. \r\n\r\n**The most common difference is**\r\n\r\n![enter image description here][1]\r\n\r\nWhen you `extends Thread` class, after that you can’t extend any other class which you required. (As you know, Java does not allow inheriting more than one class).\r\n\r\nWhen you `implements Runnable`, you can save space for your class to extend any other class in the future or now.\r\n\r\n  - Java doesn&#39;t support multiple inheritances, which means you can only extend one class in Java so once you extended Thread class you lost your chance and cannot extend or inherit another class in Java.\r\n\r\n  - In Object-oriented programming, extending a class generally means, adding new functionality, and modifying or improving behaviors. If we are not making any modification on Thread then use Runnable interface instead.\r\n\r\n  - Runnable interface represents a Task which can be executed by either plain Thread or Executors or any other means. so logical separation of Task as Runnable than Thread is a good design decision.\r\n\r\n  - Separating task as Runnable means we can reuse the task and also has the liberty to execute it from different means. since you can not restart a Thread once it completes. again Runnable vs Thread for task, Runnable is winner.\r\n\r\n  - Java designer recognizes this and that&#39;s why Executors accept Runnable as Task and they have worker thread which executes those task.\r\n\r\n  - Inheriting all Thread methods are additional overhead just for representing a Task which can be done easily with Runnable.\r\n\r\nCourtesy from [javarevisited.blogspot.com][2]\r\n\r\nThese were some of the notable differences between Thread and Runnable in Java. If you know any other differences on Thread vs Runnable than please share it via comments. I personally use Runnable over Thread for this scenario and recommends to use Runnable or Callable interface based on your requirement.\r\n\r\n**However, the significant difference is.**\r\n\r\nWhen you `extends Thread` class, each of your thread creates a unique object and associate with it.\r\nWhen you `implements Runnable`, it shares the same object to multiple threads.\r\n\r\n\r\n  [1]: http://i.stack.imgur.com/vLRdp.gif\r\n  [2]: http://javarevisited.blogspot.com/2012/01/difference-thread-vs-runnable-interface.html","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":1731,"user_id":1901896,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/77b2651b08f4279ec5a29169d6c40c3d?s=128&d=identicon&r=PG","display_name":"Akash5288","link":"https://stackoverflow.com/users/1901896/akash5288"},"score":1,"creation_date":1386137464}],"owner":{"reputation":391,"user_id":1832655,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/6f048c2ad51367bc7e9ef88a217f91bf?s=128&d=identicon&r=PG","display_name":"Nikhil A A","link":"https://stackoverflow.com/users/1832655/nikhil-a-a"},"comment_count":1,"score":6,"creation_date":1374773340,"body_markdown":"One reason you&#39;d want to implement an interface rather than extend a base class is that you are already extending some other class. You can only extend one class, but you can implement any number of interfaces.\r\n\r\nIf you extend Thread, you&#39;re basically preventing your logic to be executed by any other thread than &#39;this&#39;. If you only want *some* thread to execute your logic, it&#39;s better to just implement Runnable.\r\n","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":962,"user_id":2771655,"user_type":"registered","accept_rate":41,"profile_image":"https://www.gravatar.com/avatar/05279bac8c6031c76f499fb1d37cab9a?s=128&d=identicon&r=PG&f=1","display_name":"user2771655","link":"https://stackoverflow.com/users/2771655/user2771655"},"comment_count":0,"score":6,"creation_date":1380175082,"body_markdown":"if you use runnable you can save the space to extend to any of your other class.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":7256,"user_id":1014830,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/ca45c857a2784ae22f54acf3d0d94744?s=128&d=identicon&r=PG&f=1","display_name":"dharam","link":"https://stackoverflow.com/users/1014830/dharam"},"comment_count":0,"score":6,"creation_date":1385089911,"body_markdown":"Can we re-visit the basic reason we wanted our class to behave as a `Thread`?\r\nThere is no reason at all, we just wanted to execute a task, most likely in an asynchronous mode, which precisely means that the execution of the task must branch from our main thread and the main thread if finishes early, may or may not wait for the branched path(task).\r\n\r\nIf this is the whole purpose, then where do I see the need of a specialized Thread. This can be accomplished by picking up a RAW Thread from the System&#39;s Thread Pool and assigning it our task (may be an instance of our class) and that is it.\r\n\r\nSo let us obey the OOPs concept and write a class of the type we need. There are many ways to do things, doing it in the right way matters. \r\n\r\nWe need a task, so write a task definition which can be run on a Thread. So use Runnable.\r\n\r\nAlways remember `implements` is specially used to impart a behaviour and `extends` is used to impart a feature/property.\r\n\r\nWe do not want the thread&#39;s property, instead we want our class to behave as a task which can be run.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":4446,"user_id":2231887,"user_type":"registered","accept_rate":88,"profile_image":"https://i.stack.imgur.com/osd8f.png?s=128&g=1","display_name":"Sionnach733","link":"https://stackoverflow.com/users/2231887/sionnach733"},"comment_count":0,"score":9,"creation_date":1390322649,"body_markdown":"This is discussed in Oracle&#39;s [Defining and Starting a Thread][1] tutorial:\r\n\r\n&gt; Which of these idioms should you use? The first idiom, which employs a\r\n&gt; Runnable object, is more general, because the Runnable object can\r\n&gt; subclass a class other than Thread. The second idiom is easier to use\r\n&gt; in simple applications, but is limited by the fact that your task\r\n&gt; class must be a descendant of Thread. This lesson focuses on the first\r\n&gt; approach, which separates the Runnable task from the Thread object\r\n&gt; that executes the task. Not only is this approach more flexible, but\r\n&gt; it is applicable to the high-level thread management APIs covered\r\n&gt; later.\r\n\r\nIn other words, implementing `Runnable` will work in scenarios where your class extends a class other than `Thread`. Java does not support multiple inheritance. Also, extending `Thread` will not be possible when using some of the high-level thread management APIs. The only scenario where extending `Thread` is preferable is in a small application that won&#39;t be subject to updates in future. It is almost always better to implement `Runnable` as it is more flexible as your project grows. A design change won&#39;t have a major impact as you can implement many interfaces in java, but only extend one class.\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/tutorial/essential/concurrency/runthread.html","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":2244,"user_id":472992,"user_type":"registered","profile_image":"https://i.stack.imgur.com/JT0T5.jpg?s=128&g=1","display_name":"J&#246;rg","link":"https://stackoverflow.com/users/472992/j%c3%b6rg"},"score":0,"creation_date":1461924959}],"owner":{"reputation":2244,"user_id":472992,"user_type":"registered","profile_image":"https://i.stack.imgur.com/JT0T5.jpg?s=128&g=1","display_name":"J&#246;rg","link":"https://stackoverflow.com/users/472992/j%c3%b6rg"},"comment_count":1,"score":12,"creation_date":1392282431,"body_markdown":"Since this is a very popular topic and the good answers are spread all over and dealt with in great depth, I felt it is justifiable to compile the good answers from the others into a more concise form, so newcomers have an easy overview upfront:\r\n\r\n1. You usually extend a class to add or modify functionality. So, *if you don&#39;t want* to **overwrite** any **Thread behavior**, then use Runnable.\r\n\r\n2. In the same light, *if you don&#39;t need* to **inherit** thread methods, you can do without that **overhead** by using Runnable.\r\n\r\n3. **Single inheritance**: If you extend Thread you cannot extend from any other class, so if that is what you need to do, you have to use Runnable.\r\n\r\n4. It is good design to separate domain logic from technical means, in that sense it is better to have a Runnable task **isolating** your **task from** your **runner**.\r\n\r\n5. You can **execute** the same Runnable **object multiple times**, a Thread object, however, can only be started once. (Maybe the reason, why Executors do accept Runnables, but not Threads.)\r\n\r\n6. If you develop your task as Runnable, you have **all flexibility how to use it now and in the future**. You can have it run concurrently via Executors but also via Thread. And you still could also use/call it non-concurrently within the same thread just as any other ordinary type/object. \r\n\r\n7. This makes it also easier to **separate** task-logic and concurrency **aspects in** your **unit tests**.\r\n\r\n8. If you are interested in this question, you might be also interested in the [difference between Callable and Runnable][1].\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/141284/the-difference-between-the-runnable-and-callable-interfaces-in-java","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":109,"user_id":3317784,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fee8b31207d07fa67eda34274411b373?s=128&d=identicon&r=PG&f=1","display_name":"Rohit Chugh","link":"https://stackoverflow.com/users/3317784/rohit-chugh"},"comment_count":0,"score":5,"creation_date":1394000038,"body_markdown":"Difference between Thread and runnable\r\n.If  we are creating Thread using Thread class then Number of thread equal to number of object we created  .\r\nIf we are creating thread  by implementing the runnable interface then we can use single object for creating multiple thread.So single object is shared by multiple Thread.So it will take less memory\r\n\r\nSo depending upon the requirement if our data is not senstive. So It can be shared between multiple Thread we can used Runnable interface.\r\n\r\n","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":631,"user_id":1142548,"user_type":"registered","accept_rate":80,"profile_image":"https://www.gravatar.com/avatar/ce15808d3c378b33f5be35fc063f9d96?s=128&d=identicon&r=PG","display_name":"samkit shah","link":"https://stackoverflow.com/users/1142548/samkit-shah"},"comment_count":0,"score":1,"creation_date":1403076159,"body_markdown":"Simple way to say is:\r\nIf you implement interface that means you are implementing all methods of it and if you extending the class you are inheriting method of your choice... \r\nIn this case,there is **only a one method named Run()** so **better to implement Runnable interface..**","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":5557,"user_id":199364,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/75807746d41c9905452d252595f7b89d?s=128&d=identicon&r=PG","display_name":"ToolmakerSteve","link":"https://stackoverflow.com/users/199364/toolmakersteve"},"score":0,"creation_date":1441454183}],"owner":{"reputation":13132,"user_id":3179759,"user_type":"registered","profile_image":"https://i.stack.imgur.com/etgjJ.png?s=128&g=1","display_name":"Alex - GlassEditor.com","link":"https://stackoverflow.com/users/3179759/alex-glasseditor-com"},"comment_count":1,"score":19,"creation_date":1406633096,"body_markdown":"With the release of Java 8, there is now a third option.\r\n\r\n`Runnable` is a [functional interface][1], which means that instances of it can be created with lambda expressions or method references.\r\n\r\nYour example can be replaced with:\r\n\r\n    new Thread(() -&gt; { /* Code here */ }).start()\r\n\r\nor if you want to use an `ExecutorService` and a method reference:\r\n\r\n    executor.execute(runner::run)\r\n\r\nThese are not only much shorter than your examples, but also come with many of the advantages stated in other answers of using `Runnable` over `Thread`, such as single responsibility and using composition because you&#39;re not specializing the thread&#39;s behaviour. This way also avoids creating an extra class if all you need is a `Runnable` as you do in your examples.\r\n\r\n[1]:https://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.8","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":2296,"user_id":1853458,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/e8fd7389c2c9476c6f32a2d5713d5082?s=128&d=identicon&r=PG","display_name":"veritas","link":"https://stackoverflow.com/users/1853458/veritas"},"comment_count":0,"score":5,"creation_date":1420243916,"body_markdown":"Adding my two cents here -\r\n**Always whenever possible use `implements Runnable` . Below are two caveats on why you should not use \r\n`extends Thread`s**\r\n\r\n1. Ideally you should never extend the Thread class; the `Thread` class should be made `final`.\r\n   At least its methods like `thread.getId()`. \r\n   See [this][1] discussion for a bug related to extending `Thread`s. \r\n\r\n2. Those who like to solve puzzles can see another side effect of extending Thread. The below code \r\n   will print unreachable code when nobody is notifying them.\r\n\r\nPlease see  http://pastebin.com/BjKNNs2G. \r\n\r\n    public class WaitPuzzle {\r\n\r\n    \tpublic static void main(String[] args) throws InterruptedException {\r\n    \t\tDoNothing doNothing = new DoNothing();\r\n    \t\tnew WaitForever(doNothing).start();\r\n    \t\tnew WaitForever(doNothing).start();\r\n    \t\tnew WaitForever(doNothing).start();\r\n    \t\tThread.sleep(100);\r\n    \t\tdoNothing.start();\r\n            while(true) {\r\n            \tThread.sleep(10);\r\n            }\r\n    \t}\r\n    \t\r\n    \t\r\n    \tstatic class WaitForever extends  Thread {\r\n    \t\t\r\n    \t\tprivate DoNothing doNothing;\r\n    \t\t\r\n    \t\tpublic WaitForever(DoNothing doNothing) {\r\n    \t\t\tthis.doNothing =  doNothing;\r\n    \t\t}\r\n    \t\t\r\n    \t\t@Override\r\n    \t\tpublic void run() {\r\n    \t\t\tsynchronized (doNothing) {\r\n    \t\t\t\ttry {\r\n    \t\t\t\t\tdoNothing.wait(); // will wait forever here as nobody notifies here\r\n    \t\t\t\t} catch (InterruptedException e) {\r\n    \t\t\t\t\te.printStackTrace();\r\n    \t\t\t\t}\r\n    \t\t\t\tSystem.out.println(&quot;Unreachable Code&quot;);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    \t\r\n        static class DoNothing extends Thread {\r\n    \r\n    \t\t@Override\r\n    \t\tpublic void run() {\r\n    \t\t\tSystem.out.println(&quot;Do Nothing &quot;);\r\n    \t\t}\r\n        } \r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n  [1]: http://jsr166-concurrency.10961.n7.nabble.com/RRWL-with-bad-Thread-getId-implementations-tc9754.html","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":706,"user_id":1720452,"user_type":"registered","accept_rate":20,"profile_image":"https://i.stack.imgur.com/KX6si.jpg?s=128&g=1","display_name":"Vishal","link":"https://stackoverflow.com/users/1720452/vishal"},"comment_count":0,"score":4,"creation_date":1424324260,"body_markdown":"One difference between implementing Runnable and extending Thread is that by extending Thread, each of your threads has a unique object associated with it, whereas implementing Runnable, many threads can share the same object instance.\r\n\r\nA class that implements Runnable is not a thread and just a class. For a Runnable to be executed by a Thread, you need to create an instance of Thread and pass the Runnable instance in as the target.\r\n\r\nIn most cases, the Runnable interface should be used if you are only planning to override the run() method and no other Thread methods. This is important because classes should not be subclassed unless the programmer intends on modifying or enhancing the fundamental behavior of the class.\r\n\r\nWhen there is a need to extend a superclass, implementing the Runnable interface is more appropriate than using the Thread class. Because we can extend another class while implementing Runnable interface to make a thread. But if we just extend the Thread class we can&#39;t inherit from any other class.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":1358,"user_id":4483113,"user_type":"registered","profile_image":"https://i.stack.imgur.com/v2ENl.jpg?s=128&g=1","display_name":"idelvall","link":"https://stackoverflow.com/users/4483113/idelvall"},"score":3,"creation_date":1458665497},{"owner":{"reputation":6286,"user_id":1354334,"user_type":"registered","accept_rate":94,"profile_image":"https://i.stack.imgur.com/RATXE.jpg?s=128&g=1","display_name":"Saif","link":"https://stackoverflow.com/users/1354334/saif"},"score":0,"creation_date":1458666613},{"owner":{"reputation":376,"user_id":1727934,"user_type":"registered","accept_rate":0,"profile_image":"https://www.gravatar.com/avatar/deef8bca9259772af8ce18531df29b45?s=128&d=identicon&r=PG","display_name":"MichaelYe","link":"https://stackoverflow.com/users/1727934/michaelye"},"score":1,"creation_date":1582290925}],"owner":{"reputation":6286,"user_id":1354334,"user_type":"registered","accept_rate":94,"profile_image":"https://i.stack.imgur.com/RATXE.jpg?s=128&g=1","display_name":"Saif","link":"https://stackoverflow.com/users/1354334/saif"},"comment_count":3,"score":78,"creation_date":1431438615,"body_markdown":"Actually, It is not wise to compare `Runnable` and `Thread` with each other.  \r\n\r\nThis two have a dependency and relationship in multi-threading just like `Wheel and Engine` relationship of motor vehicle.\r\n\r\nI would say, there is only one way for multi-threading with two steps. Let me make my point.\r\n\r\n**Runnable:**  \r\nWhen implementing `interface Runnable` it means you are creating something which is `run able` in a different thread. Now creating something which can run inside a thread (runnable inside a thread), doesn&#39;t mean to creating a Thread.   \r\nSo the class `MyRunnable` is nothing but a ordinary class with a `void run` method.\r\nAnd it&#39;s objects will be some ordinary objects with only a method `run` which will execute normally when called.  (unless we pass the object in a thread).\r\n\r\n**Thread:**  \r\n`class Thread`, I would say A very special class with the capability of starting a new Thread which actually enables multi-threading through its `start()` method.\r\n\r\n**Why not wise to compare?**  \r\nBecause we need both of them for multi-threading.   \r\n\r\nFor Multi-threading we need two things:  \r\n\r\n *  Something that can run inside a Thread (Runnable).   \r\n *  Something That can start a new Thread (Thread).\r\n\r\nSo technically and theoretically  both of them is necessary to start a thread, one will **run** and one will **make it run** (Like **`Wheel and Engine`** of motor vehicle).\r\n\r\nThat&#39;s why you can not start a thread with `MyRunnable` you need to pass it to a instance of `Thread`.\r\n\r\n\r\n**But** it is possible to create and run a thread only using `class Thread` because Class `Thread` implements `Runnable` so we all know `Thread` also is a `Runnable` inside.\r\n\r\n**Finally `Thread` and `Runnable` are complement to each other for multithreading  not competitor or replacement.**\r\n","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":494033,"user_id":57695,"user_type":"registered","accept_rate":75,"profile_image":"https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG","display_name":"Peter Lawrey","link":"https://stackoverflow.com/users/57695/peter-lawrey"},"comment_count":0,"score":3,"creation_date":1437933689,"body_markdown":"Thread holds behaviour which is not intended to be accessed;\r\n\r\n - it&#39;s synchronized lock is used for join etc.\r\n - it has methods you can access by accident.\r\n\r\nhowever if you sub-class Thread have to consider more Thread is implemented.\r\n\r\n    public class ThreadMain {\r\n        public int getId() {\r\n            return 12345678;\r\n        }\r\n    \r\n        public String getName() {\r\n            return &quot;Hello World&quot;;\r\n        }\r\n    \r\n        public String getState() {\r\n            return &quot;testing&quot;;\r\n        }\r\n    \r\n        public void example() {\r\n            new Thread() {\r\n                @Override\r\n                public void run() {\r\n                    System.out.println(&quot;id: &quot;+getId()+&quot;, name: &quot;+getName()+&quot;, state: &quot;+getState());\r\n                }\r\n            }.start();\r\n        }\r\n    \r\n        public static void main(String[] args) {\r\n            new ThreadMain().example();\r\n        }\r\n    }\r\n\r\nIf you run this you might expect\r\n\r\n    id: 12345678, name: Hello World, state: testing\r\n\r\nhowever, you are not calling the methods you think you are because you are using the method in `Thread` not `ThreadMain` and instead you see something like\r\n\r\n    id: 11, name: Thread-0, state: RUNNABLE","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":3050,"user_id":5223309,"user_type":"registered","accept_rate":40,"profile_image":"https://i.stack.imgur.com/ZazF9.jpg?s=128&g=1","display_name":"Shababb Karim","link":"https://stackoverflow.com/users/5223309/shababb-karim"},"comment_count":0,"score":9,"creation_date":1439539660,"body_markdown":"The simplest explanation would be by implementing `Runnable` we can assign the same object to multiple threads and each `Thread` shares the same object states and behavior. \r\n\r\nFor example, suppose there are two threads, **thread1** puts an integer in an array and **thread2** takes integers from the array when the array is filled up. Notice that in order for **thread2** to work it needs to know the state of array, whether **thread1** has filled it up or not. \r\n\r\nImplementing `Runnable` lets you to have this flexibility to share the object whereas `extends Thread` makes you to create new objects for each threads therefore any update that is done by thread1 is lost to thread2.    ","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":41397,"user_id":4999394,"user_type":"registered","accept_rate":98,"profile_image":"https://i.stack.imgur.com/nAGmt.png?s=128&g=1","display_name":"Ravindra babu","link":"https://stackoverflow.com/users/4999394/ravindra-babu"},"comment_count":0,"score":8,"creation_date":1455355953,"body_markdown":"If I am not wrong, it&#39;s more or less similar to \r\n\r\nhttps://stackoverflow.com/questions/1913098/what-is-the-difference-between-an-interface-and-abstract-class/33957698#33957698\r\n\r\nextends establishes &quot;**Is A**&quot; relation &amp; interface provides &quot;**Has a**&quot; capability.\r\n\r\nPrefer ***implements Runnable*** :\r\n\r\n1. If you don&#39;t have to extend Thread class and modify Thread API default implementation\r\n2. If you are executing a fire and forget command\r\n3. If You are already extending another class\r\n\r\nPrefer &quot;***extends Thread***&quot; :\r\n\r\n1. If you have to override any of these [Thread][1] methods as listed in oracle documentation page\r\n\r\nGenerally you don&#39;t need to override Thread behaviour. So **implements Runnable** is preferred for most of the times. \r\n\r\n\r\nOn a different note, using advanced `ExecutorService` or `ThreadPoolExecutorService` API provides more flexibility and control.\r\n\r\nHave a look at this SE Question:\r\n\r\nhttps://stackoverflow.com/questions/26938210/executorservice-vs-casual-thread-spawner/34923574#34923574\r\n \r\n\r\n\r\n  [1]: https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":144,"user_id":1932011,"user_type":"registered","accept_rate":71,"profile_image":"https://www.gravatar.com/avatar/612163480a1ccb4785fd647a003eefbb?s=128&d=identicon&r=PG","display_name":"JayC667","link":"https://stackoverflow.com/users/1932011/jayc667"},"comment_count":0,"score":4,"creation_date":1461498111,"body_markdown":"The best way for most worker threads is to have the threading completely encapsuled in the worker class so that nothing can interfere from the outside and cause unwanted and invalid thread/class states.\r\n\r\nI&#39;ve just posted an example, so I&#39;ll also share this with you:\r\n\r\n\r\n    /**\r\n     * This worker can only run once\r\n     * @author JayC667\r\n     */\r\n    public class ProperThreading {\r\n    \t\r\n    \tprivate final Thread\t\tmThread\t\t\t= new Thread(() -&gt; runWorkingLoop());\t// if you want worker to be able to run multiple times, move initialisation into startThread()\r\n    \tprivate volatile boolean\tmThreadStarted\t= false;\r\n    \tprivate volatile boolean\tmStopRequested\t= false;\r\n    \r\n    \tprivate final long\t\t\tmLoopSleepTime;\r\n    \r\n    \tpublic ProperThreading(final long pLoopSleepTime /* pass more arguments here, store in members */ ) {\r\n    \t\tmLoopSleepTime = pLoopSleepTime;\r\n    \t}\r\n    \t\r\n    \tpublic synchronized void startThread() {\r\n    \t\tif (mThreadStarted) throw new IllegalStateException(&quot;Worker Thread may only be started once and is already running!&quot;);\r\n    \t\tmThreadStarted = true;\r\n    \t\tmThread.start();\r\n    \t}\r\n    \r\n    \tprivate void runWorkingLoop() {\r\n    \t\twhile (!mStopRequested /* &amp;&amp; other checks */ ) {\r\n    \t\t\ttry {\r\n    \t\t\t\t// do the magic work here\r\n    \t\t\t\tThread.sleep(mLoopSleepTime);\r\n    \r\n    \t\t\t} catch (final InterruptedException e) {\r\n    \t\t\t\tbreak;\r\n    \t\t\t} catch (final Exception e) {\r\n    \t\t\t\t// do at least some basic handling here, you should NEVER ignore exception unless you know exactly what you&#39;re doing, and then it should be commented!\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \tpublic synchronized void stopThread() {\r\n    \t\tif (!mThreadStarted) throw new IllegalStateException(&quot;Worker Thread is not even running yet!&quot;);\r\n    \t\tmStopRequested = true;\r\n    \t\tmThread.interrupt();\r\n    \t}\r\n    \t\r\n    }\r\n\r\n","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":5270,"user_id":843943,"user_type":"registered","accept_rate":75,"profile_image":"https://i.stack.imgur.com/1V5SP.jpg?s=128&g=1","display_name":"Grim","link":"https://stackoverflow.com/users/843943/grim"},"comment_count":0,"score":2,"creation_date":1478761551,"body_markdown":"In the rare case you only run it once, you should extend Thread because of DRY. If you call it multiple times, you should implement Runnable because the same thread should not be restarted.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":2541,"user_id":6714430,"user_type":"registered","profile_image":"https://i.stack.imgur.com/adedu.jpg?s=128&g=1","display_name":"rashedcs","link":"https://stackoverflow.com/users/6714430/rashedcs"},"comment_count":0,"score":2,"creation_date":1492924441,"body_markdown":" \r\nBy extending the thread class , the derived class can not extend any other base class because java only allow single inheritance.\r\non the contrary, By implementing the runnable interface the class still extend other base class.\r\n\r\n\r\n&gt;The most significant difference between implementing Runnable and extending Thread is given below : \r\n\r\n**By extending Thread, derived class itself is a thread object, whereas Implementing Runnable interface it shares the same object to multiple Threads.**\r\n\r\n","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":1074,"user_id":8609030,"user_type":"registered","profile_image":"https://i.stack.imgur.com/CGXiD.jpg?s=128&g=1","display_name":"Raman Gupta","link":"https://stackoverflow.com/users/8609030/raman-gupta"},"comment_count":0,"score":13,"creation_date":1506870306,"body_markdown":"Difference between Extending Thread and Implementing Runnable are:\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/n1DJO.jpg","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":1456,"user_id":1322957,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/f1c077ea29f08d12ee4d99a662e00eb4?s=128&d=identicon&r=PG&f=1","display_name":"justcode","link":"https://stackoverflow.com/users/1322957/justcode"},"score":0,"creation_date":1518693911}],"owner":{"reputation":15019,"user_id":1475228,"user_type":"registered","accept_rate":84,"profile_image":"https://i.stack.imgur.com/TgQ5O.png?s=128&g=1","display_name":"Pritam Banerjee","link":"https://stackoverflow.com/users/1475228/pritam-banerjee"},"comment_count":1,"score":1,"creation_date":1508656337,"body_markdown":"Thread class defines several methods that can be `overriden` by the the extending class. But to create a thread we must override the `run()` method. Same applies to `Runnable` as well.\r\n\r\nHowever `Runnable` is a preferred method of creating a thread. The primary reasons are:\r\n\r\n1. Since Runnable is an interface, you can extend other classes. But if you extend Thread then that option is gone. \r\n\r\n2. If you are not modifying or enhancing a whole lot of `Thread` functionalities and extending the `Thread` class is not a preferred way.  ","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"comments":[{"owner":{"reputation":751,"user_id":3199240,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Z7fKm.png?s=128&g=1","display_name":"statut","link":"https://stackoverflow.com/users/3199240/statut"},"score":0,"creation_date":1530966373}],"owner":{"reputation":1225,"user_id":4537618,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/AkWn6.jpg?s=128&g=1","display_name":"Java Main","link":"https://stackoverflow.com/users/4537618/java-main"},"comment_count":1,"score":-1,"creation_date":1524687713,"body_markdown":"You can use them jointly\r\n\r\nExample :\r\n\r\n   \r\n\r\n    public class A implements Runnable{\r\n\r\n\t\t@Override\r\n\t\tpublic void run() {\r\n\t\t\r\n\t\t\t\r\n\t\t\twhile(true){\r\n\t\t\t\t System.out.println(&quot;Class A is running&quot;);\r\n\t\t\ttry {\r\n\t\t\t\tThread.sleep(3000);\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\t// TODO Auto-generated catch block\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}}\r\n\t\t\t\r\n\t\t}\r\n\r\n    }\r\n\r\n\r\n\r\n    public class Test {\r\n\r\n\t\tpublic static void main(String[] args) {\r\n\r\n\t\t\tThread myThread =new Thread(new A());// 1\r\n\t\t\tmyThread.start();\r\n\t\t\tSystem.out.println(&quot; executed after thread A&quot;);//will never be reached\r\n\r\n\t\t}\r\n\r\n\t} ","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":1781,"user_id":1504824,"user_type":"registered","accept_rate":67,"profile_image":"https://i.stack.imgur.com/TFaCr.jpg?s=128&g=1","display_name":"bharatj","link":"https://stackoverflow.com/users/1504824/bharatj"},"comment_count":0,"score":0,"creation_date":1535882570,"body_markdown":"I would say actual task is decoupled from the thread. We can pass around the task to Thread, Executor framework etc in case of Runnable, whereas with extending Thread task is coupled with thread object itself. The task isolation cannot be done in case of extending Thread. It&#39;s like we burn the task to Thread object just something like IC chip (and more specifically will not get any handle to task).","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":193,"user_id":5073834,"user_type":"registered","profile_image":"https://graph.facebook.com/1740990539461951/picture?type=large","display_name":"Pen Lymeng","link":"https://stackoverflow.com/users/5073834/pen-lymeng"},"comment_count":0,"score":0,"creation_date":1543982323,"body_markdown":"The main difference between Thread and Runnable is:\r\n- Thread is like: Worker (execute Runnable)\r\n- Runnable is like: Job (to be executed by Thread)","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"owner":{"reputation":118,"user_id":10567048,"user_type":"registered","profile_image":"https://i.stack.imgur.com/Mn4KE.jpg?s=128&g=1","display_name":"Arasn","link":"https://stackoverflow.com/users/10567048/arasn"},"comment_count":0,"score":3,"creation_date":1556892827,"body_markdown":"**1. Extending the thread interface, is like you are making your class to behave as a thread only. Your new class will be like a enhanced thread.**\r\n\r\n    jshell&gt; public class Test extends Thread{\r\n       ...&gt; public Test(String name){\r\n       ...&gt; super(name);\r\n       ...&gt; }\r\n       ...&gt; public void run(){\r\n       ...&gt; System.out.println(Thread.currentThread().getName());\r\n       ...&gt; }\r\n       ...&gt; }\r\n    |  created class Test\r\n    \r\n    jshell&gt; Test t1=new Test(&quot;MyThread&quot;);\r\n    t1 ==&gt; Thread[MyThread,5,main]\r\n\r\n \r\n\r\nIt creates a thread, not the `Test` object. So it&#39;s going to act like a single thread. You can not share the instance of `Test` class between threads.\r\n\r\n**2. Implementing the runnable interface.**\r\n\r\n    jshell&gt; public class Test1 implements Runnable{\r\n       ...&gt; public void run(){\r\n       ...&gt; System.out.println(Thread.currentThread().getName());\r\n       ...&gt; }\r\n       ...&gt; public String getName(){\r\n       ...&gt; return &quot;testing&quot;;}\r\n       ...&gt; }\r\n    |  created class Test1\r\n\r\n    jshell&gt; Test1 t1=new Test1();\r\n    t1 ==&gt; Test1@396a51ab  --&gt; this creates Test1 object.\r\n\r\nThis object can be shared across threads by,\r\n\r\n    jshell&gt; Thread t1=new Thread(t1,&quot;Hai&quot;);\r\n    t ==&gt; Thread[Hai,5,main]\r\n    \r\n    jshell&gt; Thread t=new Thread(t1,&quot;Hai&quot;);\r\n    t ==&gt; Thread[Hai,5,main]\r\n\r\nI think there&#39;s already been a lot that&#39;s been discussed on this topic, thought this might be helpful around the basics.","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"}],"owner":{"reputation":22629,"user_id":65374,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/d9b476b19aefee886c89265430ede95a?s=128&d=identicon&r=PG","display_name":"user65374","link":"https://stackoverflow.com/users/65374/user65374"},"comment_count":13,"is_answered":true,"answer_count":42,"score":2197,"creation_date":1234448926,"question_id":541487,"body_markdown":"From what time I&#39;ve spent with threads in Java, I&#39;ve found these two ways to write threads:\r\n\r\nWith `implements Runnable`:\r\n\r\n    public class MyRunnable implements Runnable {\r\n    \tpublic void run() {\r\n    \t\t//Code\r\n    \t}\r\n    }\r\n    //Started with a &quot;new Thread(new MyRunnable()).start()&quot; call\r\n    \r\nOr, with `extends Thread`:\r\n    \r\n    public class MyThread extends Thread {\r\n    \tpublic MyThread() {\r\n    \t\tsuper(&quot;MyThread&quot;);\r\n    \t}\r\n    \tpublic void run() {\r\n    \t\t//Code\r\n    \t}\r\n    }\r\n    //Started with a &quot;new MyThread().start()&quot; call\r\n\r\nIs there any significant difference in these two blocks of code ?\r\n","link":"https://stackoverflow.com/questions/541487/implements-runnable-vs-extends-thread-in-java","title":"&quot;implements Runnable&quot; vs &quot;extends Thread&quot; in Java"},{"tags":["java","arrays"],"comments":[{"owner":{"reputation":2150,"user_id":1139105,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/m3xAB.png?s=128&g=1","display_name":"janniks","link":"https://stackoverflow.com/users/1139105/janniks"},"score":17,"creation_date":1580730643},{"owner":{"reputation":3138,"user_id":131157,"user_type":"registered","accept_rate":57,"profile_image":"https://www.gravatar.com/avatar/cf6b905762dda1df8b5adedd0b2d022f?s=128&d=identicon&r=PG","display_name":"Babak","link":"https://stackoverflow.com/users/131157/babak"},"score":0,"creation_date":1608627810}],"answers":[{"comments":[{"owner":{"reputation":2410,"user_id":689991,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/snEFx.jpg?s=128&g=1","display_name":"Quazi Irfan","link":"https://stackoverflow.com/users/689991/quazi-irfan"},"score":35,"creation_date":1428636198},{"owner":{"reputation":691,"user_id":2534036,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/038476307a41f9dc00634e96d2d3d03b?s=128&d=identicon&r=PG","display_name":"Skylar Ittner","link":"https://stackoverflow.com/users/2534036/skylar-ittner"},"score":133,"creation_date":1429206284},{"owner":{"reputation":2410,"user_id":689991,"user_type":"registered","accept_rate":91,"profile_image":"https://i.stack.imgur.com/snEFx.jpg?s=128&g=1","display_name":"Quazi Irfan","link":"https://stackoverflow.com/users/689991/quazi-irfan"},"score":1,"creation_date":1429332105},{"owner":{"reputation":691,"user_id":2534036,"user_type":"registered","accept_rate":62,"profile_image":"https://www.gravatar.com/avatar/038476307a41f9dc00634e96d2d3d03b?s=128&d=identicon&r=PG","display_name":"Skylar Ittner","link":"https://stackoverflow.com/users/2534036/skylar-ittner"},"score":7,"creation_date":1429510142},{"owner":{"reputation":4364,"user_id":1172352,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/348452b680ac216f453245b276b5ac7a?s=128&d=identicon&r=PG","display_name":"peterflynn","link":"https://stackoverflow.com/users/1172352/peterflynn"},"score":0,"creation_date":1433359097},{"owner":{"reputation":1170,"user_id":3175431,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/d718426ebc054d9b7962dcd804c1cb65?s=128&d=identicon&r=PG","display_name":"Jezzamon","link":"https://stackoverflow.com/users/3175431/jezzamon"},"score":0,"creation_date":1437911023},{"owner":{"reputation":5498,"user_id":2128327,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fdb32ecba89326d1528dbf8673e68b20?s=128&d=identicon&r=PG","display_name":"Khaled.K","link":"https://stackoverflow.com/users/2128327/khaled-k"},"score":1,"creation_date":1445430176},{"owner":{"reputation":4248,"user_id":1397821,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/dwOIp.jpg?s=128&g=1","display_name":"M. Usman Khan","link":"https://stackoverflow.com/users/1397821/m-usman-khan"},"score":0,"creation_date":1452520382},{"owner":{"reputation":9412,"user_id":3769451,"user_type":"registered","accept_rate":74,"profile_image":"https://i.stack.imgur.com/hZdbF.jpg?s=128&g=1","display_name":"apadana","link":"https://stackoverflow.com/users/3769451/apadana"},"score":1,"creation_date":1463777381},{"owner":{"reputation":4157,"user_id":363132,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/b2016af46ed42c48efdf3b13057061a8?s=128&d=identicon&r=PG","display_name":"teukkam","link":"https://stackoverflow.com/users/363132/teukkam"},"score":6,"creation_date":1476784557},{"owner":{"reputation":213,"user_id":5738837,"user_type":"registered","accept_rate":60,"profile_image":"https://www.gravatar.com/avatar/d72e991dd71bdffeabe68b35bf1a2f3c?s=128&d=identicon&r=PG&f=1","display_name":"MrAP","link":"https://stackoverflow.com/users/5738837/mrap"},"score":1,"creation_date":1491515223},{"owner":{"reputation":25227,"user_id":118228,"user_type":"registered","accept_rate":85,"profile_image":"https://i.stack.imgur.com/f2tOS.jpg?s=128&g=1","display_name":"djangofan","link":"https://stackoverflow.com/users/118228/djangofan"},"score":0,"creation_date":1496080492},{"owner":{"reputation":577,"user_id":1863152,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/6cfc323f028fd836267b55e6c9c9c900?s=128&d=identicon&r=PG","display_name":"www-0av-Com","link":"https://stackoverflow.com/users/1863152/www-0av-com"},"score":1,"creation_date":1522843565},{"owner":{"reputation":3257,"user_id":1324802,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/41K0O.jpg?s=128&g=1","display_name":"Androidcoder","link":"https://stackoverflow.com/users/1324802/androidcoder"},"score":0,"creation_date":1607019489},{"owner":{"reputation":239,"user_id":4455546,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/11813c2d260eecabb2f6b3b2d88e6d03?s=128&d=identicon&r=PG&f=1","display_name":"Clement Cherlin","link":"https://stackoverflow.com/users/4455546/clement-cherlin"},"score":0,"creation_date":1614777635}],"owner":{"reputation":41776,"user_id":118437,"user_type":"registered","accept_rate":93,"profile_image":"https://www.gravatar.com/avatar/0bc3f06118e3253ef1c1ae899e7dfa56?s=128&d=identicon&r=PG","display_name":"glmxndr","link":"https://stackoverflow.com/users/118437/glmxndr"},"comment_count":15,"score":2844,"creation_date":1248877523,"body_markdown":"You can either use array declaration or array literal (but only when you declare and affect the variable right away, array literals cannot be used for re-assigning an array). \r\n\r\nFor primitive types: \r\n\r\n    int[] myIntArray = new int[3];\r\n    int[] myIntArray = {1, 2, 3};\r\n    int[] myIntArray = new int[]{1, 2, 3};\r\n\r\n    // Since Java 8. Doc of IntStream: https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html\r\n\r\n    int [] myIntArray = IntStream.range(0, 100).toArray(); // From 0 to 99\r\n    int [] myIntArray = IntStream.rangeClosed(0, 100).toArray(); // From 0 to 100\r\n    int [] myIntArray = IntStream.of(12,25,36,85,28,96,47).toArray(); // The order is preserved.\r\n    int [] myIntArray = IntStream.of(12,25,36,85,28,96,47).sorted().toArray(); // Sort \r\n\r\n   \r\n\r\n\r\n\r\nFor classes, for example `String`, it&#39;s the same:\r\n\r\n    String[] myStringArray = new String[3];\r\n    String[] myStringArray = {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;};\r\n    String[] myStringArray = new String[]{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;};\r\n\r\nThe third way of initializing is useful when you declare an array first and then initialize it, pass an array as a function argument, or return an array. The explicit type is required.\r\n\r\n    String[] myStringArray;\r\n    myStringArray = new String[]{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;};","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":4071,"user_id":848292,"user_type":"registered","accept_rate":76,"profile_image":"https://i.stack.imgur.com/Ars6Y.png?s=128&g=1","display_name":"Anti Earth","link":"https://stackoverflow.com/users/848292/anti-earth"},"score":7,"creation_date":1349238025},{"owner":{"reputation":12733,"user_id":1279820,"user_type":"registered","accept_rate":59,"profile_image":"https://i.stack.imgur.com/CJFmh.png?s=128&g=1","display_name":"Celeritas","link":"https://stackoverflow.com/users/1279820/celeritas"},"score":2,"creation_date":1376023859},{"owner":{"reputation":2668,"user_id":1377498,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/a3bf574cbb933a7db7559f7f6f9d8360?s=128&d=identicon&r=PG","display_name":"Muhammad Suleman","link":"https://stackoverflow.com/users/1377498/muhammad-suleman"},"score":2,"creation_date":1430824648}],"owner":{"reputation":106835,"user_id":572,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/Ct4o3.jpg?s=128&g=1","display_name":"Thomas Owens","link":"https://stackoverflow.com/users/572/thomas-owens"},"comment_count":3,"score":27,"creation_date":1248877531,"body_markdown":"Alternatively,\r\n\r\n    // Either method works\r\n    String arrayName[] = new String[10];\r\n    String[] arrayName = new String[10];\r\n\r\nThat declares an array called `arrayName` of size 10 (you have elements 0 through 9 to use).","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":2129,"user_id":58798,"user_type":"registered","accept_rate":100,"profile_image":"https://www.gravatar.com/avatar/35a34c6bd852faf202d14df6fb25e1c4?s=128&d=identicon&r=PG","display_name":"Anirudh","link":"https://stackoverflow.com/users/58798/anirudh"},"comment_count":0,"score":40,"creation_date":1248877694,"body_markdown":"There are various ways in which you can declare an array in Java:\r\n\r\n    float floatArray[]; // Initialize later\r\n    int[] integerArray = new int[10];\r\n    String[] array = new String[] {&quot;a&quot;, &quot;b&quot;};\r\n\r\nYou can find more information in the [Sun tutorial][1] site and the [JavaDoc][2].\r\n\r\n  [1]: http://java.sun.com/docs/books/tutorial/java/nutsandbolts/arrays.html\r\n  [2]: http://java.sun.com/j2se/1.5.0/docs/api/java/util/Arrays.html\r\n","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":18541,"user_id":112614,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/cgt6T.jpg?s=128&g=1","display_name":"Chet","link":"https://stackoverflow.com/users/112614/chet"},"score":22,"creation_date":1248877864},{"owner":{"reputation":5871,"user_id":1870054,"user_type":"registered","accept_rate":72,"profile_image":"https://i.stack.imgur.com/QJydN.jpg?s=128&g=1","display_name":"wener","link":"https://stackoverflow.com/users/1870054/wener"},"score":3,"creation_date":1394023422},{"owner":{"reputation":40857,"user_id":1864167,"user_type":"registered","accept_rate":90,"profile_image":"https://i.stack.imgur.com/WalEV.jpg?s=128&g=1","display_name":"Jeroen Vannevel","link":"https://stackoverflow.com/users/1864167/jeroen-vannevel"},"score":11,"creation_date":1426729561}],"owner":{"reputation":16235,"user_id":118133,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/39d793fb79c019bce75b825160f2d1fa?s=128&d=identicon&r=PG","display_name":"Nate","link":"https://stackoverflow.com/users/118133/nate"},"comment_count":3,"score":130,"creation_date":1248877757,"body_markdown":"    Type[] variableName = new Type[capacity];\r\n\r\n    Type[] variableName = {comma-delimited values};\r\n\r\n\r\n\r\n    Type variableName[] = new Type[capacity]; \r\n\r\n    Type variableName[] = {comma-delimited values};\r\n\r\n\r\nis also valid, but I prefer the brackets after the type, because it&#39;s easier to see that the variable&#39;s type is actually an array.","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":626,"user_id":8830634,"user_type":"registered","accept_rate":94,"profile_image":"https://i.stack.imgur.com/bspab.png?s=128&g=1","display_name":"Cookie Monster","link":"https://stackoverflow.com/users/8830634/cookie-monster"},"score":0,"creation_date":1530181561}],"owner":{"reputation":18541,"user_id":112614,"user_type":"registered","accept_rate":79,"profile_image":"https://i.stack.imgur.com/cgt6T.jpg?s=128&g=1","display_name":"Chet","link":"https://stackoverflow.com/users/112614/chet"},"comment_count":1,"score":32,"creation_date":1248877796,"body_markdown":"I find it is helpful if you understand each part:\r\n\r\n    Type[] name = new Type[5];\r\n\r\n```Type[]``` is the *type* of the *variable* called name (&quot;name&quot; is called the *identifier*).  The literal &quot;Type&quot; is the base type, and the brackets mean this is the array type of that base. Array types are in turn types of their own, which allows you to make multidimensional arrays like ```Type[][]``` (the array type of Type[]). The keyword ```new``` says to allocate memory for the new array.  The number between the bracket says how large the new array will be and how much memory to allocate. For instance, if Java knows that the base type `Type` takes 32 bytes, and you want an array of size 5, it needs to internally allocate 32 * 5 = 160 bytes.\r\n\r\nYou can also create arrays with the values already there, such as\r\n\r\n    int[] name = {1, 2, 3, 4, 5};\r\n\r\nwhich not only creates the empty space but fills it with those values. Java can tell that the primitives are integers and that there are 5 of them, so the size of the array can be determined implicitly.","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":3841,"user_id":640739,"user_type":"registered","accept_rate":81,"profile_image":"https://www.gravatar.com/avatar/1f3d631f423d6e364cd40ccad5020c71?s=128&d=identicon&r=PG","display_name":"CyprUS","link":"https://stackoverflow.com/users/640739/cyprus"},"score":2,"creation_date":1440633903},{"owner":{"reputation":197,"user_id":4226093,"user_type":"registered","accept_rate":0,"profile_image":"https://i.stack.imgur.com/XeZcV.jpg?s=128&g=1","display_name":"Heimdall","link":"https://stackoverflow.com/users/4226093/heimdall"},"score":0,"creation_date":1543501671}],"owner":{"reputation":12018,"user_id":3095,"user_type":"registered","accept_rate":89,"profile_image":"https://www.gravatar.com/avatar/5e9b86bbe0805dfaf5d07146d2a69956?s=128&d=identicon&r=PG","display_name":"Dave","link":"https://stackoverflow.com/users/3095/dave"},"comment_count":2,"score":26,"creation_date":1248882980,"body_markdown":"Also, in case you want something more dynamic there is the List interface.  This will not perform as well, but is more flexible:\r\n\r\n    List&lt;String&gt; listOfString = new ArrayList&lt;String&gt;();\r\n    \r\n    listOfString.add(&quot;foo&quot;);\r\n    listOfString.add(&quot;bar&quot;);\r\n    \r\n    String value = listOfString.get(0);\r\n    assertEquals( value, &quot;foo&quot; );","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":3,"creation_date":1424560118},{"owner":{"reputation":1244833,"user_id":22656,"user_type":"registered","accept_rate":86,"profile_image":"https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG","display_name":"Jon Skeet","link":"https://stackoverflow.com/users/22656/jon-skeet"},"score":6,"creation_date":1424560344},{"owner":{"reputation":2117,"user_id":2856202,"user_type":"registered","accept_rate":50,"profile_image":"https://i.stack.imgur.com/AHuOz.png?s=128&g=1","display_name":"eigenfield","link":"https://stackoverflow.com/users/2856202/eigenfield"},"score":0,"creation_date":1579069732}],"owner":{"reputation":491,"user_id":2380374,"user_type":"registered","profile_image":"https://i.stack.imgur.com/FT19N.jpg?s=128&g=1","display_name":"Amit Bhandari","link":"https://stackoverflow.com/users/2380374/amit-bhandari"},"comment_count":3,"score":29,"creation_date":1370325769,"body_markdown":"The following shows the declaration of an array, but the array is not initialized:\r\n\r\n     int[] myIntArray = new int[3];\r\n\r\nThe following shows the declaration as well as initialization of the array:\r\n    \r\n    int[] myIntArray = {1,2,3};\r\n\r\nNow, the following also shows the declaration as well as initialization of the array:\r\n\r\n    int[] myIntArray = new int[]{1,2,3};\r\n\r\nBut this third one shows the property of anonymous array-object creation which is pointed by a reference variable &quot;myIntArray&quot;, so if we write just &quot;new int[]{1,2,3};&quot; then this is how anonymous array-object can be created.\r\n\r\nIf we just write:\r\n   \r\n    int[] myIntArray;\r\n\r\nthis is not declaration of array, but the following statement makes the above declaration complete:\r\n     \r\n    myIntArray=new int[3];\r\n","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":3964,"user_id":1629932,"user_type":"registered","accept_rate":85,"profile_image":"https://www.gravatar.com/avatar/ef1b30794ac9d3125669df468262616f?s=128&d=identicon&r=PG","display_name":"vipin8169","link":"https://stackoverflow.com/users/1629932/vipin8169"},"score":0,"creation_date":1487463901},{"owner":{"reputation":511,"user_id":3913948,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/NCDEu.jpg?s=128&g=1","display_name":"AdamIJK","link":"https://stackoverflow.com/users/3913948/adamijk"},"score":0,"creation_date":1493205998},{"owner":{"reputation":518,"user_id":1968171,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/921f04cd94b628b64c5bcc496cfeeed6?s=128&d=identicon&r=PG","display_name":"Tim M.","link":"https://stackoverflow.com/users/1968171/tim-m"},"score":0,"creation_date":1500391150}],"owner":{"reputation":3403,"user_id":2558244,"user_type":"registered","profile_image":"https://i.stack.imgur.com/KHBd0.jpg?s=128&g=1","display_name":"Isabella Engineer","link":"https://stackoverflow.com/users/2558244/isabella-engineer"},"comment_count":3,"score":295,"creation_date":1373407179,"body_markdown":"There are two types of array.&lt;br/&gt; \r\n\r\n##One Dimensional Array##\r\n\r\nSyntax for default values:\r\n\r\n    int[] num = new int[5];\r\n\r\nOr (less preferred)\r\n\r\n    int num[] = new int[5];\r\n\r\nSyntax with values given (variable/field initialization):\r\n    \r\n    int[] num = {1,2,3,4,5};\r\nOr (less preferred)\r\n\r\n    int num[] = {1, 2, 3, 4, 5};\r\n\r\nNote: For convenience  int[] num is preferable because it clearly tells that you are talking here about array. Otherwise no difference. Not at all.&lt;br/&gt;\r\n\r\n##Multidimensional array##\r\n###Declaration###\r\n    \r\n    int[][] num = new int[5][2];\r\nOr\r\n\r\n    int num[][] = new int[5][2];\r\nOr\r\n\r\n    int[] num[] = new int[5][2];\r\n\r\n###Initialization###\r\n\r\n     num[0][0]=1;\r\n     num[0][1]=2;\r\n     num[1][0]=1;\r\n     num[1][1]=2;\r\n     num[2][0]=1;\r\n     num[2][1]=2;\r\n     num[3][0]=1;\r\n     num[3][1]=2;\r\n     num[4][0]=1;\r\n     num[4][1]=2;\r\nOr\r\n\r\n     int[][] num={ {1,2}, {1,2}, {1,2}, {1,2}, {1,2} };\r\n\r\n###Ragged Array (or Non-rectangular Array)###\r\n\r\n     int[][] num = new int[5][];\r\n     num[0] = new int[1];\r\n     num[1] = new int[5];\r\n     num[2] = new int[2];\r\n     num[3] = new int[3];\r\nSo here we are defining columns explicitly.&lt;br/&gt;\r\n&lt;b&gt;Another Way:&lt;/b&gt;  \r\n     \r\n    int[][] num={ {1}, {1,2}, {1,2,3,4,5}, {1,2}, {1,2,3} };\r\n\r\n##For Accessing:##\r\n\r\n    for (int i=0; i&lt;(num.length); i++ ) {\r\n        for (int j=0;j&lt;num[i].length;j++)\r\n            System.out.println(num[i][j]);\r\n    }\r\n\r\nAlternatively:\r\n\r\n    for (int[] a : num) {\r\n      for (int i : a) {\r\n        System.out.println(i);\r\n      }\r\n    }\r\n\r\nRagged arrays are multidimensional arrays.&lt;br/&gt;\r\nFor explanation see multidimensional array detail at [the official java tutorials][1]\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/tutorial/java/nutsandbolts/arrays.html","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":2568,"user_id":6790326,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/--0W1SyomlMg/AAAAAAAAAAI/AAAAAAAAAGY/w5Ja9a3U4zE/photo.jpg?sz=128","display_name":"Dorian Gray","link":"https://stackoverflow.com/users/6790326/dorian-gray"},"score":0,"creation_date":1578512281}],"owner":{"reputation":2668,"user_id":1377498,"user_type":"registered","accept_rate":88,"profile_image":"https://www.gravatar.com/avatar/a3bf574cbb933a7db7559f7f6f9d8360?s=128&d=identicon&r=PG","display_name":"Muhammad Suleman","link":"https://stackoverflow.com/users/1377498/muhammad-suleman"},"comment_count":1,"score":9,"creation_date":1421754842,"body_markdown":"If you want to create arrays using reflections then you can do like this:\r\n\r\n     int size = 3;\r\n     int[] intArray = (int[]) Array.newInstance(int.class, size ); \r\n\r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":4207,"user_id":8200485,"user_type":"registered","accept_rate":82,"profile_image":"https://i.stack.imgur.com/ONjhQ.jpg?s=128&g=1","display_name":"HyperNeutrino","link":"https://stackoverflow.com/users/8200485/hyperneutrino"},"comment_count":0,"score":11,"creation_date":1432410979,"body_markdown":"Take the primitive type `int` for example. There are several ways to declare and `int` array:\r\n\r\n    int[] i = new int[capacity];\r\n    int[] i = new int[] {value1, value2, value3, etc};\r\n    int[] i = {value1, value2, value3, etc};\r\n\r\nwhere in all of these, you can use `int i[]` instead of `int[] i`.\r\n\r\nWith reflection, you can use `(Type[]) Array.newInstance(Type.class, capacity);`\r\n\r\nNote that in method parameters, `...` indicates `variable arguments`. Essentially, any number of parameters is fine. It&#39;s easier to explain with code:\r\n\r\n    public static void varargs(int fixed1, String fixed2, int... varargs) {...}\r\n    ...\r\n    varargs(0, &quot;&quot;, 100); // fixed1 = 0, fixed2 = &quot;&quot;, varargs = {100}\r\n    varargs(0, &quot;&quot;, 100, 200); // fixed1 = 0, fixed2 = &quot;&quot;, varargs = {100, 200};\r\n\r\nInside the method, `varargs` is treated as a normal `int[]`. `Type...` can only be used in method parameters, so `int... i = new int[] {}` will not compile.\r\n\r\nNote that when passing an `int[]` to a method (or any other `Type[]`), you cannot use the third way. In the statement `int[] i = *{a, b, c, d, etc}*`, the compiler assumes that the `{...}` means an `int[]`. But that is because you are declaring a variable. When passing an array to a method, the declaration must either be `new Type[capacity]` or `new Type[] {...}`.\r\n\r\n&lt;h1&gt;Multidimensional Arrays&lt;/h1&gt;\r\n\r\nMultidimensional arrays are much harder to deal with. Essentially, a 2D array is an array of arrays. `int[][]` means an array of `int[]`s. The key is that if an `int[][]` is declared as `int[x][y]`, the maximum index is `i[x-1][y-1]`. Essentially, a rectangular `int[3][5]` is:\r\n\r\n    [0, 0] [1, 0] [2, 0]\r\n    [0, 1] [1, 1] [2, 1]\r\n    [0, 2] [1, 2] [2, 2]\r\n    [0, 3] [1, 3] [2, 3]\r\n    [0, 4] [1, 4] [2, 4]","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":3207,"user_id":2787184,"user_type":"registered","accept_rate":65,"profile_image":"https://i.stack.imgur.com/F69PI.png?s=128&g=1","display_name":"2787184","link":"https://stackoverflow.com/users/2787184/2787184"},"comment_count":0,"score":9,"creation_date":1444990730,"body_markdown":"Declaring an array of object references:\r\n\r\n    class Animal {}\r\n\r\n    class Horse extends Animal {\r\n        public static void main(String[] args) {\r\n\r\n            /*\r\n             * Array of Animal can hold Animal and Horse (all subtypes of Animal allowed)\r\n             */\r\n            Animal[] a1 = new Animal[10];\r\n            a1[0] = new Animal();\r\n            a1[1] = new Horse();\r\n\r\n            /*\r\n             * Array of Animal can hold Animal and Horse and all subtype of Horse\r\n             */\r\n            Animal[] a2 = new Horse[10];\r\n            a2[0] = new Animal();\r\n            a2[1] = new Horse();\r\n\r\n            /*\r\n             * Array of Horse can hold only Horse and its subtype (if any) and not\r\n               allowed supertype of Horse nor other subtype of Animal.\r\n             */\r\n            Horse[] h1 = new Horse[10];\r\n            h1[0] = new Animal(); // Not allowed\r\n            h1[1] = new Horse();\r\n\r\n            /*\r\n             * This can not be declared.\r\n             */\r\n            Horse[] h2 = new Animal[10]; // Not allowed\r\n        }\r\n    }\r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":5498,"user_id":2128327,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/fdb32ecba89326d1528dbf8673e68b20?s=128&d=identicon&r=PG","display_name":"Khaled.K","link":"https://stackoverflow.com/users/2128327/khaled-k"},"comment_count":0,"score":8,"creation_date":1445434787,"body_markdown":"Array is a sequential list of items\r\n\r\n    int item = value;\r\n    \r\n    int [] one_dimensional_array = { value, value, value, .., value };\r\n    \r\n    int [][] two_dimensional_array =\r\n    {\r\n      { value, value, value, .. value },\r\n      { value, value, value, .. value },\r\n        ..     ..     ..        ..\r\n      { value, value, value, .. value }\r\n    };\r\n\r\nIf it&#39;s an object, then it&#39;s the same concept\r\n\r\n    Object item = new Object();\r\n    \r\n    Object [] one_dimensional_array = { new Object(), new Object(), .. new Object() };\r\n    \r\n    Object [][] two_dimensional_array =\r\n    {\r\n      { new Object(), new Object(), .. new Object() },\r\n      { new Object(), new Object(), .. new Object() },\r\n        ..            ..               ..\r\n      { new Object(), new Object(), .. new Object() }\r\n    };\r\n\r\nIn case of objects, you need to either assign it to `null` to initialize them using `new Type(..)`, classes like `String` and `Integer` are special cases that will be handled as following\r\n\r\n    String [] a = { &quot;hello&quot;, &quot;world&quot; };\r\n    // is equivalent to\r\n    String [] a = { new String({&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;}), new String({&#39;w&#39;,&#39;o&#39;,&#39;r&#39;,&#39;l&#39;,&#39;d&#39;}) };\r\n\r\n    Integer [] b = { 1234, 5678 };\r\n    // is equivalent to\r\n    Integer [] b = { new Integer(1234), new Integer(5678) };\r\n\r\nIn general you can create arrays that&#39;s `M` dimensional\r\n\r\n    int [][]..[] array =\r\n    //  ^ M times [] brackets\r\n    \r\n        {{..{\r\n    //  ^ M times { bracket\r\n    \r\n    //            this is array[0][0]..[0]\r\n    //                         ^ M times [0]\r\n    \r\n        }}..}\r\n    //  ^ M times } bracket\r\n    ;\r\n\r\nIt&#39;s worthy to note that creating an `M` dimensional array is expensive in terms of Space. Since when you create an `M` dimensional array with `N` on all the dimensions, The total size of the array is bigger than `N^M`, since each array has a reference, and at the M-dimension there is an (M-1)-dimensional array of references. The total size is as following\r\n\r\n    Space = N^M + N^(M-1) + N^(M-2) + .. + N^0\r\n    //      ^                              ^ array reference\r\n    //      ^ actual data\r\n\r\n","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":4407,"user_id":1294864,"user_type":"registered","accept_rate":83,"profile_image":"https://i.stack.imgur.com/dLaJj.jpg?s=128&g=1","display_name":"Bono","link":"https://stackoverflow.com/users/1294864/bono"},"score":7,"creation_date":1447961056}],"owner":{"reputation":13,"user_id":5295031,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/451c35d731165e3ecdb0dcce7937e146?s=128&d=identicon&r=PG&f=1","display_name":"TreyMcGowan","link":"https://stackoverflow.com/users/5295031/treymcgowan"},"comment_count":1,"score":-7,"creation_date":1447955029,"body_markdown":"    int[] SingleDimensionalArray = new int[2]\r\n    \r\n    int[][] MultiDimensionalArray = new int[3][4]","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":690,"user_id":5847353,"user_type":"registered","profile_image":"https://lh4.googleusercontent.com/-jfot8t8sHIk/AAAAAAAAAAI/AAAAAAAAAWU/Zr9N_suIxD0/photo.jpg?sz=128","display_name":"codecubed","link":"https://stackoverflow.com/users/5847353/codecubed"},"comment_count":0,"score":15,"creation_date":1454008781,"body_markdown":"There are two main ways to make an array:\r\n\r\nThis one, for an empty array:\r\n\r\n    int[] array = new int[n]; // &quot;n&quot; being the number of spaces to allocate in the array\r\n\r\nAnd this one, for an initialized array:\r\n\r\n    int[] array = {1,2,3,4 ...};\r\n\r\nYou can also make multidimensional arrays, like this:\r\n\r\n    int[][] array2d = new int[x][y]; // &quot;x&quot; and &quot;y&quot; specify the dimensions\r\n    int[][] array2d = { {1,2,3 ...}, {4,5,6 ...} ...};\r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":165,"user_id":6514262,"user_type":"registered","accept_rate":83,"profile_image":"https://www.gravatar.com/avatar/ea6122317e6957d5a5ec54bd3c047642?s=128&d=identicon&r=PG&f=1","display_name":"Samuel Newport","link":"https://stackoverflow.com/users/6514262/samuel-newport"},"comment_count":0,"score":6,"creation_date":1470650488,"body_markdown":"For creating arrays of class Objects you can use the `java.util.ArrayList`. to define an array:\r\n\r\n    public ArrayList&lt;ClassName&gt; arrayName;\r\n    arrayName = new ArrayList&lt;ClassName&gt;();\r\n\r\nAssign values to the array:\r\n\r\n    arrayName.add(new ClassName(class parameters go here);\r\n\r\nRead from the array:\r\n    \r\n    ClassName variableName = arrayName.get(index);\r\n\r\nNote:\r\n\r\n`variableName` is a reference to the array meaning that manipulating `variableName` will manipulate `arrayName`\r\n\r\nfor loops:\r\n\r\n    //repeats for every value in the array\r\n    for (ClassName variableName : arrayName){\r\n    }\r\n    //Note that using this for loop prevents you from editing arrayName\r\n\r\nfor loop that allows you to edit `arrayName` (conventional for loop):\r\n\r\n    for (int i = 0; i &lt; arrayName.size(); i++){\r\n        //manipulate array here\r\n    }\r\n\r\n\r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":1009,"user_id":4910851,"user_type":"registered","accept_rate":50,"profile_image":"https://www.gravatar.com/avatar/10d67add990b35196718dd96888e289a?s=128&d=identicon&r=PG&f=1","display_name":"Clement.Xu","link":"https://stackoverflow.com/users/4910851/clement-xu"},"comment_count":0,"score":3,"creation_date":1501832546,"body_markdown":"Another way to declare and initialize ArrayList:\r\n\r\n    private List&lt;String&gt; list = new ArrayList&lt;String&gt;(){{\r\n\t\tadd(&quot;e1&quot;);\r\n\t\tadd(&quot;e2&quot;);\r\n\t}};","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1519252699},{"owner":{"reputation":386,"user_id":4095239,"user_type":"registered","profile_image":"https://i.stack.imgur.com/hIkvL.jpg?s=128&g=1","display_name":"Kirill Podlivaev","link":"https://stackoverflow.com/users/4095239/kirill-podlivaev"},"score":1,"creation_date":1521626194}],"owner":{"reputation":386,"user_id":4095239,"user_type":"registered","profile_image":"https://i.stack.imgur.com/hIkvL.jpg?s=128&g=1","display_name":"Kirill Podlivaev","link":"https://stackoverflow.com/users/4095239/kirill-podlivaev"},"comment_count":2,"score":6,"creation_date":1503667647,"body_markdown":"Declare and initialize for Java 8 and later. Create a simple integer array:\r\n\r\n    int [] a1 = IntStream.range(1, 20).toArray();\r\n    System.out.println(Arrays.toString(a1));\r\n    // Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\r\n\r\nCreate a random array for integers between [-50, 50] and for doubles [0, 1E17]:\r\n\r\n    int [] a2 = new Random().ints(15, -50, 50).toArray();\r\n    double [] a3 = new Random().doubles(5, 0, 1e17).toArray();\r\n\r\nPower-of-two sequence:\r\n\r\n    double [] a4 = LongStream.range(0, 7).mapToDouble(i -&gt; Math.pow(2, i)).toArray();\r\n    System.out.println(Arrays.toString(a4));\r\n    // Output: [1.0, 2.0, 4.0, 8.0, 16.0, 32.0, 64.0]\r\n\r\nFor String[] you must specify a constructor:\r\n\r\n    String [] a5 = Stream.generate(()-&gt;&quot;I will not squeak chalk&quot;).limit(5).toArray(String[]::new);\r\n    System.out.println(Arrays.toString(a5));\r\n\r\nMultidimensional arrays:\r\n\r\n    String [][] a6 = List.of(new String[]{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;} , new String[]{&quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;})\r\n        .toArray(new String[0][]);\r\n    System.out.println(Arrays.deepToString(a6));\r\n    // Output: [[a, b, c], [d, e, f, g]]\r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":12945,"user_id":2668232,"user_type":"registered","accept_rate":100,"profile_image":"https://i.stack.imgur.com/8uJTm.jpg?s=128&g=1","display_name":"Oleksandr Pyrohov","link":"https://stackoverflow.com/users/2668232/oleksandr-pyrohov"},"comment_count":0,"score":10,"creation_date":1519217100,"body_markdown":"In Java 9\r\n---\r\n\r\nUsing different [`IntStream.iterate`][1] and [`IntStream.takeWhile`][2] methods:\r\n\r\n    int[] a = IntStream.iterate(10, x -&gt; x &lt;= 100, x -&gt; x + 10).toArray();\r\n\r\n    Out: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n\r\n\r\n    int[] b = IntStream.iterate(0, x -&gt; x + 1).takeWhile(x -&gt; x &lt; 10).toArray();\r\n\r\n    Out: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\r\nIn Java 10\r\n---\r\n\r\nUsing the [Local Variable Type Inference][3]:\r\n\r\n    var letters = new String[]{&quot;A&quot;, &quot;B&quot;, &quot;C&quot;};\r\n\r\n  [1]: https://docs.oracle.com/javase/9/docs/api/java/util/stream/IntStream.html#iterate-int-java.util.function.IntPredicate-java.util.function.IntUnaryOperator-\r\n  [2]: https://docs.oracle.com/javase/9/docs/api/java/util/stream/IntStream.html#takeWhile-java.util.function.IntPredicate-\r\n  [3]: https://developer.oracle.com/java/jdk-10-local-variable-type-inference.html","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":1483,"user_id":2516131,"user_type":"registered","accept_rate":25,"profile_image":"https://www.gravatar.com/avatar/1907017443d430ecbf6bbdef99f75485?s=128&d=identicon&r=PG","display_name":"Chamly Idunil","link":"https://stackoverflow.com/users/2516131/chamly-idunil"},"comment_count":0,"score":9,"creation_date":1520533299,"body_markdown":"In Java 8 you can use something like this.\r\n\r\n    String[] strs = IntStream.range(0, 15)  // 15 is the size\r\n        .mapToObj(i -&gt; Integer.toString(i))\r\n        .toArray(String[]::new);\r\n","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":1397,"user_id":7023816,"user_type":"registered","profile_image":"https://lh5.googleusercontent.com/-W2xiGxhxLvo/AAAAAAAAAAI/AAAAAAAAUuk/dndzuuQ-i1o/photo.jpg?sz=128","display_name":"Cameron Hudson","link":"https://stackoverflow.com/users/7023816/cameron-hudson"},"score":0,"creation_date":1571438348},{"owner":{"reputation":17594,"user_id":1423922,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/04bc578d30953f3906ba64db9ac69aa5?s=128&d=identicon&r=PG","display_name":"Konstantin Spirin","link":"https://stackoverflow.com/users/1423922/konstantin-spirin"},"score":5,"creation_date":1571843863}],"owner":{"reputation":17594,"user_id":1423922,"user_type":"registered","accept_rate":79,"profile_image":"https://www.gravatar.com/avatar/04bc578d30953f3906ba64db9ac69aa5?s=128&d=identicon&r=PG","display_name":"Konstantin Spirin","link":"https://stackoverflow.com/users/1423922/konstantin-spirin"},"comment_count":2,"score":3,"creation_date":1541003884,"body_markdown":"With local variable type inference you only have to specify the type once:\r\n\r\n    var values = new int[] { 1, 2, 3 };\r\n\r\nOr\r\n\r\n    int[] values = { 1, 2, 3 }\r\n","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":2804,"user_id":7747942,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-5jXKyAbmi_M/AAAAAAAAAAI/AAAAAAAAAFQ/AewmU0ev_68/photo.jpg?sz=128","display_name":"Sylhare","link":"https://stackoverflow.com/users/7747942/sylhare"},"score":0,"creation_date":1568379463},{"owner":{"reputation":1528,"user_id":9886,"user_type":"registered","accept_rate":40,"profile_image":"https://www.gravatar.com/avatar/903b1f1c424ca4ff1fd4a4ce361f914a?s=128&d=identicon&r=PG","display_name":"Tirno","link":"https://stackoverflow.com/users/9886/tirno"},"score":3,"creation_date":1578500729},{"owner":{"reputation":2804,"user_id":7747942,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-5jXKyAbmi_M/AAAAAAAAAAI/AAAAAAAAAFQ/AewmU0ev_68/photo.jpg?sz=128","display_name":"Sylhare","link":"https://stackoverflow.com/users/7747942/sylhare"},"score":0,"creation_date":1578514968}],"owner":{"reputation":2804,"user_id":7747942,"user_type":"registered","profile_image":"https://lh6.googleusercontent.com/-5jXKyAbmi_M/AAAAAAAAAAI/AAAAAAAAAFQ/AewmU0ev_68/photo.jpg?sz=128","display_name":"Sylhare","link":"https://stackoverflow.com/users/7747942/sylhare"},"comment_count":3,"score":4,"creation_date":1542225542,"body_markdown":"If by &quot;array&quot; you meant using `java.util.Arrays`, you can do it like that :\r\n\r\n    List&lt;String&gt; number = Arrays.asList(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);\r\n\r\n    Out: [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]\r\n\r\nThis one is pretty **simple** and straightforward. \r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":1018,"user_id":1927303,"user_type":"registered","profile_image":"https://i.stack.imgur.com/dAj6n.jpg?s=128&g=1","display_name":"Arundev","link":"https://stackoverflow.com/users/1927303/arundev"},"comment_count":0,"score":4,"creation_date":1553767541,"body_markdown":"There are a lot of answers here. I am adding a few tricky ways to create arrays (from an **exam** point of view it&#39;s good to know this)\r\n\r\n1. Declare and define an array\r\n\r\n        int intArray[] = new int[3];\r\n\r\n    This will create an array of length 3. As it holds a primitive type, int, all values are set to 0 by default. For example,\r\n\r\n        intArray[2]; // Will return 0\r\n\r\n2. Using box brackets [] before the variable name\r\n\r\n        int[] intArray = new int[3];\r\n        intArray[0] = 1;  // Array content is now {1, 0, 0}\r\n\r\n3. Initialise and provide data to the array\r\n\r\n        int[] intArray = new int[]{1, 2, 3};\r\n\r\n    This time there isn&#39;t any need to mention the size in the box bracket. Even a simple variant of this is:\r\n\r\n        int[] intArray = {1, 2, 3, 4};\r\n\r\n4. An array of length 0\r\n\r\n        int[] intArray = new int[0];\r\n        int length = intArray.length; // Will return length 0\r\n\r\n       **Similar for multi-dimensional arrays**\r\n\r\n        int intArray[][] = new int[2][3];\r\n        // This will create an array of length 2 and\r\n        //each element contains another array of length 3.\r\n        // { {0,0,0},{0,0,0} }\r\n        int lenght1 = intArray.length; // Will return 2\r\n        int length2 = intArray[0].length; // Will return 3\r\n\r\nUsing box brackets before the variable:\r\n\r\n        int[][] intArray = new int[2][3];\r\n\r\nIt&#39;s absolutely fine if you put one box bracket at the end:\r\n\r\n        int[] intArray [] = new int[2][4];\r\n        int[] intArray[][] = new int[2][3][4]\r\n\r\nSome examples\r\n\r\n        int [] intArray [] = new int[][] {{1,2,3},{4,5,6}};\r\n        int [] intArray1 [] = new int[][] {new int[] {1,2,3}, new int [] {4,5,6}};\r\n        int [] intArray2 [] = new int[][] {new int[] {1,2,3},{4,5,6}}\r\n        // All the 3 arrays assignments are valid\r\n        // Array looks like {{1,2,3},{4,5,6}}\r\n\r\nIt&#39;s not mandatory that each inner element is of the same size.\r\n\r\n        int [][] intArray = new int[2][];\r\n        intArray[0] = {1,2,3};\r\n        intArray[1] = {4,5};\r\n        //array looks like {{1,2,3},{4,5}}\r\n\r\n        int[][] intArray = new int[][2] ; // This won&#39;t compile. Keep this in mind.\r\n\r\nYou have to make sure if you are using the above syntax, that the forward direction you have to specify the values in box brackets. Else it won&#39;t compile. Some examples:\r\n\r\n        int [][][] intArray = new int[1][][];\r\n        int [][][] intArray = new int[1][2][];\r\n        int [][][] intArray = new int[1][2][3];\r\n\r\n\r\nAnother important feature is **covariant**\r\n\r\n        Number[] numArray = {1,2,3,4};   // java.lang.Number\r\n        numArray[0] = new Float(1.5f);   // java.lang.Float\r\n        numArray[1] = new Integer(1);    // java.lang.Integer\r\n       // You can store a subclass object in an array that is declared\r\n       // to be of the type of its superclass.\r\n       // Here &#39;Number&#39; is the superclass for both Float and Integer.\r\n\r\n       Number num[] = new Float[5]; // This is also valid\r\n\r\n**IMPORTANT: For referenced types, the default value stored in the array is null.**\r\n\r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":81,"user_id":11531469,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/a5369082050df0cc11c669afc8f31615?s=128&d=identicon&r=PG&f=1","display_name":"kundus","link":"https://stackoverflow.com/users/11531469/kundus"},"comment_count":0,"score":0,"creation_date":1560128268,"body_markdown":"Declare Array: `int[] arr;`\r\n\r\nInitialize Array: `int[] arr = new int[10];` 10 represents the number of elements allowed in the array\r\n\r\nDeclare Multidimensional Array: `int[][] arr;`\r\n\r\nInitialize Multidimensional Array: `int[][] arr = new int[10][17];` 10 rows and 17 columns and 170 elements because 10 times 17 is 170.\r\n\r\n**Initializing an array means specifying the size of it.** \r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":38,"user_id":11754064,"user_type":"registered","profile_image":"https://graph.facebook.com/2072322392877489/picture?type=large","display_name":"Syed Salman Hassan","link":"https://stackoverflow.com/users/11754064/syed-salman-hassan"},"comment_count":0,"score":0,"creation_date":1564920388,"body_markdown":"It&#39;s very easy to declare and initialize an array.\r\nFor example, you want to save five integer elements which are 1, 2, 3, 4, and 5 in an array. You can do it in the following way:\r\n\r\na)\r\n\r\n\r\n    int[] a = new int[5];\r\n\r\nor\r\n\r\nb)\r\n\r\n    int[] a = {1, 2, 3, 4, 5};\r\n\r\nso the basic pattern is for initialization and declaration by method a) is:\r\n\r\n    datatype[] arrayname = new datatype[requiredarraysize];\r\n\r\n`datatype` should be in lower case.\r\n\r\nSo the basic pattern is for initialization and declaration by method a is:\r\n\r\nIf it&#39;s a string array:\r\n\r\n    String[] a = {&quot;as&quot;, &quot;asd&quot;, &quot;ssd&quot;};\r\n\r\nIf it&#39;s a character array:\r\n\r\n    char[] a = {&#39;a&#39;, &#39;s&#39;, &#39;w&#39;};\r\n\r\nFor float double, the format of array will be same as integer.\r\n\r\nFor example:\r\n\r\n    double[] a = {1.2, 1.3, 12.3};\r\n\r\nbut when you declare and initialize the array by &quot;method a&quot; you will have to enter the values manually or by loop or something.\r\n\r\nBut when you do it by &quot;method b&quot; you will not have to enter the values manually.\r\n\r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":1731,"user_id":5196286,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-UoKCDxgO57k/AAAAAAAAAAI/AAAAAAAAAFQ/s3QdG350pMc/photo.jpg?sz=128","display_name":"Zgpeace","link":"https://stackoverflow.com/users/5196286/zgpeace"},"comment_count":0,"score":1,"creation_date":1579569121,"body_markdown":"An array can contain primitives data types as well as objects of a class depending on the definition of the array. In case of primitives data types, the actual values are stored in contiguous memory locations. In case of objects of a class, the actual objects are stored in the heap segment.\r\n\r\n![](https://media.geeksforgeeks.org/wp-content/uploads/Arrays1.png)&lt;br&gt;\r\n\r\n**One-Dimensional Arrays:**\r\n\r\nThe general form of a one-dimensional array declaration is\r\n\r\n    type var-name[];\r\n    OR\r\n    type[] var-name;\r\n\r\n**Instantiating an Array in Java**\r\n\r\n    var-name = new type [size];\r\n\r\nFor example,\r\n\r\n    int intArray[];  // Declaring an array\r\n    intArray = new int[20];  // Allocating memory to the array\r\n\r\n    // The below line is equal to line1 + line2\r\n    int[] intArray = new int[20]; // Combining both statements in one\r\n    int[] intArray = new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\r\n\r\n    // Accessing the elements of the specified array\r\n    for (int i = 0; i &lt; intArray.length; i++)\r\n        System.out.println(&quot;Element at index &quot; + i + &quot;: &quot;+ intArray[i]);\r\n\r\nRef: *[Arrays in Java][1]*\r\n\r\n  [1]: https://www.geeksforgeeks.org/arrays-in-java/\r\n\r\n","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":440,"user_id":12818123,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/a-/AAuE7mDCVe1goEcSmE-kxmduB1RusSBgL2_1mluTGXO_=k-s128","display_name":"Zia","link":"https://stackoverflow.com/users/12818123/zia"},"score":1,"creation_date":1584600543}],"owner":{"reputation":440,"user_id":12818123,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/a-/AAuE7mDCVe1goEcSmE-kxmduB1RusSBgL2_1mluTGXO_=k-s128","display_name":"Zia","link":"https://stackoverflow.com/users/12818123/zia"},"comment_count":1,"score":4,"creation_date":1582262116,"body_markdown":"An array has two basic types.\r\n\r\n&gt; **Static Array:** Fixed size array (its size should be declared at the start and can not be changed later)\r\n\r\n&gt; **Dynamic Array:** No size limit is considered for this. (Pure dynamic arrays do not exist in Java. Instead, List is most encouraged.)\r\n\r\nTo declare a static array of Integer, string, float, etc., use the below declaration and initialization statements.\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\nint[] intArray = new int[10];\r\nString[] intArray = new int[10];\r\nfloat[] intArray = new int[10];\r\n\r\n// Here you have 10 index starting from 0 to 9\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\nTo use dynamic features, you have to use List...\r\nList is pure **dynamic Array** and there is no need to declare size at beginning.\r\nBelow is the proper way to declare a list in Java -\r\n\r\n&lt;!-- begin snippet: js hide: false console: true babel: false --&gt;\r\n\r\n&lt;!-- language: lang-js --&gt;\r\n\r\nArrayList&lt;String&gt; myArray = new ArrayList&lt;String&gt;();\r\nmyArray.add(&quot;Value 1: something&quot;);\r\nmyArray.add(&quot;Value 2: something more&quot;);\r\n\r\n&lt;!-- end snippet --&gt;\r\n\r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":109,"user_id":12751682,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/13f24b5f602e0ba2f4cfb14e8b9d0f2d?s=128&d=identicon&r=PG&f=1","display_name":"Virangaa","link":"https://stackoverflow.com/users/12751682/virangaa"},"comment_count":0,"score":1,"creation_date":1582308791,"body_markdown":"    int[] x = new int[enter the size of array here];\r\n\r\n\r\nExample:\r\n\r\n    int[] x = new int[10];\r\n                  \r\nOr\r\n\r\n    int[] x = {enter the elements of array here];\r\n\r\nExample:\r\n\r\n    int[] x = {10, 65, 40, 5, 48, 31};\r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":3637,"user_id":5108695,"user_type":"registered","profile_image":"https://i.stack.imgur.com/4OG0U.jpg?s=128&g=1","display_name":"Dupinder Singh","link":"https://stackoverflow.com/users/5108695/dupinder-singh"},"comment_count":0,"score":1,"creation_date":1590944750,"body_markdown":"One another full example with a movies class:\r\n\r\n    public class A {\r\n\r\n        public static void main(String[] args) {\r\n\r\n            class Movie {\r\n\r\n                String movieName;\r\n                String genre;\r\n                String movieType;\r\n                String year;\r\n                String ageRating;\r\n                String rating;\r\n\r\n                public Movie(String [] str)\r\n                {\r\n                    this.movieName = str[0];\r\n                    this.genre = str[1];\r\n                    this.movieType = str[2];\r\n                    this.year = str[3];\r\n                    this.ageRating = str[4];\r\n                    this.rating = str[5];\r\n                }\r\n            }\r\n\r\n            String [] movieDetailArr = {&quot;Inception&quot;, &quot;Thriller&quot;, &quot;MovieType&quot;, &quot;2010&quot;, &quot;13+&quot;, &quot;10/10&quot;};\r\n\r\n            Movie mv = new Movie(movieDetailArr);\r\n\r\n            System.out.println(&quot;Movie Name: &quot;+ mv.movieName);\r\n            System.out.println(&quot;Movie genre: &quot;+ mv.genre);\r\n            System.out.println(&quot;Movie type: &quot;+ mv.movieType);\r\n            System.out.println(&quot;Movie year: &quot;+ mv.year);\r\n            System.out.println(&quot;Movie age : &quot;+ mv.ageRating);\r\n            System.out.println(&quot;Movie  rating: &quot;+ mv.rating);\r\n        }\r\n    }\r\n\r\n\r\n\r\n","title":"How do I declare and initialize an array in Java?"},{"comments":[{"owner":{"reputation":27722,"user_id":63550,"user_type":"registered","accept_rate":78,"profile_image":"https://i.stack.imgur.com/RIZKi.png?s=128&g=1","display_name":"Peter Mortensen","link":"https://stackoverflow.com/users/63550/peter-mortensen"},"score":0,"creation_date":1609551904}],"owner":{"reputation":2615,"user_id":9106684,"user_type":"registered","profile_image":"https://www.gravatar.com/avatar/b7572f2a571bd2336bbf07564476721b?s=128&d=identicon&r=PG","display_name":"shellhub","link":"https://stackoverflow.com/users/9106684/shellhub"},"comment_count":1,"score":1,"creation_date":1601862935,"body_markdown":"    package com.examplehub.basics;\r\n\r\n    import java.util.Arrays;\r\n\r\n    public class Array {\r\n\r\n        public static void main(String[] args) {\r\n            int[] numbers = {1, 2, 3, 4, 5};\r\n\r\n            /*\r\n             * numbers[0] = 1\r\n             * numbers[1] = 2\r\n             * numbers[2] = 3\r\n             * numbers[3] = 4\r\n             * numbers[4] = 5\r\n             */\r\n            System.out.println(&quot;numbers[0] = &quot; + numbers[0]);\r\n            System.out.println(&quot;numbers[1] = &quot; + numbers[1]);\r\n            System.out.println(&quot;numbers[2] = &quot; + numbers[2]);\r\n            System.out.println(&quot;numbers[3] = &quot; + numbers[3]);\r\n            System.out.println(&quot;numbers[4] = &quot; + numbers[4]);\r\n\r\n            /*\r\n             * Array index is out of bounds\r\n             */\r\n            //System.out.println(numbers[-1]);\r\n            //System.out.println(numbers[5]);\r\n\r\n\r\n            /*\r\n             * numbers[0] = 1\r\n             * numbers[1] = 2\r\n             * numbers[2] = 3\r\n             * numbers[3] = 4\r\n             * numbers[4] = 5\r\n             */\r\n            for (int i = 0; i &lt; 5; i++) {\r\n                System.out.println(&quot;numbers[&quot; + i + &quot;] = &quot; + numbers[i]);\r\n            }\r\n\r\n            /*\r\n             * Length of numbers = 5\r\n             */\r\n            System.out.println(&quot;length of numbers = &quot; + numbers.length);\r\n\r\n            /*\r\n             * numbers[0] = 1\r\n             * numbers[1] = 2\r\n             * numbers[2] = 3\r\n             * numbers[3] = 4\r\n             * numbers[4] = 5\r\n             */\r\n            for (int i = 0; i &lt; numbers.length; i++) {\r\n                System.out.println(&quot;numbers[&quot; + i + &quot;] = &quot; + numbers[i]);\r\n            }\r\n\r\n            /*\r\n             * numbers[4] = 5\r\n             * numbers[3] = 4\r\n             * numbers[2] = 3\r\n             * numbers[1] = 2\r\n             * numbers[0] = 1\r\n             */\r\n            for (int i = numbers.length - 1; i &gt;= 0; i--) {\r\n                System.out.println(&quot;numbers[&quot; + i + &quot;] = &quot; + numbers[i]);\r\n            }\r\n\r\n            /*\r\n             * 12345\r\n             */\r\n            for (int number : numbers) {\r\n                System.out.print(number);\r\n            }\r\n            System.out.println();\r\n\r\n            /*\r\n             * [1, 2, 3, 4, 5]\r\n             */\r\n            System.out.println(Arrays.toString(numbers));\r\n\r\n\r\n\r\n            String[] company = {&quot;Google&quot;, &quot;Facebook&quot;, &quot;Amazon&quot;, &quot;Microsoft&quot;};\r\n\r\n            /*\r\n             * company[0] = Google\r\n             * company[1] = Facebook\r\n             * company[2] = Amazon\r\n             * company[3] = Microsoft\r\n             */\r\n            for (int i = 0; i &lt; company.length; i++) {\r\n                System.out.println(&quot;company[&quot; + i + &quot;] = &quot; + company[i]);\r\n            }\r\n\r\n            /*\r\n             * Google\r\n             * Facebook\r\n             * Amazon\r\n             * Microsoft\r\n             */\r\n            for (String c : company) {\r\n                System.out.println(c);\r\n            }\r\n\r\n            /*\r\n             * [Google, Facebook, Amazon, Microsoft]\r\n             */\r\n            System.out.println(Arrays.toString(company));\r\n\r\n            int[][] twoDimensionalNumbers = {\r\n                    {1, 2, 3},\r\n                    {4, 5, 6, 7},\r\n                    {8, 9},\r\n                    {10, 11, 12, 13, 14, 15}\r\n            };\r\n\r\n            /*\r\n             * total rows  = 4\r\n             */\r\n            System.out.println(&quot;total rows  = &quot; + twoDimensionalNumbers.length);\r\n\r\n            /*\r\n             * row 0 length = 3\r\n             * row 1 length = 4\r\n             * row 2 length = 2\r\n             * row 3 length = 6\r\n             */\r\n            for (int i = 0; i &lt; twoDimensionalNumbers.length; i++) {\r\n                System.out.println(&quot;row &quot; + i + &quot; length = &quot; + twoDimensionalNumbers[i].length);\r\n            }\r\n\r\n            /*\r\n             * row 0 = 1 2 3\r\n             * row 1 = 4 5 6 7\r\n             * row 2 = 8 9\r\n             * row 3 = 10 11 12 13 14 15\r\n             */\r\n            for (int i = 0; i &lt; twoDimensionalNumbers.length; i++) {\r\n                System.out.print(&quot;row &quot; + i + &quot; = &quot;);\r\n                for (int j = 0; j &lt; twoDimensionalNumbers[i].length; j++) {\r\n                    System.out.print(twoDimensionalNumbers[i][j] + &quot; &quot;);\r\n                }\r\n                System.out.println();\r\n            }\r\n\r\n            /*\r\n             * row 0 = [1, 2, 3]\r\n             * row 1 = [4, 5, 6, 7]\r\n             * row 2 = [8, 9]\r\n             * row 3 = [10, 11, 12, 13, 14, 15]\r\n             */\r\n            for (int i = 0; i &lt; twoDimensionalNumbers.length; i++) {\r\n                System.out.println(&quot;row &quot; + i + &quot; = &quot; + Arrays.toString(twoDimensionalNumbers[i]));\r\n            }\r\n\r\n            /*\r\n             * 1 2 3\r\n             * 4 5 6 7\r\n             * 8 9\r\n             * 10 11 12 13 14 15\r\n             */\r\n            for (int[] ints : twoDimensionalNumbers) {\r\n                for (int num : ints) {\r\n                    System.out.print(num + &quot; &quot;);\r\n                }\r\n                System.out.println();\r\n            }\r\n\r\n            /*\r\n             * [1, 2, 3]\r\n             * [4, 5, 6, 7]\r\n             * [8, 9]\r\n             * [10, 11, 12, 13, 14, 15]\r\n             */\r\n            for (int[] ints : twoDimensionalNumbers) {\r\n                System.out.println(Arrays.toString(ints));\r\n            }\r\n\r\n\r\n            int length = 5;\r\n            int[] array = new int[length];\r\n            for (int i = 0; i &lt; 5; i++) {\r\n                array[i] = i + 1;\r\n            }\r\n\r\n            /*\r\n             * [1, 2, 3, 4, 5]\r\n             */\r\n            System.out.println(Arrays.toString(array));\r\n\r\n        }\r\n    }\r\n\r\n[Source from examplehub/java][1]\r\n\r\n  [1]: https://github.com/examplehub/Java/blob/master/src/main/java/com/examplehub/basics/Array.java\r\n","title":"How do I declare and initialize an array in Java?"},{"owner":{"reputation":109,"user_id":13524525,"user_type":"registered","profile_image":"https://lh3.googleusercontent.com/-EFlJEMoXVeI/AAAAAAAAAAI/AAAAAAAAB58/AMZuucmhCCqRitpwIuCc5dBUxvncTZcIeA/photo.jpg?sz=128","display_name":"Sarasjd","link":"https://stackoverflow.com/users/13524525/sarasjd"},"comment_count":0,"score":1,"creation_date":1615027930,"body_markdown":"        String[] colors;\r\n        String[] cars = {&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;, &quot;gray&quot;};\r\n        System.out.println(colors[0]);\r\n        colors[0] = &quot;pink&quot;;\r\n        \r\n    Also to create a two-dimensional array, add each array within its own set of \r\n    curly braces:\r\n    \r\n        int[][] myNumbers = { {1, 2, 3, 4}, {5, 6, 7} };\r\n        \r\n        int[][] myNumbers = { {1, 2, 3, 4}, {5, 6, 7} };\r\n        int x = myNumbers[1][2];\r\n        \r\n    You can also use a for loop inside another for loop to get the elements of a \r\n    two-dimensional array: \r\n        for (int i = 0; i &lt; myNumbers.length; ++i) {\r\n              for(int j = 0; j &lt; myNumbers[i].length; ++j) {\r\n                System.out.println(myNumbers[i][j]);\r\n              }\r\n            }","title":"How do I declare and initialize an array in Java?"}],"owner":{"reputation":23127,"user_id":40842,"user_type":"registered","accept_rate":56,"profile_image":"https://i.stack.imgur.com/p89Vc.png?s=128&g=1","display_name":"bestattendance","link":"https://stackoverflow.com/users/40842/bestattendance"},"comment_count":2,"is_answered":true,"answer_count":30,"score":2189,"creation_date":1248877347,"question_id":1200621,"body_markdown":"How do I declare and initialize an array in Java?\r\n","link":"https://stackoverflow.com/questions/1200621/how-do-i-declare-and-initialize-an-array-in-java","title":"How do I declare and initialize an array in Java?"}],"has_more":true,"quota_max":300,"quota_remaining":12}